[{"failures":[],"tindex":"2530d2f4-db0a-11e4-803d-b74ccc88cc05","variableMapping":{"a_lon_deg":"fwdIncline","factor":"fwdIncline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[],"tindex":"253280a5-db0a-11e4-803d-4907cd4febce","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"253280a6-db0a-11e4-803d-05c534747b0b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"253280a7-db0a-11e4-803d-ffc46288a515","variableMapping":{"sacScale":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[0,2,6,7,8,9,10,3,5],"tindex":"253280a8-db0a-11e4-803d-99f4bb771e90","variableMapping":{"cp":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"253280a9-db0a-11e4-803d-11bb75740685","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[11,12,13,14],"tindex":"253280aa-db0a-11e4-803d-25b647647664","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,14,69,70],"tindex":"2532a7bb-db0a-11e4-803d-83eea2f3ef0e","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[71,72],"tindex":"2532a7bc-db0a-11e4-803d-67164d2925e9","variableMapping":{"tmp":"removed","initializedCounter":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"2532a7bd-db0a-11e4-803d-47e72df720bf","variableMapping":{"len":"length","start":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"2532a7be-db0a-11e4-803d-61793121ce76","variableMapping":{"lastKey":"encoded","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[73],"tindex":"2532a7bf-db0a-11e4-803d-29ca7fb45563","variableMapping":{"key":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:101","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"2532a7c0-db0a-11e4-803d-0de488e20c87","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:300","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Call prepareIndex only once\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"2532a7c1-db0a-11e4-803d-4ba78b62ad65","variableMapping":{"currentEntry":"I_SKIP_EDGE1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":0},{"failures":[],"tindex":"2532a7c2-db0a-11e4-803d-0ff75b6e5353","variableMapping":{"res":"flags","value":"flags","maxBits":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:259","type":"CtIfImpl","sourcecode":"if (long == 0) {\n    long <<= int;\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-2},{"failures":[],"tindex":"2532a7c3-db0a-11e4-803d-612bc3d5c2d3","variableMapping":{"directionBitMask":"wayBitMask","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"2532a7c4-db0a-11e4-803d-0f20785cf8ee","variableMapping":{"elem":"elem","keys":"elem","i":"i","key":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:180","type":"CtWhileImpl","sourcecode":"while ((int[][(int / 2)]) > int) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n    int /= 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"2532a7c5-db0a-11e4-803d-cf587237e397","variableMapping":{"id":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,15,16,88,89,90,91,92,93,17,94,18,95,96,97,98,99,100,101,102,103,104,105,106,19,107,108,109,110,20,111,112,21,113,114,115,22,116,117,118,119,120,121,23,24,122,123,124,125,126,127,25,128,26,129,130,131,132,133,134,135,136,137,138,139,140,27,141,142,143,144,28,145,146,29,147,148,149,30,150,151,152,153,154,155,156,157,31,32,158,159,160,161,162,163,33,164,34,165,166,167,168,169,170,171,172,173,174,175,176,35,177,178,179,180,36,181,182,37,183,184,185,38,186,187,188,189,190,191,192,193,194,195,39,40,196,197,198,199,200,201,41,202,42,203,204,205,206,207,208,209,210,211,212,213,214,43,215,216,217,218,44,219,220,45,221,222,223,46,224,225,226,227,228,229,230,231,232,51,233,234,235,59,60,236,237,238,239,240,241,242,243,244,245,246,61,62,247,248,249,250,251,252,253,254,63,67,255],"tindex":"2532ced6-db0a-11e4-803d-b7cb4d51ad03","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:252","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-1},{"failures":[18,26,34,42,256,257,258,259,260,261,1,262,7,263,264,9,265,266,267,226,228,229,231,51,268,269,270,4,235,271,272,59,60,244,246,63,12,14],"tindex":"2532ced7-db0a-11e4-803d-bd4002a23b58","variableMapping":{"size":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"2532ced8-db0a-11e4-803d-f5721c829df7","variableMapping":{"bits":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[],"tindex":"2532ced9-db0a-11e4-803d-5f05d1295a7b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"2532f5ea-db0a-11e4-803d-bfc49cdb18f7","variableMapping":{"length":"i","factor":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"2532f5eb-db0a-11e4-803d-cba4b78821c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:132","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"2532f5ec-db0a-11e4-803d-c5817041f238","variableMapping":{"deltaX":"prevEle","tmp":"prevEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[],"tindex":"2532f5ed-db0a-11e4-803d-b9f371bc578e","variableMapping":{"this":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.isShortcut())\n    throw new java.lang.IllegalStateException((\"Cannot call setName on shortcut \" + com.graphhopper.storage.GraphHopperStorage.EdgeIterable.(getEdge())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-2},{"failures":[259,73,267],"tindex":"2532f5ee-db0a-11e4-803d-21234d051041","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-1},{"failures":[256,263,265,266,13],"tindex":"2532f5ef-db0a-11e4-803d-0504a564df8d","variableMapping":{"orientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"2532f5f0-db0a-11e4-803d-97643a56be77","variableMapping":{"strLen":"edgeId","bLen":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"25331d01-db0a-11e4-803d-a1caa038eda2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"25331d02-db0a-11e4-803d-e7c2e1c61659","variableMapping":{"bits":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[9],"tindex":"25331d03-db0a-11e4-803d-e737fd3950c2","variableMapping":{"str":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"25334414-db0a-11e4-803d-7362e480473c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"25340765-db0a-11e4-803d-d36c5f5f8e24","variableMapping":{"err":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[273,274,275,0,1,276,2,277,6,7,278,8,279,9,280,10,281,282,3,4,283,5,284,285,286,287],"tindex":"25340766-db0a-11e4-803d-f96c1307eb25","variableMapping":{"flags":"flags","nodeFlags":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-1},{"failures":[82,15,16,91,17,18,99,19,20,22,23,24,125,25,26,133,27,28,30,152,31,32,161,33,34,169,35,36,38,187,190,39,40,199,41,42,207,43,44,46,256,288,257,259,260,261,1,289,262,7,263,264,9,265,266,267,11,226,228,229,231,51,268,269,270,4,290,234,235,271,272,59,60,244,245,246,61,62,63,66,291,292,67,293,294,255,12,68,13,14,295],"tindex":"25340767-db0a-11e4-803d-91575356b16c","variableMapping":{"id":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"25340768-db0a-11e4-803d-edd0fe5b449b","variableMapping":{"neighborUpdates":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":0},{"failures":[296],"tindex":"25342e79-db0a-11e4-803d-cb096581e1eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[297],"tindex":"25342e7a-db0a-11e4-803d-e587a70843fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"25342e7b-db0a-11e4-803d-335f02d0e346","variableMapping":{"flags":"initialBits","scDirMask":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[],"tindex":"25342e7c-db0a-11e4-803d-0bba18d8bf56","variableMapping":{"numTiles":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":0},{"failures":[268],"tindex":"25342e7d-db0a-11e4-803d-25f8e7748611","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","capacity":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:413","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[],"tindex":"25342e7e-db0a-11e4-803d-ff8aaa954935","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[],"tindex":"25342e7f-db0a-11e4-803d-81c5c9427622","variableMapping":{"endIndexPlusOne":"removed","frontIndex":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:229","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"25342e80-db0a-11e4-803d-9d0ef917c690","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"25342e81-db0a-11e4-803d-7968199feb9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:428","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[],"tindex":"25342e82-db0a-11e4-803d-33557f2dea01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:472","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[9,285],"tindex":"25342e83-db0a-11e4-803d-3f34942e4dd7","variableMapping":{"lat":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[81,82,15,95,96,97,99,103,19,111,53,298,299,300,55,57,301,58],"tindex":"25342e84-db0a-11e4-803d-29e3dd4f31fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[],"tindex":"25342e85-db0a-11e4-803d-575f0c7b0a26","variableMapping":{"value":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[302,303],"tindex":"25342e86-db0a-11e4-803d-63e2ee6fd319","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"25342e87-db0a-11e4-803d-6737ac50b580","variableMapping":{"str":"highway","lat":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:194","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    java.lang.String += \"N\";\nelse\n    java.lang.String += \"S\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[304,305,12],"tindex":"25342e88-db0a-11e4-803d-a90b27474749","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:185","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.length()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[],"tindex":"25342e89-db0a-11e4-803d-6b7fbfb33be8","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":0},{"failures":[],"tindex":"25342e8a-db0a-11e4-803d-29f955f602f3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[255],"tindex":"25342e8b-db0a-11e4-803d-538af6b8b1b1","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[71,306,72],"tindex":"2534559c-db0a-11e4-803d-19ceb58d05f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:98","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int))"},"status":-1},{"failures":[59,60,244,246,63],"tindex":"2534559d-db0a-11e4-803d-1781964d5002","variableMapping":{"oldValueIndex":"millis"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"2534559e-db0a-11e4-803d-f34486be02af","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-2},{"failures":[82,104,109,21,307,308,309,310,138,142,143,29,152,174,179,37,311,312,313,314,315,187,190,212,217,45,316,317,318,319,320,47,321,322,323,324,325,326,272,252,327,328,329,330,291,292,293,294,12,331,332,333,334,335,336,337,338,339,340,13,14],"tindex":"2534559f-db0a-11e4-803d-cf39e5db2313","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[],"tindex":"253455a0-db0a-11e4-803d-afbc10fe21f1","variableMapping":{"high":"nodeB","len":"nodeB","start":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":0},{"failures":[],"tindex":"253455a1-db0a-11e4-803d-3f1a6f344412","variableMapping":{"com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.BEST","com.graphhopper.routing.util.PriorityCode.BEST":"com.graphhopper.routing.util.PriorityCode.BEST","prio":"prio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:542","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return ((double)(com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())) / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"253455a2-db0a-11e4-803d-6bee361b36a5","variableMapping":{"freeIndex":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":0},{"failures":[285,286,287],"tindex":"253455a3-db0a-11e4-803d-4da308d06444","variableMapping":{"bytePos":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[79,82,152,341,187,190,330,293,342,294,343],"tindex":"253455a4-db0a-11e4-803d-031d529ee9bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"253455a5-db0a-11e4-803d-81266ad755a0","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":0},{"failures":[],"tindex":"253455a6-db0a-11e4-803d-db660c1a14d4","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"shift","sign":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"253455a7-db0a-11e4-803d-956b834cff0e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[256,259,261,265,266,267,270,66,13],"tindex":"253455a8-db0a-11e4-803d-89b4903aeba6","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"speed","speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[344,345,346,347,348,349,350,351,352,353,297,49],"tindex":"253455a9-db0a-11e4-803d-1b105a642d24","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"253455aa-db0a-11e4-803d-856e1da18e04","variableMapping":{"maxY":"maxSpeed","deltaX":"fwdIncline","stepX":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","maxX":"maxSpeed","deltaY":"maxSpeed","stepY":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","x":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","y":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:71","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double += double;\n    int += int;\n} else {\n    double += double;\n    int += int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[76,354,260,275,355,0,261,1,356,357,358,359,276,360,361,362,363,2,289,364,365,277,366,262,6,7,367,368,278,369,370,371,372,8,373,374,375,279,263,297,376,264,377,9,378,379,380,280,381,382,383,10,384,385,281,296,386,265,387,388,305,389,266,267,11,390,391,392,50,393,225,226,227,228,229,230,231,232,51,394,268,395,269,282,396,3,270,4,397,398,399,400,283,401,402,403,404,5,290,405,406,284,233,285,407,234,286,235,271,59,244,12,68,331,332,333,334,335,336,337,287,338,339,340,13,14],"tindex":"25347cbb-db0a-11e4-803d-1313ba70bf25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":-1},{"failures":[259,268],"tindex":"25347cbc-db0a-11e4-803d-d377d3c00938","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"25347cbd-db0a-11e4-803d-41a669b94615","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"25347cbe-db0a-11e4-803d-c17db6e3fc14","variableMapping":{"i":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[71,306],"tindex":"25347cbf-db0a-11e4-803d-3108b6c1aa26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[59],"tindex":"25347cc0-db0a-11e4-803d-11be7b8381b9","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"25347cc1-db0a-11e4-803d-395d232bab28","variableMapping":{"finishedTo":"defaultB","finishedFrom":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[365,375,378,406],"tindex":"25347cc2-db0a-11e4-803d-630b30379932","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-1},{"failures":[],"tindex":"25347cc3-db0a-11e4-803d-314f40c4c4bf","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","capacity":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:328","type":"CtIfImpl","sourcecode":"if (long < (int))\n    long = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":0},{"failures":[304,305],"tindex":"25347cc4-db0a-11e4-803d-ebaaaf42f644","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"25347cc5-db0a-11e4-803d-8daf484bde5d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[59,60,244,246,63],"tindex":"25347cc6-db0a-11e4-803d-a95e8fc92e43","variableMapping":{"time":"millis"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"25347cc7-db0a-11e4-803d-716226401efb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"25347cc8-db0a-11e4-803d-9fff4b92c0fe","variableMapping":{"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"com.graphhopper.storage.index.LocationIndexTreeSC.NO_SHORTCUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:947","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:187","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTreeSC.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[],"tindex":"2534a3d9-db0a-11e4-803d-ad04e69fb14c","variableMapping":{"lat":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[],"tindex":"2534a3da-db0a-11e4-803d-97aeadb05aaf","variableMapping":{"segmentSizeInBytes":"usedBits","capacity":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"2534a3db-db0a-11e4-803d-4f30fa0e4bb5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[],"tindex":"2534a3dc-db0a-11e4-803d-fb347c18505b","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"I_LEVEL","nodeId":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"2534a3dd-db0a-11e4-803d-cd477f87c31d","variableMapping":{"maxMCSpeed":"maxLat","speed":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"2534a3de-db0a-11e4-803d-a938b6e51f7e","variableMapping":{"lat":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[225],"tindex":"2534a3df-db0a-11e4-803d-27ea9cd3afb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"2534a3e0-db0a-11e4-803d-b3f24d99c1c7","variableMapping":{"edgeCount":"removed","this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:376","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureEdgeIndex(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"2534caf1-db0a-11e4-803d-6b260ec9dfdd","variableMapping":{"line":"s","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:105","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":-2},{"failures":[273,274,275,0,1,276,2,277,262,6,7,368,278,369,370,8,373,375,279,377,9,378,380,280,381,10,384,281,282,3,4,283,5,284,285,286,255],"tindex":"2534caf2-db0a-11e4-803d-2dd34831f2ec","variableMapping":{"encoded":"flags","backwardBit":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[],"tindex":"2534caf3-db0a-11e4-803d-659c89d16a09","variableMapping":{"clonedG":"g","nodeEntryBytes":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1074","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.int) != (int))\n    throw new java.lang.IllegalStateException(((((\"nodeEntryBytes cannot be different for cloned graph. \" + \"Cloned: \") + (com.graphhopper.storage.GraphHopperStorage.int)) + \" vs \") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":0},{"failures":[73],"tindex":"2534f204-db0a-11e4-803d-35039e28d063","variableMapping":{"currentEntry":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[231,235,67,12,68,14],"tindex":"2534f205-db0a-11e4-803d-05da5fed1a7a","variableMapping":{"len":"encoded","start":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[408,321,409,256,410,411,412,272,413],"tindex":"2534f206-db0a-11e4-803d-0dbcbf2cd28d","variableMapping":{"x1":"r","x2":"x"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:159","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":250,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":327,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":79,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":23,"com.graphhopper.reader.OSMReaderTest.testFerry":12,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":352,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":353,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":261,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":378,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":408,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":202,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":383,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":185,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":138,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":34,"com.graphhopper.util.AngleCalcTest.testOrientation":410,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":57,"com.graphhopper.GraphHopperTest.testPrepare":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":52,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":171,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":355,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":244,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":351,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":306,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":260,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":236,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":242,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":223,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":187,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":58,"com.graphhopper.GraphHopperTest.testLoadOSM":293,"com.graphhopper.reader.OSMReaderTest.testSort":332,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":289,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":297,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":191,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":181,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":148,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":220,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":107,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":162,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":188,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":3,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":195,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":279,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":373,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":239,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":211,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":100,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":82,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":102,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":412,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":42,"com.graphhopper.GraphHopperAPITest.testLoad":295,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":86,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":225,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":165,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":32,"com.graphhopper.storage.LevelGraphStorageTest.testClone":89,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":72,"com.graphhopper.reader.OSMReaderTest.testBarriers":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":397,"com.graphhopper.util.GHUtilityTest.testCopy":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":241,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":117,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":371,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":385,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":319,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":280,"com.graphhopper.routing.PathTest.testFindInstruction":413,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":40,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":231,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":288,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":113,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":396,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":182,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":44,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":206,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":403,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":234,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":125,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":155,"com.graphhopper.util.InstructionListTest.testWayList2":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":28,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":199,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":222,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":275,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":153,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":394,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":203,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":344,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":240,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":334,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":252,"com.graphhopper.coll.OSMIDMapTest.testGet":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":41,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":232,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":104,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":359,"com.graphhopper.storage.RAMDataAccessTest.testCopy":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":143,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":264,"com.graphhopper.storage.RAMDataAccessTest.testSegments":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":358,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":118,"com.graphhopper.util.GHUtilityTest.testSort2":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":247,"com.graphhopper.reader.OSMReaderTest.testMain":331,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":83,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":210,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":364,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":192,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":18,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":98,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":22,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":274,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":64,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":95,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":43,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":269,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":101,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":13,"com.graphhopper.storage.GraphHopperStorageTest.testClone":159,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":145,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":11,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":167,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":266,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":74,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":374,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":126,"com.graphhopper.routing.PathTest.testTime":271,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":370,"com.graphhopper.util.BitUtilLittleTest.testToFloat":323,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":114,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":90,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":393,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":137,"com.graphhopper.reader.OSMReaderTest.testRelation":287,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":290,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":314,"com.graphhopper.GraphHopperTest.testFootOnly":255,"com.graphhopper.util.BitUtilLittleTest.testToInt":324,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":377,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":305,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":345,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":237,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":133,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":317,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":380,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":308,"com.graphhopper.reader.OSMReaderTest.testWithBounds":340,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":405,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":221,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":139,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":285,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":15,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":84,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":404,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":214,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":207,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":157,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":60,"com.graphhopper.util.BitUtilLittleTest.testToBitString":322,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":183,"com.graphhopper.util.InstructionListTest.testWayList":321,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":127,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":401,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":363,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":292,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":161,"com.graphhopper.routing.util.EncodedValueTest.testSwap":273,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":217,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":354,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":56,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":21,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":390,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":368,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":193,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":254,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":277,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":151,"com.graphhopper.routing.PathTest.testWayList":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":149,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":129,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":388,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":63,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":362,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":170,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":226,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":200,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":99,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":399,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":6,"com.graphhopper.util.GHUtilityTest.testSort":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":361,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":46,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":194,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":347,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":189,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":367,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":258,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":71,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":310,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":142,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":235,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":343,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":112,"com.graphhopper.util.AngleCalcTest.testAtan2":411,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":360,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":204,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":26,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":243,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":372,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":296,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":384,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":248,"com.graphhopper.reader.PrinctonReaderTest.testRead":69,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":37,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":121,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":209,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":400,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":407,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":369,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":282,"com.graphhopper.reader.OSMReaderTest.testFoot":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":27,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":329,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":115,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":376,"com.graphhopper.reader.OSMReaderTest.testOneWay":14,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":166,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":180,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":219,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":381,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":313,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":175,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":135,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":299,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":301,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":54,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":312,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":227,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":131,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":154,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":120,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":178,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":375,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":150,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":402,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":36,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":92,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":391,"com.graphhopper.GraphHopperTest.testFootAndCar":67,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":174,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":123,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":233,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":392,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":251,"com.graphhopper.GraphHopperTest.testPrepareOnly":330,"com.graphhopper.GraphHopperTest.testVia":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":24,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":338,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":78,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":177,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":256,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":229,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":134,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":263,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":111,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":110,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":190}}]
