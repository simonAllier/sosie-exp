[{"failures":[0],"tindex":"91755fd1-dabd-11e4-ac1e-ab134c950db5","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-1},{"failures":[1],"tindex":"9175fc12-dabd-11e4-ac1e-97fd101b01be","variableMapping":{"capacity":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":-1},{"failures":[],"tindex":"9175fc13-dabd-11e4-ac1e-91698eb6e007","variableMapping":{"elem":"a","size":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[0],"tindex":"9175fc14-dabd-11e4-ac1e-2586203e5288","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"9175fc15-dabd-11e4-ac1e-cb0d62ea6d36","variableMapping":{"hasOther":"defaultB","hasRel":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"9175fc16-dabd-11e4-ac1e-51c4c190f0e3","variableMapping":{"lat":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:65","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"9175fc17-dabd-11e4-ac1e-372e94989676","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"91762328-dabd-11e4-ac1e-9d372890cbf8","variableMapping":{"d":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"91762329-dabd-11e4-ac1e-f5e1ff903328","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"9176232a-dabd-11e4-ac1e-372188a395ee","variableMapping":{"index":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"9176232b-dabd-11e4-ac1e-05622350b854","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"9176232c-dabd-11e4-ac1e-29c02b3cc935","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[50,51,52,53,54,55,34,56,57,38,58],"tindex":"9176232d-dabd-11e4-ac1e-f9f31486db7c","variableMapping":{"todoBytes":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"9176232e-dabd-11e4-ac1e-41cd4cd20306","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:479","type":"CtLocalVariableImpl","sourcecode":"java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null)"},"status":-2},{"failures":[59],"tindex":"9176232f-dabd-11e4-ac1e-8fc867c95a1c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:200","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"91762330-dabd-11e4-ac1e-43445fa9c1c5","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.KM_MILE":"incDist2DSum","distInMeter":"decDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:76","type":"CtLocalVariableImpl","sourcecode":"double double = (double / 1000) / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[],"tindex":"91762331-dabd-11e4-ac1e-9f4d2448dce7","variableMapping":{"bits":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[60,61,62,63,46,47,64,65,66,67,49,68,69],"tindex":"91762332-dabd-11e4-ac1e-c396311dc411","variableMapping":{"max":"weight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[70,71,72,73],"tindex":"91762333-dabd-11e4-ac1e-ed0eadb4d21b","variableMapping":{"shiftSum":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[],"tindex":"91767154-dabd-11e4-ac1e-e7577d7a1161","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[74,75,76,77,78],"tindex":"91767155-dabd-11e4-ac1e-b1aa1df9b726","variableMapping":{"need":"nodeB","i":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"91767156-dabd-11e4-ac1e-f75a8671ba47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[],"tindex":"91767157-dabd-11e4-ac1e-273312d3c9c9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[79,80,2,3,4,5,6,81,7,8,82,83,84,9,10,85,86,87,88,89,90,91,92,93,94,11,12,95,13,96,97,98,99,100,101,102,103,104,105,106,14,107,108,109,110,111,112,113,114,15,115,116,117,118,16,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,74,188,189,190,191,192,193,194,195,75,76,196,197,77,198,199,200,60,201,61,202,203,204,205,206,207,208,209,210,211,212,213,214,17,215,216,217,218,18,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,19,256,257,258,259,20,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,21,299,300,301,302,22,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,23,330,24,331,332,333,334,335,336,337,0,338,339,340,42,43,341,44,45,62,342,343,344,63,345,346,347,46,348,47,48,349,64,350,78,351,65,66,67,352,49,353,354,68,355,356,357,358,359,360,361,69,362,363,364,365,365,366,366,367,367,368,368,369,369,370,370,371,371,372,372,373,373,374,374,375,375,376,376],"tindex":"91769868-dabd-11e4-ac1e-05ade561dd1f","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[377,378,379,380,381,382,383,384,385],"tindex":"91769869-dabd-11e4-ac1e-cf5ad1a73379","variableMapping":{"speed":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"9176986a-dabd-11e4-ac1e-19d844b3c752","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"9176986b-dabd-11e4-ac1e-7be4c8c02d5e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:149","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"9176bf7c-dabd-11e4-ac1e-fdf0ca221191","variableMapping":{"bbox":"this","box":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = com.graphhopper.util.shapes.BBox.clone()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[2,5,8,9,11,14,16,18,20,22,386,387,388,389,390,391,392,393,394,25,395,396,51,397,28,398,29,399,53,400,32,33,34,35,0,36,37,38,39,41,42,43,44,45,46,47,48,49],"tindex":"9176e68d-dabd-11e4-ac1e-c9a6c4b19189","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"9176e68e-dabd-11e4-ac1e-a306cef76e1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:37","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"9176e68f-dabd-11e4-ac1e-d727467f0009","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"9176e690-dabd-11e4-ac1e-db42acad7771","variableMapping":{"time":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[9,401],"tindex":"9176e691-dabd-11e4-ac1e-4faeaff7d2b3","variableMapping":{"id":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"91770da2-dabd-11e4-ac1e-4bb5b2f5859a","variableMapping":{"resultOrientation":"java.lang.Double.MAX_VALUE","orientation":"java.lang.Double.MAX_VALUE","java.lang.Math.PI":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"91770da3-dabd-11e4-ac1e-67d271b1903c","variableMapping":{"storedKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-2},{"failures":[],"tindex":"91770da4-dabd-11e4-ac1e-f133d047a154","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[2,5,82,10,89,90,393],"tindex":"91770da5-dabd-11e4-ac1e-ad230caf0fc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[331,336],"tindex":"91770da6-dabd-11e4-ac1e-47aeae0ef903","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-1},{"failures":[],"tindex":"91770da7-dabd-11e4-ac1e-e3070ed922df","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"91770da8-dabd-11e4-ac1e-d31c1088607c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"91770da9-dabd-11e4-ac1e-6d7e850d1bd9","variableMapping":{"iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:364","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterator.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"91770daa-dabd-11e4-ac1e-2383aab0aec7","variableMapping":{"id":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"91770dab-dabd-11e4-ac1e-579b2ac33188","variableMapping":{"indexWithMaxDist":"size","lastIndex":"i","fromIndex":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"91770dac-dabd-11e4-ac1e-bf87dbae1d0f","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[402,53,70,34,71,38],"tindex":"91770dad-dabd-11e4-ac1e-15c4b11cdb8f","variableMapping":{"pos":"code","mSize":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"91770dae-dabd-11e4-ac1e-5b0720a06b48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:311","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"|\")"},"status":0},{"failures":[401],"tindex":"91770daf-dabd-11e4-ac1e-b7863050e9fd","variableMapping":{"str":"hourStr","i":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:519","type":"CtIfImpl","sourcecode":"if (int > 0)\n    java.lang.String += \"->\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[],"tindex":"917734c0-dabd-11e4-ac1e-bd4d65b3f666","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"917734c1-dabd-11e4-ac1e-edef8bb7de4f","variableMapping":{"bestPath":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:166","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-1},{"failures":[403,51,52,27,54,31,404,70,34,405,56,406,71,38,407,58,408,409],"tindex":"917734c2-dabd-11e4-ac1e-c5adcaeaea71","variableMapping":{"res":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[2,44,45,62,342,343,63,345,347,46,47,48,349,64,350,78,65,67,352,49,353,68,361,364],"tindex":"917734c3-dabd-11e4-ac1e-8b66d415db0e","variableMapping":{"tmp":"distance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[79,80,2,3,4,5,6,81,7,8,82,83,84,9,10,85,86,87,88,89,90,91,92,93,94,11,12,95,13,96,97,98,99,100,101,102,103,104,105,106,14,107,108,16,133,145,146,147,148,150,151,152,153,154,155,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,74,188,189,190,191,192,193,194,195,75,76,196,77,198,410,411,412,413,414,415,416,417,418,419,199,200,60,201,61,202,203,204,205,206,207,208,209,210,211,212,213,214,17,215,216,217,218,18,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,19,256,257,258,259,20,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,21,299,300,301,302,22,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,23,330,24,331,332,333,334,335,336,337,0,338,339,340,42,43,341,44,45,62,342,343,344,63,345,346,347,46,348,47,48,349,64,350,78,351,65,66,67,352,49,353,354,68,355,356,357,358,359,360,361,69,362,363,364,365,365,366,366,367,367,368,368,369,369,370,370,371,371,372,372,373,373,374,374,375,375,376,376],"tindex":"917734c4-dabd-11e4-ac1e-df727956f4ce","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[401],"tindex":"91775bd5-dabd-11e4-ac1e-a197bd2f0be6","variableMapping":{"cp":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"91775bd6-dabd-11e4-ac1e-f14d9477ef62","variableMapping":{"lat":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":0},{"failures":[],"tindex":"91775bd7-dabd-11e4-ac1e-d1a0c048e6c9","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":0},{"failures":[41],"tindex":"91775bd8-dabd-11e4-ac1e-955063fbc028","variableMapping":{"logSize":"ferryBit","java.lang.Integer.MAX_VALUE":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:259","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[70,71],"tindex":"91775bd9-dabd-11e4-ac1e-ed125c2d4693","variableMapping":{"retBucket":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[2,3,4,5,7,10,85,90,12,13,100,104,105,106,110,111,114,16,123,125,131,133,136,138,139,143,199,61,205,210,211,214,18,223,225,231,233,236,238,239,243,246,251,252,255,20,264,266,272,274,277,279,280,284,286,289,294,295,298,22,307,309,315,317,320,322,323,327,23,24,388,331,332,334,335,420,421,422,0,42,43,44,62,342,63,46,47,64,78,65,66,67,49,353,354,68,355,356,357,358,360,361,69,363,364,369,372],"tindex":"91775bda-dabd-11e4-ac1e-0306fe5e647e","variableMapping":{"bytePos":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"91775bdb-dabd-11e4-ac1e-6b6448d8035f","variableMapping":{"allBits":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":0},{"failures":[],"tindex":"91775bdc-dabd-11e4-ac1e-d58f15ef0e13","variableMapping":{"high":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"91775bdd-dabd-11e4-ac1e-230c16368223","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[79,2,6,81,7,82,85,88,89,423,424,425,426,427,100,104,105,106,14,428,429,430,431,168,170,74,189,432,202,205,209,228,234,239,241,246,250,269,275,280,282,286,289,293,312,318,323,325,433,43,341,66,366,372,373,376],"tindex":"91775bde-dabd-11e4-ac1e-6b821e5be76d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[401],"tindex":"91775bdf-dabd-11e4-ac1e-b144f07896be","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"91775be0-dabd-11e4-ac1e-1da1b3074f80","variableMapping":{"storedKey":"forwardBit","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-2},{"failures":[9,11,12,401],"tindex":"91775be1-dabd-11e4-ac1e-bf92b8cf64c6","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-1},{"failures":[402,72,73],"tindex":"91775be2-dabd-11e4-ac1e-7d3f81f5e8e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[],"tindex":"91775be3-dabd-11e4-ac1e-e5f4b34da20b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[0],"tindex":"917782f4-dabd-11e4-ac1e-b1bf57c63d9f","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"917782f5-dabd-11e4-ac1e-df5f8c6b3b10","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"917782f6-dabd-11e4-ac1e-e7d6b09dfdc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"917782f7-dabd-11e4-ac1e-15181eecf333","variableMapping":{"bytePos":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:269","type":"CtLocalVariableImpl","sourcecode":"long long = long >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[377,378,379,380,434,381,382,383,384],"tindex":"917782f8-dabd-11e4-ac1e-d9ed0685aae6","variableMapping":{"towerNodeDistance":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"917782f9-dabd-11e4-ac1e-f56a582c0487","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"917782fa-dabd-11e4-ac1e-b36bc65c7447","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:66","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop()"},"status":-2},{"failures":[],"tindex":"917782fb-dabd-11e4-ac1e-bb6b0e86af08","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"917782fc-dabd-11e4-ac1e-613bb3551273","variableMapping":{"start":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[331,335,336],"tindex":"917782fd-dabd-11e4-ac1e-e5ee0f81041d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-1},{"failures":[333,334],"tindex":"917782fe-dabd-11e4-ac1e-494472e03898","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[79,80,2,3,4,5,6,81,7,8,82,83,84,9,10,85,86,87,88,89,90,91,92,93,94,11,12,95,13,96,97,98,99,100,101,102,103,104,105,106,14,107,108,16,133,145,146,147,148,150,151,152,153,154,155,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,74,188,189,190,191,192,193,194,195,75,76,196,77,198,411,412,413,414,415,416,417,418,419,199,200,60,201,61,202,203,204,205,206,207,208,209,210,211,212,213,214,17,215,216,217,218,18,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,19,256,257,258,259,20,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,21,299,300,301,302,22,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,23,330,24,331,332,333,334,335,336,337,0,338,339,340,42,43,341,44,45,62,342,343,344,63,345,346,347,46,348,47,48,349,64,350,78,351,65,66,67,352,49,353,354,68,355,356,357,358,359,360,361,69,362,363,364,365,365,366,366,367,367,368,368,369,369,370,370,371,371,372,372,373,373,374,374,375,375,376,376],"tindex":"917782ff-dabd-11e4-ac1e-edef3356f602","variableMapping":{"nextTowerId":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[40],"tindex":"91778300-dabd-11e4-ac1e-ad1f2e92061b","variableMapping":{"initLeafSize":"shift","maxLeafEntries":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[52,54,56,58],"tindex":"9177a911-dabd-11e4-ac1e-173b683d210a","variableMapping":{"reverseOrder":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:126","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Switching order multiple times is not supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"9177a912-dabd-11e4-ac1e-eb3ba173f8f5","variableMapping":{"byteCount":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[9,10,85,86,88,89,90,91,94,11,12,396,50,51,435,436,437,52,397,438,27,399,439,53,440,441,442,54,400,31,32,70,443,55,34,444,445,446,56,35,447,406,36,71,448,57,38,449,450,451,58,39,452,408,72,73,41],"tindex":"9177a913-dabd-11e4-ac1e-6545e7dc770c","variableMapping":{"speedVal":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"9177a914-dabd-11e4-ac1e-076eaba26a6c","variableMapping":{"nodeId":"shift","mainNodes":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"9177a915-dabd-11e4-ac1e-1749f35c8174","variableMapping":{"keys":"keys","i":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":0},{"failures":[5,9,10,90,12,109,110,111,116,117,16,131,136,139,143,151,158,182,198,205,209,210,211,216,217,18,231,236,239,243,246,250,251,252,257,258,20,272,277,280,284,286,289,293,294,295,300,301,22,315,320,323,327,388,1,72,40,73,41,45,344,346,348,48,349,49],"tindex":"9177d026-dabd-11e4-ac1e-bb755c4090ad","variableMapping":{"maxLeafEntries":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"9177d027-dabd-11e4-ac1e-13145ebaa878","variableMapping":{"this":"em"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:320","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.(getVehicleCount()) > 1)\n    throw new java.lang.IllegalStateException((\"Multiple encoders are active. cannot return one:\" + com.graphhopper.routing.util.EncodingManager.(toString())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[],"tindex":"9177d028-dabd-11e4-ac1e-c1c127e60fb9","variableMapping":{"systemProperty":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"9177d029-dabd-11e4-ac1e-4fafe30ae3fe","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"9177d02a-dabd-11e4-ac1e-5fe87dc19015","variableMapping":{"com.graphhopper.util.Constants.VERSION":"s","tmp":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":0},{"failures":[12,111,118,119,120,122,126,127,134,135,203,211,218,219,220,222,226,227,234,235,252,259,260,261,263,267,268,275,276,295,302,303,304,306,310,311,318,319,331,333,334],"tindex":"9177d02b-dabd-11e4-ac1e-2f8d0124d9b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[453],"tindex":"9177d02c-dabd-11e4-ac1e-195fcbc428e2","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"9177d02d-dabd-11e4-ac1e-839f58241fc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"9177f73e-dabd-11e4-ac1e-29337473533c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"9177f73f-dabd-11e4-ac1e-01a71825a30c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"9177f740-dabd-11e4-ac1e-2f296263ffde","variableMapping":{"err":"speed","tmpErr":"speed","y1":"speed","dLon":"speed","sLat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":0},{"failures":[],"tindex":"9177f741-dabd-11e4-ac1e-21129a28dd79","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"9177f742-dabd-11e4-ac1e-495f02662b45","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[],"tindex":"9177f743-dabd-11e4-ac1e-bde9a333f490","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":351,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":366,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":28,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":202,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":110,"com.graphhopper.reader.OSMReaderTest.testFerry":9,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":96,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":97,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":33,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":440,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":188,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":80,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":302,"com.graphhopper.coll.CompressedArrayTest.testCompress":378,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":283,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":128,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":20,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":69,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":140,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":266,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":353,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":46,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":159,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":54,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":108,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":208,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":186,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":32,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":411,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":62,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":346,"com.graphhopper.coll.BitSetImplTest.testCopy":453,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":169,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":286,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":364,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":176,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":170,"com.graphhopper.reader.OSMReaderTest.testSort":86,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":35,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":290,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":278,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":246,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":141,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":372,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":322,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":232,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":256,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":287,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":298,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":57,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":293,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":397,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":192,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":263,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":349,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":344,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":343,"com.graphhopper.coll.OSMIDMapTest.testGetLong":426,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":305,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":311,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":224,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":205,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":226,"com.graphhopper.coll.CompressedArrayTest.testCompress2":377,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":268,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":396,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":22,"com.graphhopper.GraphHopperAPITest.testLoad":23,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":413,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":260,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":252,"com.graphhopper.storage.LevelGraphStorageTest.testClone":213,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":401,"com.graphhopper.reader.OSMReaderTest.testBarriers":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":294,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":407,"com.graphhopper.util.GHUtilityTest.testCopy":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":198,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":156,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":30,"com.graphhopper.routing.PathTest.testFindInstruction":341,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":295,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":13,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":389,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":240,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":153,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":448,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":279,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":264,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":320,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":358,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":40,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":15,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":249,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":419,"com.graphhopper.util.InstructionListTest.testWayList2":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":177,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":284,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":55,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":329,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":325,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":337,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":216,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":431,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":303,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":63,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":251,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":66,"com.graphhopper.coll.OSMIDMapTest.testGet":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":301,"com.graphhopper.routing.PathBidirRefTest.testExtract":338,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":228,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":425,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":444,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":134,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":399,"com.graphhopper.util.GHUtilityTest.testSort2":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":64,"com.graphhopper.reader.OSMReaderTest.testMain":85,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":206,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":310,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":76,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":231,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":291,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":18,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":222,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":243,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":404,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":219,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":36,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":412,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":225,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":11,"com.graphhopper.storage.StorablePropertiesTest.testStore":433,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":432,"com.graphhopper.storage.GraphHopperStorageTest.testClone":254,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":137,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":421,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":262,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":394,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":115,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":201,"com.graphhopper.routing.PathTest.testTime":42,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":437,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":241,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":214,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":395,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":127,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":230,"com.graphhopper.reader.OSMReaderTest.testRelation":402,"com.graphhopper.util.GHUtilityTest.testSortDirected":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":39,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":368,"com.graphhopper.GraphHopperTest.testFootOnly":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":439,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":161,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":393,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":191,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":342,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":123,"com.graphhopper.search.NameIndexTest.testCreate":430,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":365,"com.graphhopper.routing.QueryGraphTest.testOneWay":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":180,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":381,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":441,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":168,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":379,"com.graphhopper.reader.OSMReaderTest.testWithBounds":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":324,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":332,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":129,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":390,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":72,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":210,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":207,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":31,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":314,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":307,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":250,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":373,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":45,"com.graphhopper.util.InstructionListTest.testWayList":105,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":281,"com.graphhopper.GraphHopperAPITest.testDisconnected179":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":116,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":382,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":450,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":126,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":143,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":19,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":362,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":272,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":361,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":239,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":435,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":56,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":352,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":197,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":415,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":406,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":245,"com.graphhopper.routing.PathTest.testWayList":43,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":119,"com.graphhopper.coll.OSMIDMapTest.testGet2":424,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":49,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":313,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":265,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":386,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":193,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":223,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":194,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":195,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":50,"com.graphhopper.util.GHUtilityTest.testSort":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":173,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":398,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":446,"com.graphhopper.search.NameIndexTest.testPut":428,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":327,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":187,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":165,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":147,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":37,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":145,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":308,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":331,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":418,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":133,"com.graphhopper.routing.PathTest.testFound":340,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":41,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":82,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":238,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":59,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":445,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":304,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":429,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":16,"com.graphhopper.util.InstructionListTest.testEmptyList":103,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":347,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":48,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":422,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":400,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":350,"com.graphhopper.reader.PrinctonReaderTest.testRead":83,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":280,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":189,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":118,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":380,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":109,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":449,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":409,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":71,"com.graphhopper.reader.OSMReaderTest.testFoot":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":131,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":376,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":174,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":242,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":384,"com.graphhopper.reader.OSMReaderTest.testOneWay":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":175,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":261,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":276,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":321,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":442,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":125,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":357,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":363,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":355,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":24,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":121,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":367,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":248,"com.graphhopper.routing.PathBidirRefTest.testExtract2":339,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":416,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":44,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":52,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":178,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":274,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":149,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":438,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":144,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":387,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":360,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":451,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":171,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":277,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":215,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":269,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":220,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":51,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":77,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":403,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":65,"com.graphhopper.GraphHopperTest.testPrepareOnly":79,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":157,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":111,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":92,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":61,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":14,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":273,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":388,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":124,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":391,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":237,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":235,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":289}}]
