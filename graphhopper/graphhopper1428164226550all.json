[{"failures":[],"tindex":"0a2fdf1d-dae6-11e4-8c88-b1c3e50671e9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"0a30544e-dae6-11e4-8c88-dd63ac86bcea","variableMapping":{"segmentSizeInBytes":"y1","index":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-1},{"failures":[67],"tindex":"0a307b5f-dae6-11e4-8c88-3921e91412fa","variableMapping":{"index":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":-1},{"failures":[],"tindex":"0a307b60-dae6-11e4-8c88-47ad5f769c93","variableMapping":{"pointer":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"0a307b61-dae6-11e4-8c88-4784dc5517c4","variableMapping":{"red":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,27,84,85,86,87,88,89],"tindex":"0a307b62-dae6-11e4-8c88-976b11664ce0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:39","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"0a307b63-dae6-11e4-8c88-211baa14e974","variableMapping":{"byteCount":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":0},{"failures":[],"tindex":"0a307b64-dae6-11e4-8c88-37b838a14626","variableMapping":{"orientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:97","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":0},{"failures":[0,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,77,78,79,199,200,80,201,202,24,203,204,81,25,26,82,83,27,205,84,85,86,87,88,206,207,43,66,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386],"tindex":"0a30a275-dae6-11e4-8c88-ff55e7c9c815","variableMapping":{"versionHint":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[387],"tindex":"0a30a276-dae6-11e4-8c88-9dd013cf8709","variableMapping":{"currentEntry":"minNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[100,109,142,150,158,160,170,181,183,193],"tindex":"0a30a277-dae6-11e4-8c88-8f811a00068c","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:113","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[],"tindex":"0a30a278-dae6-11e4-8c88-fba948afb821","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[4,388,389,390,391,392,393,394,395,396,96,397,118,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,398,399,400,401,402,68,69,70,71,72,73,74,403,75,404,76,405,198,77,78,79,199,200,80,201,202,24,203,204,81,25,26,82,83,27,205,84,85,86,87,88,406,407,408,206,207,43,52,66,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386],"tindex":"0a30a279-dae6-11e4-8c88-2b9b728e4237","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-1},{"failures":[],"tindex":"0a30a27a-dae6-11e4-8c88-0d52deec7c26","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"0a30a27b-dae6-11e4-8c88-1f3d7af0eb7d","variableMapping":{"intVal":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"0a30a27c-dae6-11e4-8c88-791a3cc019c0","variableMapping":{"node":"node","directionBitMask":"directionBitMask","intendedValues":"restrictedValues","restrictedValues":"potentialBarriers","restrictions":"restrictions","locked":"blockByDefault"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":0},{"failures":[],"tindex":"0a30a27d-dae6-11e4-8c88-715ea0cb7cbb","variableMapping":{"size":"locs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[36,59,233,254,284,297,300,330,344,374],"tindex":"0a30c98e-dae6-11e4-8c88-4b706f6ed920","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-1},{"failures":[],"tindex":"0a30f09f-dae6-11e4-8c88-91abd26e0d66","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[409,156,179],"tindex":"0a30f0a0-dae6-11e4-8c88-1f614ab46ed4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"0a30f0a1-dae6-11e4-8c88-c5b88c3cb949","variableMapping":{"bytesForFlags":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[128],"tindex":"0a30f0a2-dae6-11e4-8c88-15e70d87c55e","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"0a30f0a3-dae6-11e4-8c88-7d1c133b4acf","variableMapping":{"angle":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"0a30f0a4-dae6-11e4-8c88-5733bf58365b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-2},{"failures":[1,2,5,6,401,68,69,70,71,72,73,74,75,404,76,405,77,78,79,199,200,80,201,202,24,203,204,81,25,26,82,83,27,205,84,85,86,87,88,410],"tindex":"0a30f0a5-dae6-11e4-8c88-5bd473cb7c9d","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[4,9,11,16,17],"tindex":"0a30f0a6-dae6-11e4-8c88-59816b505184","variableMapping":{"hash":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"0a30f0a7-dae6-11e4-8c88-c5df61b5ef8f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"0a30f0a8-dae6-11e4-8c88-471454d5284d","variableMapping":{"periodicUpdatesPercentage":"tmpPrevEdge","periodicUpdate":"found"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:267","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    boolean = false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":0},{"failures":[],"tindex":"0a30f0a9-dae6-11e4-8c88-ed577884c0ca","variableMapping":{"alreadyRun":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[411],"tindex":"0a30f0aa-dae6-11e4-8c88-997d3890c4c4","variableMapping":{"str":"str","latInt":"knotInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:284","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int < 10 ? \"_0\" : \"_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"0a30f0ab-dae6-11e4-8c88-89364285dac1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"0a30f0ac-dae6-11e4-8c88-8f576b644d4b","variableMapping":{"red":"length","green":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"0a30f0ad-dae6-11e4-8c88-cf692937c5f6","variableMapping":{"orientation":"speedReverse","java.lang.Math.PI":"bwSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[],"tindex":"0a30f0ae-dae6-11e4-8c88-59f00eda96bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"0a30f0af-dae6-11e4-8c88-13ced31cda67","variableMapping":{"edgeId":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-2},{"failures":[],"tindex":"0a3116c0-dae6-11e4-8c88-492344cb2705","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[412,156,160,179,183],"tindex":"0a3116c1-dae6-11e4-8c88-eb55b3ae5d64","variableMapping":{"bytePos":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[0,413,1,2,5,6,8,15,16,17,414,415,175,176,400,401,68,69,70,71,72,73,74,403,75,404,76,405,198,77,78,79,199,200,80,201,202,24,204,81,25,26,82,83,27,205,84,85,86,87,416,417,408,37,51,52,418,53,419,54,55,56,57,420,58,59,60,61,62,63,64,65,66,234,246,247,248,249,250,251,252,253,254,255,257,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,303,305,306,307,308,309,310,311,312,313,314,315,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,351,359,370,386,421],"tindex":"0a3116c2-dae6-11e4-8c88-bb35399ea030","variableMapping":{"edgeId":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"0a3116c3-dae6-11e4-8c88-6f6881513c64","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":0},{"failures":[],"tindex":"0a3116c4-dae6-11e4-8c88-e93af310a15a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[1,400,68,403,405,198,77,78,79,199,80,201,24,203,81,25,26,82,83,27,84,86,87,88],"tindex":"0a3116c5-dae6-11e4-8c88-0f2aaec2ce0f","variableMapping":{"fwdFaster":"distance","incDist2DSum":"dist","fwdSlower":"distance","fullDist2D":"distance","restDist2D":"distance","speed":"distance","decDist2DSum":"dist"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"0a3116c6-dae6-11e4-8c88-39867ef38efe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"0a3116c7-dae6-11e4-8c88-e3c8a4f1c341","variableMapping":{"index":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"0a3116c8-dae6-11e4-8c88-d3b4766aeb11","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[400,74,403,405,198,77,78,200,80,27,84,85,86,88],"tindex":"0a3116c9-dae6-11e4-8c88-1d63016fb29c","variableMapping":{"initializedCounter":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"0a3116ca-dae6-11e4-8c88-553b93924d1e","variableMapping":{"len":"oldRelationFlags","start":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"0a313ddb-dae6-11e4-8c88-59b5345f858b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[0,413,1,2,3,4,5,422,6,7,8,9,423,388,389,10,11,12,13,14,15,16,17,18,19,20,21,22,23,90,91,424,415,425,390,426,427,428,429,430,431,432,92,93,94,391,392,393,394,95,395,396,96,397,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,398,399,433,434,387,67,435,436,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,400,401,402,68,69,70,71,72,73,74,403,75,404,76,405,198,77,78,79,199,200,80,201,202,24,203,204,81,25,26,82,83,27,205,84,85,86,87,88,437,438,439,440,89,441,442,416,443,417,444,445,446,406,407,408,28,29,447,448,449,450,451,452,453,206,454,455,456,457,458,459,207,30,460,31,32,33,34,461,35,36,37,38,39,40,41,462,42,43,463,464,465,466,467,468,51,52,418,53,419,54,55,56,57,420,58,59,60,61,62,63,64,469,65,66,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386],"tindex":"0a313ddc-dae6-11e4-8c88-bf1e8932b56f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[470,471,472,473,474,475,476,477,478,30,461,36,37,479,53,420,59,60],"tindex":"0a313ddd-dae6-11e4-8c88-7ba75b0727de","variableMapping":{"storedKey":"hash","key":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"0a313dde-dae6-11e4-8c88-0747ea26137b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[176],"tindex":"0a313ddf-dae6-11e4-8c88-1905a1fd501f","variableMapping":{"fwdFaster":"fullDist2D","incDist2DSum":"fullDist2D","fwdSlower":"fullDist2D","fullDist2D":"fullDist2D","restDist2D":"fullDist2D","speed":"fullDist2D","decDist2DSum":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"0a313de0-dae6-11e4-8c88-29d16a1df7ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:86","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"0a313de1-dae6-11e4-8c88-bb629bc66953","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[0,413,1,2,5,6,8,68,70,74,75,404,76,405,77,199,200,201,202,24,203,204,25,26,27,88,480],"tindex":"0a313de2-dae6-11e4-8c88-bd228be0d0cd","variableMapping":{"index":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:767","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-1},{"failures":[],"tindex":"0a313de3-dae6-11e4-8c88-bba791b9b7a1","variableMapping":{"pointIndex":"skippedEdge2","index":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":0},{"failures":[433,436],"tindex":"0a313de4-dae6-11e4-8c88-db0fd0f92453","variableMapping":{"size":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"0a3164f5-dae6-11e4-8c88-8dd4de23991f","variableMapping":{"reverseSpeed":"speedEncoder","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"0a3164f6-dae6-11e4-8c88-d3d942887a52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[1,2,3,4,5,7,8,12,13,14,470,471,481,472,482,473,474,475,476,483,24,25,26,27,28,29,477,478,30,460,31,32,33,34,461,35,36,37,38,39,40,41,42,43,479,51,52,53,419,54,55,56,57,420,58,59,60,61,62,63,64,65,66],"tindex":"0a3164f7-dae6-11e4-8c88-ebaecba34991","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = com.graphhopper.util.shapes.BBox.clone()"},"status":-1},{"failures":[],"tindex":"0a3164f8-dae6-11e4-8c88-e1057ae23d4f","variableMapping":{"bytes":"bits","capacity":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[400,401,68,70,74,403,75,76,405,198,77,78,200,80,203,204,81,25,26,82,27,84,85,86,88,52,250],"tindex":"0a3164f9-dae6-11e4-8c88-4f569c9e5352","variableMapping":{"red":"lastEdgeIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"0a3164fa-dae6-11e4-8c88-4b1a350256cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"0a3164fb-dae6-11e4-8c88-affd1c96fb5c","variableMapping":{"max":"nextNodeBit","tmpSize":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[0,413,1,2,3,4,5,422,6,7,8,9,423,388,389,10,11,12,13,14,15,16,17,18,484,19,20,21,22,23,90,91,424,415,425,390,426,427,428,429,430,431,432,92,93,94,391,392,393,394,95,395,396,96,397,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,485,398,399,433,434,387,67,435,436,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,400,401,402,68,69,70,71,72,73,74,403,75,404,76,405,198,77,78,79,199,200,80,201,202,24,203,204,81,25,26,82,83,27,205,84,85,86,87,88,437,438,439,440,89,441,442,416,443,417,444,445,446,406,407,408,28,29,447,448,449,450,451,452,453,206,454,455,456,457,458,459,207,30,460,31,32,33,34,461,35,36,37,38,39,40,41,462,42,43,463,464,465,466,467,468,51,52,418,53,419,54,55,56,57,420,58,59,60,61,62,63,64,469,65,66,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386],"tindex":"0a3164fc-dae6-11e4-8c88-69a1757d1559","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"0a3164fd-dae6-11e4-8c88-e52df2bf7559","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"0a3164fe-dae6-11e4-8c88-f59ce2cfcefc","variableMapping":{"flags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[247,252],"tindex":"0a318c0f-dae6-11e4-8c88-ab1e55ca2818","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"0a318c10-dae6-11e4-8c88-dd917dc55b08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"0a318c11-dae6-11e4-8c88-5ba983040058","variableMapping":{"node":"wayType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:423","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (\"--- node \" + int) + \" ---\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"0a318c12-dae6-11e4-8c88-b5c8cff9bf0c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"0a318c13-dae6-11e4-8c88-3d313f1ed06d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[0,413,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,251,254,255,297,300,301,344,345,486],"tindex":"0a318c14-dae6-11e4-8c88-27c3e12d27e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"0a318c15-dae6-11e4-8c88-f59a94c154f9","variableMapping":{"foundIndex":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[],"tindex":"0a318c16-dae6-11e4-8c88-9f642976ed08","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:940","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"0a318c17-dae6-11e4-8c88-d1680a0b3186","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[100,101,109,142,150,158,160,170,181,183,193],"tindex":"0a318c18-dae6-11e4-8c88-69f9b1517c0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[],"tindex":"0a318c19-dae6-11e4-8c88-b12b52c3b135","variableMapping":{"need":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[400,74,403,78,200,80,27,84,86],"tindex":"0a318c1a-dae6-11e4-8c88-bd47b48633ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"0a318c1b-dae6-11e4-8c88-c7f5808f58e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"0a318c1c-dae6-11e4-8c88-8f024783218b","variableMapping":{"shift":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:213","type":"CtLocalVariableImpl","sourcecode":"long long = (1L << int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[111,152,172,195],"tindex":"0a318c1d-dae6-11e4-8c88-ad99760c1924","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"0a318c1e-dae6-11e4-8c88-1f83154e26a6","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[0,413,1,2,3,4,5,6,7,8,9,388,389,10,11,12,13,14,15,16,17,18,484,19,20,21,22,487,23,488,489,490,414,491,492,493,494,91,91,424,424,415,415,425,425,390,390,426,426,427,427,428,428,429,429,430,430,431,431,432,432,391,392,393,394,395,396,116,433,434,387,67,435,436,175,176,400,401,68,69,70,71,72,73,74,403,75,404,76,405,198,77,78,79,199,200,80,201,202,24,203,204,81,25,26,82,83,27,205,84,85,86,87,88,437,438,439,440,89,441,442,416,443,417,444,446,406,407,408,28,29,495,496,497,498,499,448,449,450,451,453,206,454,455,456,457,459,207,30,460,31,32,33,34,461,35,36,37,38,39,40,41,42,43,500,463,464,465,466,468,51,52,418,53,419,54,55,56,57,420,58,59,60,61,62,63,64,65,66,219,234,501,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,502,297,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,503,504,505,506,507,508,509,510,511,512,486],"tindex":"0a31b32f-dae6-11e4-8c88-c57027b6d8b4","variableMapping":{"size":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"0a31b330-dae6-11e4-8c88-73e83fe91db9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"0a31b331-dae6-11e4-8c88-7deaf2c94a37","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"size","tmpNode":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":-2},{"failures":[],"tindex":"0a31b332-dae6-11e4-8c88-83ae486348cb","variableMapping":{"sacScale":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":0},{"failures":[0,413,1,2,3,4,5,422,6,7,8,9,423,388,389,10,11,12,13,14,15,16,17,18,484,19,20,21,22,23,90,91,424,415,425,390,426,427,428,429,430,431,432,92,93,94,391,392,393,394,95,395,396,96,397,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,398,399,433,434,387,67,435,436,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,400,401,402,68,69,70,71,72,73,74,403,75,404,76,405,198,77,78,79,199,200,80,201,202,24,203,204,81,25,26,82,83,27,205,84,85,86,87,88,437,438,439,440,89,441,442,416,443,417,444,445,446,406,407,408,28,29,447,448,449,450,451,452,453,206,454,455,456,457,458,459,207,30,460,31,32,33,34,461,35,36,37,38,39,40,41,462,42,43,463,464,465,466,467,468,51,52,418,53,419,54,55,56,57,420,58,59,60,61,62,63,64,469,65,66,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386],"tindex":"0a3312c3-dae6-11e4-8c88-c761e87e4e59","variableMapping":{"directionBitMask":"defaultL","flags":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[0,4,8,9,10,11,12,13,15,16,18,21,22,23,97,117,120],"tindex":"0a3312c4-dae6-11e4-8c88-bd5fd29c1c05","variableMapping":{"segmentSizePower":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[513],"tindex":"0a3312c5-dae6-11e4-8c88-95443bf8dad4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"0a3312c6-dae6-11e4-8c88-f312e547eb0e","variableMapping":{"high":"flags","guess":"flags","low":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":0},{"failures":[],"tindex":"0a3312c7-dae6-11e4-8c88-d5ba8577546c","variableMapping":{"incEleSum":"maxSpeed","eleDelta":"maxSpeed","incDist2DSum":"maxSpeed","decEleSum":"maxSpeed","fullDist2D":"maxSpeed","decDist2DSum":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"0a3312c8-dae6-11e4-8c88-4f6504f2516f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[514,515],"tindex":"0a3339d9-dae6-11e4-8c88-9150d1cceee6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"0a3339da-dae6-11e4-8c88-cd06e24539b9","variableMapping":{"newUniqueOsmId":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[100,101,109,142,150,158,160,170,181,183,193],"tindex":"0a3339db-dae6-11e4-8c88-a940df14d4cc","variableMapping":{"edgePointer":"flags","maxEdges":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"0a3339dc-dae6-11e4-8c88-b37a81b4fc89","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":0},{"failures":[],"tindex":"0a3339dd-dae6-11e4-8c88-0de7f9996788","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[470,471,472,473,474,475,476,483,477,478,30,461,36,37,479,53,420,59,60],"tindex":"0a3339de-dae6-11e4-8c88-9de9e8743eaa","variableMapping":{"dist":"maxLonTmp","com.graphhopper.util.DistanceCalcEarth.R":"maxLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-1},{"failures":[484,96,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],"tindex":"0a3339df-dae6-11e4-8c88-f3bd7e3cba5c","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":205,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":424,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":251,"com.graphhopper.GraphHopperAPITest.testNoLoad":447,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":209,"com.graphhopper.reader.OSMReaderTest.testFerry":10,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":406,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":407,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":159,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":44,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":143,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":55,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":413,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":315,"com.graphhopper.coll.CompressedArrayTest.testCompress":478,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":149,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":384,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":70,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":229,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":360,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":418,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":511,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":75,"com.graphhopper.GraphHopperTest.testPrepare":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":241,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":367,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":400,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":203,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":440,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":500,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":150,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":438,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":257,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":435,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":142,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":202,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":359,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":32,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":340,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":160,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":297,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":475,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":259,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":405,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":33,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":397,"com.graphhopper.reader.OSMReaderTest.testSort":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":171,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":301,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":505,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":379,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":344,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":242,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":428,"com.graphhopper.routing.DijkstraTest.initializationError":92,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":336,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":502,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":45,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":284,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":356,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":298,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":310,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":181,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":305,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":113,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":110,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":58,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":52,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":57,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":199,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":261,"com.graphhopper.coll.OSMIDMapTest.testGetLong":498,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":319,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":325,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":276,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":480,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":254,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":278,"com.graphhopper.coll.CompressedArrayTest.testCompress2":477,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":369,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":99,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":316,"com.graphhopper.GraphHopperAPITest.testLoad":28,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":258,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":114,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":361,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":351,"com.graphhopper.storage.LevelGraphStorageTest.testClone":263,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":513,"com.graphhopper.reader.OSMReaderTest.testBarriers":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":306,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":436,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":213,"com.graphhopper.util.GHUtilityTest.testCopy":417,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":107,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":46,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":152,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":452,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":146,"com.graphhopper.routing.PathTest.testFindInstruction":394,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":307,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":120,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":408,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":180,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":449,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":380,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":334,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":416,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":72,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":191,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":95,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":214,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":347,"com.graphhopper.util.InstructionListTest.testWayList2":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":39,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":385,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":311,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":158,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":339,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":398,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":175,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":345,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":267,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":503,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":317,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":463,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":80,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":350,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":15,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":504,"com.graphhopper.routing.AStarTest.initializationError":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":85,"com.graphhopper.coll.OSMIDMapTest.testGet":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":314,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":121,"com.graphhopper.routing.PathBidirRefTest.testExtract":395,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":164,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":280,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":497,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":62,"com.graphhopper.storage.RAMDataAccessTest.testCopy":509,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":506,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":461,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":342,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":235,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":163,"com.graphhopper.storage.RAMDataAccessTest.testSegments":512,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":43,"com.graphhopper.util.GHUtilityTest.testSort2":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":82,"com.graphhopper.reader.OSMReaderTest.testMain":12,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":255,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":126,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":324,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":476,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":172,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":125,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":302,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":270,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":274,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":295,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":271,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":390,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":329,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":178,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":277,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":22,"com.graphhopper.storage.StorablePropertiesTest.testStore":486,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":508,"com.graphhopper.storage.GraphHopperStorageTest.testClone":353,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":238,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":132,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":130,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":363,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":246,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":215,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":249,"com.graphhopper.routing.PathTest.testTime":392,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":106,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":293,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":137,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":467,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":228,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":282,"com.graphhopper.reader.OSMReaderTest.testRelation":484,"com.graphhopper.util.GHUtilityTest.testSortDirected":446,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":515,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":194,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":425,"com.graphhopper.GraphHopperTest.testFootOnly":8,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":50,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":141,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":128,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":464,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":501,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":420,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":177,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":224,"com.graphhopper.search.NameIndexTest.testCreate":494,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":91,"com.graphhopper.routing.QueryGraphTest.testOneWay":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":462,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":472,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":31,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":470,"com.graphhopper.reader.OSMReaderTest.testWithBounds":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":338,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":426,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":434,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":230,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":409,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":260,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":256,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":192,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":153,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":328,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":129,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":321,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":349,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":429,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":77,"com.graphhopper.util.InstructionListTest.testWayList":89,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":382,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":162,"com.graphhopper.GraphHopperAPITest.testDisconnected179":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":216,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":482,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":330,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":189,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":389,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":244,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":3,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":355,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":465,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":332,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":154,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":373,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":81,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":403,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":133,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":291,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":170,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":87,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":348,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":469,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":174,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":343,"com.graphhopper.routing.PathTest.testWayList":393,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":243,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":220,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":411,"com.graphhopper.coll.OSMIDMapTest.testGet2":496,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":88,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":288,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":488,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":168,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":366,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":312,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":354,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":59,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":275,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":60,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":510,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":61,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":186,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":514,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":100,"com.graphhopper.util.GHUtilityTest.testSort":444,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":233,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":483,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":144,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":167,"com.graphhopper.search.NameIndexTest.testPut":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":341,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":352,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":419,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":451,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":468,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":456,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":182,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":427,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":176,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":454,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":299,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":102,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":399,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":489,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":322,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":433,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":234,"com.graphhopper.routing.PathTest.testFound":391,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":9,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":97,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":290,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":485,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":166,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":318,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":410,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":493,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":219,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":358,"com.graphhopper.util.InstructionListTest.testEmptyList":439,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":24,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":108,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":25,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":136,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":124,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":123,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":151,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":83,"com.graphhopper.reader.PrinctonReaderTest.testRead":388,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":56,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":218,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":471,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":208,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":262,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":323,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":105,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":179,"com.graphhopper.reader.OSMReaderTest.testFoot":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":232,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":432,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":490,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":36,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":294,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":474,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":139,"com.graphhopper.reader.OSMReaderTest.testOneWay":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":37,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":362,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":377,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":147,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":507,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":226,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":71,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":479,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":131,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":69,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":457,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":116,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":222,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":415,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":346,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":487,"com.graphhopper.routing.PathBidirRefTest.testExtract2":396,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":421,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":466,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":198,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":109,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":206,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":491,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":375,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":458,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":112,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":17,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":48,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":245,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":459,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":34,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":378,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":445,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":266,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":134,"com.graphhopper.GraphHopperTest.testFootAndCar":4,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":370,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":272,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":101,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":65,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":212,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":309,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":84,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":453,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":210,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":19,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":250,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":374,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":442,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":118,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":18,"com.graphhopper.routing.AStarBidirectionTest.initializationError":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":225,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":138,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":289,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":287,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":300}}]
