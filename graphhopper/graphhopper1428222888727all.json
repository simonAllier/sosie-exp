[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"a121310a-db6e-11e4-bdab-1d353ff2cff1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[],"tindex":"a121581b-db6e-11e4-bdab-c388181a40f8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"a121581c-db6e-11e4-bdab-4559c91f14da","variableMapping":{"turnCostIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","NO_TURN_ENTRY":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[41,46],"tindex":"a121581d-db6e-11e4-bdab-b9e0aaa59a18","variableMapping":{"size":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"a121581e-db6e-11e4-bdab-5df40bf99a73","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"a121581f-db6e-11e4-bdab-d594c86639c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"a1217f30-db6e-11e4-bdab-f90461a0b657","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"a1217f31-db6e-11e4-bdab-278720e5ad6c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[61,62,63,64,65,66,67,68],"tindex":"a1217f32-db6e-11e4-bdab-0d12baaaf083","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[],"tindex":"a1217f33-db6e-11e4-bdab-d99d8beb4dc1","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[69,34,35,70,36,37,71,39,41,44,45,46,47,48,50,72,73,74],"tindex":"a1217f34-db6e-11e4-bdab-0b576a1b45ad","variableMapping":{"bytePos":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"a1217f35-db6e-11e4-bdab-2dfc80b9fb7a","variableMapping":{"weightLong":"ferryBit","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":0},{"failures":[75,76,77,78,79,80,81,82,10,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,12,110,111,112,113,13,114,115,116,117,118,14,119,15,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,17,147,148,149,150,18,151,152,153,154,155,156,157,158,159,160,19,161,162,163,164,165,166,22,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,24,189,190,25,191,192,26,193,194,28,33,195,69,34,36,196,197,198,42,43,44,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,55,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,60],"tindex":"a1217f36-db6e-11e4-bdab-197b346d2648","variableMapping":{"shift":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[44,239,240,241,242],"tindex":"a1217f37-db6e-11e4-bdab-b9b7310a0288","variableMapping":{"speedEncoder":"turnCostEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-1},{"failures":[],"tindex":"a1217f38-db6e-11e4-bdab-338cf1bd06db","variableMapping":{"dist":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"a1217f39-db6e-11e4-bdab-49912ec4e163","variableMapping":{"flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":0},{"failures":[],"tindex":"a121a64a-db6e-11e4-bdab-e76e36550f55","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"a121a64b-db6e-11e4-bdab-8ff67f0f28ae","variableMapping":{"tmpNode":"minElem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"a121a64c-db6e-11e4-bdab-f9042f0d0efb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[243,244,75,76,77,78,79,80,81,82,10,83,245,84,85,86,87,88,89,90,91,92,93,94,95,246,96,97,98,99,100,101,102,103,104,11,105,106,107,108,109,12,110,111,112,113,13,114,115,116,117,118,14,247,119,15,120,248,121,122,123,124,125,126,127,128,129,130,131,132,249,133,134,135,136,137,138,139,140,141,16,142,143,144,145,146,17,147,148,149,150,18,151,152,153,154,155,250,251,252,253,254,255,256,257,258,21,259,260,261,262,263,264,161,265,266,267,268,269,270,271,162,163,164,165,166,22,167,168,169,170,171,172,173,174,175,176,177,272,178,179,273,274,275,276,277,278,279,280,281,282,283,284,285,286,180,23,287,288,289,290,181,182,291,292,293,294,295,296,297,183,298,299,184,300,185,186,301,187,188,302,24,303,304,189,305,190,25,191,306,192,307,26,308,309,310,193,194,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,27,332,333,334,335,28,29,336,337,338,339,30,340,341,342,343,344,33,195,69,34,35,70,36,196,37,197,345,198,346,347,38,71,39,40,41,42,43,44,45,46,47,48,49,50,348,348,51,51,199,199,349,349,350,350,351,351,352,352,353,353,52,52,354,354,355,355,53,53,356,357,358,359,54,360,361,362,363,364,365,366,200,201,367,202,203,204,205,206,207,208,209,210,211,368,212,213,214,215,216,217,218,219,220,55,221,222,369,223,224,225,226,227,228,229,230,231,232,233,234,235,236,370,371,237,372,373,56,374,74,375,376,238,377,60,378,379],"tindex":"a121a64d-db6e-11e4-bdab-4bb4dfd68cab","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[380,381,382,383,384,385,386,387,388,389,390],"tindex":"a121a64e-db6e-11e4-bdab-ff628005f1be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[81,87,95,96,97,12,110,124,132,133,134,17,147,182,183,299,184,25,191,313,321,323,324,29,336,364],"tindex":"a121a64f-db6e-11e4-bdab-0ffd7c05add7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[391],"tindex":"a121a650-db6e-11e4-bdab-23aff419a37e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"a121cd61-db6e-11e4-bdab-61f62f3f72d2","variableMapping":{"unpavedBit":"flags","shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-2},{"failures":[],"tindex":"a121cd62-db6e-11e4-bdab-d914a66c0f58","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"a121cd63-db6e-11e4-bdab-3de2cedcda94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[0,392,393,1,2,3,4,5,394,395,6,7,8,9,396,10,85,11,12,13,116,14,15,122,16,17,18,153,397,19,20,398,21,260,22,168,23,290,24,25,26,310,311,27,28,29,30,342,31,399,32,400,401,33,69,34,35,36,37,197,38,39,40,41,42,43,44,45,46,47,48,49,50,51,351,52,53,54,55,56,374,57,58,59,60],"tindex":"a121cd64-db6e-11e4-bdab-df1c611d41ec","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[38,391,402],"tindex":"a121cd65-db6e-11e4-bdab-9d60d85cdef2","variableMapping":{"high":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[201],"tindex":"a121cd66-db6e-11e4-bdab-bd6621f3d341","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[201],"tindex":"a121cd67-db6e-11e4-bdab-b3024b6305c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[403],"tindex":"a121cd68-db6e-11e4-bdab-3384416d4064","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"a121cd69-db6e-11e4-bdab-1d1b90dc5eaa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"a121cd6a-db6e-11e4-bdab-ab7e2342651c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:101","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"a121cd6b-db6e-11e4-bdab-517fb0a29ff9","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.KM_MILE":"minLon","distInMeter":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:76","type":"CtLocalVariableImpl","sourcecode":"double double = (double / 1000) / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[243,10,85,86,87,94,246,107,111,13,117,14,15,122,123,124,131,249,144,148,18,154,23,290,181,182,297,298,189,306,26,193,311,312,313,320,322,334,337,30,343,69,70,38,71,41,44,46,49,50,54,404,405,406,403,361,362,364,365,407,380,408,381,409,410,411,382,412,383,413,384,414,415,416,417,72,418,419,420,421,422,367,423,424,425,385,386,426,387,427,428,388,429,389,430,390,431,202,203,207,210,368,212,214,215,369,225,226,227,228,229,231,233,235,237,373,56,374,74],"tindex":"a121cd6c-db6e-11e4-bdab-136f168dc257","variableMapping":{"lastTime":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[],"tindex":"a121f47d-db6e-11e4-bdab-db262df10b92","variableMapping":{"periodicUpdates":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":0},{"failures":[],"tindex":"a121f47e-db6e-11e4-bdab-cd87c58d2fcf","variableMapping":{"line":"encoderList"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"a121f47f-db6e-11e4-bdab-55e9517be6de","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"pavementType","edge":"pavementType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-2},{"failures":[],"tindex":"a121f480-db6e-11e4-bdab-496c4e60de28","variableMapping":{"delta_lat":"minLat","r_lat":"minLat","a_lat":"minLat","delta_lon":"minLat","r_lon":"minLat","a_lon":"minLat","norm":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[75,231,235],"tindex":"a121f481-db6e-11e4-bdab-9dda6fd83eff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[203,369],"tindex":"a121f482-db6e-11e4-bdab-c9238129d7b0","variableMapping":{"initLeafSize":"from","maxLeafEntries":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"a121f483-db6e-11e4-bdab-e926aa8fc4b0","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[403,432,433,434],"tindex":"a121f484-db6e-11e4-bdab-770213886557","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[257,264,161,435,165,172,173,436,437,438,439,440,441,442,443,444,445],"tindex":"a121f485-db6e-11e4-bdab-1535f5b7b7e9","variableMapping":{"deltaX":"maxLatTmp","tmp":"maxLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-1},{"failures":[],"tindex":"a121f486-db6e-11e4-bdab-95dd3deeb3a8","variableMapping":{"costs":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":0},{"failures":[],"tindex":"a121f487-db6e-11e4-bdab-19aa0901e5f2","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":0},{"failures":[],"tindex":"a121f488-db6e-11e4-bdab-538afe9367cf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[391],"tindex":"a121f489-db6e-11e4-bdab-893264823db9","variableMapping":{"segmentSizeInBytes":"index","indexDivisor":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[41,46,408,413,416,422,426,430],"tindex":"a1221b9a-db6e-11e4-bdab-272a5fe85ecb","variableMapping":{"sacScale":"res"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[446],"tindex":"a1221b9b-db6e-11e4-bdab-0b79280ba581","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[368],"tindex":"a1221b9c-db6e-11e4-bdab-fdd17d6d3902","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-1},{"failures":[],"tindex":"a1221b9d-db6e-11e4-bdab-29716c8b0df5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[38,402],"tindex":"a1221b9e-db6e-11e4-bdab-1b2198a168d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[62,64,73,446,66,68],"tindex":"a1221b9f-db6e-11e4-bdab-cb8812e5ac13","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"a1221ba0-db6e-11e4-bdab-95f4a89ee4e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[],"tindex":"a1221ba1-db6e-11e4-bdab-cd33d9a9a639","variableMapping":{"maxMCSpeed":"midLon","speed":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":0},{"failures":[],"tindex":"a1221ba2-db6e-11e4-bdab-af51c86d25ee","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.runAlgo()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-2},{"failures":[],"tindex":"a1221ba3-db6e-11e4-bdab-07d0368b6542","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[447,211,229,231,235],"tindex":"a1221ba4-db6e-11e4-bdab-859adaaec2ac","variableMapping":{"value":"lastElem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"a1221ba5-db6e-11e4-bdab-c94ba8f79adf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[243,244,75,76,77,78,79,80,81,82,10,83,245,84,85,86,87,88,89,90,91,92,93,94,95,246,96,97,98,99,100,101,102,103,104,11,105,106,107,108,109,12,110,111,112,113,13,114,115,116,117,118,14,119,15,120,248,121,122,123,124,125,126,127,128,129,130,131,132,249,133,134,135,136,137,138,139,140,141,16,142,143,144,145,146,17,147,148,149,150,18,151,152,153,154,155,158,397,448,19,250,251,252,253,255,256,257,258,21,259,260,261,262,263,264,161,265,266,267,268,270,271,162,163,164,165,166,22,167,168,169,170,171,172,173,174,175,176,177,178,179,274,275,276,277,279,280,281,282,283,285,286,180,23,287,288,289,290,181,182,291,292,293,294,295,296,297,183,298,299,184,300,185,186,301,187,188,302,24,303,304,189,305,190,25,191,306,192,307,26,308,309,310,193,194,322,28,33,195,69,34,35,70,36,196,37,197,345,198,346,347,38,71,39,40,41,42,43,44,45,46,47,48,49,50,348,51,199,349,350,351,352,353,52,354,355,53,356,357,54,360,361,362,363,364,365,366,200,201,367,202,203,204,205,206,207,208,209,210,211,368,212,213,214,215,216,217,218,219,220,55,221,222,369,223,224,225,226,227,228,229,230,231,232,233,234,235,236,370,371,237,372,373,56,374,74,375,376,238,377,60,378,379],"tindex":"a1221ba6-db6e-11e4-bdab-99609a14fc94","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"segmentsToCreate","entityType":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"a12242b7-db6e-11e4-bdab-215d5f8d4104","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[257,262,264,161,435,165,170,172,173,436,437,438,439,440,441,442,443,444,445],"tindex":"a12242b8-db6e-11e4-bdab-9df8b8245640","variableMapping":{"weightApproximation":"maxLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[38,402],"tindex":"a12242b9-db6e-11e4-bdab-e5990e623418","variableMapping":{"distance":"shortTripsSpeed","speed":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[449],"tindex":"a12242ba-db6e-11e4-bdab-43fada7c1631","variableMapping":{"name":"str","refName":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:449","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[73],"tindex":"a12242bb-db6e-11e4-bdab-c387e3ddcda2","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"a12242bc-db6e-11e4-bdab-b3904edd7b8b","variableMapping":{"empty":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[],"tindex":"a12242bd-db6e-11e4-bdab-0d0fda00b067","variableMapping":{"freeIndex":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":0},{"failures":[69,49,415,417,419,420,74],"tindex":"a12242be-db6e-11e4-bdab-830bad5abf5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"a12242bf-db6e-11e4-bdab-491abc8f71eb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"a12242c0-db6e-11e4-bdab-3bec2a7e068a","variableMapping":{"this":"estimatedLength","tmpWeight":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:90","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isInfinite(double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-2},{"failures":[450,451,452,1,2,453,454,455,6,7,456,457,458,459,460,461,462,463,464,247,156,157,160,19,33,195,69,34,35,70,36,465,196,37,197,345,466,38,71,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"a12242c1-db6e-11e4-bdab-adcb00856c2e","variableMapping":{"allBits":"bytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-1},{"failures":[],"tindex":"a12242c2-db6e-11e4-bdab-af90f189d615","variableMapping":{"empty":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[],"tindex":"a12242c3-db6e-11e4-bdab-e7fa994728ad","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"a12242c4-db6e-11e4-bdab-b73404e572e2","variableMapping":{"silent":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"a12242c5-db6e-11e4-bdab-91cb9f05ff1f","variableMapping":{"tmpClosestNode":"child","adjNode":"size","adjDist":"lastPrio","currNormedDist":"lastPrio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:892","type":"CtIfImpl","sourcecode":"if (double < (double))\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":0},{"failures":[],"tindex":"a12242c6-db6e-11e4-bdab-57d25bd0d1c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:86","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"a12242c7-db6e-11e4-bdab-6d2e55eb1d95","variableMapping":{"shift":"shift","preferWayEncoder":"wayTypeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"a12242c8-db6e-11e4-bdab-09fd83ed6b0c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"a12242c9-db6e-11e4-bdab-53a834a50a05","variableMapping":{"todoBytes":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"a12269da-db6e-11e4-bdab-87fe5d5c9d3c","variableMapping":{"maxTurnCosts":"maxTurnCosts","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","cost":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"a12269db-db6e-11e4-bdab-431e3867d4cd","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"a12269dc-db6e-11e4-bdab-ff8062b6b566","variableMapping":{"nodeThis":"toSize","nextEdgeOther":"size","nodeOther":"toSize","nextEdge":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[],"tindex":"a12269dd-db6e-11e4-bdab-d11809d70b04","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"a12269de-db6e-11e4-bdab-6dd4ce1aff8d","variableMapping":{"start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"a12269df-db6e-11e4-bdab-bd99b6c2789f","variableMapping":{"bytePos":"subNetworks"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"a12269e0-db6e-11e4-bdab-01ae3fe8ea34","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[61],"tindex":"a12269e1-db6e-11e4-bdab-2f02b3667c0b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"a12269e2-db6e-11e4-bdab-3b52da7eb297","variableMapping":{"high":"encoded","len":"encoded","start":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[467,468],"tindex":"a12269e3-db6e-11e4-bdab-3d968246457b","variableMapping":{"elem":"elem","keys":"keys","i":"size","key":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"a12269e4-db6e-11e4-bdab-619239dc0d1a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"a12269e5-db6e-11e4-bdab-55731082357d","variableMapping":{"oldValueIndex":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[436,437,469,438,470,439,440,443,444,445],"tindex":"a12269e6-db6e-11e4-bdab-4d0249550d26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"a12269e7-db6e-11e4-bdab-bd39a087cf90","variableMapping":{"gradient":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","yend":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[],"tindex":"a12269e8-db6e-11e4-bdab-b9741c372f04","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"a12269e9-db6e-11e4-bdab-412c89cdcb39","variableMapping":{"mainEdgeState":"mainEdgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"a12269ea-db6e-11e4-bdab-f33fb6fc6b2d","variableMapping":{"elevation":"empty","withElevation":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphBuilder:79","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[54,360,471,472,473,474,56,374,74,475],"tindex":"a12269eb-db6e-11e4-bdab-a78501e09490","variableMapping":{"r":"angle","x":"r","absY":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[243,244,75,76,77,78,79,80,81,82,10,83,245,84,85,86,87,88,89,90,91,92,93,94,95,246,96,97,98,99,100,101,102,103,104,11,105,106,107,108,109,12,110,111,112,113,13,114,115,116,117,118,14,119,15,120,248,121,122,123,124,125,126,127,128,129,130,131,132,249,133,134,135,136,137,138,139,140,141,16,142,143,144,145,146,17,147,148,149,150,18,151,152,153,154,155,156,157,158,160,19,250,251,252,253,255,256,257,258,21,259,260,261,262,263,264,161,265,266,267,268,270,271,162,163,164,165,166,22,167,168,169,170,171,172,173,174,175,176,177,178,179,273,274,275,276,277,279,280,281,282,283,285,286,180,23,287,288,289,290,181,182,291,292,293,294,295,296,297,183,298,299,184,300,185,186,301,187,188,302,24,303,304,189,305,190,25,191,306,192,307,26,308,309,310,193,194,322,28,33,195,69,34,35,70,36,196,37,197,345,198,346,347,38,71,39,40,41,42,43,44,45,46,47,48,49,50,348,348,51,51,199,199,349,349,350,350,351,351,352,352,353,353,52,52,354,354,355,355,53,53,356,357,358,359,54,360,361,362,363,364,365,366,200,201,367,202,203,204,205,206,207,208,209,210,211,368,212,213,214,215,216,217,218,219,220,55,221,222,369,223,224,225,226,227,228,229,230,231,232,233,234,235,236,370,371,237,372,373,56,374,74,375,376,238,377,60,378,379],"tindex":"a12290fc-db6e-11e4-bdab-abe3561d1dec","variableMapping":{"from":"segmentSizeInBytes","hash":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[],"tindex":"a12290fd-db6e-11e4-bdab-87c824d82172","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":109,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":219,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":80,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":415,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":312,"com.graphhopper.reader.OSMReaderTest.testFerry":38,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":375,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":376,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":167,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":195,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":475,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":384,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":414,"com.graphhopper.storage.MMapDataAccessTest.testSegments":460,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":132,"com.graphhopper.coll.CompressedArrayTest.testCompress":445,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":310,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":27,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":164,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":453,"com.graphhopper.util.AngleCalcTest.testOrientation":471,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":233,"com.graphhopper.GraphHopperTest.testPrepare":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":340,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":368,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":373,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":273,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":381,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":371,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":84,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":165,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":365,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":380,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":434,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":204,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":210,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":259,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":153,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":389,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":466,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":14,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":441,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":85,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":447,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":236,"com.graphhopper.GraphHopperTest.testLoadOSM":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":265,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":260,"com.graphhopper.reader.OSMReaderTest.testSort":40,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":47,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":120,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":394,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":192,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":23,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":341,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":353,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":150,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":396,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":108,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":295,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":247,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":382,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":122,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":171,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":185,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":215,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":169,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":465,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":207,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":206,"com.graphhopper.coll.OSMIDMapTest.testGetLong":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":135,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":141,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":101,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":10,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":103,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":473,"com.graphhopper.coll.CompressedArrayTest.testCompress2":444,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":302,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":433,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":249,"com.graphhopper.GraphHopperAPITest.testLoad":243,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":397,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":422,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":299,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":182,"com.graphhopper.storage.LevelGraphStorageTest.testClone":89,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":391,"com.graphhopper.reader.OSMReaderTest.testBarriers":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":123,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":366,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":240,"com.graphhopper.util.GHUtilityTest.testCopy":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":179,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":62,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":254,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":3,"com.graphhopper.routing.PathTest.testFindInstruction":360,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":124,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":237,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":424,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":114,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":251,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":307,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":186,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":148,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":238,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":229,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":91,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":317,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":459,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":398,"com.graphhopper.util.InstructionListTest.testWayList2":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":266,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":193,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":152,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":428,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":200,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":287,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":93,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":454,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":242,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":133,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":274,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":208,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":42,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":55,"com.graphhopper.coll.OSMIDMapTest.testGet":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":131,"com.graphhopper.routing.PathBidirRefTest.testExtract":356,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":446,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":11,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":32,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":175,"com.graphhopper.storage.RAMDataAccessTest.testCopy":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":407,"com.graphhopper.storage.RAMDataAccessTest.testSegments":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":271,"com.graphhopper.util.GHUtilityTest.testSort2":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":216,"com.graphhopper.reader.OSMReaderTest.testMain":39,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":83,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":140,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":442,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":68,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":176,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":107,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":339,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":246,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":99,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":117,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":96,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":144,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":158,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":432,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":102,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":49,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":451,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":194,"com.graphhopper.storage.GraphHopperStorageTest.testClone":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":73,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":300,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":419,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":75,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":66,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":318,"com.graphhopper.routing.PathTest.testTime":359,"com.graphhopper.util.BitUtilLittleTest.testToFloat":58,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":115,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":268,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":331,"com.graphhopper.util.GHUtilityTest.testSortDirected":379,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":468,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":8,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":349,"com.graphhopper.GraphHopperTest.testFootOnly":197,"com.graphhopper.util.BitUtilLittleTest.testToInt":59,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":275,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":402,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":170,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":406,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":458,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":327,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":1,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":348,"com.graphhopper.routing.QueryGraphTest.testOneWay":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":269,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":438,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":21,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":436,"com.graphhopper.reader.OSMReaderTest.testWithBounds":48,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":4,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":64,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":324,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":351,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":332,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":425,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":405,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":86,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":245,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":65,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":409,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":143,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":137,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":290,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":203,"com.graphhopper.util.BitUtilLittleTest.testToBitString":57,"com.graphhopper.util.InstructionListTest.testWayList":56,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":308,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":67,"com.graphhopper.GraphHopperAPITest.testDisconnected179":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":319,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":470,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":314,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":347,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":343,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":35,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":294,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":234,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":189,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":232,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":390,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":222,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":272,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":157,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":448,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":431,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":180,"com.graphhopper.routing.PathTest.testWayList":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":323,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":418,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":449,"com.graphhopper.coll.OSMIDMapTest.testGet2":399,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":369,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":142,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":129,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":293,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":100,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":172,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":173,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":392,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":9,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":413,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":467,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":385,"com.graphhopper.util.GHUtilityTest.testSort":378,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":335,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":443,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":154,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":166,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":253,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":279,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":282,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":19,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":412,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":201,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":280,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":119,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":426,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":361,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":20,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":28,"com.graphhopper.routing.PathTest.testFound":358,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":345,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":403,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":113,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":455,"com.graphhopper.util.AngleCalcTest.testAtan2":472,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":77,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":134,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":461,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":322,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":297,"com.graphhopper.util.InstructionListTest.testEmptyList":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":211,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":214,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":421,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":416,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":217,"com.graphhopper.reader.PrinctonReaderTest.testRead":346,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":168,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":321,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":401,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":311,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":139,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":411,"com.graphhopper.reader.OSMReaderTest.testFoot":71,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":334,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":264,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":440,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":61,"com.graphhopper.reader.OSMReaderTest.testOneWay":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":161,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":184,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":191,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":149,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":7,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":63,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":329,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":228,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":435,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":235,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":420,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":226,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":283,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":367,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":463,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":325,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":199,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":288,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":160,"com.graphhopper.routing.PathBidirRefTest.testExtract2":357,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":202,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":267,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":387,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":190,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":284,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":344,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":423,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":285,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":261,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":306,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":92,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":24,"com.graphhopper.GraphHopperTest.testFootAndCar":70,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":97,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":386,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":178,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":315,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":404,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":456,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":241,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":126,"com.graphhopper.GraphHopperTest.testPrepareOnly":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":220,"com.graphhopper.GraphHopperTest.testVia":69,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":313,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":46,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":79,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":74,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":305,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":328,"com.graphhopper.util.AngleCalcTest.testCombined":474,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":410,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":112,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":110,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":15}}]
