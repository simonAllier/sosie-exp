[{"failures":[],"tindex":"87b4e9c1-db04-11e4-9211-4571185b008d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"87b510d2-db04-11e4-9211-51156e8cac3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"87b510d3-db04-11e4-9211-a1cdc0dc6566","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"87b510d4-db04-11e4-9211-c37ce9512472","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[6,7,8,4,5,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"87b510d5-db04-11e4-9211-db5ccf3cc21f","variableMapping":{"edgeId":"sLat","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"err","nodeA":"dLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-1},{"failures":[26,27,28,29,30],"tindex":"87b510d6-db04-11e4-9211-1f21f8d65ca5","variableMapping":{"lazyUpdates":"b"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[],"tindex":"87b510d7-db04-11e4-9211-d7653ea20753","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[31,32,6,7,8,33,34,35,36,37,38,39,40,41,42,4,43,5,44,45],"tindex":"87b510d8-db04-11e4-9211-a7c5aac69414","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-1},{"failures":[46,47],"tindex":"87b510d9-db04-11e4-9211-731cb67de4f3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-1},{"failures":[48,49,50,51],"tindex":"87b510da-db04-11e4-9211-7f6d55f3ed05","variableMapping":{"factor":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[],"tindex":"87b510db-db04-11e4-9211-6bbecf1ffd28","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"87b510dc-db04-11e4-9211-ed382cabd4b9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[52],"tindex":"87b510dd-db04-11e4-9211-a5ab7bac5dd1","variableMapping":{"cp":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"87b510de-db04-11e4-9211-958834794839","variableMapping":{"store":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"87b537ef-db04-11e4-9211-af9804d16cc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"87b537f0-db04-11e4-9211-add54e8132bf","variableMapping":{"edgeId":"nodeId","nodeId":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-2},{"failures":[53,54,55,56,57,58,59],"tindex":"87b537f1-db04-11e4-9211-15fa572fcae2","variableMapping":{"dX":"resultOrientation","dY":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"87b537f2-db04-11e4-9211-271b4b43c06a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"87b537f3-db04-11e4-9211-4f63461a315d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[32,6,7,8,60,61,62,4,63,43,5,64,44,45,9,65,66,67,11,68,69,70,71,72,12,13,14,15,16,17,18,73,74,75,19,76,77,78,79,80,20,21,81,22,23,24,25,82],"tindex":"87b537f4-db04-11e4-9211-4f664480e1f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"87b537f5-db04-11e4-9211-85c327aeb040","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":-2},{"failures":[83],"tindex":"87b537f6-db04-11e4-9211-cbef40f2c5d7","variableMapping":{"this":"this","unknownSpeed":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[],"tindex":"87b537f7-db04-11e4-9211-4be83e2d6263","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[84,85,86,87,88,89,6,7,8,2,62,90,91,92,4,63,5,64,93,9,65,94,95,96,68,70,72,14,15,16,17,18,74,75,76,78,80,81,22,23,24,25],"tindex":"87b537f8-db04-11e4-9211-152ca9d50139","variableMapping":{"edgeId":"endIndexPlusOne","nextEdge":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"87b537f9-db04-11e4-9211-5f5450b17c8b","variableMapping":{"r":"orientation","x":"orientation","absY":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"87b537fa-db04-11e4-9211-878af9610a54","variableMapping":{"tmpNode":"valueIfKeyNotFound"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"87b55f0b-db04-11e4-9211-83c4156877c7","variableMapping":{"dijkstra":"this","finishedFrom":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:280","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.routing.DijkstraBidirectionRef.boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":0},{"failures":[97,98,99,100,101,102],"tindex":"87b55f0c-db04-11e4-9211-1d7300cb594b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"87b55f0d-db04-11e4-9211-738c11ba1a14","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"87b55f0e-db04-11e4-9211-d551e00f1f25","variableMapping":{"i":"paveType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":0},{"failures":[],"tindex":"87b55f0f-db04-11e4-9211-7d638b8aba5e","variableMapping":{"workerThreads":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[103,104,55,56,57,105,106,107,33,34,35,36,37,38,39,40,108,42,58,59,83,2,60,61,62,109,90,91,110,92,111,112,113,3,114,115,116,117,118,4,63,43,5,64,119,44,45,93,120,121,122,123,124,125,126,127,128,129,94,95,130,96,68,69,70,76,77,78,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183],"tindex":"87b58620-db04-11e4-9211-054b7b8a09d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[184],"tindex":"87b58621-db04-11e4-9211-dd9995971d58","variableMapping":{"name":"key","refName":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:449","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[],"tindex":"87b58622-db04-11e4-9211-c94c0bcc6c9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"87b58623-db04-11e4-9211-07153c9deea6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[57,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,46,201,47,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,0,219,220,221,222,1,83,2,60,61,62,109,90,91,110,92,111,112,113,223,3,117,118,4,63,43,5,64,119,44,45,93],"tindex":"87b58624-db04-11e4-9211-5bdc2ac1c11c","variableMapping":{"flags":"acceptBit","mask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[224,220,83],"tindex":"87b5ad35-db04-11e4-9211-fd52fd7088dc","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[],"tindex":"87b5ad36-db04-11e4-9211-a195ff97aa28","variableMapping":{"directionBitMask":"ferryBit","flags":"ferryBit","dir":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"87b5ad37-db04-11e4-9211-8fc494adb1a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:747","type":"CtContinueImpl","sourcecode":"continue"},"status":-2},{"failures":[220,1,83],"tindex":"87b5ad38-db04-11e4-9211-15056eee4d34","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"87b5ad39-db04-11e4-9211-478f8ab9572d","variableMapping":{"res":"oldRelationFlags","value":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[104,55,56,225,226,87,88,89,227,228,229,97,230,98,231,232,99,100,101,233,234,26,235,236,237,8,27,107,28,238,58,2,60,62,91,110,92,112,118,63,43,5,64,119,44,9,239,240,73,82,133,134,241,242,243,244,245,246,247,248,142,249,250,251,252,253,254,255,256,257,258,259,260,150,261,262,263,164,264,265,266,267,268,269,270,271],"tindex":"87b5ad3a-db04-11e4-9211-29a7bbebc4cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[189,198,202,213],"tindex":"87b5ad3b-db04-11e4-9211-7184157db5b9","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"87b5ad3c-db04-11e4-9211-d51b36f549be","variableMapping":{"includeWay":"includeWay","relationFlags":"relationFlags","encoder":"encoder","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"87b5ad3d-db04-11e4-9211-ef68f3434fee","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"87b5ad3e-db04-11e4-9211-fbb49a9d8eb6","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[97,98,231,232,99,100,101],"tindex":"87b5ad3f-db04-11e4-9211-31719ae76620","variableMapping":{"type":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:198","type":"CtReturnImpl","sourcecode":"return (this.int) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-1},{"failures":[],"tindex":"87b5ad40-db04-11e4-9211-45cecb40cf60","variableMapping":{"orientation":"resultOrientation","java.lang.Math.PI":"java.lang.Math.PI"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[187,192,195,204,207,210,272],"tindex":"87b5ad41-db04-11e4-9211-019e11c937a7","variableMapping":{"current":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:599","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"87b5ad42-db04-11e4-9211-fb7c1470fff4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:337","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"87b5d453-db04-11e4-9211-f9ee446ace51","variableMapping":{"encoded":"relationFlags","backwardBit":"includeWay"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"87b5d454-db04-11e4-9211-8be05e852296","variableMapping":{"bits":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":-2},{"failures":[],"tindex":"87b5d455-db04-11e4-9211-3f571614648c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"87b5d456-db04-11e4-9211-bff11fdaf9fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[187,188,193,195,197,46,201,47,208,210,212],"tindex":"87b5d457-db04-11e4-9211-61c6d364f7a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"87b5d458-db04-11e4-9211-ff4d2517dca2","variableMapping":{"index":"bytePos","entriesPerSegment":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:100","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long % (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[224,83],"tindex":"87b5d459-db04-11e4-9211-9335ba6b8f5a","variableMapping":{"tmpNo":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"87b5d45a-db04-11e4-9211-abb71fd2004f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[218],"tindex":"87b5d45b-db04-11e4-9211-51c156ea5cfa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"87b5d45c-db04-11e4-9211-d7b2f3f845ce","variableMapping":{"mKeys":"mKeys","nkeys":"mKeys"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":0},{"failures":[186,187,273,188,189,190,192,193,194,195,196,274,197,198,199,200,46,201,275,47,202,203,204,205,206,106,207,208,209,210,211,276,212,213,214,277,235,278,91],"tindex":"87b5d45d-db04-11e4-9211-e97527984b46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:192","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"87b5d45e-db04-11e4-9211-5ffd102a5c0b","variableMapping":{"wayTypeEncoder":"this","shift":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"87b5d45f-db04-11e4-9211-f1e63247434b","variableMapping":{"elem":"elem","keys":"keys","i":"size","key":"lastPrio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[184],"tindex":"87b5d460-db04-11e4-9211-39f3a5ca02f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[187,279,188,190,280,281,192,193,195,282,197,199,46,201,283,47,203,204,205,207,208,210,284,212,214,45],"tindex":"87b5d461-db04-11e4-9211-1b6bf3fc1c9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[],"tindex":"87b5d462-db04-11e4-9211-9f47a3c434d8","variableMapping":{"speedEncoder":"preferWayEncoder","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[99,101,285,286,287,288,289],"tindex":"87b5d463-db04-11e4-9211-d162505a2cd3","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[162,183],"tindex":"87b5d464-db04-11e4-9211-13996ec9ad6d","variableMapping":{"mGarbage":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[185,106],"tindex":"87b5d465-db04-11e4-9211-dd2138734465","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[187],"tindex":"87b5d466-db04-11e4-9211-6f012972acb0","variableMapping":{"lat":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"87b5fb77-db04-11e4-9211-33cfe0978fa3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[226,290],"tindex":"87b5fb78-db04-11e4-9211-3f07815e745e","variableMapping":{"red":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"87b5fb79-db04-11e4-9211-9b975f9a7f45","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"87b5fb7a-db04-11e4-9211-d9590cc93202","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"87b5fb7b-db04-11e4-9211-59fe0e309c4d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[26,27,28],"tindex":"87b5fb7c-db04-11e4-9211-617c9a65cb90","variableMapping":{"neighborUpdates":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-1},{"failures":[191,218,219,220,221,1,2,60,61,62,90,91,110,92,111,112,113,223,3,118,4,63,43,5,64,119,44,93],"tindex":"87b5fb7d-db04-11e4-9211-37a6ddc90914","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"87b5fb7e-db04-11e4-9211-ab8f5a87344d","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[291,97,99,292,293,277,294,233,234,295,296,26,31,297,32,235,236,6,7,237,298,8,27,107,28,299,238,4,63,64,45],"tindex":"87b5fb7f-db04-11e4-9211-bf551d1d9ff4","variableMapping":{"edge":"mainEdgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"87b5fb80-db04-11e4-9211-79778cdccdf5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[273,274,275,276,300],"tindex":"87b5fb81-db04-11e4-9211-e96435307213","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[],"tindex":"87b5fb82-db04-11e4-9211-c3e86270f9b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-2},{"failures":[],"tindex":"87b62293-db04-11e4-9211-95c68f46c223","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"87b62294-db04-11e4-9211-ffc51bfb3992","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[301,302,303,138,304,139,305,306,307,308,146,309,310,311,312,313,314,168,315,169,30],"tindex":"87b62295-db04-11e4-9211-d9300171d125","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"87b62296-db04-11e4-9211-c7f4653b5f4e","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"index","nextEdge":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-2},{"failures":[],"tindex":"87b62297-db04-11e4-9211-873b74413357","variableMapping":{"guess":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"87b62298-db04-11e4-9211-a1bf56e6d824","variableMapping":{"directionBitMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"87b62299-db04-11e4-9211-b73d5e44a236","variableMapping":{"bitsForEdgeFlags":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-2},{"failures":[],"tindex":"87b6229a-db04-11e4-9211-f9df83eb8df8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[316,206,106,278,2,91,3],"tindex":"87b649ab-db04-11e4-9211-492b7a90c880","variableMapping":{"bytePos":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[317,318,319,320,321,322,323,324],"tindex":"87b649ac-db04-11e4-9211-cf8ab95aa423","variableMapping":{"defaultUTurnCost":"speed","weight":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[279,190,192,282,199,283,203,207,284,214],"tindex":"87b649ad-db04-11e4-9211-6120c71ee1d7","variableMapping":{"turnCosts":"prio","weight":"prio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"87b649ae-db04-11e4-9211-779cc3d93632","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[186,187,188,190,192,193,194,195,197,199,46,201,47,203,204,205,206,207,208,209,210,212,214],"tindex":"87b649af-db04-11e4-9211-f3924864ef7f","variableMapping":{"directionBitMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[104,55,325,56,57,326,187,188,193,195,197,46,201,47,208,210,212,58,59,4,63,43,5,64,44,45,9],"tindex":"87b649b0-db04-11e4-9211-b9a4388d2022","variableMapping":{"key":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"87b649b1-db04-11e4-9211-df7a185eae30","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"87b649b2-db04-11e4-9211-a36d79e753d9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[103,104,55,56,57,225,327,328,226,87,89,227,316,106,228,329,0,330,1,331,229,332,333,291,334,97,230,98,231,232,99,292,100,335,101,293,277,294,233,234,295,296,26,31,297,32,235,336,236,6,7,237,298,8,337,27,107,28,299,238,36,39,278,58,59,2,60,62,91,110,92,111,112,3,338,339,117,118,4,63,43,5,64,119,44,45,9,133,134,136,340,301,341,241,342,343,242,243,244,344,245,246,247,139,248,142,144,345,306,346,249,347,348,250,251,252,349,253,254,255,147,256,350,351,352,353,257,354,355,258,259,260,356,150,261,262,357,263,358,359,164,166,360,312,361,264,362,363,265,266,267,364,268,269,270,169,271],"tindex":"87b649b3-db04-11e4-9211-cfd1b4fdda00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[365,366,103,367,368,84,85,369,104,55,56,57,225,327,328,226,87,88,89,227,290,105,106,228,332,333,291,334,97,230,98,231,232,370,99,292,100,335,101,293,277,294,233,234,295,296,26,31,297,32,235,336,236,6,7,237,298,8,337,27,107,28,299,238,33,33,34,34,371,371,35,35,36,36,37,37,38,38,39,39,40,40,41,41,108,108,42,42,372,278,58,59,83,2,60,61,62,109,90,91,110,272,92,111,112,113,223,3,338,339,373,374,375,114,115,116,117,118,4,63,43,5,64,376,119,44,45,93,377,9,65,120,121,122,123,124,125,126,127,128,378,379,380,381,382,239,383,129,94,95,130,384,96,385,386,387,388,389,240,11,390,68,69,70,71,391,72,12,13,14,15,16,17,18,73,74,75,392,19,393,76,77,78,79,394,80,20,21,81,22,23,24,25,82,132,395,396,133,397,398,134,135,399,400,401,136,340,301,402,341,241,403,404,342,343,302,242,405,303,406,407,243,408,244,409,410,137,411,412,344,413,245,138,304,246,414,247,139,415,140,141,248,305,416,417,418,419,420,142,143,421,422,423,144,345,306,424,346,249,425,426,347,348,307,250,427,308,428,429,251,430,252,431,432,145,433,434,349,435,253,146,309,254,436,255,147,437,148,149,256,310,438,439,440,441,350,351,352,442,353,257,443,444,354,355,445,258,446,447,448,449,259,450,260,451,452,453,454,455,356,456,150,457,458,261,459,262,357,460,461,462,263,463,358,464,465,466,359,163,311,29,164,165,467,468,469,166,360,312,470,361,264,471,472,362,363,313,265,473,314,474,475,266,476,267,477,478,167,479,480,364,481,268,168,315,269,482,270,169,483,170,171,271,30],"tindex":"87b670c4-db04-11e4-9211-c523ded3d166","variableMapping":{"baseUrl":"_location","fileDetails":"_location","zippedURL":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:274","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":268,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":337,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":163,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":185,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":351,"com.graphhopper.reader.OSMReaderTest.testFerry":83,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":327,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":328,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":194,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":10,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":77,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":118,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":326,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":302,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":151,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":375,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":317,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":149,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":98,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":453,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":392,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":152,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":100,"com.graphhopper.GraphHopperTest.testPrepare":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":460,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":252,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":291,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":289,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":235,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":383,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":188,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":85,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":468,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":227,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":297,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":307,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":69,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":195,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":133,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":166,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":287,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":293,"com.graphhopper.GraphHopperTest.testLoadOSM":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":70,"com.graphhopper.reader.OSMReaderTest.testSort":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":320,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":88,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":135,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":155,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":436,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":461,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":39,"com.graphhopper.storage.RAMDataAccessTest.testHeader":179,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":373,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":247,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":481,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":426,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":397,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":241,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":136,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":313,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":322,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":80,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":429,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":7,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":75,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":79,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":355,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":296,"com.graphhopper.coll.OSMIDMapTest.testGetLong":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":295,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":312,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":410,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":476,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":164,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":477,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":432,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":242,"com.graphhopper.GraphHopperAPITest.testLoad":9,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":469,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":300,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":427,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":306,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":224,"com.graphhopper.storage.LevelGraphStorageTest.testClone":361,"com.graphhopper.reader.OSMReaderTest.testBarriers":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":340,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":31,"com.graphhopper.util.GHUtilityTest.testCopy":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":257,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":82,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":189,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":182,"com.graphhopper.routing.PathTest.testFindInstruction":59,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":279,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":479,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":301,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":216,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":225,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":483,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":386,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":255,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":246,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":365,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":407,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":316,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":471,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":443,"com.graphhopper.util.InstructionListTest.testWayList2":56,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":15,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":403,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":193,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":192,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":105,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":143,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":362,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":153,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":48,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":156,"com.graphhopper.storage.RAMDirectoryTest.testSynched":438,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":405,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":26,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":345,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":109,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":107,"com.graphhopper.coll.OSMIDMapTest.testGet":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":343,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":217,"com.graphhopper.routing.PathBidirRefTest.testExtract":332,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":126,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":167,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":22,"com.graphhopper.storage.RAMDataAccessTest.testCopy":175,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":305,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":457,"com.graphhopper.storage.RAMDataAccessTest.testSegments":181,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":73,"com.graphhopper.util.GHUtilityTest.testSort2":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":237,"com.graphhopper.reader.OSMReaderTest.testMain":60,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":409,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":218,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":399,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":265,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":475,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":271,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":281,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":36,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":473,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":344,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":267,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":113,"com.graphhopper.storage.StorablePropertiesTest.testStore":132,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":174,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":310,"com.graphhopper.storage.GraphHopperStorageTest.testClone":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":459,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":1,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":439,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":221,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":428,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":358,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":444,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":466,"com.graphhopper.routing.PathTest.testTime":278,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":170,"com.graphhopper.util.InstructionListTest.testCreateGPX":325,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":264,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":384,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":17,"com.graphhopper.reader.OSMReaderTest.testRelation":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":452,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":480,"com.graphhopper.util.GHUtilityTest.testSortDirected":368,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":324,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":417,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":161,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":35,"com.graphhopper.GraphHopperTest.testFootOnly":45,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":220,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":441,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":394,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":234,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":334,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":259,"com.graphhopper.search.NameIndexTest.testCreate":123,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":180,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":33,"com.graphhopper.routing.QueryGraphTest.testOneWay":41,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":68,"com.graphhopper.reader.OSMReaderTest.testWithBounds":112,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":183,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":173,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":213,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":454,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":204,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":360,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":467,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":323,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":190,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":412,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":239,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":243,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":144,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":294,"com.graphhopper.util.InstructionListTest.testWayList":55,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":437,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":196,"com.graphhopper.GraphHopperAPITest.testDisconnected179":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":354,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":413,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":442,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":418,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":339,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":263,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":319,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":43,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":425,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":95,"com.graphhopper.routing.util.EncodedValueTest.testSwap":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":335,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":349,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":434,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":292,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":400,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":478,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":299,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":423,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":199,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":420,"com.graphhopper.routing.PathTest.testWayList":58,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":462,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":446,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":52,"com.graphhopper.coll.OSMIDMapTest.testGet2":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":238,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":158,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":269,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":411,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":430,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":20,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":266,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":21,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":176,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":162,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":276,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":286,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":46,"com.graphhopper.util.GHUtilityTest.testSort":367,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":456,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":273,"com.graphhopper.search.NameIndexTest.testPut":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":401,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":424,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":388,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":393,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":209,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":38,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":106,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":378,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":398,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":275,"com.graphhopper.storage.MMapDirectoryTest.testSynched":416,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":408,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":226,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":150,"com.graphhopper.routing.PathTest.testFound":372,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":93,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":206,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":270,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":184,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":465,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":303,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":102,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":122,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":258,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":172,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":348,"com.graphhopper.util.InstructionListTest.testEmptyList":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":321,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":6,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":229,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":318,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":431,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":298,"com.graphhopper.reader.PrinctonReaderTest.testRead":338,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":147,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":78,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":342,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":350,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":244,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":49,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":207,"com.graphhopper.reader.OSMReaderTest.testFoot":2,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":42,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":356,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":12,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":171,"com.graphhopper.reader.OSMReaderTest.testOneWay":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":13,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":308,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":309,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":414,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":160,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":433,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":260,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":347,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":231,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":101,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":222,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":230,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":381,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":228,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":448,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":371,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":223,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":421,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":419,"com.graphhopper.routing.PathBidirRefTest.testExtract2":333,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":16,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":47,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":240,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":120,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":253,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":91,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":463,"com.graphhopper.util.SimpleIntDequeTest.testPush":86,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":382,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":71,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":254,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":472,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":331,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":145,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":314,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":201,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":25,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":353,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":370,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":341,"com.graphhopper.storage.StorablePropertiesTest.testLoad":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":27,"com.graphhopper.GraphHopperTest.testPrepareOnly":117,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":352,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":92,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":359,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":57,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":435,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":329,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":110,"com.graphhopper.util.AngleCalcTest.testCombined":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":450,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":191,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":482,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":315,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":134}}]
