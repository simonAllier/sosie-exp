[{"failures":[],"tindex":"8b1ce290-db9a-11e4-ba23-fd73f86e1354","variableMapping":{"acceptedRailways":"sidewalks","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[],"tindex":"8b1e6931-db9a-11e4-ba23-fb513f3e3fb3","variableMapping":{"high":"defaultL","highKey":"defaultL","key":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"8b1e6932-db9a-11e4-ba23-5d6a9969cccf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"8b1e6933-db9a-11e4-ba23-cfd9b9641dd9","variableMapping":{"defaultUTurnCost":"java.lang.Double.POSITIVE_INFINITY","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[0],"tindex":"8b1e6934-db9a-11e4-ba23-e7b042f26284","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[0],"tindex":"8b1e6935-db9a-11e4-ba23-8d6307586b1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"8b1e6936-db9a-11e4-ba23-af1dee83a12e","variableMapping":{"segmentsToMap":"locs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[1,2,3,4,5,6],"tindex":"8b1e9047-db9a-11e4-ba23-cf9fe9b4c5bc","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"8b1e9048-db9a-11e4-ba23-8d296737bb40","variableMapping":{"dist":"weight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"8b1e9049-db9a-11e4-ba23-d94c5b53df3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"8b1fa1ba-db9a-11e4-ba23-5fd79a0ea8ff","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:155","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"8b1fa1bb-db9a-11e4-ba23-5b9c9f3b9dfe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"8b1fa1bc-db9a-11e4-ba23-636f2bd0d5c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:394","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[],"tindex":"8b1fa1bd-db9a-11e4-ba23-07eced109dff","variableMapping":{"lat":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[],"tindex":"8b1fa1be-db9a-11e4-ba23-55ab5ca9e2fc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[],"tindex":"8b1fa1bf-db9a-11e4-ba23-25ebd5fd0387","variableMapping":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[75,76,77,78,79,80,81,82,83,84,1,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,2,100,101,102,103,104,105,106,107,108,109,110,111,44,112,113,114,115,116,3,117,118,119,120,121,122,123,124,125,4,126,127,128,129,130,131,132,133,134,135,136,137,138,139,5,140,141,142,143,144,145,0,146,147,148,149,150,151,152,153,154,155,156,157,6,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,61,62,63,64,65,66,67,68,179,69,70,71,180,72],"tindex":"8b1fa1c0-db9a-11e4-ba23-7798f0b6e263","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":-1},{"failures":[],"tindex":"8b1fc8d1-db9a-11e4-ba23-67dadcbeb7fa","variableMapping":{"ref":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":0},{"failures":[181,182,183,184,185,186],"tindex":"8b1fc8d2-db9a-11e4-ba23-6f26ed7b8e6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[187,184,188,176,189,190,191,192,49,186,193,194,195],"tindex":"8b1fc8d3-db9a-11e4-ba23-999194172f68","variableMapping":{"iter":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:364","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterator.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-1},{"failures":[],"tindex":"8b1fc8d4-db9a-11e4-ba23-89cb186a04c4","variableMapping":{"retBucket":"start","bucketSize":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-2},{"failures":[],"tindex":"8b1fc8d5-db9a-11e4-ba23-d16188b09823","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[196,178,180,72],"tindex":"8b1fc8d6-db9a-11e4-ba23-f136f34ac9b5","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"8b1fc8d7-db9a-11e4-ba23-2fee57d42bf4","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[197,198],"tindex":"8b1fc8d8-db9a-11e4-ba23-a31e89b3b89e","variableMapping":{"i":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[171,67],"tindex":"8b1fc8d9-db9a-11e4-ba23-e7173d8bd833","variableMapping":{"size":"encoderCount","from":"encoderCount","end":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"8b1fc8da-db9a-11e4-ba23-1ba373ccefa5","variableMapping":{"edgeId":"biggestStart","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"biggestStart","nodeA":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":0},{"failures":[],"tindex":"8b1fc8db-db9a-11e4-ba23-856f3f0ed4e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[181,183,184,199,200,189,191,195],"tindex":"8b1fc8dc-db9a-11e4-ba23-e50b2184fbcc","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[],"tindex":"8b1fc8dd-db9a-11e4-ba23-37aa5dc0987c","variableMapping":{"minDistance":"shortTripsSpeed","rMin":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-2},{"failures":[127],"tindex":"8b1fc8de-db9a-11e4-ba23-072ea4d15e00","variableMapping":{"this":"this","configLocation":"tt","fileStr":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:63","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"8b1fc8df-db9a-11e4-ba23-55c0959aafca","variableMapping":{"allowed":"flags","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[201,202],"tindex":"8b1fc8e0-db9a-11e4-ba23-e93195a7ed2e","variableMapping":{"indexWithMaxDist":"index","lastIndex":"index","fromIndex":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[83,137,156,171,203,67],"tindex":"8b1feff1-db9a-11e4-ba23-e9e9fc720289","variableMapping":{"edgeId":"maxTurnCosts","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"maxTurnCosts","nodeA":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[],"tindex":"8b1feff2-db9a-11e4-ba23-c186a7227c90","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":0},{"failures":[],"tindex":"8b1feff3-db9a-11e4-ba23-ad5fe01124ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[76,77,78,79,80,81,82,83,84,1,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,2,100,101,102,103,104,105,106,107,108,109,110,111,44,112,113,114,115,116,3,117,118,119,120,121,122,123,124,125,4,126,127,128,129,130,131,132,133,134,135,136,137,138,139,5,140,141,142,143,144,145,0,146,147,148,149,150,151,152,153,154,155,156,157,6,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,178,61,62,63,64,65,66,67,68,69,70,71,180,72],"tindex":"8b1feff4-db9a-11e4-ba23-937b3d1c91e9","variableMapping":{"visitedCountFrom":"shift","visitedCountTo":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[204],"tindex":"8b1feff5-db9a-11e4-ba23-bdeb109b20d9","variableMapping":{"eIter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:282","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-1},{"failures":[78,151,170],"tindex":"8b1feff6-db9a-11e4-ba23-355fcdf01520","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"8b1feff7-db9a-11e4-ba23-8d2b51fc7d8f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"8b1feff8-db9a-11e4-ba23-d94c2433340e","variableMapping":{"currEdge":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[],"tindex":"8b1feff9-db9a-11e4-ba23-01a49254f937","variableMapping":{"width":"segmentSizeIntsPower","latSimilar":"segmentSizeIntsPower","lonSimilar":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:100","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[201,205,202,11,206,187,182,183,207,184,188,199,208,185,200,176,189,190,209,210,191,192,211,212,46,177,213,214,47,48,215,216,49,217,186,193,194,218,195,50,51,52,53,56,57,59],"tindex":"8b1feffa-db9a-11e4-ba23-3917ba54f6ad","variableMapping":{"edgeId":"index","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"index","nodeA":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"8b1feffb-db9a-11e4-ba23-99243c84cb66","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":0},{"failures":[219,220,221,222,223],"tindex":"8b1feffc-db9a-11e4-ba23-bd283859a483","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[45],"tindex":"8b20170d-db9a-11e4-ba23-cbaffb97790d","variableMapping":{"segmentSizeInBytes":"maxCount","indexDivisor":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[],"tindex":"8b20170e-db9a-11e4-ba23-ab4928e5aa22","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"8b20170f-db9a-11e4-ba23-8b18544b0edd","variableMapping":{"weight":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":0},{"failures":[224,225,226,227,228,229,230,231,14,15,16,27,28,29,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,147,148,266,267,193,268,269,270,271,272,273,274,275,276,277,50,51,52,53,54,55,56,57,58,59,60,178,61,62,63,64,65,66,67,68,69,70,71,180,72,278,279,280,281,282,283,284],"tindex":"8b201710-db9a-11e4-ba23-b9d95c45aaa7","variableMapping":{"x1":"segmentsToCreate","sLon":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"8b201711-db9a-11e4-ba23-0de8e21fd01e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":0},{"failures":[],"tindex":"8b201712-db9a-11e4-ba23-15b88faaef43","variableMapping":{"resultOrientation":"bwFaster","orientation":"bwFaster","java.lang.Math.PI":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[181,201,75,205,285,224,202,286,225,226,287,288,289,227,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,228,310,311,312,313,314,229,315,316,317,318,230,319,320,231,321,322,12,25,38,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,233,351,352,353,354,355,356,357,358,359,360,361,362,234,235,363,364,365,236,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,237,386,387,388,389,390,238,391,392,393,394,239,395,396,240,397,398,245,399,400,246,247,401,402,403,248,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,249,424,425,426,427,428,250,429,430,431,432,251,433,434,252,435,436,437,438,439,440,441,76,77,78,79,80,81,82,83,84,1,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,2,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,3,117,118,119,120,121,122,123,124,125,4,126,127,128,129,130,131,132,133,134,135,136,137,138,139,5,140,141,142,143,144,145,0,146,147,148,149,150,151,152,153,154,155,156,157,6,158,159,160,161,162,163,164,165,166,167,168,169,442,174,443,175,266,267,187,182,444,183,445,207,446,447,448,184,188,199,208,185,200,176,189,190,209,210,191,192,211,212,46,177,213,214,47,48,215,216,49,217,186,193,194,218,195,449,450,271,52,53,54,55,56,58,59,451,452,73,74],"tindex":"8b201713-db9a-11e4-ba23-fb6ae3ab04f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[93,108,124,166],"tindex":"8b201714-db9a-11e4-ba23-23a2faeba2bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"8b203e25-db9a-11e4-ba23-4d71043b3461","variableMapping":{"graph":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1032","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.flush()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"8b203e26-db9a-11e4-ba23-f9e71f1c81ec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:303","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":0},{"failures":[],"tindex":"8b203e27-db9a-11e4-ba23-c16912e500fa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[183,184,185,190,192,48,49,186,194],"tindex":"8b203e28-db9a-11e4-ba23-63287fc34a2a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-1},{"failures":[202,291,299,301,302,304,308,309,229,315,327,335,337,338,340,344,345,351,352,367,375,377,378,380,384,385,238,391,405,413,415,416,418,422,423,250,429,453,45],"tindex":"8b203e29-db9a-11e4-ba23-13a7206e3e09","variableMapping":{"segmentSizePower":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[225,290,291,293,294,298,305,307,312,314,316,318,321,25,38,323,324,326,327,329,330,334,341,343,349,233,353,355,360,234,366,367,369,370,374,381,383,388,390,392,394,397,245,246,404,405,407,408,412,419,421,426,428,430,432,435,256,257,258,259,438,439,453,43,44,45,204,131,138,183,445,207,446,447,184,199,185,200,176,190,209,210,191,192,211,212,46,177,48,215,216,49,186,193,194,218,195,449,450,271,451,452,73,74],"tindex":"8b203e2a-db9a-11e4-ba23-e5e9ac27ff7d","variableMapping":{"flags":"flags","value":"forward","forwardBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-1},{"failures":[],"tindex":"8b203e2b-db9a-11e4-ba23-efce6b6fd9e3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[83,137,156,171],"tindex":"8b203e2c-db9a-11e4-ba23-89b9f0a61c74","variableMapping":{"r":"costs","com.graphhopper.util.AngleCalc.PI_4":"costs","x":"costs","angle":"costs","absY":"costs","com.graphhopper.util.AngleCalc.PI3_4":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[76,135,149],"tindex":"8b203e2d-db9a-11e4-ba23-d162a9dc33ae","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"8b203e2e-db9a-11e4-ba23-d5b2dd68ec20","variableMapping":{"mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-2},{"failures":[93,108,124,166],"tindex":"8b203e2f-db9a-11e4-ba23-176770765e81","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"8b203e30-db9a-11e4-ba23-81a8868b4b5a","variableMapping":{"weightApproximation":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"8b203e31-db9a-11e4-ba23-b7f5d9d2b2b2","variableMapping":{"line":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"8b206542-db9a-11e4-ba23-adf8ca20edae","variableMapping":{"max":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[454,455,219,220,456,221,222,223],"tindex":"8b206543-db9a-11e4-ba23-7b2e61a1166a","variableMapping":{"edgeId":"sLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"8b206544-db9a-11e4-ba23-b3007d4c4d92","variableMapping":{"lastKey":"wayBitMask","key":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"8b206545-db9a-11e4-ba23-8dc046c36131","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:134","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"8b206546-db9a-11e4-ba23-5300e00fad5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:538","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        double double = com.graphhopper.routing.util.EncodedValue.getValue(long);\n        if (double == 0)\n            return ((double)(com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())) / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n        return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.getDouble(long, int);\n}"},"status":-2},{"failures":[],"tindex":"8b206547-db9a-11e4-ba23-c1dbed397b6e","variableMapping":{"importance":"nextTurnBit","hash":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":0},{"failures":[],"tindex":"8b210188-db9a-11e4-ba23-614f4113472f","variableMapping":{"res":"nodeBitMask","value":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[78,81,82,95,99,110,113,115,125,151,154,155,168,67],"tindex":"8b210189-db9a-11e4-ba23-3bb2aa97a94d","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"8b21018a-db9a-11e4-ba23-3111ca9e9766","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":0},{"failures":[],"tindex":"8b21018b-db9a-11e4-ba23-afd733695c74","variableMapping":{"edgePointer":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":0},{"failures":[],"tindex":"8b21018c-db9a-11e4-ba23-3d373a408a51","variableMapping":{"turnCosts":"angle","weight":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[201,205,202],"tindex":"8b21018d-db9a-11e4-ba23-73e0ddd9e6b2","variableMapping":{"size":"I_LEVEL","hash":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[77,94,97,109,116,150,167],"tindex":"8b21018e-db9a-11e4-ba23-0b9a08ac83ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"8b21018f-db9a-11e4-ba23-05f1025f554f","variableMapping":{"flags":"lastTime","nodeFlags":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"8b2128a0-db9a-11e4-ba23-fd23231542db","variableMapping":{"r":"orientation","x":"java.lang.Math.PI","absY":"java.lang.Math.PI"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"8b2128a1-db9a-11e4-ba23-0be8b9101d64","variableMapping":{"line":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":-2},{"failures":[],"tindex":"8b2128a2-db9a-11e4-ba23-fd7f06518d9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[132],"tindex":"8b2128a3-db9a-11e4-ba23-073b9b95b8fc","variableMapping":{"nodesContracted":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[201,205,202,11,206,187,182,183,207,184,188,199,208,185,200,176,189,190,209,210,191,192,211,212,46,177,213,214,47,48,215,216,49,217,186,193,194,218,195,50,52,53,56,57,59],"tindex":"8b2128a4-db9a-11e4-ba23-77307cf8d467","variableMapping":{"level":"index","lg":"this","polledNode":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:348","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.setLevel(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[78,86,95,101,110,118,125,151,159,168],"tindex":"8b2128a5-db9a-11e4-ba23-63f4ea41dd45","variableMapping":{"dX":"prio","dY":"prio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"8b2128a6-db9a-11e4-ba23-172b09d536d9","variableMapping":{"keyIndex":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[1,2,3,4,5,6,64,69],"tindex":"8b2128a7-db9a-11e4-ba23-87c0f3b0451f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[],"tindex":"8b2128a8-db9a-11e4-ba23-ab02914cf720","variableMapping":{"s":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":0},{"failures":[181,184,185],"tindex":"8b2128a9-db9a-11e4-ba23-6fa0a3e5dc21","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"found","v":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[258,259,260,457,458,267],"tindex":"8b2128aa-db9a-11e4-ba23-3d07d59788a4","variableMapping":{"r":"resultOrientation","com.graphhopper.util.AngleCalc.PI_4":"baseOrientation","x":"orientation","angle":"orientation","absY":"resultOrientation","com.graphhopper.util.AngleCalc.PI3_4":"baseOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-1},{"failures":[453,204,459],"tindex":"8b2128ab-db9a-11e4-ba23-1324cc1a2797","variableMapping":{"size":"nodes","from":"nodes","end":"nodes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-1},{"failures":[142,55,61],"tindex":"8b219ddc-db9a-11e4-ba23-973bab8b4fc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[77,78,79,82,85,87,88,91,92,94,97,99,100,102,103,106,107,109,114,115,116,117,119,122,123,150,151,152,155,158,160,161,164,165,167,170,173,179],"tindex":"8b219ddd-db9a-11e4-ba23-5f34d465c168","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[176],"tindex":"8b219dde-db9a-11e4-ba23-1f5975e40956","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[181,201,75,205,285,202,286,287,288,289,227,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,228,310,311,312,313,314,229,315,316,317,318,230,319,320,231,321,322,460,7,8,9,461,10,11,12,206,13,462,14,15,16,17,463,18,464,19,20,21,22,23,465,24,25,26,466,27,28,29,30,467,31,468,32,33,34,35,36,469,37,38,470,471,472,473,474,323,475,476,477,478,479,324,336,233,362,363,364,365,236,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,237,386,387,388,389,390,238,391,392,393,394,239,395,396,240,397,398,400,401,402,403,248,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,249,424,425,426,427,428,250,429,430,431,432,251,433,434,252,435,436,480,481,256,482,483,484,257,258,259,260,437,39,40,438,439,453,43,44,45,204,459,141,147,148,443,175,266,267,187,182,183,445,207,446,447,448,184,188,199,208,185,200,176,189,190,209,210,191,192,211,212,46,177,213,214,47,48,215,216,49,217,186,193,194,218,195,449,450,268,268,269,269,485,485,270,270,271,271,272,272,273,273,274,274,275,275,486,486,276,276,277,277,50,51,52,53,54,55,56,487,57,59,203,178,61,62,63,64,65,66,67,68,179,69,70,71,180,488,72,451,452,73,74],"tindex":"8b219ddf-db9a-11e4-ba23-1f142567eb35","variableMapping":{"da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"8b21c4f0-db9a-11e4-ba23-75a4f0770748","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[224,225,234,244,489,245,246,50,56,57,58,60],"tindex":"8b21c4f1-db9a-11e4-ba23-b5e5be2553e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-1},{"failures":[301,308,490,377,384,391,415,422,44,45,72],"tindex":"8b21c4f2-db9a-11e4-ba23-0f80b225807a","variableMapping":{"flags":"capacity","nodeFlags":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":217,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":269,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":224,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":477,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":326,"com.graphhopper.reader.OSMReaderTest.testFerry":178,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":438,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":439,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":81,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":116,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":454,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":15,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":51,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":164,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":413,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":121,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":240,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":346,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":206,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":199,"com.graphhopper.GraphHopperTest.testPrepare":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":187,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":383,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":177,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":257,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":460,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":122,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":40,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":288,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":204,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":212,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":28,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":252,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":245,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":200,"com.graphhopper.GraphHopperTest.testLoadOSM":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":29,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":442,"com.graphhopper.reader.OSMReaderTest.testSort":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":44,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":70,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":247,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":393,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":234,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":358,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":274,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":203,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":432,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":313,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":455,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":372,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":399,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":248,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":299,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":110,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":107,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":18,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":48,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":17,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":487,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":210,"com.graphhopper.coll.OSMIDMapTest.testGetLong":264,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":291,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":423,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":306,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":225,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":308,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":385,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":97,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":414,"com.graphhopper.GraphHopperAPITest.testLoad":73,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":289,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":5,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":377,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":367,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":196,"com.graphhopper.storage.LevelGraphStorageTest.testClone":293,"com.graphhopper.reader.OSMReaderTest.testBarriers":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":404,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":459,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":211,"com.graphhopper.util.GHUtilityTest.testCopy":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":330,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":104,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":124,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":219,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":118,"com.graphhopper.routing.PathTest.testFindInstruction":267,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":405,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":145,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":437,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":152,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":476,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":394,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":430,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":480,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":418,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":447,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":162,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":172,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":331,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":364,"com.graphhopper.util.InstructionListTest.testWayList2":259,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":458,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":34,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":397,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":80,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":489,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":434,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":147,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":222,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":235,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":297,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":415,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":192,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":366,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":193,"com.graphhopper.coll.OSMIDMapTest.testGet":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":412,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":0,"com.graphhopper.routing.PathBidirRefTest.testExtract":449,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":85,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":228,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":263,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":21,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":467,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":436,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":351,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":1,"com.graphhopper.storage.RAMDataAccessTest.testSegments":255,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":38,"com.graphhopper.util.GHUtilityTest.testSort2":481,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":215,"com.graphhopper.reader.OSMReaderTest.testMain":62,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":226,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":422,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":93,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":127,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":401,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":300,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":41,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":304,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":321,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":271,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":301,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":426,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":150,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":307,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":180,"com.graphhopper.storage.StorablePropertiesTest.testStore":244,"com.graphhopper.storage.GraphHopperStorageTest.testClone":369,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":134,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":132,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":379,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":108,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":332,"com.graphhopper.routing.PathTest.testTime":175,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":103,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":320,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":294,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":36,"com.graphhopper.reader.OSMReaderTest.testRelation":179,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":345,"com.graphhopper.util.GHUtilityTest.testSortDirected":483,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":165,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":270,"com.graphhopper.GraphHopperTest.testFootOnly":59,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":223,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":114,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":130,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":463,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":182,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":341,"com.graphhopper.search.NameIndexTest.testCreate":284,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":268,"com.graphhopper.routing.QueryGraphTest.testOneWay":486,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":469,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":27,"com.graphhopper.reader.OSMReaderTest.testWithBounds":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":166,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":43,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":433,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":347,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":170,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":290,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":287,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":96,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":163,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":125,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":131,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":419,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":236,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":189,"com.graphhopper.util.InstructionListTest.testWayList":258,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":395,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":84,"com.graphhopper.GraphHopperAPITest.testDisconnected179":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":333,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":427,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":328,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":160,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":452,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":360,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":54,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":371,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":208,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":76,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":388,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":188,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":135,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":230,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":100,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":91,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":402,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":218,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":365,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":465,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":95,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":362,"com.graphhopper.routing.PathTest.testWayList":266,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":359,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":337,"com.graphhopper.coll.OSMIDMapTest.testGet2":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":195,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":316,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":466,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":424,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":89,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":382,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":140,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":410,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":305,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":19,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":253,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":6,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":98,"com.graphhopper.util.GHUtilityTest.testSort":482,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":350,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":88,"com.graphhopper.search.NameIndexTest.testPut":282,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":435,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":462,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":478,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":10,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":472,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":154,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":148,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":470,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":400,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":2,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":279,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":441,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":420,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":453,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":233,"com.graphhopper.routing.PathTest.testFound":443,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":60,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":174,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":318,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":75,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":87,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":416,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":283,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":336,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":374,"com.graphhopper.util.InstructionListTest.testEmptyList":484,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":105,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":47,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":126,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":4,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":123,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":384,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":216,"com.graphhopper.reader.PrinctonReaderTest.testRead":451,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":239,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":16,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":411,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":325,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":292,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":421,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":171,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":151,"com.graphhopper.reader.OSMReaderTest.testFoot":61,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":277,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":349,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":468,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":32,"com.graphhopper.reader.OSMReaderTest.testOneWay":72,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":378,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":391,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":431,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":119,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":243,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":343,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":373,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":446,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":221,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":185,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":445,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":473,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":141,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":339,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":485,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":363,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":488,"com.graphhopper.routing.PathBidirRefTest.testExtract2":450,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":490,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":461,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":35,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":106,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":324,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":281,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":390,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":109,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":67,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":456,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":361,"com.graphhopper.util.SimpleIntDequeTest.testPush":42,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":30,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":392,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":296,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":136,"com.graphhopper.GraphHopperTest.testFootAndCar":55,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":237,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":302,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":99,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":24,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":329,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":448,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":407,"com.graphhopper.GraphHopperTest.testPrepareOnly":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":186,"com.graphhopper.GraphHopperTest.testVia":52,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":479,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":327,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":69,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":285,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":260,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":389,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":143,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":342,"com.graphhopper.util.AngleCalcTest.testCombined":457,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":111,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":317,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":315,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":246}}]
