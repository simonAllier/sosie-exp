[{"failures":[0,1,2,3],"tindex":"d02a972b-dae7-11e4-a20c-6748b81df8dd","variableMapping":{"tmpNo":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"d02abe3c-dae7-11e4-a20c-15b559d81645","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"importance","speed":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375],"tindex":"d02b0c5d-dae7-11e4-a20c-698e91fbb088","variableMapping":{"str":"_location","s":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:132","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String + \".\\n\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[376],"tindex":"d02b0c5e-dae7-11e4-a20c-9f4cd92241c5","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"d02b0c5f-dae7-11e4-a20c-ddfd9271521f","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"d02b3370-dae7-11e4-a20c-0f66e3ee101e","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit","bikeTag":"highwayValue","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"d02b3371-dae7-11e4-a20c-9f74eaa59f76","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[25,377],"tindex":"d02b3372-dae7-11e4-a20c-8960256d8bef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"d02b3373-dae7-11e4-a20c-450e6496c9ea","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[53,378,379,380,381],"tindex":"d02b3374-dae7-11e4-a20c-53ffc2a4f8ed","variableMapping":{"high":"turnRestrictionBit","highKey":"turnRestrictionBit","key":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"d02b3375-dae7-11e4-a20c-97f98d1521d1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"d02b3376-dae7-11e4-a20c-a3e30d92d97e","variableMapping":{"high":"hash","highKey":"hash","key":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"d02b3377-dae7-11e4-a20c-6bb71dcd44b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:86","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"d02b3378-dae7-11e4-a20c-5d5e5b3eeace","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[],"tindex":"d02b3379-dae7-11e4-a20c-8f43e6a3163a","variableMapping":{"java.lang.Integer.MAX_VALUE":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[70,75],"tindex":"d02b5a8a-dae7-11e4-a20c-cf53958e456d","variableMapping":{"size":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"d02b5a8b-dae7-11e4-a20c-23a3c4a20534","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"size","entityType":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":0},{"failures":[],"tindex":"d02b5a8c-dae7-11e4-a20c-bd7fab9bb821","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[70,74,75],"tindex":"d02b819d-dae7-11e4-a20c-5bfe2347b646","variableMapping":{"tmpEntries":"component"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:117","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList)"},"status":-1},{"failures":[6,7,8,9,10,13,14,17,25,26,46,47,59,61,382,383,68,0,384,385,386,387,388,389,390,69,391,392,393,394,3,395,396,397,398,399,400,77,78,94,95,104,106,107,117,144,149,236,241,282,287,340,345],"tindex":"d02b819e-dae7-11e4-a20c-69723674af93","variableMapping":{"index":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"d02b819f-dae7-11e4-a20c-bd5b1249d293","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[4,10,12,13,15,133,268,271,320,326,329],"tindex":"d02b81a0-dae7-11e4-a20c-4774cedd0597","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"d02b81a1-dae7-11e4-a20c-214ac541a4ae","variableMapping":{"carEncoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:80","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.CarFlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[],"tindex":"d02b81a2-dae7-11e4-a20c-6d4bc56248ef","variableMapping":{"currentBucket":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","retBucket":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","currentIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","bucketSize":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[4,6,7,8,9,10,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,61,67,68,69,70,71,72,73,74,75,76,77,78,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,149,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,401,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,402,228,229,241,256,268,270,271,272,273,287,403,404,405],"tindex":"d02ba8b3-dae7-11e4-a20c-d372e0876d77","variableMapping":{"start":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"d02ba8b4-dae7-11e4-a20c-bb5c20fc5968","variableMapping":{"newUniqueOsmId":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"d02ba8b5-dae7-11e4-a20c-8d5f661d0014","variableMapping":{"currentBucket":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[100,113,115,117,126],"tindex":"d02ba8b6-dae7-11e4-a20c-7583713db67e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[],"tindex":"d02ba8b7-dae7-11e4-a20c-f9dd4626aa37","variableMapping":{"mKeys":"elem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:62","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"d02ba8b8-dae7-11e4-a20c-73ff4207eefb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"d02ba8b9-dae7-11e4-a20c-99a2367358f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[53,378,379,380,381],"tindex":"d02ba8ba-dae7-11e4-a20c-03d8c376133e","variableMapping":{"c":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:228","type":"CtReturnImpl","sourcecode":"return int > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"d02ba8bb-dae7-11e4-a20c-977e3ed03867","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:66","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"d02ba8bc-dae7-11e4-a20c-8bdb355175bc","variableMapping":{"eleDelta":"bwSlower","decEleSum":"bwSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[4,5,6,7,8,9,10,12,13,14,15,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,406,407,408,409,410,0,411,412,384,386,413,414,415,387,388,416,417,418,419,390,420,421,422,423,424,425,426,427,428,429,430,392,1,431,2,432,433,434,435,436,394,3,437,438,395,397,439,440,441,398,399,442,443],"tindex":"d02ba8bd-dae7-11e4-a20c-6b4861de091a","variableMapping":{"weight":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[46,444],"tindex":"d02ba8be-dae7-11e4-a20c-3b03b4eb45c7","variableMapping":{"distance":"shortTripsSpeed","speed":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[],"tindex":"d02ba8bf-dae7-11e4-a20c-9de3611fd60b","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":0},{"failures":[],"tindex":"d02ba8c0-dae7-11e4-a20c-033d2f0fb278","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[5,6,7,8,9,10,12,13,25,47,48,49,50,53,54,56,57,58,59,406,407,408,382,409,410,400],"tindex":"d02bcfd1-dae7-11e4-a20c-9da0e8362e9d","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"d02bcfd2-dae7-11e4-a20c-d51a5684d09e","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[403,445,404,405],"tindex":"d02bcfd3-dae7-11e4-a20c-4358b5617630","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[],"tindex":"d02bcfd4-dae7-11e4-a20c-6140e07dd84a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[94,95,114,115,117,131],"tindex":"d02bcfd5-dae7-11e4-a20c-9fddd1386711","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"d02bcfd6-dae7-11e4-a20c-2940e075382e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"d02bcfd7-dae7-11e4-a20c-15c565829a3e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"d02c4508-dae7-11e4-a20c-351c16d142a5","variableMapping":{"calcPoints":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:127","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[7,10,107,108,111,176,177,183,184,186,189,190,191,192,193,194],"tindex":"d02c4509-dae7-11e4-a20c-430d8e6d6450","variableMapping":{"need":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"d02c450a-dae7-11e4-a20c-93662287a794","variableMapping":{"nodeId":"high","mainNodes":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"d02c450b-dae7-11e4-a20c-cf6ee80345a2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[4,9,14,15,46,47,48,49,50,51,52,53,54,56,57,58,59,61,446,447,406,407,448,444,449,408,382,409,450,451,378,452,453,410,454,380,389,390,455,456,69,420,457,458,421,459,460,461,462,463,80,464,465,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,194,200,213,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371],"tindex":"d02c450c-dae7-11e4-a20c-b9d03c2ca83d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"d02c450d-dae7-11e4-a20c-0708b89833a5","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"d02c450e-dae7-11e4-a20c-f1850aa4285b","variableMapping":{"shift":"encoded","flags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":0},{"failures":[],"tindex":"d02c450f-dae7-11e4-a20c-45a2c44656b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[46,444,466],"tindex":"d02c4510-dae7-11e4-a20c-2929e8adff5c","variableMapping":{"length":"index","factor":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[314,372],"tindex":"d02c4511-dae7-11e4-a20c-cb94d6d6dbd4","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[68],"tindex":"d02c4512-dae7-11e4-a20c-1f3bcc8d0bdb","variableMapping":{"distInMeter":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[94,95,114,115,117,131],"tindex":"d02c6c23-dae7-11e4-a20c-9f9130fc927e","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[6,9,15,47,52,53,448,444,409],"tindex":"d02c6c24-dae7-11e4-a20c-414e5deb0de0","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[380,458],"tindex":"d02c6c25-dae7-11e4-a20c-7b09900a1fe3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[70,74,75],"tindex":"d02c9336-dae7-11e4-a20c-619a2ad0abc0","variableMapping":{"size":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"d02c9337-dae7-11e4-a20c-b15d06ba68bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"d02c9338-dae7-11e4-a20c-31b389e0ee49","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[467,468,469,470,471,472,473,474,475,476,179,185,187,188,214,220,222,223],"tindex":"d02c9339-dae7-11e4-a20c-d5425e7b3fbe","variableMapping":{"bytePos":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"d02c933a-dae7-11e4-a20c-af10df41971d","variableMapping":{"high":"noOfStates","len":"noOfStates","start":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[389],"tindex":"d02c933b-dae7-11e4-a20c-7bc0a5ffdc9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-1},{"failures":[4,7,8,10,13,14,23,24,477,478,479,46,48,49,50,51,52,53,54,56,57,58,59,61,62,63,64,65,66,78,81,84,85,87,88,91,114,133,138,159,165,170,181,183,216,218,230,251,256,257,262,480,481,482,483,484,485,486,268,271,276,297,303,308,487,405,488,489,329,334,355,361,366,490,491,492,493,494,495,496,497],"tindex":"d02c933c-dae7-11e4-a20c-4f133715b2c0","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[377],"tindex":"d02c933d-dae7-11e4-a20c-f9b5613992ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[498,95,96,97,100,101,103,104,107,109,110,111,112,113,115,116,117,122,124,126,130],"tindex":"d02c933e-dae7-11e4-a20c-e9ab75523e70","variableMapping":{"nextTowerId":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"d02c933f-dae7-11e4-a20c-6fd2aa1e2c6a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"d02c9340-dae7-11e4-a20c-2fbf60dd0744","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[96,99,100,111,113,115,118,126,127],"tindex":"d02c9341-dae7-11e4-a20c-1347040808b6","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"d02c9342-dae7-11e4-a20c-f30184683c98","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-2},{"failures":[],"tindex":"d02c9343-dae7-11e4-a20c-1168ea72874b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[25,377],"tindex":"d02cb954-dae7-11e4-a20c-6d5d14b4c23d","variableMapping":{"cp":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:113","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"d02cb955-dae7-11e4-a20c-73f39dc00b0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[384,386,387,423,428,2,435,395,397,398],"tindex":"d02cb956-dae7-11e4-a20c-fd6805d73db5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"d02cb957-dae7-11e4-a20c-a539f938c257","variableMapping":{"bytePos":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[],"tindex":"d02cb958-dae7-11e4-a20c-b5f6584a6ac5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[4,5,6,7,8,9,10,12,13,14,15,47,48,49,50,51,52,53,54,56,57,58,61,71,72,73],"tindex":"d02cb959-dae7-11e4-a20c-ad87117c97f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:111","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"d02cb95a-dae7-11e4-a20c-63bae2f3ec9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-2},{"failures":[],"tindex":"d02cb95b-dae7-11e4-a20c-5d165ca62323","variableMapping":{"latSimilar":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[4,5,6,7,8,9,10,12,13,14,15,17,18,46,47,48,49,50,51,52,53,54,56,57,58,59,61,103,107,108,111,499,500,133,134,142,164,176,177,181,182,183,184,186,189,190,191,192,401,193,194,202,203,204,205,206,207,216,217,218,219,221,224,225,226,227,402,228,229,234,256,480,501,268,271,272,280,302,502,503,326,329,330,338,490,504,505,506],"tindex":"d02cb95c-dae7-11e4-a20c-ad94aa37270f","variableMapping":{"red":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[4,5,6,7,10,12,14,17,18,22,23,24,26,29,32,33,44,45,407,449,452,68,69,457,70,71,72,73,74,77,78,79,84,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,133,138,139,140,142,143,146,147,149,154,156,162,164,167,169,170,174,194,200,213,229,230,231,232,234,235,238,239,241,246,248,254,256,259,261,262,266,268,271,276,277,278,280,281,284,285,287,292,294,300,302,305,307,308,312,321,325,329,334,335,336,338,339,342,343,345,350,352,358,360,363,365,366,370],"tindex":"d02cb95d-dae7-11e4-a20c-5de5f5421433","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:273","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, boolean), com.graphhopper.routing.util.FlagEncoder.int, boolean)"},"status":-1},{"failures":[382,377,400],"tindex":"d02ce06e-dae7-11e4-a20c-e5a346bf65e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[507,508,509,498,510,120,122,123,124,126,128,130],"tindex":"d02ce06f-dae7-11e4-a20c-9fbcc8358407","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"d02ce070-dae7-11e4-a20c-bdd20ed286fb","variableMapping":{"midLat":"absY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":0},{"failures":[4,6,7,8,9,10,12,13,14,15,17,18,46,47,48,49,50,51,52,53,54,56,57,58,59,61,467,468,103,107,108,111,469,470,511,471,512,472,473,474,475,513,476,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,401,193,194,214,215,216,217,218,219,220,221,222,223,224,225,226,227,402,228,229],"tindex":"d02ce071-dae7-11e4-a20c-b188d25c7b5b","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[],"tindex":"d02ce072-dae7-11e4-a20c-f777a56e55d0","variableMapping":{"i":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"d02ce073-dae7-11e4-a20c-2dd04e10a7b1","variableMapping":{"this":"this","speed":"speed","encoded":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:188","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":0},{"failures":[0,412,413,414,415,387,388,416,417,422,424,425,426,427,428,429,430,392,431,2,432,433,434,435,436,394,3,438,439,440,441,398,399,442,443],"tindex":"d02ce074-dae7-11e4-a20c-f99f4701434b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:434","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[6,7,8,9,10,13,14,17,18,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,126,127,131],"tindex":"d02ce075-dae7-11e4-a20c-49f189230b4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[],"tindex":"d02ce076-dae7-11e4-a20c-393c1888b6ad","variableMapping":{"mainEdgeState":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[149,241,287,345],"tindex":"d02ce077-dae7-11e4-a20c-fd86f5ec449e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[384,395],"tindex":"d02ce078-dae7-11e4-a20c-a713c4fe0c23","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[25,377],"tindex":"d02ce079-dae7-11e4-a20c-d9dd6375e1ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"d02ce07a-dae7-11e4-a20c-617c5ad7e05a","variableMapping":{"shift":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[467,468,469,470,471,472,473,474,475,476,179,187,188,214,222,223],"tindex":"d02ce07b-dae7-11e4-a20c-cd0bc16fd505","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"d02d078c-dae7-11e4-a20c-1380ae85fc1e","variableMapping":{"flags":"encoded","tmpValue":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"d02d078d-dae7-11e4-a20c-6fa799ee1eac","variableMapping":{"incDist2DSum":"fromHeight","fullDist2D":"fromHeight","decDist2DSum":"toHeight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[],"tindex":"d02d078e-dae7-11e4-a20c-253a6d0ec1ec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":360,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":112,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":326,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":400,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":231,"com.graphhopper.reader.OSMReaderTest.testFerry":46,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":32,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":396,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":432,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":182,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":5,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":286,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":43,"com.graphhopper.coll.CompressedArrayTest.testCompress":468,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":173,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":122,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":251,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":149,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":128,"com.graphhopper.GraphHopperTest.testPrepare":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":118,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":156,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":510,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":438,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":201,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":435,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":20,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":332,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":179,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":74,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":3,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":403,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":102,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":217,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":311,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":397,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":268,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":474,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":334,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":498,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":131,"com.graphhopper.GraphHopperTest.testLoadOSM":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":218,"com.graphhopper.reader.OSMReaderTest.testSort":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":399,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":272,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":491,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":168,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":133,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":264,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":87,"com.graphhopper.storage.RAMDataAccessTest.testHeader":501,"com.graphhopper.routing.DijkstraTest.initializationError":464,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":38,"com.graphhopper.storage.MMapDataAccessTest.testHeader":506,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":307,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":497,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":359,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":500,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":145,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":269,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":276,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":344,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":392,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":186,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":108,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":177,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":184,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":99,"com.graphhopper.coll.OSMIDMapTest.testGetLong":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":98,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":336,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":296,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":351,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":329,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":353,"com.graphhopper.coll.CompressedArrayTest.testCompress2":467,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":158,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":422,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":287,"com.graphhopper.GraphHopperAPITest.testLoad":17,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":333,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":487,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":455,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":150,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":140,"com.graphhopper.storage.LevelGraphStorageTest.testClone":338,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":466,"com.graphhopper.reader.OSMReaderTest.testBarriers":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":277,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":379,"com.graphhopper.util.GHUtilityTest.testCopy":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":235,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":194,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":485,"com.graphhopper.routing.PathTest.testFindInstruction":79,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":393,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":278,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":507,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":26,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":421,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":367,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":412,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":169,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":154,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":305,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":291,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":328,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":389,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":463,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":340,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":236,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":489,"com.graphhopper.util.InstructionListTest.testWayList2":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":225,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":174,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":511,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":395,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":310,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":383,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":437,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":67,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":134,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":342,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":381,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":492,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":245,"com.graphhopper.storage.RAMDirectoryTest.testSynched":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":288,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":100,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":139,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":51,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":490,"com.graphhopper.routing.AStarTest.initializationError":465,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":114,"com.graphhopper.coll.OSMIDMapTest.testGet":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":285,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":499,"com.graphhopper.routing.PathBidirRefTest.testExtract":92,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":459,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":64,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":355,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":439,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":190,"com.graphhopper.storage.RAMDataAccessTest.testCopy":480,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":313,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":257,"com.graphhopper.storage.RAMDataAccessTest.testSegments":484,"com.graphhopper.util.GHUtilityTest.testSort2":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":109,"com.graphhopper.reader.OSMReaderTest.testMain":48,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":330,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":295,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":475,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":191,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":358,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":273,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":345,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":349,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":370,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":84,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":0,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":502,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":352,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":59,"com.graphhopper.storage.StorablePropertiesTest.testStore":318,"com.graphhopper.storage.GraphHopperStorageTest.testClone":142,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":260,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":409,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":315,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":152,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":408,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":237,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":324,"com.graphhopper.routing.PathTest.testTime":77,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":427,"com.graphhopper.util.BitUtilLittleTest.testToFloat":478,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":368,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":339,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":453,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":227,"com.graphhopper.reader.OSMReaderTest.testRelation":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":250,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":357,"com.graphhopper.util.GHUtilityTest.testSortDirected":31,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":376,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":388,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":495,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":83,"com.graphhopper.GraphHopperTest.testFootOnly":14,"com.graphhopper.util.BitUtilLittleTest.testToInt":479,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":431,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":203,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":444,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":185,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":419,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":246,"com.graphhopper.search.NameIndexTest.testCreate":37,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":483,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":80,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":503,"com.graphhopper.routing.QueryGraphTest.testOneWay":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":402,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":471,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":433,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":216,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":469,"com.graphhopper.reader.OSMReaderTest.testWithBounds":58,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":486,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":71,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":252,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":460,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":418,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":335,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":394,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":299,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":213,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":449,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":292,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":138,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":95,"com.graphhopper.util.BitUtilLittleTest.testToBitString":477,"com.graphhopper.util.InstructionListTest.testWayList":23,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":171,"com.graphhopper.GraphHopperAPITest.testDisconnected179":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":238,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":512,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":233,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":374,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":414,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":45,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":266,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":8,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":144,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":129,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":162,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":106,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":461,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":127,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":366,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":450,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":425,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":274,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":116,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":401,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":445,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":443,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":132,"com.graphhopper.routing.PathTest.testWayList":78,"com.graphhopper.storage.MMapDataAccessTest.testCopy":505,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":265,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":242,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":448,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":377,"com.graphhopper.coll.OSMIDMapTest.testGet2":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":117,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":504,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":363,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":298,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":155,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":456,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":283,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":187,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":350,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":188,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":481,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":496,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":189,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":509,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":423,"com.graphhopper.util.GHUtilityTest.testSort":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":255,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":513,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":441,"com.graphhopper.search.NameIndexTest.testPut":35,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":180,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":198,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":207,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":210,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":385,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":68,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":208,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":270,"com.graphhopper.storage.MMapDirectoryTest.testSynched":372,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":40,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":458,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":293,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":70,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":488,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":348,"com.graphhopper.routing.PathTest.testFound":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":256,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":15,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":390,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":365,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":440,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":289,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":508,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":36,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":241,"com.graphhopper.util.InstructionListTest.testEmptyList":21,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":103,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":107,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":452,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":447,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":436,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":446,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":110,"com.graphhopper.reader.PrinctonReaderTest.testRead":44,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":170,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":183,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":284,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":240,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":230,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":413,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":380,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":316,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":426,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":411,"com.graphhopper.reader.OSMReaderTest.testFoot":47,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":41,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":222,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":369,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":473,"com.graphhopper.reader.OSMReaderTest.testOneWay":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":223,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":151,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":166,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":306,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":434,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":494,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":160,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":123,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":476,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":130,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":382,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":121,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":211,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":493,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":69,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":244,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":82,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":60,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":135,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":375,"com.graphhopper.routing.PathBidirRefTest.testExtract2":93,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":404,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":94,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":428,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":34,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":164,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":430,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":267,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":420,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":415,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":219,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":167,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":341,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":451,"com.graphhopper.GraphHopperTest.testFootAndCar":9,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":159,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":347,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":424,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":193,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":482,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":234,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":454,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":378,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":280,"com.graphhopper.storage.StorablePropertiesTest.testLoad":319,"com.graphhopper.GraphHopperTest.testPrepareOnly":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":113,"com.graphhopper.GraphHopperTest.testVia":6,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":199,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":232,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":56,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":325,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":25,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":163,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":457,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":247,"com.graphhopper.routing.AStarBidirectionTest.initializationError":462,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":410,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":364,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":362,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":271}}]
