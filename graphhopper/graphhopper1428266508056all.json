[{"failures":[],"tindex":"2e5eecc2-dbd4-11e4-a4fc-d77cc2777f5d","variableMapping":{"i":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"2e615dc3-dbd4-11e4-a4fc-999c9e7789a4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"2e615dc4-dbd4-11e4-a4fc-1b8e8ba2f110","variableMapping":{"other":"osmValue","message":"osmValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:96","type":"CtIfImpl","sourcecode":"if ((this.java.lang.String) == null ? (com.graphhopper.util.InstructionAnnotation.java.lang.String) != null : !(this.java.lang.String.equals(com.graphhopper.util.InstructionAnnotation.java.lang.String)))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"2e615dc5-dbd4-11e4-a4fc-33128dafb290","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,25,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"2e615dc6-dbd4-11e4-a4fc-c55ae6d5871d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.create(long)"},"status":-1},{"failures":[140,141,142,143,144,145],"tindex":"2e615dc7-dbd4-11e4-a4fc-936a48a4c260","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[],"tindex":"2e615dc8-dbd4-11e4-a4fc-f92da7151837","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"2e615dc9-dbd4-11e4-a4fc-7b023231fed3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[31,37,39,42,44,48,66,92],"tindex":"2e615dca-dbd4-11e4-a4fc-0bd4d8edb73c","variableMapping":{"cap":"scDirMask","bytes":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[57,68,72],"tindex":"2e6184db-dbd4-11e4-a4fc-eb52177534ce","variableMapping":{"intIndex":"nodeA","len":"nodeA"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"2e6184dc-dbd4-11e4-a4fc-b3aa60c62701","variableMapping":{"instruction":"obj"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"2e6184dd-dbd4-11e4-a4fc-0baa0b7bc9a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[146],"tindex":"2e6184de-dbd4-11e4-a4fc-3f1484a5ee6f","variableMapping":{"directionBitMask":"roundaboutBit","blockByDefault":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"2e6184df-dbd4-11e4-a4fc-e958ead28081","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[147],"tindex":"2e6184e0-dbd4-11e4-a4fc-cbd3f61f0192","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"2e6184e1-dbd4-11e4-a4fc-1db572eb94cb","variableMapping":{"size":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[],"tindex":"2e6184e2-dbd4-11e4-a4fc-75b0323a4700","variableMapping":{"ex":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:252","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(java.io.IOException)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-2},{"failures":[148,149,150],"tindex":"2e6184e3-dbd4-11e4-a4fc-0368028df374","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[33,35,37,41,44,45,46,49,50,52,53,56,59,60,61,62,64,65,66,151,152],"tindex":"2e6184e4-dbd4-11e4-a4fc-a93f0110e897","variableMapping":{"values":"elem","i":"lastElem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:323","type":"CtAssignmentImpl","sourcecode":"int[][int] = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"2e61abf5-dbd4-11e4-a4fc-553f3ce045fb","variableMapping":{"edgeId":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[153,154,155,0,156,157,158,1,159,160,161,2,162,163,3,164,165,166,6,167,7,168,8,140,169,170,171,9,172,173,174,175,10,176,177,178,11,179,180,12,13,181,182,14,183,184,185,186,15,187,188,189,16,190,191,192,193,194,195,19,196,20,197,21,142,198,199,200,22,201,202,203,204,23,205,206,207,24,208,209,210,211,212,213,214,215,216,217,218,219,146,220,148,221,147,222,149,223,224,143,225,226,227,228,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,229,230,231,232,150,233,234,235,236,237,238,144,239,240,241,242,243,244,67,245,25,246,247,248,249,91,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,92,93,94,95,96,97,98,99,100,101,378,102,379,103,104,105,106,107,108,109,110,111,112,113,380,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"2e61fa16-dbd4-11e4-a4fc-2523b670db53","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"entryVal","entryVal":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:170","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[],"tindex":"2e61fa17-dbd4-11e4-a4fc-1bdb6cc03b96","variableMapping":{"lastIndex":"bits","fromIndex":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"2e61fa18-dbd4-11e4-a4fc-17a8128e80fa","variableMapping":{"remainingSegNo":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","segmentSizeInBytes":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","capacity":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:418","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-2},{"failures":[17,18,381],"tindex":"2e61fa19-dbd4-11e4-a4fc-81b2bace9c68","variableMapping":{"size":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[],"tindex":"2e61fa1a-dbd4-11e4-a4fc-23836c42770d","variableMapping":{"i":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[153,169,179,198],"tindex":"2e61fa1b-dbd4-11e4-a4fc-176effe65996","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[67,70,71,382,246,383,250,253,297,97,100],"tindex":"2e61fa1c-dbd4-11e4-a4fc-41cc8d4d8c83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"2e61fa1d-dbd4-11e4-a4fc-cd1ff75e5ce5","variableMapping":{"red":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"2e62483e-dbd4-11e4-a4fc-997ba72c5b33","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[29,30,31,33,37,38,39,41,42,44,45,48,49,53,54,55,56,57,58,60,62,63,64,66,94,96],"tindex":"2e62483f-dbd4-11e4-a4fc-47c015c8fb5e","variableMapping":{"costs":"weight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:612","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-1},{"failures":[166,180,195],"tindex":"2e624840-dbd4-11e4-a4fc-51ff7e5138de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:638","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[384],"tindex":"2e624841-dbd4-11e4-a4fc-ed84597786bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[],"tindex":"2e624842-dbd4-11e4-a4fc-ede9291e1e75","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"2e624843-dbd4-11e4-a4fc-c767bbf66601","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[385,386,387,388,389,390,391,392,393,394],"tindex":"2e624844-dbd4-11e4-a4fc-a3183fe8782e","variableMapping":{"this":"this","dist":"y","com.graphhopper.util.DistanceCalcEarth.R":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:70","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin(((double / 2) / (com.graphhopper.util.DistanceCalcEarth.double)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-1},{"failures":[],"tindex":"2e624845-dbd4-11e4-a4fc-27bdd2e2bdaa","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[],"tindex":"2e624846-dbd4-11e4-a4fc-87119201bdfe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":"2e624847-dbd4-11e4-a4fc-41c6c7f35330","variableMapping":{"dX":"maxSpeed","dY":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:336","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[153,169,179,198],"tindex":"2e626f58-dbd4-11e4-a4fc-7d7ea5bac688","variableMapping":{"highwayValue":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[67,70,71,382,246,383,250,253,297,97,100],"tindex":"2e626f59-dbd4-11e4-a4fc-f955f6c87b67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[0,2,7,8,10,12,15,20,21,23],"tindex":"2e626f5a-dbd4-11e4-a4fc-6dc345d5b723","variableMapping":{"str":"wayTypeName","d":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:276","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String.trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[395,396],"tindex":"2e626f5b-dbd4-11e4-a4fc-ebadcf7fd95a","variableMapping":{"turnCosts":"ele","weight":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[155,0,156,158,159,2,162,166,6,167,8,171,172,173,10,176,178,180,13,182,183,184,15,187,189,17,18,195,19,196,21,200,201,202,23,205,207,381],"tindex":"2e626f5c-dbd4-11e4-a4fc-733172077221","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"nextRelBit","entityType":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[],"tindex":"2e626f5d-dbd4-11e4-a4fc-0b431f87725a","variableMapping":{"min":"maxTurnCosts","tmpSize":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[161,162,175,176,186,187,204,205],"tindex":"2e626f5e-dbd4-11e4-a4fc-89f3adbb158f","variableMapping":{"angle":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"2e626f5f-dbd4-11e4-a4fc-ed133d902ce4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"2e626f60-dbd4-11e4-a4fc-19902bf8a0f6","variableMapping":{"java.lang.Double.MAX_VALUE":"maxSpeed","existingDirectWeight":"incDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[],"tindex":"2e626f61-dbd4-11e4-a4fc-d94e47a169d4","variableMapping":{"nodeId":"encoded","nodeIdOffset":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"2e626f62-dbd4-11e4-a4fc-3943807a1e17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:37","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"2e626f63-dbd4-11e4-a4fc-e708e74cdf03","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[148],"tindex":"2e629674-dbd4-11e4-a4fc-a36655ef4690","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[26,397,27,398,399,400,401,402,403,389,390,391,28,404,405,406,407,408,409,410,411,192,193,210,412,413,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,229,229,414,414,396,396,415,415,416,416,417,417,418,418,419,419,420,420,421,421,422,422,423,423,424,425,393,394,150,233,234,235,236,237,238,144,239,240,241,242,243,244,426,427,145,67,428,68,69,429,245,70,71,382,25,246,430,431,432,433,434,435,436,247,437,438,439,440,441,442,443,444,445,446,447,248,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,249,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,250,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,463,464,465,466,467,468,469,470,471,472,473,351,366,92,93,94,95,96,97,98,99,100,101,378,102,103,104,105,106,107,108,109,110,111,112,113,380,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"2e629675-dbd4-11e4-a4fc-67f1ccc7e84b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"2e629676-dbd4-11e4-a4fc-71b31b43e745","variableMapping":{"newAdjIndex":"start","newBaseIndex":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":0},{"failures":[],"tindex":"2e629677-dbd4-11e4-a4fc-bbb650415188","variableMapping":{"nodeId":"turnRestrictionBit","nodeIdOffset":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"2e62e498-dbd4-11e4-a4fc-853f791a6c6b","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"2e62e499-dbd4-11e4-a4fc-c538543b7b01","variableMapping":{"distance":"absY","dist":"r"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":0},{"failures":[],"tindex":"2e62e49a-dbd4-11e4-a4fc-31e389d0463c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"2e62e49b-dbd4-11e4-a4fc-e38d9d18add4","variableMapping":{"elem":"nodeLowLink","keys":"nodeIndex","i":"start","key":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:180","type":"CtWhileImpl","sourcecode":"while ((int[][(int / 2)]) > int) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n    int /= 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-2},{"failures":[26,397,27,398,399,400,401,402,403,389,390,391,28,404,405,406,407,408,409,410,411,192,193,210,412,413,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,229,229,414,414,396,396,415,415,416,416,417,417,418,418,419,419,420,420,421,421,422,422,423,423,424,425,393,394,150,233,234,235,236,237,238,144,239,240,241,242,243,244,426,427,145,67,428,68,69,429,245,70,71,382,25,246,430,431,432,433,434,435,474,436,247,437,438,439,440,441,475,442,443,444,445,446,476,447,248,448,449,450,451,452,453,454,455,456,457,458,459,460,461,477,462,249,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,92,93,94,95,96,97,98,99,100,101,378,102,103,104,105,106,107,108,109,110,111,112,113,380,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"2e630bac-dbd4-11e4-a4fc-bd99886432e0","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"2e630bad-dbd4-11e4-a4fc-5734f3fc4933","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[408,409,244,271,315,353,115],"tindex":"2e630bae-dbd4-11e4-a4fc-6d6cb2f3aec0","variableMapping":{"initLeafSize":"cap","maxLeafEntries":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":-1},{"failures":[],"tindex":"2e630baf-dbd4-11e4-a4fc-6db06d408fd8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-2},{"failures":[],"tindex":"2e630bb0-dbd4-11e4-a4fc-470ab722e402","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"2e630bb1-dbd4-11e4-a4fc-63f76766ba6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:88","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DAType com.graphhopper.storage.DAType = java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.get(java.lang.String)"},"status":-2},{"failures":[408,233,234,235,236,237,238,144,239,240,241,242,244,67,428,68,69,429,245,70,71,382,25,246],"tindex":"2e630bb2-dbd4-11e4-a4fc-11e4a28edb48","variableMapping":{"turnCostIndex":"unvisitedDeadEnds","nextTurnCostIndex":"unvisitedDeadEnds"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":-1},{"failures":[],"tindex":"2e630bb3-dbd4-11e4-a4fc-33f101c2a36a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"2e630bb4-dbd4-11e4-a4fc-f3d9383d32a0","variableMapping":{"high":"oldRelationFlags","highKey":"oldRelationFlags","key":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"2e630bb5-dbd4-11e4-a4fc-35ec66e84f79","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"2e630bb6-dbd4-11e4-a4fc-fdef1186b41d","variableMapping":{"intVal":"endNode","degree":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[193],"tindex":"2e630bb7-dbd4-11e4-a4fc-839d6e1b125a","variableMapping":{"r":"fullDist2D","angle":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"2e6332c8-dbd4-11e4-a4fc-dbff033a344c","variableMapping":{"latSimilar":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":0},{"failures":[],"tindex":"2e6332c9-dbd4-11e4-a4fc-43b9a50e70d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[219],"tindex":"2e6332ca-dbd4-11e4-a4fc-499499ac57a4","variableMapping":{"tmpOsmFile":"highwayValue","osmFile":"highwayValue","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:466","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String)))\n    java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[406,409,260,268,270,271,273,277,278,285,286,304,312,314,315,317,321,322,329,330,342,350,352,353,355,359,360,367,368,98,105,113,114,115,117,121,122,129,130],"tindex":"2e6332cb-dbd4-11e4-a4fc-25c36778b21b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[],"tindex":"2e6332cc-dbd4-11e4-a4fc-5f8d79b81932","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-2},{"failures":[],"tindex":"2e6332cd-dbd4-11e4-a4fc-fb2080b76d68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[478,479,480,448,454,456,457,75,81,83,84,481,482,483,484,485,486,487,488,489],"tindex":"2e6332ce-dbd4-11e4-a4fc-cf0297da84e0","variableMapping":{"dist":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[43,53],"tindex":"2e6332cf-dbd4-11e4-a4fc-43d4c32568ea","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[67,70,71,382,246,383,250,253,297,97,100],"tindex":"2e6332d0-dbd4-11e4-a4fc-3ba41d30fca8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"2e6332d1-dbd4-11e4-a4fc-812fb5bba376","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"2e6332d2-dbd4-11e4-a4fc-c3c81fa9d254","variableMapping":{"bits":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[2,6,10,15,19,23],"tindex":"2e6332d3-dbd4-11e4-a4fc-d77b03f3c80c","variableMapping":{"entry":"highway","entryVal":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[52,56,57,60,234,235,236,68,69,429,245,70,382,25,430,431,490,480,448,450,451,452,453,455,456,457,458,459,460,461,462,249,72,73,75,77,78,79,80,82,83,84,85,86,87,88,90,91],"tindex":"2e6332d4-dbd4-11e4-a4fc-b929337d33c5","variableMapping":{"lazyUpdates":"x1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[411],"tindex":"2e6332d5-dbd4-11e4-a4fc-5b82ba381108","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[153,154,155,0,156,157,158,1,159,160,161,2,162,163,3,164,165,166,6,167,7,168,8,140,169,170,171,9,172,173,174,175,10,176,177,178,11,408,179,180,12,13,181,182,14,183,184,185,186,15,187,188,189,16,190,17,141,491,18,191,192,193,194,195,19,196,20,197,21,142,198,199,200,22,201,202,203,204,23,205,206,207,24,208,209,210,211,212,213,214,215,216,217,218,219,146,220,148,221,147,222,149,223,224,143,225,226,43,53,425,150,233,234,235,236,237,238,144,239,381,240,241,242,243,244,94],"tindex":"2e6359e6-dbd4-11e4-a4fc-e9074d12535a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:193","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"cycleway\") , 30)"},"status":-1},{"failures":[],"tindex":"2e6359e7-dbd4-11e4-a4fc-75efd5d04228","variableMapping":{"i":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[37,41,92],"tindex":"2e6359e8-dbd4-11e4-a4fc-1f553e6ecc97","variableMapping":{"i":"edgeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[27,403,389,390,391,192,193,63,229,414,415,416,417,418,419,420,422,423,393,394,150,233,234,235,236,237,238,144,239,240,241,242,243,244,67,428,68,69,429,245,70,71,382,25,246,492,493,494,495,496,497,498,499,500,450,451,452,77,78,79,501,250,253,254,258,269,279,285,290,292,293,297,298,302,313,323,329,334,336,337,502,351,97,100,101,103,380,123,129,134,136,137],"tindex":"2e6359e9-dbd4-11e4-a4fc-d18f523a3243","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[26,397,27,398,399,400,401,402,403,389,390,391,28,404,405,406,407,408,409,410,411,192,193,210,412,413,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,229,229,414,414,396,396,415,415,416,416,417,417,418,418,419,419,420,420,421,421,422,422,423,423,424,425,393,394,150,233,234,235,236,237,238,144,239,240,241,242,243,244,426,427,145,67,428,68,69,429,245,70,71,382,25,246,430,431,432,433,434,435,474,436,247,437,438,439,440,441,475,442,443,444,445,446,476,447,248,448,449,450,451,452,453,454,455,456,457,458,459,460,461,477,462,249,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,383,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,92,93,94,95,96,97,98,99,100,101,378,102,103,104,105,106,107,108,109,110,111,112,113,380,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"2e6359ea-dbd4-11e4-a4fc-ef9f1cad4bf5","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"2e6359eb-dbd4-11e4-a4fc-99df8032df1a","variableMapping":{"resultOrientation":"midLon","orientation":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":0},{"failures":[384,150],"tindex":"2e6359ec-dbd4-11e4-a4fc-0faa040817ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[503,393],"tindex":"2e6359ed-dbd4-11e4-a4fc-834174ca817e","variableMapping":{"resultOrientation":"resultOrientation","orientation":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-1},{"failures":[],"tindex":"2e6380fe-dbd4-11e4-a4fc-e72052e15fae","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[408,244],"tindex":"2e6380ff-dbd4-11e4-a4fc-77b69ca10625","variableMapping":{"offset":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[],"tindex":"2e638100-dbd4-11e4-a4fc-4b3b5d8d7210","variableMapping":{"nodeB":"start","edgeId":"len","nodeA":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-2},{"failures":[],"tindex":"2e638101-dbd4-11e4-a4fc-65437d5cc5f9","variableMapping":{"time":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":0},{"failures":[],"tindex":"2e63a812-dbd4-11e4-a4fc-5966da0e056e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"2e63a813-dbd4-11e4-a4fc-f9c7226d4824","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"2e63a814-dbd4-11e4-a4fc-b3642f67ba86","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:652","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":61,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":414,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":97,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":341,"com.graphhopper.reader.OSMReaderTest.testFerry":150,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":404,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":405,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":168,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":156,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":78,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":428,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":392,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":268,"com.graphhopper.coll.CompressedArrayTest.testCompress":479,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":161,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":337,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":33,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":361,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":313,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":74,"com.graphhopper.util.AngleCalcTest.testOrientation":385,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":39,"com.graphhopper.GraphHopperTest.testPrepare":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":373,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":29,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":320,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":152,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":53,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":403,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":437,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":401,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":102,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":75,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":410,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":166,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":464,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":51,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":451,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":293,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":250,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":487,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":103,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":42,"com.graphhopper.GraphHopperTest.testLoadOSM":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":458,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":467,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":452,"com.graphhopper.reader.OSMReaderTest.testSort":235,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":176,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":241,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":254,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":332,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":297,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":485,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":374,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":419,"com.graphhopper.routing.DijkstraTest.initializationError":227,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":289,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":127,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":309,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":251,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":263,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":20,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":16,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":187,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":82,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":57,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":73,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":47,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":105,"com.graphhopper.coll.OSMIDMapTest.testGetLong":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":272,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":278,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":119,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":100,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":121,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":387,"com.graphhopper.coll.CompressedArrayTest.testCompress2":478,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":180,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":269,"com.graphhopper.GraphHopperAPITest.testLoad":430,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":379,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":466,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":208,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":314,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":304,"com.graphhopper.storage.LevelGraphStorageTest.testClone":107,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":384,"com.graphhopper.reader.OSMReaderTest.testBarriers":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":259,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":411,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":142,"com.graphhopper.util.GHUtilityTest.testCopy":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":91,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":185,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":163,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":476,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":1,"com.graphhopper.routing.PathTest.testFindInstruction":394,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":260,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":28,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":214,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":196,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":444,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":333,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":318,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":287,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":35,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":203,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":491,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":228,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":109,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":346,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":473,"com.graphhopper.util.InstructionListTest.testWayList2":390,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":503,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":369,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":459,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":338,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":264,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":7,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":383,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":192,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":298,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":270,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":438,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":49,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":303,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":237,"com.graphhopper.routing.AStarTest.initializationError":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":63,"com.graphhopper.coll.OSMIDMapTest.testGet":496,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":267,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":215,"com.graphhopper.routing.PathBidirRefTest.testExtract":412,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":171,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":498,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":454,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":295,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":249,"com.graphhopper.util.GHUtilityTest.testSort2":397,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":58,"com.graphhopper.reader.OSMReaderTest.testMain":234,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":101,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":277,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":488,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":87,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":177,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":126,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":371,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":380,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":117,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":5,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":138,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":114,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":416,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":282,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":195,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":465,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":120,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":243,"com.graphhopper.storage.StorablePropertiesTest.testStore":501,"com.graphhopper.storage.GraphHopperStorageTest.testClone":306,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":370,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":149,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":502,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":147,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":316,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":92,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":188,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":347,"com.graphhopper.routing.PathTest.testTime":425,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":184,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":136,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":226,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":475,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":461,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":360,"com.graphhopper.reader.OSMReaderTest.testRelation":381,"com.graphhopper.util.GHUtilityTest.testSortDirected":399,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":395,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":205,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":415,"com.graphhopper.GraphHopperTest.testFootOnly":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":155,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":148,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":439,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":81,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":46,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":490,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":356,"com.graphhopper.search.NameIndexTest.testCreate":495,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":229,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":469,"com.graphhopper.routing.QueryGraphTest.testOneWay":421,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":477,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":484,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":450,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":481,"com.graphhopper.reader.OSMReaderTest.testWithBounds":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":353,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":407,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":417,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":362,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":17,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":104,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":378,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":204,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":3,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":281,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":221,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":274,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":302,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":44,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":335,"com.graphhopper.util.InstructionListTest.testWayList":389,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":169,"com.graphhopper.GraphHopperAPITest.testDisconnected179":431,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":348,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":448,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":201,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":427,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":359,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":463,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":376,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":429,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":308,"com.graphhopper.routing.util.EncodedValueTest.testSwap":4,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":285,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":40,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":165,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":326,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":55,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":38,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":134,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":223,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":65,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":89,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":468,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":11,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":296,"com.graphhopper.routing.PathTest.testWayList":393,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":375,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":352,"com.graphhopper.coll.OSMIDMapTest.testGet2":497,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":66,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":280,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":174,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":319,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":265,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":307,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":83,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":118,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":84,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":199,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":12,"com.graphhopper.util.GHUtilityTest.testSort":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":365,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":455,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":489,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":157,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":173,"com.graphhopper.search.NameIndexTest.testPut":493,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":294,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":305,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":76,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":446,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":442,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":434,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":471,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":197,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":193,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":252,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":382,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":181,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":275,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":406,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":472,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":366,"com.graphhopper.routing.PathTest.testFound":424,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":191,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":246,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":133,"com.graphhopper.util.AngleCalcTest.testAtan2":386,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":94,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":172,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":271,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":494,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":351,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":311,"com.graphhopper.util.InstructionListTest.testEmptyList":402,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":52,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":186,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":56,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":218,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":162,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":217,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":59,"com.graphhopper.reader.PrinctonReaderTest.testRead":426,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":334,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":79,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":350,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":482,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":340,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":106,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":276,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":141,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":19,"com.graphhopper.reader.OSMReaderTest.testFoot":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":364,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":423,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":456,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":486,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":153,"com.graphhopper.reader.OSMReaderTest.testOneWay":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":457,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":315,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":330,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":288,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":159,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":198,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":358,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":34,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":480,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":41,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":32,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":435,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":210,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":354,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":396,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":299,"com.graphhopper.routing.PathBidirRefTest.testExtract2":413,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":470,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":441,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":43,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":15,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":248,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":460,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":492,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":328,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":474,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":189,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":144,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":377,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":436,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":453,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":331,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":110,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":224,"com.graphhopper.GraphHopperTest.testFootAndCar":245,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":323,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":115,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":13,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":90,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":344,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":62,"com.graphhopper.GraphHopperTest.testPrepareOnly":67,"com.graphhopper.GraphHopperTest.testVia":68,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":342,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":240,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":96,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":327,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":391,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":212,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":239,"com.graphhopper.routing.AStarBidirectionTest.initializationError":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":357,"com.graphhopper.util.AngleCalcTest.testCombined":388,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":164,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":132,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":130,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":253}}]
