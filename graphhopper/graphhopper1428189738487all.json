[{"failures":[],"tindex":"743d10a5-db21-11e4-bcd7-41da338a53bb","variableMapping":{"bytePos":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"tindex":"74412f56-db21-11e4-bcd7-3b8d87d92e59","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"74415667-db21-11e4-bcd7-bb5def8cbcde","variableMapping":{"midLat":"fwdFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[209,213,310,311],"tindex":"74415668-db21-11e4-bcd7-8de8e6f21dde","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","capacity":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"74415669-db21-11e4-bcd7-13f2608c4103","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:342","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"7441566a-db21-11e4-bcd7-6f912500d97f","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"7441566b-db21-11e4-bcd7-dd31d391267e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[250],"tindex":"7441566c-db21-11e4-bcd7-0d6bf63bdba3","variableMapping":{"tmpNo":"minNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"7441566d-db21-11e4-bcd7-65f652d6b523","variableMapping":{"high":"flags","len":"otherValue","start":"otherValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"7441566e-db21-11e4-bcd7-f9a17248f069","variableMapping":{"str":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"7441566f-db21-11e4-bcd7-77a449a68227","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[312,313,314,315],"tindex":"74415670-db21-11e4-bcd7-bf731bd554a0","variableMapping":{"bytesForFlags":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2},{"failures":[],"tindex":"74415671-db21-11e4-bcd7-9f1d11b1a4b9","variableMapping":{"line":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-2},{"failures":[],"tindex":"74415672-db21-11e4-bcd7-39ed96f8eaab","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"74415673-db21-11e4-bcd7-fff1eac276f4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[316,7,10,11,317,52,318,54,55,319,320,321,148,149,150,151,322,152,323,324,160,161,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,203,350,351,352,353,354,355,356,357,358,359,360,204,210,212,214],"tindex":"74417d84-db21-11e4-bcd7-bb82fe5d26db","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-1},{"failures":[],"tindex":"74417d85-db21-11e4-bcd7-eddecfca856b","variableMapping":{"a":"mValues","high":"i","len":"mSize","start":"key","key":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:387","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-2},{"failures":[361,362,363,364,365,366,367],"tindex":"74417d86-db21-11e4-bcd7-e7a0efcba2b5","variableMapping":{"factor":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[],"tindex":"7441f2b7-db21-11e4-bcd7-43a7b7e62b46","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:76","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"PBF blob uses unsupported compression, only raw or zlib may be used.\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[257,258,259,262,263,274,276,277,278,280,281,289,290,294],"tindex":"7441f2b8-db21-11e4-bcd7-8bc8ab0532da","variableMapping":{"edgeId":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"7441f2b9-db21-11e4-bcd7-0f0ebda4637c","variableMapping":{"factor":"fwdIncline","delta_lon":"fwdIncline","a_lon":"fwdIncline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[],"tindex":"7441f2ba-db21-11e4-bcd7-83d475447772","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"7441f2bb-db21-11e4-bcd7-a18bdd3400a9","variableMapping":{"type":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:198","type":"CtReturnImpl","sourcecode":"return (this.int) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-2},{"failures":[],"tindex":"7441f2bc-db21-11e4-bcd7-b9f2f467cc41","variableMapping":{"silent":"synched"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"7441f2bd-db21-11e4-bcd7-8f42583967a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[368],"tindex":"7441f2be-db21-11e4-bcd7-c1408e0fbf1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:155","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    java.lang.Integer = java.lang.Integer;\n"},"status":-1},{"failures":[369],"tindex":"744219cf-db21-11e4-bcd7-af7be729ef13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[218,370],"tindex":"744219d0-db21-11e4-bcd7-05bbc20190ff","variableMapping":{"speedVal":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-1},{"failures":[],"tindex":"744219d1-db21-11e4-bcd7-e54052cae0f8","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"usedBits","speed":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[314,315,289],"tindex":"744219d2-db21-11e4-bcd7-fda782a917cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,7,10,11,14,35,41,46,48,49,52,54,55,58,79,85,90,92,93,115,116,117,134,135,136,148,149,150,151,152,324,160,161,164,185,191,196,198,199,203,400,401,402,403,404,204,205,206,207,208,209,210,211,212,213,214,405,406,407,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,242,243,246,247,254,255,277,299,300,301,302,307],"tindex":"744219d3-db21-11e4-bcd7-b58213c886ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[],"tindex":"744219d4-db21-11e4-bcd7-4949116f2c33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:747","type":"CtContinueImpl","sourcecode":"continue"},"status":-2},{"failures":[],"tindex":"744219d5-db21-11e4-bcd7-9b1216c4c8f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:329","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[203],"tindex":"744219d6-db21-11e4-bcd7-a13e99c9a694","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[8,16,24,26,27,29,33,34,41,42,60,68,70,71,73,77,78,85,86,166,174,176,177,179,183,184,191,192,327,335,336,337,339,343,344,350,351,248,251],"tindex":"744219d7-db21-11e4-bcd7-e915a3fc4975","variableMapping":{"need":"mSize","i":"com.graphhopper.coll.SparseIntIntArray.DELETED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[],"tindex":"744219d8-db21-11e4-bcd7-8ffb40146194","variableMapping":{"wayIndex":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:263","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[408],"tindex":"744219d9-db21-11e4-bcd7-a12c40cb30e5","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"744219da-db21-11e4-bcd7-bde6e030ba8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[0,409,257,267,280],"tindex":"744219db-db21-11e4-bcd7-6fad4840251b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-1},{"failures":[0,25,69,175,202,206,207,208,209,210,212,213,218,219,230,410,246,411,412,413,310,414,415,416,361,417,255,418,419,420,362,363,368,370,364,365,421,422,311,423,424,409,425,426,366,427,428,429,367,257,258,267,269,270,280,302],"tindex":"744219dc-db21-11e4-bcd7-97d430a64713","variableMapping":{"E_ADDITIONAL":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1455","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"744266fd-db21-11e4-bcd7-0dca524d590d","variableMapping":{"indexWithMaxDist":"nextRelBit","lastIndex":"usedBits","fromIndex":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":0},{"failures":[0,1,430,2,3,4,5,6,7,8,9,10,11,12,13,431,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,318,53,54,55,56,57,432,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,107,108,109,110,319,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,320,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,321,146,147,148,149,150,151,322,152,153,154,155,156,323,157,158,159,160,161,162,163,433,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,325,326,327,328,329,330,331,332,333,334,335,202,336,337,338,339,340,341,342,343,344,345,346,347,348,349,203,350,351,352,353,354,355,356,357,358,359,360,204,205,206,207,208,209,210,434,211,212,213,214,435,215,216,217,218,219,220,221,222,223,224,225,226,436,227,228,229,230,437,231,232,233,234,235,236,237,238,239,240,241,242,243,438,244,245,439,440,441,442,410,246,247,443,411,444,412,413,445,310,414,446,248,249,250,251,252,253,447,415,448,416,449,450,451,452,453,454,455,456,361,457,458,417,254,255,459,418,460,461,462,419,420,463,464,465,466,467,468,469,470,471,472,362,473,474,475,363,476,477,368,478,479,370,480,364,365,369,481,482,483,484,421,485,422,256,311,423,486,424,487,409,488,425,489,426,490,491,492,493,494,495,496,497,366,498,499,500,501,427,502,503,504,428,429,505,506,507,508,509,510,511,512,513,514,367,515,516,517,518,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,519,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,520,309],"tindex":"74428e0e-db21-11e4-bcd7-0f0bcb5ebbac","variableMapping":{"allBits":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":-1},{"failures":[4,218,219,220,221,222,223,224,225,226,436,227,228,229,230,231,410,443,411,444,412,413,310,250,447,415,448,416,449,450,451,452,453,454,455,456,361,457,458,417,254,255,459,418,460,461,462,419,420,463,464,465,466,467,468,469,470,471,472,362,473,474,475,476,477,368,478,479,370,480,364,365,369,481,482,483,484,421,485,422,256,311,423,486,424,487,409,488,425,489,426,490,491,492,493,494,495,496,497,366,498,499,500,501,427,502,503,504,428,429,505,506,507,508,509,510,511,512,513,514,367,515,516,517,257,267],"tindex":"74428e0f-db21-11e4-bcd7-b151174be655","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:623","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[],"tindex":"74428e10-db21-11e4-bcd7-23225ce1ab34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[218,219,220,221,223,224,225,226,229,230,231,411,413,310,415,416,449,456,458,418,460,462,419,420,472,474,475,425,489,426,497,499,500,427,502,504,428,429,514,516,517],"tindex":"74428e11-db21-11e4-bcd7-1b7fba6be542","variableMapping":{"indexM":"speed","tmp":"tt","version":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:97","type":"CtIfImpl","sourcecode":"if (int >= 0)\n    java.lang.String = java.lang.String.substring(0, int);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"74428e12-db21-11e4-bcd7-8b447bfe3346","variableMapping":{"weightApproximation":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"74480c53-db21-11e4-bcd7-4340e392f68a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"74483364-db21-11e4-bcd7-f3779a0fcd51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[248],"tindex":"74483365-db21-11e4-bcd7-8d6322a04ba0","variableMapping":{"graph":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1032","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.flush()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[],"tindex":"74483366-db21-11e4-bcd7-67d7c3c16869","variableMapping":{"item":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:260","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"74483367-db21-11e4-bcd7-c10923b372a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[257,258,280,281,290],"tindex":"74483368-db21-11e4-bcd7-db738ed81174","variableMapping":{"counter":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"74483369-db21-11e4-bcd7-5f3419aa82f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"7448336a-db21-11e4-bcd7-a7d3c981b67e","variableMapping":{"tmpDegreeCounter":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"7448336b-db21-11e4-bcd7-9d475724cf37","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[],"tindex":"7448336c-db21-11e4-bcd7-a1d0c44dcab5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"7448336d-db21-11e4-bcd7-b37794f70c03","variableMapping":{"i":"maxTurnCosts","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":0},{"failures":[],"tindex":"7448336e-db21-11e4-bcd7-77b771ea2a81","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"7448336f-db21-11e4-bcd7-631cd63e7096","variableMapping":{"eleDelta":"shortTripsSpeed","decEleSum":"longTripsSpeed","fullDist2D":"shortTripsSpeed","decDist2DSum":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":0},{"failures":[521],"tindex":"74483370-db21-11e4-bcd7-f59f7e399b34","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:153","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_INT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[0,1,371,372,373,374,375,376,377,522,378,379,380,381,382,383,384,385,386,387,388,389,523,390,391,392,393,394,395,396,397,398,399,524,525,526,527,528,529,530,316,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,531,532,533,534,535,536,537,538,539,540,541,52,318,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,542,98,99,100,101,102,103,104,105,106,107,108,109,110,319,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,320,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,321,146,147,543,148,149,150,151,322,152,153,154,155,156,323,157,158,324,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201],"tindex":"74483371-db21-11e4-bcd7-773da13f03ca","variableMapping":{"pointer":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:69","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.max(10, ((int)((int) * 1.5F)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"74485a82-db21-11e4-bcd7-27d8c05f95bf","variableMapping":{"size":"kmInteger","index":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-2},{"failures":[],"tindex":"74485a83-db21-11e4-bcd7-bbdce5191356","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"74485a84-db21-11e4-bcd7-915210ccca57","variableMapping":{"foundIndex":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"74485a85-db21-11e4-bcd7-83d340279298","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"start","entityType":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"74485a86-db21-11e4-bcd7-d1ae01bc512d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:252","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"74485a87-db21-11e4-bcd7-c348701da118","variableMapping":{"encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"EncodingManager can only be null if you call loadExisting\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-2},{"failures":[],"tindex":"74485a88-db21-11e4-bcd7-c98522eb0868","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"74485a89-db21-11e4-bcd7-594e27f36015","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"endNode","entityType":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-2},{"failures":[],"tindex":"74485a8a-db21-11e4-bcd7-9d7fc1af199e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-2},{"failures":[],"tindex":"74485a8b-db21-11e4-bcd7-9744e14ec331","variableMapping":{"tmpNo":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"74485a8c-db21-11e4-bcd7-4f01068dffda","variableMapping":{"currEdge":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[],"tindex":"74485a8d-db21-11e4-bcd7-dd9b9f0ad7d8","variableMapping":{"high":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","len":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","start":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"74485a8e-db21-11e4-bcd7-77589d207266","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"74485a8f-db21-11e4-bcd7-579bc6951af2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"74485a90-db21-11e4-bcd7-b3a24a5838de","variableMapping":{"costs":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"74485a91-db21-11e4-bcd7-c535b7fcd030","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-2},{"failures":[],"tindex":"74499312-db21-11e4-bcd7-33fdcef3404a","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"toSize","speed":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"74499313-db21-11e4-bcd7-5596f2d3c0c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"74499314-db21-11e4-bcd7-7104d058bb2d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"74499315-db21-11e4-bcd7-25a70d5ef853","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:413","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId())"},"status":-2},{"failures":[],"tindex":"74499316-db21-11e4-bcd7-4dbd9fe13228","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-2},{"failures":[],"tindex":"74499317-db21-11e4-bcd7-894f04164db2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-2},{"failures":[],"tindex":"7449ba28-db21-11e4-bcd7-91e0b3989c51","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-2},{"failures":[],"tindex":"7449ba29-db21-11e4-bcd7-29eddecfdfa1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"7449ba2a-db21-11e4-bcd7-f1da597bfdd1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"7449ba2b-db21-11e4-bcd7-43fa112ec469","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"distance","speed":"distance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[],"tindex":"7449ba2c-db21-11e4-bcd7-bb04b286706f","variableMapping":{"tmpNo":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"7449ba2d-db21-11e4-bcd7-6b81a77c42d6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"7449ba2e-db21-11e4-bcd7-55a81e5ab3e7","variableMapping":{"str":"hourStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:153","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_INT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"7449ba2f-db21-11e4-bcd7-f141472df14e","variableMapping":{"next":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:424","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[],"tindex":"7449ba30-db21-11e4-bcd7-67ae56493dc3","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"size","speed":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2},{"failures":[],"tindex":"7449ba31-db21-11e4-bcd7-0f2a74107df6","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"7449ba32-db21-11e4-bcd7-1371b2b0d2f0","variableMapping":{"segmentSizeInBytes":"segmentSizePower","index":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"7449ba33-db21-11e4-bcd7-b962be23a84a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"7449ba34-db21-11e4-bcd7-cf12f2a39c4a","variableMapping":{"initLeafSize":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"7449ba35-db21-11e4-bcd7-8569cb706295","variableMapping":{"oldValueIndex":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-2},{"failures":[],"tindex":"7449ba36-db21-11e4-bcd7-c552f5ddfb1c","variableMapping":{"flags":"acceptBit","mask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-2},{"failures":[],"tindex":"7449ba37-db21-11e4-bcd7-4f00c423a692","variableMapping":{"shift":"encoded","tmpValue":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":40,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":275,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":7,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":363,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":109,"com.graphhopper.GraphHopperAPITest.testNoLoad":430,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":326,"com.graphhopper.reader.OSMReaderTest.testFerry":218,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":303,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":304,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":428,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":449,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":135,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":205,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":472,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":475,"com.graphhopper.storage.MMapDataAccessTest.testSegments":530,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":68,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":387,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":455,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":199,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":345,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":175,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":131,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":388,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":381,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":291,"com.graphhopper.GraphHopperTest.testPrepare":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":356,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":281,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":503,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":267,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":299,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":543,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":456,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":296,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":13,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":132,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":252,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":416,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":427,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":259,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":265,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":116,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":429,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":52,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":14,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":314,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":294,"com.graphhopper.GraphHopperTest.testLoadOSM":210,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":123,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":117,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":445,"com.graphhopper.reader.OSMReaderTest.testSort":221,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":367,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":228,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":55,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":391,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":194,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":357,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":239,"com.graphhopper.storage.RAMDataAccessTest.testHeader":382,"com.graphhopper.routing.DijkstraTest.initializationError":438,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":89,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":399,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":39,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":537,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":171,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":519,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":318,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":63,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":462,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":58,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":500,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":139,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":179,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":271,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":137,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":262,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":261,"com.graphhopper.coll.OSMIDMapTest.testGetLong":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":72,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":78,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":31,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":10,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":33,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":184,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":425,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":69,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":431,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":99,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":485,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":176,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":166,"com.graphhopper.storage.LevelGraphStorageTest.testClone":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":59,"com.graphhopper.reader.OSMReaderTest.testBarriers":222,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":253,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":539,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":463,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":264,"com.graphhopper.util.GHUtilityTest.testCopy":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":330,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":495,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":319,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":457,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":385,"com.graphhopper.routing.PathTest.testFindInstruction":247,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":452,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":60,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":312,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":297,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":424,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":47,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":461,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":195,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":180,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":522,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":87,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":305,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":287,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":470,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":412,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":441,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":20,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":331,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":529,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":106,"com.graphhopper.util.InstructionListTest.testWayList2":301,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":124,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":504,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":92,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":414,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":502,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":161,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":254,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":22,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":389,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":505,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":70,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":148,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":263,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":223,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":390,"com.graphhopper.routing.AStarTest.initializationError":518,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":277,"com.graphhopper.coll.OSMIDMapTest.testGet":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":67,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":533,"com.graphhopper.routing.PathBidirRefTest.testExtract":244,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":487,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":35,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":402,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":508,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":534,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":143,"com.graphhopper.storage.RAMDataAccessTest.testCopy":378,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":393,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":350,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":415,"com.graphhopper.storage.RAMDataAccessTest.testSegments":384,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":507,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":128,"com.graphhopper.util.GHUtilityTest.testSort2":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":272,"com.graphhopper.reader.OSMReaderTest.testMain":220,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":11,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":77,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":509,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":144,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":515,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":354,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":25,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":29,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":50,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":26,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":236,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":82,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":418,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":32,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":230,"com.graphhopper.storage.StorablePropertiesTest.testStore":324,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":377,"com.graphhopper.storage.GraphHopperStorageTest.testClone":168,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":353,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":369,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":364,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":498,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":332,"com.graphhopper.routing.PathTest.testTime":410,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":494,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":48,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":421,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":322,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":126,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":344,"com.graphhopper.reader.OSMReaderTest.testRelation":436,"com.graphhopper.util.GHUtilityTest.testSortDirected":309,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":362,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":397,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":235,"com.graphhopper.GraphHopperTest.testFootOnly":213,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":448,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":149,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":370,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":138,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":413,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":527,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":282,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":459,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":340,"com.graphhopper.search.NameIndexTest.testCreate":374,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":383,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":232,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":102,"com.graphhopper.routing.QueryGraphTest.testOneWay":241,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":320,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":451,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":115,"com.graphhopper.reader.OSMReaderTest.testWithBounds":229,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":386,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":532,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":91,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":237,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":346,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":409,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":411,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":15,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":12,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":488,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":471,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":458,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":81,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":158,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":480,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":74,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":164,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":258,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":541,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":197,"com.graphhopper.util.InstructionListTest.testWayList":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":506,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":333,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":328,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":468,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":217,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":251,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":513,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":208,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":170,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":292,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":188,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":501,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":269,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":440,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":290,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":481,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":491,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":514,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":279,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":321,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":101,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":542,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":517,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":159,"com.graphhopper.routing.PathTest.testWayList":246,"com.graphhopper.storage.MMapDataAccessTest.testCopy":528,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":358,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":492,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":336,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":479,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":521,"com.graphhopper.coll.OSMIDMapTest.testGet2":401,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":280,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":394,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":43,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":405,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":512,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":181,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":65,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":169,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":30,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":140,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":141,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":379,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":398,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":465,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":313,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":489,"com.graphhopper.util.GHUtilityTest.testSort":308,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":526,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":349,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":450,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":511,"com.graphhopper.search.NameIndexTest.testPut":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":94,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":432,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":110,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":133,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":152,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":155,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":104,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":419,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":238,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":153,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":53,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":490,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":406,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":446,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":278,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":536,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":248,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":105,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":203,"com.graphhopper.routing.PathTest.testFound":442,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":214,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":310,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":45,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":523,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":510,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":71,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":373,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":531,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":202,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":173,"com.graphhopper.util.InstructionListTest.testEmptyList":298,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":266,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":496,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":270,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":484,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":477,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":361,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":476,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":273,"com.graphhopper.reader.PrinctonReaderTest.testRead":216,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":196,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":136,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":335,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":325,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":76,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":454,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":466,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":524,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":444,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":493,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":460,"com.graphhopper.reader.OSMReaderTest.testFoot":219,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":348,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":407,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":121,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":447,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":122,"com.graphhopper.reader.OSMReaderTest.testOneWay":231,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":177,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":192,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":88,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":453,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":396,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":464,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":342,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":286,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":540,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":283,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":293,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":365,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":284,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":395,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":256,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":538,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":338,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":234,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":162,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":437,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":317,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":103,"com.graphhopper.routing.PathBidirRefTest.testExtract2":245,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":257,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":497,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":371,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":190,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":323,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":499,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":225,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":360,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":289,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":469,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":118,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":193,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":520,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":21,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":482,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":185,"com.graphhopper.GraphHopperTest.testFootAndCar":209,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":426,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":146,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":329,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":443,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":525,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":483,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":268,"com.graphhopper.storage.UnsafeDataAccessTest.testEnsureCapacity":535,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":62,"com.graphhopper.GraphHopperTest.testPrepareOnly":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":276,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":111,"com.graphhopper.GraphHopperTest.testVia":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":516,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":327,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":227,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":6,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":189,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":302,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":423,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":341,"com.graphhopper.routing.AStarBidirectionTest.initializationError":439,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":417,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":44,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":42,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":54}}]
