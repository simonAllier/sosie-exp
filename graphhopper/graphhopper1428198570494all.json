[{"failures":[],"tindex":"01de734c-db36-11e4-8d2e-b3664e28d58d","variableMapping":{"tmpDegreeCounter":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"01de734d-db36-11e4-8d2e-d57d27d7eaf3","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:245","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-2},{"failures":[],"tindex":"01de734e-db36-11e4-8d2e-33e90f0db46a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"01de9a5f-db36-11e4-8d2e-b966f07bb64c","variableMapping":{"updatedA":"x1","nodeA":"x1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1305","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"01de9a60-db36-11e4-8d2e-a923aa648cc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,81,82,34,35,38,83,40,84,85,86,87,88,89,90,91,92,44,93,94,95,45,46,96,97,47,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"01dec171-db36-11e4-8d2e-95c2a0767e81","variableMapping":{"currentEntry":"I_SKIP_EDGE2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[84,85,93,95,103],"tindex":"01dec172-db36-11e4-8d2e-2f7cee4c939b","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR":"dist","weight":"dist","weightLong":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[119,120,121,122,123,124],"tindex":"01dec173-db36-11e4-8d2e-e776dcc8b6a4","variableMapping":{"index":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"01dec174-db36-11e4-8d2e-0715b0fa6cf2","variableMapping":{"this":"g","toNodeId":"nodes","newEdgeId":"nodes","fromNodeId":"nodes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:352","type":"CtIfImpl","sourcecode":"if (int != int)\n    com.graphhopper.storage.GraphHopperStorage.connectNewEdge(int, int);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-2},{"failures":[0,1,48,125,49,50,126,127,128,129,51,130,131,52,53,54,55,56,57,58,59,60,61,62,132,133,63,64,134,65,66,135,67,68,69,70,136,137,71,138,72,73,74,75,139,76,77,140,78,141,79,80,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,2,194,3,4,5,6,195,7,8,9,10,11,12,13,196,14,15,18,19,197,20,198,21,22,23,24,199,25,26,27,28,29,30,31,200,32,33,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,81,82,34,35,36,37,38,83,39,40,297,298,299,300,301,302,41,42,43,303,304,305,306,307,308,309,310,311,312,312,313,313,314,314,315,315,316,316,317,317,318,318,319,319,320,320,321,321,322,322,323,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,84,85,86,87,88,89,90,91,92,44,93,94,95,45,46,96,97,47,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,339,115,116,340,341,117,342,343,344,345,346,347,348,349,350,118,351,352],"tindex":"01dee885-db36-11e4-8d2e-ffbc0ed45dda","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[353,354],"tindex":"01dee886-db36-11e4-8d2e-bbbafb077f8d","variableMapping":{"width":"segmentSizeInBytes","lonSimilar":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"01dee887-db36-11e4-8d2e-231c7e60c1a4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[120,355,356,357,121,358,359,360,361,123,362,363],"tindex":"01df0f98-db36-11e4-8d2e-b141617c9055","variableMapping":{"reverseSpeed":"preferWayEncoder","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"01df0f99-db36-11e4-8d2e-63ffec71916e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":0},{"failures":[305,355,364,365,366,357,121,367,368,122,369,359,370,371,372,361,123,373,374,124,375,363],"tindex":"01df0f9a-db36-11e4-8d2e-037163aa60c1","variableMapping":{"longSegmentSize":"encoded","bufferStart":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[49,51,69,75,78,34,35,38,84,85,86,87,88,89,90,91,92,93,95,45,46,96,97,47,99,100,101,102,103,104,106,109,110,112,113,116],"tindex":"01df0f9b-db36-11e4-8d2e-49043169a8e0","variableMapping":{"edgeId":"edge","nodeId":"nodeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-1},{"failures":[376,377],"tindex":"01df0f9c-db36-11e4-8d2e-1bc4383ae1c5","variableMapping":{"elem":"elem","keys":"elem","i":"i","key":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:180","type":"CtWhileImpl","sourcecode":"while ((int[][(int / 2)]) > int) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n    int /= 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[128,55,132,63,64,65,68,69,73,74,151,159,161,162,164,168,169,176,177,223,231,233,234,236,240,241,248,249,261,269,271,272,274,278,279,286,287,311,330,332,333],"tindex":"01df0f9d-db36-11e4-8d2e-85f4e8bc890b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"01df0f9e-db36-11e4-8d2e-339e8debbb9a","variableMapping":{"daType":"defaultType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:121","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"01df36af-db36-11e4-8d2e-738cc30dc5b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"01df36b0-db36-11e4-8d2e-fd8c7ef256f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:340","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[],"tindex":"01df36b1-db36-11e4-8d2e-fda8c27ebe36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"01df36b2-db36-11e4-8d2e-d5a04021fec9","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-2},{"failures":[2,195,8,9,17,20,199,26,27,378,379,380,381,382,383,384,385,386,387],"tindex":"01df36b3-db36-11e4-8d2e-3345526335a6","variableMapping":{"minDistance":"midLon","rMin":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[2,195,8,9,17,20,199,26,27,378,379,388,380,381,382,383,384,385,386,387],"tindex":"01df36b4-db36-11e4-8d2e-3dc8b20c12f3","variableMapping":{"bytePos":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"01df36b5-db36-11e4-8d2e-41c4cbabcf86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":0},{"failures":[311,332],"tindex":"01df5dc6-db36-11e4-8d2e-f9b2fae8bf97","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"01df5dc7-db36-11e4-8d2e-9385ab24d414","variableMapping":{"max":"currDistToGoal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[364,365,366,357,121,367,368,122,369,359,370,371,372,361,123,373,374,124,375,363],"tindex":"01df84d8-db36-11e4-8d2e-8f4ea213eef0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"01df84d9-db36-11e4-8d2e-656e9892ecfe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[389],"tindex":"01dfabea-db36-11e4-8d2e-23c09808ad4f","variableMapping":{"cp":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:125","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[2,195,8,9,17,20,199,26,27,378,379,380,381,382,383,384,385,386,387],"tindex":"01dfabeb-db36-11e4-8d2e-ef92f0155f07","variableMapping":{"osmId":"hash","com.graphhopper.reader.OSMReader.TOWER_NODE":"i","tmpNode":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:665","type":"CtIfImpl","sourcecode":"if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n    throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[],"tindex":"01dfabec-db36-11e4-8d2e-83d9fc9e9afa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[],"tindex":"01dfabed-db36-11e4-8d2e-c92fa16d58dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":0},{"failures":[],"tindex":"01dfabee-db36-11e4-8d2e-a766b5defd81","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"01dfabef-db36-11e4-8d2e-ddb7b43763b5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[365],"tindex":"01dfabf0-db36-11e4-8d2e-b5aa79c10ea5","variableMapping":{"osmFile":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[390],"tindex":"01dfabf1-db36-11e4-8d2e-5fb40b491aec","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"01dfabf2-db36-11e4-8d2e-b3d5f8c0d6ce","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"01dfabf3-db36-11e4-8d2e-c1af193f8f02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[120,355,391,365,392,393,394,366,395,357,396,121,397,122,398,399,400,369,401,402,359,403,371,404,405,406,372,407,408,361,409,123,410,124,411,412,413,375,414,415,363],"tindex":"01dfabf4-db36-11e4-8d2e-3b9371712538","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:432","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int)"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"01dfabf5-db36-11e4-8d2e-b53a7a7efa3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"01dfabf6-db36-11e4-8d2e-79f8679a84c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"01dfabf7-db36-11e4-8d2e-dfc9e7348873","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"01dfabf8-db36-11e4-8d2e-4987de80ef4e","variableMapping":{"min":"len","tmpSize":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":0},{"failures":[365,366,367,122,369,370,371,372,373,124,375],"tindex":"01dfabf9-db36-11e4-8d2e-95f6e72a28d9","variableMapping":{"flags2":"unpavedBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags","flags1":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"01dfd30a-db36-11e4-8d2e-11be02ae3c96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[416],"tindex":"01dfd30b-db36-11e4-8d2e-4799d3e16c75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"01dfd30c-db36-11e4-8d2e-e3a348723c67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"01dfd30d-db36-11e4-8d2e-df3f6f60ae9f","variableMapping":{"arrayLength":"biggestStart","maxGeoRef":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[301,310,311,417],"tindex":"01dfd30e-db36-11e4-8d2e-c963b4d8f6b1","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"01dfd30f-db36-11e4-8d2e-a19dc2318a6e","variableMapping":{"factor":"x"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":0},{"failures":[337],"tindex":"01dfd310-db36-11e4-8d2e-c3e2b5dcf5ad","variableMapping":{"dx":"fwdIncline","dy":"fwdIncline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-1},{"failures":[],"tindex":"01dfd311-db36-11e4-8d2e-c50489d32a41","variableMapping":{"updatedA":"start","nodeA":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1305","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-2},{"failures":[],"tindex":"01dfd312-db36-11e4-8d2e-174de6143524","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":0},{"failures":[106,108,112,114,115,116],"tindex":"01dfd313-db36-11e4-8d2e-1355632fc821","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1},{"failures":[],"tindex":"01dfd314-db36-11e4-8d2e-1d4c6605b033","variableMapping":{"bytePointer":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":0},{"failures":[119,120,355,121,122,123,124],"tindex":"01dfd315-db36-11e4-8d2e-dde1ce36e0b5","variableMapping":{"currentEntry":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"01dfd316-db36-11e4-8d2e-7dae689f85f2","variableMapping":{"bit":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[],"tindex":"01dfd317-db36-11e4-8d2e-c1e621322af0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":0},{"failures":[],"tindex":"01dfd318-db36-11e4-8d2e-6775ee3f3874","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 1))"},"status":-2},{"failures":[],"tindex":"01dfd319-db36-11e4-8d2e-b1975d543e9c","variableMapping":{"flags":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":0},{"failures":[],"tindex":"01dfd31a-db36-11e4-8d2e-e75dfeebb5b1","variableMapping":{"additionalEdgeFilter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[],"tindex":"01dffa2b-db36-11e4-8d2e-5b944813d3c2","variableMapping":{"start":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[417],"tindex":"01dffa2c-db36-11e4-8d2e-450b47c09805","variableMapping":{"str":"minStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:520","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"->\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[34,35,36,37,38,39,302,41,43,305,306,307,308,309,416,418,346],"tindex":"01dffa2d-db36-11e4-8d2e-2d3df5ea26fa","variableMapping":{"high":"encoded","guess":"encoded","low":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[0,1,2,4,195,8,9,17,20,22,199,26,27,30,378,379,388,380,381,382,383,384,385,386,387,34,35,36,37,38,39,41,42,43,44,47],"tindex":"01dffa2e-db36-11e4-8d2e-2f90de3e6b99","variableMapping":{"i":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"01dffa2f-db36-11e4-8d2e-85d1b09be3b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"01dffa30-db36-11e4-8d2e-01818041fc89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:366","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":0},{"failures":[],"tindex":"01dffa31-db36-11e4-8d2e-7b3ee4d72be7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[417],"tindex":"01dffa32-db36-11e4-8d2e-5f2f14a2c35e","variableMapping":{"cp":"hourStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:122","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"01dffa33-db36-11e4-8d2e-915007531766","variableMapping":{"directionBitMask":"flags","blockByDefault":"backward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"01dffa34-db36-11e4-8d2e-db5f85e948ff","variableMapping":{"bits":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[],"tindex":"01dffa35-db36-11e4-8d2e-abd0f2cdee9a","variableMapping":{"val":"str","defaultD":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"01dffa36-db36-11e4-8d2e-6bf13dac1e58","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"01dffa37-db36-11e4-8d2e-7de8a4221182","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"01dffa38-db36-11e4-8d2e-635df2e95bdf","variableMapping":{"len":"shift","start":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":0},{"failures":[],"tindex":"01dffa39-db36-11e4-8d2e-77c8cadf08b3","variableMapping":{"high":"encoded","len":"encoded","start":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-2},{"failures":[81,82,34,35,36,37,38,83,39,40,297,419,420,421,301,302,41,42,43,303,304,305,306,119,307,308,309,310,422,311,120,355,423,424,364,391,365,392,425,393,394,426,427,366,395,428,357,429,336,396,121,397,367,368,122,430,431,398,399,400,432,433,369,401,434,402,359,435,436,437,438,416,439,440,441,442,418,443,444,445,446,447,403,370,371,448,404,405,406,449,450,372,407,451,408,361,409,123,410,373,374,124,452,453,411,412,413,454,455,375,414,456,415,363,346],"tindex":"01e0214a-db36-11e4-8d2e-b15d85dbf58c","variableMapping":{"str":"name","this":"value","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:97","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[457,127,458,285,81,38,83,39,297],"tindex":"01e0214b-db36-11e4-8d2e-e34169b4c5c2","variableMapping":{"neighborUpdates":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"01e0214c-db36-11e4-8d2e-19a955b8b072","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"01e0214d-db36-11e4-8d2e-4f26cb38c229","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[],"tindex":"01e0214e-db36-11e4-8d2e-018f42860cf4","variableMapping":{"currEdge":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":0},{"failures":[],"tindex":"01e0214f-db36-11e4-8d2e-6f66417ce962","variableMapping":{"lat":"minNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"01e02150-db36-11e4-8d2e-23dadddcc7ea","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"01e02151-db36-11e4-8d2e-8bf87ea71fb6","variableMapping":{"edgeId":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":-2},{"failures":[],"tindex":"01e02152-db36-11e4-8d2e-596a995c8c19","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[423,396,403,409],"tindex":"01e02153-db36-11e4-8d2e-7d224d1c7196","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[459,376,377],"tindex":"01e02154-db36-11e4-8d2e-8f15609477b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[460,461,462,463,464,465,466,467,468,469,470,471,472,473,51,53,70,73,77,141,142,145,149,170,176,181,184,474,475,476,477,3,4,5,21,22,23,217,221,242,248,253,256,259,280,285,286,291,294,478,479,480,481,81,82,34,35,36,38,83,39,40,297,301,41,42,43,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,322,323,328,336,337,100,343,344,345,482,483,484,118],"tindex":"01e02155-db36-11e4-8d2e-6bd186efb917","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[330,334,335],"tindex":"01e02156-db36-11e4-8d2e-c94a33e3ee8c","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"index","speed":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[128,55,132,63,64,73,74,151,159,161,162,176,177,223,231,233,234,248,249,261,269,271,272,286,287,333],"tindex":"01e02157-db36-11e4-8d2e-bb05443d0397","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"01e02158-db36-11e4-8d2e-5b5569364c65","variableMapping":{"r":"resultOrientation","x":"resultOrientation","absY":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"01e04869-db36-11e4-8d2e-a54c1de1a39b","variableMapping":{"edgeId":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":0},{"failures":[],"tindex":"01e0486a-db36-11e4-8d2e-751b5f14366d","variableMapping":{"unpavedBit":"nodeBitMask","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"01e0486b-db36-11e4-8d2e-9112eb478f7c","variableMapping":{"elem":"a","i":"key","element":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[44,106,108,109,110,112,114,115],"tindex":"01e0486c-db36-11e4-8d2e-bdab9ca33dba","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-1},{"failures":[],"tindex":"01e0486d-db36-11e4-8d2e-a11640fc9c9c","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"01e0486e-db36-11e4-8d2e-abd94b369c4e","variableMapping":{"map":"map"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":98,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":313,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":127,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":435,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":260,"com.graphhopper.reader.OSMReaderTest.testFerry":301,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":347,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":374,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":392,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":22,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":82,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":369,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":159,"com.graphhopper.coll.CompressedArrayTest.testCompress":387,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":427,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":108,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":280,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":232,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":197,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":467,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":114,"com.graphhopper.GraphHopperTest.testPrepare":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":104,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":239,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":410,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":93,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":343,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":201,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":366,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":341,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":52,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":365,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":409,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":92,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":4,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":184,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":142,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":383,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":53,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":376,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":116,"com.graphhopper.GraphHopperTest.testLoadOSM":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":5,"com.graphhopper.reader.OSMReaderTest.testSort":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":414,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":308,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":146,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":251,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":217,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":293,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":319,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":180,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":138,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":228,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":143,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":367,"com.graphhopper.reader.OSMNodeTest.testSetTags":419,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":149,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":361,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":407,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":25,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":236,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":89,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":88,"com.graphhopper.coll.OSMIDMapTest.testGetLong":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":163,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":169,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":135,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":51,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":68,"com.graphhopper.coll.CompressedArrayTest.testCompress2":386,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":241,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":403,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":160,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":443,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":233,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":223,"com.graphhopper.storage.LevelGraphStorageTest.testClone":57,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":417,"com.graphhopper.reader.OSMReaderTest.testBarriers":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":150,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":335,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":91,"com.graphhopper.util.GHUtilityTest.testCopy":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":264,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":33,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":449,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":191,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":428,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":465,"com.graphhopper.routing.PathTest.testFindInstruction":329,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":356,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":151,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":459,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":117,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":445,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":140,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":188,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":397,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":252,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":178,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":349,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":110,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":164,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":432,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":59,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":265,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":477,"com.graphhopper.util.InstructionListTest.testWayList2":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":288,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":11,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":257,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":155,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":373,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":215,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":183,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":218,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":336,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":61,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":469,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":161,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":90,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":222,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":303,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":468,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":100,"com.graphhopper.coll.OSMIDMapTest.testGet":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":158,"com.graphhopper.routing.PathBidirRefTest.testExtract":324,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":446,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":70,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":411,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":480,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":29,"com.graphhopper.storage.RAMDataAccessTest.testCopy":461,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":286,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":364,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":453,"com.graphhopper.storage.RAMDataAccessTest.testSegments":464,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":15,"com.graphhopper.util.GHUtilityTest.testSort2":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":96,"com.graphhopper.reader.OSMReaderTest.testMain":41,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":130,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":168,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":362,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":384,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":456,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":71,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":290,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":133,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":65,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":79,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":390,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":63,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":173,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":396,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":474,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":67,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":310,"com.graphhopper.storage.StorablePropertiesTest.testStore":458,"com.graphhopper.storage.GraphHopperStorageTest.testClone":225,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":289,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":418,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":235,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":441,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":48,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":451,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":266,"com.graphhopper.routing.PathTest.testTime":327,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":406,"com.graphhopper.util.BitUtilLittleTest.testToFloat":483,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":78,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":58,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":13,"com.graphhopper.reader.OSMReaderTest.testRelation":119,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":279,"com.graphhopper.util.GHUtilityTest.testSortDirected":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":401,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":472,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":315,"com.graphhopper.GraphHopperTest.testFootOnly":40,"com.graphhopper.util.BitUtilLittleTest.testToInt":484,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":391,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":203,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":440,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":199,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":355,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":87,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":16,"com.graphhopper.reader.OSMElementTest.testSetTags":421,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":275,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":463,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":312,"com.graphhopper.routing.QueryGraphTest.testOneWay":321,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":196,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":380,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":393,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":3,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":378,"com.graphhopper.reader.OSMReaderTest.testWithBounds":309,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":434,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":272,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":317,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":281,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":120,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":54,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":131,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":447,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":433,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":357,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":172,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":165,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":221,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":85,"com.graphhopper.util.BitUtilLittleTest.testToBitString":482,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":254,"com.graphhopper.util.InstructionListTest.testWayList":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":452,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":267,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":262,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":399,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":300,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":455,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":36,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":227,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":339,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":245,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":113,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":77,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":375,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":102,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":200,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":363,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":216,"com.graphhopper.routing.PathTest.testWayList":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":271,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":439,"com.graphhopper.coll.OSMIDMapTest.testGet2":479,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":103,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":171,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":454,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":156,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":226,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":26,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":66,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":27,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":473,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":431,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":370,"com.graphhopper.util.GHUtilityTest.testSort":351,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":284,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":413,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":185,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":224,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":190,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":198,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":207,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":210,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":475,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":368,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":318,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":337,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":144,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":448,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":166,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":330,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":476,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":285,"com.graphhopper.routing.PathTest.testFound":326,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":297,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":423,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":76,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":389,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":412,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":162,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":457,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":270,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":230,"com.graphhopper.util.InstructionListTest.testEmptyList":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":44,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":450,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":45,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":437,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":436,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":97,"com.graphhopper.reader.PrinctonReaderTest.testRead":299,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":253,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":23,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":269,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":259,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":398,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":426,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":121,"com.graphhopper.reader.OSMReaderTest.testFoot":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":283,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":323,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":8,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":141,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":382,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":424,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":9,"com.graphhopper.reader.OSMReaderTest.testOneWay":311,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":234,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":249,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":179,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":394,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":471,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":243,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":430,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":277,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":109,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":115,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":442,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":107,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":211,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":470,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":273,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":314,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":219,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":422,"com.graphhopper.routing.PathBidirRefTest.testExtract2":325,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":354,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":12,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":193,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":372,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":247,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":408,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":296,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":444,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":6,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":250,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":60,"com.graphhopper.GraphHopperTest.testFootAndCar":37,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":242,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":64,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":371,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":32,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":153,"com.graphhopper.GraphHopperTest.testPrepareOnly":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":99,"com.graphhopper.GraphHopperTest.testVia":34,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":192,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":261,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":307,"com.graphhopper.reader.OSMElementTest.testHasTag":420,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":126,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":246,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":346,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":276,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":429,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":139,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":74,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":145}}]
