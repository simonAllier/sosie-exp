[{"failures":[],"tindex":"a0a8a535-db79-11e4-a87f-c7a629a06e6f","variableMapping":{"edgeState":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:39","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[],"tindex":"a0a8cc46-db79-11e4-a87f-8feaa9725b73","variableMapping":{"value":"start","numberOfBits":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-2},{"failures":[0,1,2],"tindex":"a0a8cc47-db79-11e4-a87f-2d8661a51625","variableMapping":{"i":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[],"tindex":"a0a8cc48-db79-11e4-a87f-953abdf6bd8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"a0a8cc49-db79-11e4-a87f-77b33e470944","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[3,4,5,6,7,8,9,0,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"a0a8cc4a-db79-11e4-a87f-a91b9fa33c2e","variableMapping":{"newUniqueOsmId":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[],"tindex":"a0a8cc4b-db79-11e4-a87f-a544427a64e8","variableMapping":{"java.lang.Double.MAX_VALUE":"maxSpeed","existingDirectWeight":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"a0a8f35c-db79-11e4-a87f-0f8a3933c97d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[0,1,2],"tindex":"a0a8f35d-db79-11e4-a87f-4f80104cb467","variableMapping":{"from":"start","end":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"a0a8f35e-db79-11e4-a87f-8de73fd35c20","variableMapping":{"type":"com.graphhopper.storage.DAType.RAM_INT_STORE","defaultType":"com.graphhopper.storage.DAType.RAM_INT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[0,1],"tindex":"a0a8f35f-db79-11e4-a87f-7b0c6ca6e60b","variableMapping":{"size":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"a0a8f360-db79-11e4-a87f-07fe2d433409","variableMapping":{"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"com.graphhopper.storage.index.LocationIndexTreeSC.NO_SHORTCUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:947","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:187","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTreeSC.com.graphhopper.routing.util.EdgeFilter"},"status":0},{"failures":[],"tindex":"a0a8f361-db79-11e4-a87f-8d9ca76a9e4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"a0a8f362-db79-11e4-a87f-2d64e917e600","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[11],"tindex":"a0a8f363-db79-11e4-a87f-99dad579f289","variableMapping":{"distInMeter":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"tindex":"a0a8f364-db79-11e4-a87f-0bcca52ffa80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[27,28,30,32,39],"tindex":"a0a8f365-db79-11e4-a87f-d539c498aa2f","variableMapping":{"high":"flags","guess":"millis","low":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[129],"tindex":"a0a8f366-db79-11e4-a87f-0df677bc9431","variableMapping":{"currentEntry":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[],"tindex":"a0a8f367-db79-11e4-a87f-e9f1d1f22246","variableMapping":{"wayTypeEncoder":"this","shift":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[130,131,132,133,134,135,136,137,138,139],"tindex":"a0aa52f8-db79-11e4-a87f-4bea5ffc6544","variableMapping":{"systemProperty":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:60","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[],"tindex":"a0aa52f9-db79-11e4-a87f-839547b6615e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[0,129,54,140,141,142,143,144,145,146,147,69,148,149,150,151,152,153,154,155,83,156,157,158,159,160,161,162,163,100,164,165,166,167,168,169,170,171],"tindex":"a0aa52fa-db79-11e4-a87f-23b41dbda132","variableMapping":{"intVal":"key","degree":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[172,27,28,173,38,39],"tindex":"a0aa52fb-db79-11e4-a87f-51517612277c","variableMapping":{"node":"skippedEdge1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"a0aa52fc-db79-11e4-a87f-f32fd6c43e02","variableMapping":{"compressionLevel":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[],"tindex":"a0aa52fd-db79-11e4-a87f-c1e3ebd9a3ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[174,175],"tindex":"a0aa52fe-db79-11e4-a87f-99b9c9b70115","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"a0aa7a0f-db79-11e4-a87f-e1b9d6d21295","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[],"tindex":"a0aa7a10-db79-11e4-a87f-337279ce048e","variableMapping":{"value":"dLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"a0aa7a11-db79-11e4-a87f-6372c27f8c02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"a0aa7a12-db79-11e4-a87f-130245d0eeac","variableMapping":{"high":"ferryBit","len":"ferryBit","start":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"a0aa7a13-db79-11e4-a87f-fba79ffe24ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[11],"tindex":"a0aa7a14-db79-11e4-a87f-55464621e0b7","variableMapping":{"eleDelta":"incDist2DSum","decEleSum":"speedReverse"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[],"tindex":"a0aa7a15-db79-11e4-a87f-2ffd5e6d0ea4","variableMapping":{"i":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[176,177],"tindex":"a0aa7a16-db79-11e4-a87f-27d90066ccab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[178,179,180,181,182,183,50,51,66,184,97],"tindex":"a0aa7a17-db79-11e4-a87f-ed56d8ba38b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"a0aa7a18-db79-11e4-a87f-83009b8c2c11","variableMapping":{"version":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"a0aa7a19-db79-11e4-a87f-99f47f2e517a","variableMapping":{"acceptBit":"oldRelationFlags","ferryBit":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[176,177],"tindex":"a0aa7a1a-db79-11e4-a87f-3517e605fc40","variableMapping":{"capacity":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[10],"tindex":"a0aa7a1b-db79-11e4-a87f-3d98075a8631","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"a0aa7a1c-db79-11e4-a87f-1d624eae22fb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"a0aa7a1d-db79-11e4-a87f-0d1740d7af32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[185,21,24,186,172,27,28,187,188,189,190,29,191,192,193,30,32,33,34,35,194,36,37,173,38,195,39,196,197,179,198],"tindex":"a0aa7a1e-db79-11e4-a87f-416b9b7c7c9a","variableMapping":{"store":"reverse"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"a0aaa12f-db79-11e4-a87f-67ab09092bd7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[112,113,123,124,125,199,126,127,200],"tindex":"a0aaa130-db79-11e4-a87f-ab5b7106eb9c","variableMapping":{"weight":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[174],"tindex":"a0aaa131-db79-11e4-a87f-8b020e0c5c27","variableMapping":{"resultOrientation":"shortTripsSpeed","orientation":"shortTripsSpeed","java.lang.Math.PI":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"a0aaa132-db79-11e4-a87f-03d750ba656a","variableMapping":{"freeIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","currentIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[],"tindex":"a0aaa133-db79-11e4-a87f-cb70c9a5bff4","variableMapping":{"encoded":"relationFlags","backwardBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":0},{"failures":[],"tindex":"a0aaa134-db79-11e4-a87f-b90c77d6f883","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"a0aaa135-db79-11e4-a87f-9ff72fada99b","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"a0aaa136-db79-11e4-a87f-714fa50a5ea9","variableMapping":{"bytePos":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[201],"tindex":"a0aaa137-db79-11e4-a87f-8b95e78534fa","variableMapping":{"baseUrl":"s","fileDetails":"s","zippedURL":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:274","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[3,4,5,6,202,203,11,173,204,205,206,207,208,209,40,210,211,212,42,213,175,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,178,230,196,197,231,232,179,180,181,198,182,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,50,51,255,52,256,146,257,258,259,66,260,67,261,154,262,263,264,92,265,266,267,268,269,270,271,272,273,274,275,276,184,97,277,98,278,170,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"a0aaa138-db79-11e4-a87f-d363e9daba2a","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[130,132,135,137],"tindex":"a0aaa139-db79-11e4-a87f-095a6fca462e","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[0,1,2],"tindex":"a0aac84a-db79-11e4-a87f-911fc0e12147","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"a0aac84b-db79-11e4-a87f-8f05afe6c426","variableMapping":{"len":"hash","start":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[26,294,176,295,296],"tindex":"a0aac84c-db79-11e4-a87f-cf2b64304bad","variableMapping":{"factor":"lastPrio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[24,295,296],"tindex":"a0aac84d-db79-11e4-a87f-4dfc17441027","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"a0aac84e-db79-11e4-a87f-f963aba2cc5e","variableMapping":{"speedEncoder":"reverseSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[297,298,299,300,5,6,202,301,42,213],"tindex":"a0aac84f-db79-11e4-a87f-ef3060ad8329","variableMapping":{"fwdFaster":"angle","incDist2DSum":"angle","fwdSlower":"r","fullDist2D":"r","restDist2D":"r","speed":"r","decDist2DSum":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[302,3,7,185,303,21,304,305,22,23,306,24,186,25,307,26,172,27,28,187,188,189,190,29,191,192,193,30,31,32,33,34,35,194,36,308,37,173,38,195,39,178,230,196,197,179,180,198,309,310,311,119,312,250,251,252,313,120,314,121,122,315,316,317,318,319,320,49,95,321,322,323,96,184,324,325,97,277,326,98,99,100,327,328,101,102,329,103,104,164,165,166,330,167,106,331,107,168,169,278,332,333,108,334,109,170,171,335,336,110,279,337,280,281,111,338],"tindex":"a0aac850-db79-11e4-a87f-e38e1490608a","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1378","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.checkInit()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[],"tindex":"a0aac851-db79-11e4-a87f-83014a8ab830","variableMapping":{"need":"index","i":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-2},{"failures":[4,5,6,202,173,205,207,208,40,210,212,42,213,215,218,219,178,196,179,180,181,198,182,234,235,236,237,238,240,241,243,244,245,246,247,249,250,252,254,50,51,52,256,146,257,258,66,67,261,154,262,263,267,184,97,98,278,170,279,280,284],"tindex":"a0aac852-db79-11e4-a87f-016a1e20d7bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[],"tindex":"a0aac853-db79-11e4-a87f-d5598b618617","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[302,339,3,340,341,342,343,344,4,5,6,202,7,345,346,0,347,348,129,1,2,203,11,15,349,350,185,303,21,304,305,22,23,306,24,186,25,307,26,172,27,28,187,188,189,190,29,191,192,193,30,31,32,33,34,35,194,36,308,37,173,38,195,39,204,204,205,205,351,351,206,206,207,207,208,208,209,209,40,40,210,210,352,352,211,211,212,212,353,41,42,213,175,214,215,216,217,218,219,220,221,222,223,224,225,226,43,44,354,178,230,196,197,231,232,179,180,181,198,182,45,355,356,357,358,359,360,46,361,242,243,244,245,246,362,363,364,365,366,47,115,367,247,248,249,368,116,369,117,118,370,371,372,373,374,375,48,309,310,311,119,312,250,251,252,313,120,314,121,122,315,316,317,318,319,320,49,50,376,51,255,377,378,52,53,54,379,380,55,56,381,57,58,140,59,141,142,382,143,60,383,61,144,145,256,384,385,62,386,63,146,147,387,388,64,257,389,258,259,65,390,391,66,260,392,393,67,68,69,394,395,70,71,396,72,73,148,74,149,150,397,151,75,398,76,152,153,261,399,400,77,401,78,154,155,402,403,79,262,404,263,264,80,405,406,407,408,409,410,411,412,413,414,415,416,88,92,95,321,322,323,96,184,324,325,97,277,417,326,98,99,100,327,328,101,102,329,103,104,164,105,165,166,330,167,106,331,107,168,169,278,332,333,108,334,109,170,171,335,336,110,279,337,280,281,111,338],"tindex":"a0aaef64-db79-11e4-a87f-b70a73eb3fdd","variableMapping":{"segNumber":"segmentSizeIntsPower","segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"a0aaef65-db79-11e4-a87f-bfb28a87715d","variableMapping":{"min":"durationInHours","dist":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":0},{"failures":[],"tindex":"a0aaef66-db79-11e4-a87f-791f19286f12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"a0aaef67-db79-11e4-a87f-ab78f25add82","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"a0aaef68-db79-11e4-a87f-0db82a45a3c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"a0aaef69-db79-11e4-a87f-5d6d9d2b7dfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:66","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[0,1],"tindex":"a0aaef6a-db79-11e4-a87f-7b70e93520c5","variableMapping":{"edgeCount":"start","lastEdgeIndex":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"a0aaef6b-db79-11e4-a87f-353302909324","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"a0aaef6c-db79-11e4-a87f-a37d2078b3e9","variableMapping":{"neighborUpdates":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[],"tindex":"a0aaef6d-db79-11e4-a87f-9742b812dddd","variableMapping":{"weightApproximation":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"a0aaef6e-db79-11e4-a87f-f959a2b4bfc8","variableMapping":{"i":"hash","to":"hash","lonSize":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":0},{"failures":[],"tindex":"a0aaef6f-db79-11e4-a87f-8bf87cdc564a","variableMapping":{"weight":"minLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-2},{"failures":[],"tindex":"a0aaef70-db79-11e4-a87f-b9e35d367ff2","variableMapping":{"strLen":"removed","bLen":"locs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[130,131,132,133,134,135,418,136,137,138,139],"tindex":"a0aaef71-db79-11e4-a87f-4df38995d249","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"a0aaef72-db79-11e4-a87f-b3c25901408a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[130,131,132,133,134,135,418,136,137,138,139],"tindex":"a0aaef73-db79-11e4-a87f-bfc8cc8adc75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"a0aaef74-db79-11e4-a87f-479e7363e30c","variableMapping":{"heap":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[302,339,3,340,341,342,343,344,4,5,6,202,7,345,346,0,347,348,129,1,2,203,11,15,349,350,185,303,21,304,305,22,23,306,24,186,25,307,26,172,27,28,187,188,189,190,29,191,192,193,30,31,32,33,34,35,194,36,308,37,173,38,195,39,204,204,205,205,351,351,206,206,207,207,208,208,209,209,40,40,210,210,352,352,211,211,212,212,353,41,42,213,175,214,215,216,217,218,219,220,221,222,223,224,225,226,43,44,354,178,230,196,197,231,232,179,180,181,198,182,45,355,356,357,358,359,419,360,46,361,242,243,244,245,420,246,362,363,364,365,421,366,47,115,367,247,248,249,368,116,369,117,118,370,371,372,373,374,375,48,309,310,311,119,312,250,251,252,313,120,314,121,122,315,316,317,318,319,320,49,50,422,376,51,255,377,378,52,53,54,379,380,55,56,381,57,58,140,59,141,142,382,143,60,383,61,144,145,256,384,385,62,386,63,146,147,387,388,64,257,389,258,259,65,390,391,66,260,392,393,67,68,69,394,395,70,71,396,72,73,148,74,149,150,397,151,75,398,76,152,153,261,399,400,77,401,78,154,155,402,403,79,262,404,263,264,80,405,81,82,83,423,424,84,85,425,86,87,156,88,157,158,426,159,89,427,90,160,161,428,429,430,91,431,92,162,163,432,433,93,434,435,436,437,94,438,95,321,322,323,96,184,324,325,97,277,417,326,98,99,100,327,328,101,102,329,103,104,164,105,165,166,330,167,106,331,107,168,169,278,332,333,108,334,109,170,171,335,336,110,279,337,280,281,111,338],"tindex":"a0ab1685-db79-11e4-a87f-c3aefab6eb08","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[439,440,441,442,15,443,16,444,445,32,214,178,232,198,46,47,48,49,57,72,86,103],"tindex":"a0ab1686-db79-11e4-a87f-233581e19f73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:127","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"a0ab1687-db79-11e4-a87f-0dc7d5f3cace","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"a0ab1688-db79-11e4-a87f-711065b91e9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[176,177],"tindex":"a0ab1689-db79-11e4-a87f-dbc1fc58f55a","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"a0ab168a-db79-11e4-a87f-4b2761bf8738","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:652","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[302,339,3,340,341,342,343,344,4,5,6,202,7,345,346,0,347,348,129,1,2,203,11,15,349,350,185,303,21,304,305,22,23,306,24,186,25,307,26,172,27,28,187,188,189,190,29,191,192,193,30,31,32,33,34,35,194,36,308,37,173,38,195,39,204,204,205,205,351,351,206,206,207,207,208,208,209,209,40,40,210,210,352,352,211,211,212,212,353,41,42,213,175,214,215,216,217,218,219,220,221,222,223,224,225,226,43,44,354,178,230,196,197,231,232,179,180,181,198,182,45,355,356,357,358,359,419,360,46,361,242,243,244,245,420,246,362,363,364,365,421,366,47,115,367,247,248,249,368,116,369,117,118,370,371,372,373,374,375,48,309,310,311,119,312,250,251,252,313,120,314,121,122,315,316,317,318,319,320,49,50,422,376,51,255,377,378,52,53,54,379,380,55,56,381,57,58,140,59,141,142,382,143,60,383,61,144,145,256,384,385,62,386,63,146,147,387,388,64,257,389,258,259,65,390,391,66,260,392,393,67,68,69,394,395,70,71,396,72,73,148,74,149,150,397,151,75,398,76,152,153,261,399,400,77,401,78,154,155,402,403,79,262,404,263,264,80,405,81,82,83,423,424,84,85,425,86,87,156,88,157,158,426,159,89,427,90,160,161,428,429,430,91,431,92,162,163,432,433,93,434,435,436,437,94,438,95,321,322,323,96,184,324,325,97,277,417,326,98,99,100,327,328,101,102,329,103,104,164,105,165,166,330,167,106,331,107,168,169,278,332,333,108,334,109,170,171,335,336,110,279,337,280,281,111,338],"tindex":"a0ab3d9b-db79-11e4-a87f-19605ef14935","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[446],"tindex":"a0ab3d9c-db79-11e4-a87f-e995024cb56d","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-1},{"failures":[],"tindex":"a0ab3d9d-db79-11e4-a87f-ef37863a078a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[447,448,449,450],"tindex":"a0ab3d9e-db79-11e4-a87f-b33521a40a02","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"a0ab3d9f-db79-11e4-a87f-f9083c5ce6d8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"a0ab3da0-db79-11e4-a87f-c5e1b52694c9","variableMapping":{"entries":"mValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":0},{"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,451,128,200],"tindex":"a0ab3da1-db79-11e4-a87f-09f10fc4e105","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"a0ab3da2-db79-11e4-a87f-672d143100ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:86","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,452,125,126,127,451,128,200],"tindex":"a0ab3da3-db79-11e4-a87f-c97670b94868","variableMapping":{"bits":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"a0ab3da4-db79-11e4-a87f-45372ee0dc3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[],"tindex":"a0ab3da5-db79-11e4-a87f-f965d2525bb6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"a0ab3da6-db79-11e4-a87f-ff0c248a2293","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"a0ab3da7-db79-11e4-a87f-6d7246e55979","variableMapping":{"name":"name","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:178","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess == null)\n    throw new java.lang.IllegalStateException((\"Couldn\\'t remove dataAccess object:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":109,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":308,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":184,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":82,"com.graphhopper.reader.OSMReaderTest.testFerry":175,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":345,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":346,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":251,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":230,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":301,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":338,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":140,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":265,"com.graphhopper.coll.CompressedArrayTest.testCompress":113,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":305,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":428,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":74,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":311,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":266,"com.graphhopper.util.AngleCalcTest.testOrientation":297,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":288,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":25,"com.graphhopper.GraphHopperTest.testPrepare":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":435,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":185,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":296,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":30,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":361,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":131,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":343,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":326,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":119,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":130,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":9,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":187,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":248,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":259,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":50,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":451,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":98,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":172,"com.graphhopper.GraphHopperTest.testLoadOSM":179,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":370,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":410,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":249,"com.graphhopper.reader.OSMReaderTest.testSort":216,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":223,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":255,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":269,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":403,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":66,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":436,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":40,"com.graphhopper.storage.RAMDataAccessTest.testHeader":289,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":64,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":253,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":334,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":396,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":422,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":52,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":164,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":314,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":34,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":310,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":313,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":190,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":189,"com.graphhopper.coll.OSMIDMapTest.testGetLong":240,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":379,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":331,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":97,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":168,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":299,"com.graphhopper.coll.CompressedArrayTest.testCompress2":112,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":153,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":10,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":59,"com.graphhopper.GraphHopperAPITest.testLoad":45,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":409,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":442,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":149,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":69,"com.graphhopper.storage.LevelGraphStorageTest.testClone":328,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":53,"com.graphhopper.reader.OSMReaderTest.testBarriers":217,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":309,"com.graphhopper.util.GHUtilityTest.testCopy":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":191,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":421,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":447,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":292,"com.graphhopper.routing.PathTest.testFindInstruction":213,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":54,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":294,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":7,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":444,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":337,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":363,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":79,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":75,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":387,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":143,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":325,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":440,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":85,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":393,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":416,"com.graphhopper.util.InstructionListTest.testWayList2":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":432,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":371,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":80,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":132,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":183,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":258,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":203,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":260,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":103,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":267,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":141,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":29,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":68,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":218,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":173,"com.graphhopper.coll.OSMIDMapTest.testGet":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":58,"com.graphhopper.routing.PathBidirRefTest.testExtract":349,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":445,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":239,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":278,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":316,"com.graphhopper.storage.RAMDataAccessTest.testCopy":285,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":271,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":390,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":162,"com.graphhopper.storage.RAMDataAccessTest.testSegments":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":48,"com.graphhopper.util.GHUtilityTest.testSort2":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":35,"com.graphhopper.reader.OSMReaderTest.testMain":215,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":277,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":144,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":128,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":448,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":377,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":105,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":167,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":111,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":165,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":12,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":408,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":107,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":225,"com.graphhopper.storage.StorablePropertiesTest.testStore":254,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":284,"com.graphhopper.storage.GraphHopperStorageTest.testClone":395,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":433,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":397,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":95,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":449,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":425,"com.graphhopper.routing.PathTest.testTime":41,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":280,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":101,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":420,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":161,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":333,"com.graphhopper.util.GHUtilityTest.testSortDirected":341,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":177,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":275,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":206,"com.graphhopper.GraphHopperTest.testFootOnly":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":174,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":303,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":89,"com.graphhopper.search.NameIndexTest.testCreate":236,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":290,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":204,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":412,"com.graphhopper.routing.QueryGraphTest.testOneWay":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":374,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":247,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":123,"com.graphhopper.reader.OSMReaderTest.testWithBounds":224,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":293,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":283,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":158,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":208,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":389,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":429,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":99,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":417,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":385,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":19,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":60,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":67,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":28,"com.graphhopper.util.InstructionListTest.testWayList":5,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":404,"com.graphhopper.GraphHopperAPITest.testDisconnected179":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":86,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":199,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":386,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":423,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":44,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":160,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":94,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":231,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":71,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":307,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":77,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":400,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":186,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":279,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":134,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":378,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":195,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":319,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":411,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":391,"com.graphhopper.routing.PathTest.testWayList":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":437,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":157,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":446,"com.graphhopper.coll.OSMIDMapTest.testGet2":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":39,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":272,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":335,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":227,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":384,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":398,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":14,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":381,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":106,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":122,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":286,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":315,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":176,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":135,"com.graphhopper.util.GHUtilityTest.testSort":340,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":431,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":200,"com.graphhopper.search.NameIndexTest.testPut":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":65,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":394,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":312,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":365,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":246,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":358,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":414,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":11,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":356,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":376,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":383,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":0,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":415,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":92,"com.graphhopper.routing.PathTest.testFound":353,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":182,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":441,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":110,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":201,"com.graphhopper.util.AngleCalcTest.testAtan2":298,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":322,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":142,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":235,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":88,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":73,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":282,"com.graphhopper.util.InstructionListTest.testEmptyList":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":193,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":318,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":33,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":194,"com.graphhopper.reader.PrinctonReaderTest.testRead":43,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":262,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":252,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":57,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":156,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":81,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":61,"com.graphhopper.reader.OSMReaderTest.testFoot":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":91,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":212,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":117,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":127,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":118,"com.graphhopper.reader.OSMReaderTest.testOneWay":226,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":150,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":155,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":388,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":274,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":399,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":22,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":26,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":304,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":359,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":15,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":426,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":351,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":392,"com.graphhopper.routing.PathBidirRefTest.testExtract2":350,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":413,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":372,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":233,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":78,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":419,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":438,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":443,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":368,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":402,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":329,"com.graphhopper.GraphHopperTest.testFootAndCar":232,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":261,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":166,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":320,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":424,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":439,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":37,"com.graphhopper.GraphHopperTest.testPrepareOnly":178,"com.graphhopper.GraphHopperTest.testVia":196,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":83,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":222,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":96,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":202,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":401,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":16,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":221,"com.graphhopper.util.AngleCalcTest.testCombined":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":427,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":336,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":171,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":51}}]
