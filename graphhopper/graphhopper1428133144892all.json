[{"failures":[],"tindex":"ac343264-da9d-11e4-ae14-b3a71e0ad87a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"ac3543d5-da9d-11e4-ae14-0bf9dbc0f201","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"ac3543d6-da9d-11e4-ae14-29abc028f5b1","variableMapping":{"tmp":"minEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"ac3543d7-da9d-11e4-ae14-5596bb5a1b8f","variableMapping":{"eof":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:162","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"EOF reached\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[],"tindex":"ac3543d8-da9d-11e4-ae14-ffb79efcba60","variableMapping":{"logMessagesPercentage":"minLonTmp","logMessages":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"ac3543d9-da9d-11e4-ae14-731d96b53bc7","variableMapping":{"segmentsToMap":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":0},{"failures":[],"tindex":"ac3543da-da9d-11e4-ae14-dd3228eaa386","variableMapping":{"tmp":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"ac3543db-da9d-11e4-ae14-a99c4a5e9afa","variableMapping":{"size":"sLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"ac3543dc-da9d-11e4-ae14-7938906a0fdf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[0,25,26,27,28,29,30,31,32,33,34,20,21,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"ac3543dd-da9d-11e4-ae14-611db73edd5d","variableMapping":{"maxRasterWidth2InMeterNormed":"d2","currNormedDist":"d2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:374","type":"CtReturnImpl","sourcecode":"return double < (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-1},{"failures":[67,68],"tindex":"ac3543de-da9d-11e4-ae14-d57a41d220d3","variableMapping":{"size":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"ac3543df-da9d-11e4-ae14-77c612d06868","variableMapping":{"height":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:415","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = int + \": \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"ac3543e0-da9d-11e4-ae14-214b782b2c6b","variableMapping":{"shift":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"ac356af1-da9d-11e4-ae14-3f24016d8a37","variableMapping":{"pointer":"y2","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:69","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.max(10, ((int)((int) * 1.5F)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"ac356af2-da9d-11e4-ae14-336f6d556c7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[3,69,70,71,4,72,73,74,75,76,77,78],"tindex":"ac356af3-da9d-11e4-ae14-23ea643a67f9","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"i","speed":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[79,0,1,25,26,2,80,81,82,83,84,85,86,87,88,89,90,27,28,91,92,93,94,95,96,97,98,99,29,100,30,101,102,103,104,31,32,105,33,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,3,121,69,70,71,122,4,123,72,124,73,5,125,6,7,8,9,10,126,11,12,34,13,14,15,16,17,18,19,20,127,128,21,129,22,23,130,131,132,133,134,135,136,137,138,37,139,140,141,142,143,144,24,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,41,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,50,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,54,204,205,206,207,208,55,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,56,225,226,227,228,229,230,231,232,233,234,235,236,57,237,238,58,239,59,240,241,242,243,244,60,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,61,261,262,263,264,265,266,267,268,269,270,271,272,62,273,274,275,63,276,277,278,279,280,64,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,65,297,298,299,300,301,302,303,304,305,306,307,308,66,309,310,311,312,313,314,315,316,317,318,319],"tindex":"ac356af4-da9d-11e4-ae14-5fc50a23f1a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[],"tindex":"ac356af5-da9d-11e4-ae14-a5925c29ddf7","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":0},{"failures":[320],"tindex":"ac356af6-da9d-11e4-ae14-d7d5e693eb4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[],"tindex":"ac356af7-da9d-11e4-ae14-f9d356b6eec7","variableMapping":{"eleDelta":"fwdSlower","decEleSum":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"ac356af8-da9d-11e4-ae14-6f939ff43c65","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[0,1,25,26,2,81,82,88,89,24,157,160,164,165,42,43,44,46,47,321,48,49,180,183,187,188],"tindex":"ac359209-da9d-11e4-ae14-d31a494abc98","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"y1","nextEdge":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"ac35920a-da9d-11e4-ae14-610d392774f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"ac35920b-da9d-11e4-ae14-b908e00e38bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[322,323,324,325,326,327,328,329,330,331],"tindex":"ac35920c-da9d-11e4-ae14-b749d4ac204c","variableMapping":{"resultOrientation":"midLon","orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[0,1,26,2,83,87,90,28,91,93,112,113,114,16,17,20,332,130,131,144,24,159,161,41,166,167,168,169,170,173,174,176,177,178,182,184,50,189,190,191,192,193],"tindex":"ac35920d-da9d-11e4-ae14-49a13fb10fda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[333,334,335,336,337,338,339,340,341,342,343,344,345,346],"tindex":"ac35920e-da9d-11e4-ae14-af6467fd39f3","variableMapping":{"location":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[86,347],"tindex":"ac35920f-da9d-11e4-ae14-67d76922f25b","variableMapping":{"str":"str","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:80","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[],"tindex":"ac359210-da9d-11e4-ae14-0946cf43266b","variableMapping":{"lazyUpdates":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[348,349,350],"tindex":"ac359211-da9d-11e4-ae14-798d5df11038","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[],"tindex":"ac359212-da9d-11e4-ae14-f9b2b573fb38","variableMapping":{"intVal":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":-2},{"failures":[],"tindex":"ac359213-da9d-11e4-ae14-278c7ba13d2e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[0,1,25,26,2,81,82,84,85,86,87,88,90,91,92,93,94,95,97,101,104,351,352,353,354,355,356,357,358,111,115,116,359,67,68,119,3,121,4,123,72,5,125,6,10,12,14,16,17,23,136,141,143,144,360,361,362,363,195,364,365,366,367,54,205,206,207,213,215,227,231,234,237,58,59,241,242,243,249,251,263,267,270,273,63,277,278,279,285,287,299,303,306,309],"tindex":"ac359214-da9d-11e4-ae14-e1bbf6514b3b","variableMapping":{"i":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[],"tindex":"ac359215-da9d-11e4-ae14-b70db55891cb","variableMapping":{"pointer":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":0},{"failures":[],"tindex":"ac35b926-da9d-11e4-ae14-95625a8adb5f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[86,96,368,106,333,334,369,370,371,372,373,374,375,376,377,378,379,357,380,381,382,383,337,384,339,385,341,386,118,343,387,345,388,389,390,391,125,6,13,15,16,23,136,195,215,251,287],"tindex":"ac35b927-da9d-11e4-ae14-cdbd050172e3","variableMapping":{"bytePos":"tmpValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"ac35b928-da9d-11e4-ae14-0b102be276ac","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[351],"tindex":"ac35b929-da9d-11e4-ae14-7793b2576e89","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"ac35b92a-da9d-11e4-ae14-35c0eef6b91a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:479","type":"CtLocalVariableImpl","sourcecode":"java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null)"},"status":-2},{"failures":[86,377,357],"tindex":"ac35b92b-da9d-11e4-ae14-034cf3d63c85","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"ac362e5c-da9d-11e4-ae14-5f333afa222a","variableMapping":{"baseUrl":"name"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[],"tindex":"ac362e5d-da9d-11e4-ae14-f9cb649b06d1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[354],"tindex":"ac362e5e-da9d-11e4-ae14-e9bb788b1c44","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"ac362e5f-da9d-11e4-ae14-01ed0adfb60a","variableMapping":{"sayText":"valueStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:450","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) <= 0)) {\n    return java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":0},{"failures":[],"tindex":"ac362e60-da9d-11e4-ae14-b1ceb84f5f3e","variableMapping":{"nodeFlags":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-2},{"failures":[],"tindex":"ac362e61-da9d-11e4-ae14-9963e4d1dff2","variableMapping":{"bits":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[74,77,78],"tindex":"ac362e62-da9d-11e4-ae14-937aaf3ceccb","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[333,334,339,343],"tindex":"ac362e63-da9d-11e4-ae14-753ff26ed407","variableMapping":{"red":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-1},{"failures":[],"tindex":"ac362e64-da9d-11e4-ae14-b35ba906b0d6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"ac362e65-da9d-11e4-ae14-03c04d540df4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"ac365576-da9d-11e4-ae14-7d3aea7ce72c","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[353],"tindex":"ac365577-da9d-11e4-ae14-c3369acc283e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"ac365578-da9d-11e4-ae14-83bd11389d6b","variableMapping":{"dist":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[91,392],"tindex":"ac365579-da9d-11e4-ae14-394a365ca69a","variableMapping":{"size":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"ac36557a-da9d-11e4-ae14-19ebc8b4e6c3","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:157","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_SYNC\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0},{"failures":[],"tindex":"ac36557b-da9d-11e4-ae14-fb2c6ecb0dae","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"frontIndex","sign":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[393],"tindex":"ac36557c-da9d-11e4-ae14-99a1c2820b8a","variableMapping":{"high":"acceptBit","len":"ferryBit","start":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[79,394,0,1,25,26,2,80,81,82,83,84,85,86,87,88,89,90,27,28,91,92,348,93,94,95,96,395,97,98,101,104,396,368,106,107,108,109,351,349,392,397,350,398,333,399,334,335,369,352,400,401,402,403,404,405,336,370,406,407,408,353,371,110,372,373,409,374,393,375,354,410,376,355,356,377,411,378,379,357,412,413,414,358,380,381,382,415,111,112,113,114,115,116,416,383,417,337,418,359,419,420,421,422,423,338,384,424,425,426,339,427,428,340,385,341,429,430,67,431,432,433,434,435,436,342,386,437,438,439,117,118,440,343,441,442,344,387,345,443,444,68,445,446,447,448,449,450,346,388,451,452,453,389,119,120,454,3,121,69,70,71,122,4,123,72,124,73,5,125,6,7,8,9,10,126,11,12,34,13,14,15,16,17,18,19,20,127,128,21,129,22,23,132,133,134,135,136,37,141,142,143,144,24,150,156,171,178,194,360,361,362,455,51,456,457,458,459,363,460,195,461,462,463,464,465,466,467,468,469,52,470,471,364,472,196,473,474,365,475,476,366,477,478,53,367,479,197,198,199,200,201,480,202,203,54,481,482,204,483,205,206,207,208,55,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,56,225,226,227,484,228,229,230,231,232,233,234,235,236,57,237,238,58,485,239,59,486,487,240,488,241,242,243,244,60,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,61,261,262,263,489,264,265,266,267,268,269,270,271,272,62,273,274,275,63,490,491,276,492,277,278,279,280,64,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,65,297,298,299,493,300,301,302,303,304,305,306,307,308,66,309,310],"tindex":"ac36557d-da9d-11e4-ae14-710c9fc8a26e","variableMapping":{"encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1003","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    throw new java.lang.IllegalArgumentException(((\"Contraction hierarchies preparation \" + \"requires (at the moment) only one vehicle. But was:\") + (com.graphhopper.routing.util.EncodingManager)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[],"tindex":"ac36557e-da9d-11e4-ae14-31d6ee4c8a2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:342","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"ac367c8f-da9d-11e4-ae14-97e8c5eb7ee2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[394,1,25,26,2,80,81,87,88,90,91,92,93,95,106,110,358,111,112,113,114,115,3,121,69,70,71,4,72,73,7,8,126,13,15,18,20,128,21,129,23,133,134,135,143,144,150,156,171,194,456,195,465,467,196,365,476,367,54,209,215,220,222,228,231,233,237,58,59,245,251,256,258,264,267,269,273,63,281,287,292,294,300,303,305,309],"tindex":"ac367c90-da9d-11e4-ae14-e7f4f453d594","variableMapping":{"lastKey":"directionBitMask","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:85","type":"CtLocalVariableImpl","sourcecode":"long long = long - (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[],"tindex":"ac367c91-da9d-11e4-ae14-8973cfa17b67","variableMapping":{"val":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:139","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return \"\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":0},{"failures":[79,394,0,1,25,26,2,494,80,81,82,83,495,84,85,86,87,88,89,90,27,28,91,92,93,94,95,96,97,496,99,29,100,30,101,102,103,104,31,32,105,33,497,498,499,396,368,106,107,500,108,109,351,398,399,334,335,369,352,400,401,402,403,404,405,336,370,406,407,408,353,371,110,372,373,409,374,393,375,354,410,376,355,356,377,411,378,379,357,412,413,414,358,380,381,382,415,111,112,113,114,115,116,416,383,417,337,418,359,419,420,421,422,423,338,384,424,425,426,339,427,428,340,385,341,429,430,67,431,432,433,434,435,436,342,386,437,438,439,117,118,440,343,441,442,344,387,345,443,444,68,445,446,447,448,449,450,346,388,451,452,453,119,120,454,3,121,69,70,71,122,4,123,72,124,73,5,125,6,7,8,9,10,126,11,12,34,13,14,15,16,17,18,19,20,127,128,21,129,22,23,130,131,132,133,134,135,136,137,138,37,139,501,140,141,142,143,144,24,502,145,146,147,148,503,149,150,151,152,153,154,504,155,156,157,158,159,160,161,162,163,41,164,165,166,167,168,169,505,170,171,172,173,174,175,506,176,177,178,179,180,181,182,183,184,185,186,50,187,188,189,190,191,192,507,193,194,360,361,362,455,51,456,457,458,459,363,460,195,461,462,463,464,465,466,467,468,469,52,470,471,364,472,196,473,474,365,475,476,366,477,478,53,367,479,197,198,199,200,201,480,202,203,54,481,482,204,483,205,206,207,208,55,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,56,225,226,227,484,228,229,230,231,232,233,234,235,236,57,237,238,58,485,239,59,486,487,240,488,241,242,243,244,60,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,61,261,262,263,489,264,265,266,267,268,269,270,271,272,62,273,274,275,63,490,491,276,492,277,278,279,280,64,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,65,297,298,299,493,300,301,302,303,304,305,306,307,308,66,309,310],"tindex":"ac382a42-da9d-11e4-ae14-590130a7a7a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[355],"tindex":"ac385153-da9d-11e4-ae14-1bbc1dabd309","variableMapping":{"edgePointer":"encoded","edgeEntryBytes":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"ac385154-da9d-11e4-ae14-a3dfaef52d4b","variableMapping":{"precision":"speed","lat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":0},{"failures":[],"tindex":"ac385155-da9d-11e4-ae14-55505ad192c6","variableMapping":{"edgeCount":"i","this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:376","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureEdgeIndex(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-2},{"failures":[96,376,378,381,136],"tindex":"ac385156-da9d-11e4-ae14-076230b9515d","variableMapping":{"shortTripsSpeed":"speed","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:488","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"ac385157-da9d-11e4-ae14-7778593c4169","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"ac385158-da9d-11e4-ae14-b399fcd3e7e7","variableMapping":{"bytesForFlags":"bytesForFlags","acceptStr":"flagEncodersStr","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1400","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = new com.graphhopper.routing.util.EncodingManager(java.lang.String , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"ac385159-da9d-11e4-ae14-dbbee4e1c578","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"ac38515a-da9d-11e4-ae14-d3661c3d1163","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[91,392],"tindex":"ac38515b-da9d-11e4-ae14-9becb19ebc74","variableMapping":{"i":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[97,113,114],"tindex":"ac38515c-da9d-11e4-ae14-2dc89a1cc5c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"ac38515d-da9d-11e4-ae14-95af185f89e6","variableMapping":{"empty":"blockByDefault"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[404,422,435,449],"tindex":"ac38515e-da9d-11e4-ae14-2f3463eabaa0","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[111,116],"tindex":"ac38515f-da9d-11e4-ae14-475325a88290","variableMapping":{"graph":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:826","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphStorage.isClosed())\n    throw new java.lang.IllegalStateException(\"You need to create a new GraphHopper instance as it is already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"ac385160-da9d-11e4-ae14-5fda0c568d3f","variableMapping":{"bytes":"forwardBit","capacity":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":0},{"failures":[],"tindex":"ac385161-da9d-11e4-ae14-5f065c1a54f6","variableMapping":{"this":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:232","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.isShortcut())\n    throw new java.lang.IllegalStateException((\"Cannot call fetchWayGeometry on shortcut \" + com.graphhopper.storage.GraphHopperStorage.EdgeIterable.(getEdge())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[],"tindex":"ac385162-da9d-11e4-ae14-77f3dbedba34","variableMapping":{"maxLat":"maxLat","bounds":"com.graphhopper.util.shapes.BBox.INVERSE","lat":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:182","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"ac385163-da9d-11e4-ae14-4d6ec38f740c","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"closed","v":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"ac385164-da9d-11e4-ae14-953a12717c75","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:255","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:774","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":0},{"failures":[],"tindex":"ac385165-da9d-11e4-ae14-c9131fb130b6","variableMapping":{"prevEle":"java.lang.Double.MAX_VALUE","ele":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:727","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"ac385166-da9d-11e4-ae14-e1b4311ef212","variableMapping":{"relationCodeEncoder":"this","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[389],"tindex":"ac387877-da9d-11e4-ae14-71293b826702","variableMapping":{"res":"flags","value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[79,394,0,1,25,2,80,81,82,86,88,89,90,27,28,91,92,93,94,95,96,97,508,509,510,511,512,513,58,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531],"tindex":"ac387878-da9d-11e4-ae14-83b1658fd550","variableMapping":{"wayIndex":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:263","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[79,394,0,1,25,26,2,80,81,82,83,84,85,86,87,88,89,90,27,28,91,92,93,94,95,96,97,98,99,99,29,29,100,100,30,30,101,101,102,102,103,103,104,104,31,31,32,32,105,105,33,33,396,368,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,3,121,69,70,71,122,4,123,72,124,73,5,125,6,7,8,9,10,126,11,12,34,13,14,15,16,17,18,19,20,127,128,21,129,22,23,130,131,132,133,134,135,136,137,138,37,139,140,141,142,143,144,24,145,146,147,148,503,149,150,151,152,153,154,504,155,156,157,158,159,160,161,162,163,41,164,165,166,167,168,169,505,170,171,532,172,173,174,175,506,176,177,178,179,180,181,182,183,184,185,186,50,187,188,189,190,191,192,507,193,194,360,361,362,455,51,456,457,458,459,363,460,195,461,462,463,464,465,466,467,468,469,52,470,471,364,472,196,473,474,365,475,476,366,477,478,53,367,479,197,198,199,200,201,480,202,203,54,481,482,204,205,206,207,208,55,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,56,225,226,227,484,228,229,230,231,232,233,234,235,236,57,237,238,58,485,239,59,486,487,240,241,242,243,244,60,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,61,261,262,263,489,264,265,266,267,268,269,270,271,272,62,273,274,275,63,490,491,276,277,278,279,280,64,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,65,297,298,299,493,300,301,302,303,304,305,306,307,308,66,309,310,533],"tindex":"ac387879-da9d-11e4-ae14-81e650ebfb56","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"ac38787a-da9d-11e4-ae14-31e5d5590acf","variableMapping":{"this":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:232","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.isShortcut())\n    throw new java.lang.IllegalStateException((\"Cannot call fetchWayGeometry on shortcut \" + com.graphhopper.storage.GraphHopperStorage.EdgeIterable.(getEdge())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-2},{"failures":[],"tindex":"ac38787b-da9d-11e4-ae14-2f141dcf08ea","variableMapping":{"lastIndex":"capacity","fromIndex":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"ac38787c-da9d-11e4-ae14-7571524bd4a5","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":0},{"failures":[],"tindex":"ac38787d-da9d-11e4-ae14-37d812b10f85","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[79,394,0,1,25,26,2,80,81,82,83,84,85,86,87,88,89,90,27,28,91,92,93,94,95,96,97,98,99,29,100,30,101,102,103,104,31,32,105,33,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,3,121,69,70,71,122,4,123,72,124,73,5,125,6,7,8,9,10,126,11,12,34,13,14,15,16,17,18,19,20,127,128,21,129,22,23,130,131,132,133,134,135,136,137,138,37,139,140,141,142,143,144,24,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,41,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,50,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,480,202,203,54,481,482,204,205,206,207,208,55,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,56,225,226,227,484,228,229,230,231,232,233,234,235,236,57,237,238,58,239,59,486,487,240,241,242,243,244,60,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,61,261,262,263,489,264,265,266,267,268,269,270,271,272,62,273,274,275,63,490,491,276,277,278,279,280,64,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,65,297,298,299,493,300,301,302,303,304,305,306,307,308,66,309,310,534,311,312,313,315,535,536,316,317,318,319],"tindex":"ac389f8e-da9d-11e4-ae14-a76082f62ac5","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"ac389f8f-da9d-11e4-ae14-e50a8fb4a68e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[333,334,339,343],"tindex":"ac389f90-da9d-11e4-ae14-b3a19b646fda","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"speed","edgeTo":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","edgeFrom":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[],"tindex":"ac38c6a1-da9d-11e4-ae14-41f428dd9ae7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"ac38c6a2-da9d-11e4-ae14-8fe590033ca1","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"ac38c6a3-da9d-11e4-ae14-25858a66c829","variableMapping":{"freeIndex":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":0},{"failures":[],"tindex":"ac38c6a4-da9d-11e4-ae14-ef6fd58a4198","variableMapping":{"fwdFaster":"com.graphhopper.util.AngleCalc.PI3_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"ac38c6a5-da9d-11e4-ae14-3d26642e78e7","variableMapping":{"y1":"resultOrientation","x1":"orientation","y2":"java.lang.Math.PI","x2":"java.lang.Math.PI"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[402,433,447],"tindex":"ac38c6a6-da9d-11e4-ae14-df7413e1ff6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:467","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[1,25,26,494,82,84,85,86,87,88,89,90,27,28,91,92,348,93,94,95,96,395,97,537,538,539,98,540,541,542,543,99,99,29,29,100,100,30,30,101,101,102,102,103,103,104,104,31,31,32,32,105,105,33,33,396,368,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,3,121,69,70,71,122,4,123,72,124,73,5,125,6,7,8,9,10,126,11,12,34,13,14,15,16,17,18,19,20,127,128,21,129,22,23,130,131,132,133,134,135,136,137,138,37,139,140,141,142,143,144,24,508,509,510,511,512,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,41,164,165,166,167,168,169,170,171,532,172,173,174,175,506,176,177,178,179,180,181,182,183,184,185,186,50,187,188,189,190,191,192,193,194,544,545,195,196,546,547,197,198,199,200,201,202,203,482,204,483,205,206,207,208,55,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,56,225,226,227,484,228,229,230,231,232,233,234,235,236,57,237,238,239,487,240,488,241,242,243,244,60,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,61,261,262,263,489,264,265,266,267,268,269,270,271,272,62,273,274,275,491,276,492,277,278,279,280,64,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,65,297,298,299,493,300,301,302,303,304,305,306,307,308,66,309,310,548,533],"tindex":"ac38c6a7-da9d-11e4-ae14-eda0c17ed52a","variableMapping":{"dataAccess":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:308","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create((64 * 1024))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":228,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":127,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":389,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":480,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":147,"com.graphhopper.GraphHopperAPITest.testNoLoad":502,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":361,"com.graphhopper.reader.OSMReaderTest.testFerry":86,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":141,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":142,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":385,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":42,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":183,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":394,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":238,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":346,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":453,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":250,"com.graphhopper.coll.CompressedArrayTest.testCompress":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":423,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":69,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":52,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":179,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":514,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":527,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":72,"com.graphhopper.GraphHopperTest.testPrepare":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":477,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":119,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":294,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":428,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":13,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":133,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":532,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":338,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":131,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":204,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":180,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":115,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":337,"com.graphhopper.util.PointListTest.testEquals":39,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":339,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":12,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":286,"com.graphhopper.coll.BitSetImplTest.testCopy":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":160,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":341,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":58,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":205,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":5,"com.graphhopper.GraphHopperTest.testLoadOSM":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":166,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":315,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":161,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":398,"com.graphhopper.reader.OSMReaderTest.testSort":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":386,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":94,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":486,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":516,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":304,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":63,"com.graphhopper.util.PointListTest.testReverse":38,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":478,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":104,"com.graphhopper.routing.DijkstraTest.initializationError":497,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":269,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":513,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":43,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":484,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":314,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":36,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":283,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":454,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":485,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":245,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":344,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":241,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":408,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":370,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":50,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":17,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":178,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":185,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":494,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":9,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":207,"com.graphhopper.coll.OSMIDMapTest.testGetLong":511,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":260,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":221,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":54,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":223,"com.graphhopper.coll.CompressedArrayTest.testCompress2":330,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":296,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":334,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":251,"com.graphhopper.GraphHopperAPITest.testLoad":144,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":483,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":313,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":353,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":288,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":279,"com.graphhopper.storage.LevelGraphStorageTest.testClone":55,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":347,"com.graphhopper.reader.OSMReaderTest.testBarriers":90,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":242,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":11,"com.graphhopper.util.GHUtilityTest.testCopy":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":456,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":194,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":404,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":44,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":424,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":503,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":530,"com.graphhopper.routing.PathTest.testFindInstruction":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":420,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":225,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":243,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":143,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":374,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":235,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":146,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":442,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":305,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":292,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":71,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":449,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":397,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":500,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":210,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":457,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":319,"com.graphhopper.util.InstructionListTest.testWayList2":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":365,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":167,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":309,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":340,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":533,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":272,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":382,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":427,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":117,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":490,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":212,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":429,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":40,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":517,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":464,"com.graphhopper.storage.RAMDirectoryTest.testSynched":546,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":252,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":126,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":278,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":27,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":515,"com.graphhopper.routing.AStarTest.initializationError":498,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":21,"com.graphhopper.coll.OSMIDMapTest.testGet":508,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":249,"com.graphhopper.routing.PathBidirRefTest.testExtract":108,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":393,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":431,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":510,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":190,"com.graphhopper.storage.RAMDataAccessTest.testCopy":524,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":518,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":474,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":274,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":473,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":67,"com.graphhopper.storage.RAMDataAccessTest.testSegments":529,"com.graphhopper.util.GHUtilityTest.testSort2":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":18,"com.graphhopper.reader.OSMReaderTest.testMain":88,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":481,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":35,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":259,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":432,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":191,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":437,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":227,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":487,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":215,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":219,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":237,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":101,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":263,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":343,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":222,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":96,"com.graphhopper.storage.GraphHopperStorageTest.testClone":64,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":475,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":357,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":290,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":378,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":197,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":406,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":458,"com.graphhopper.routing.PathTest.testTime":368,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":403,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":236,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":209,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":380,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":506,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":169,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":226,"com.graphhopper.reader.OSMReaderTest.testRelation":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":469,"com.graphhopper.util.GHUtilityTest.testSortDirected":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":388,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":521,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":30,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":49,"com.graphhopper.GraphHopperTest.testFootOnly":82,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":417,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":173,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":186,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":440,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":465,"com.graphhopper.search.NameIndexTest.testCreate":543,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":528,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":99,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":536,"com.graphhopper.routing.QueryGraphTest.testOneWay":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":505,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":325,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":159,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":322,"com.graphhopper.reader.OSMReaderTest.testWithBounds":95,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":531,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":451,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":523,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":102,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":462,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":470,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":349,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":206,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":482,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":399,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":450,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":425,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":262,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":156,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":411,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":256,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":277,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":6,"com.graphhopper.util.InstructionListTest.testWayList":134,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":430,"com.graphhopper.GraphHopperAPITest.testDisconnected179":24,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":459,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":489,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":455,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":545,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":447,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":468,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":534,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":436,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":25,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":282,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":124,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":426,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":15,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":496,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":123,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":234,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":412,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":400,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":342,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":22,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":492,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":507,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":535,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":439,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":275,"com.graphhopper.routing.PathTest.testWayList":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":53,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":401,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":461,"com.graphhopper.coll.OSMIDMapTest.testGet2":509,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":23,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":231,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":537,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":261,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":435,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":293,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":247,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":281,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":187,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":220,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":188,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":525,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":522,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":68,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":76,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":335,"com.graphhopper.util.GHUtilityTest.testSort":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":472,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":390,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":329,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":434,"com.graphhopper.search.NameIndexTest.testPut":541,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":273,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":488,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":148,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":181,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":176,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":153,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":387,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":103,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":118,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":151,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":239,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":352,"com.graphhopper.storage.MMapDirectoryTest.testSynched":544,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":415,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":538,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":409,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":257,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":111,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":318,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":196,"com.graphhopper.routing.PathTest.testFound":396,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":83,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":333,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":233,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":199,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":433,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":253,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":75,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":542,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":195,"com.graphhopper.util.InstructionListTest.testEmptyList":132,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":34,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":405,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":16,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":358,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":410,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":354,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":384,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":19,"com.graphhopper.reader.PrinctonReaderTest.testRead":84,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":306,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":184,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":248,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":460,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":512,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":360,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":258,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":445,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":392,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":547,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":402,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":441,"com.graphhopper.reader.OSMReaderTest.testFoot":87,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":364,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":539,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":164,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":328,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":416,"com.graphhopper.reader.OSMReaderTest.testOneWay":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":165,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":289,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":302,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":268,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":421,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":520,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":444,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":467,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":70,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":321,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":73,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":379,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":121,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":154,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":519,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":110,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":463,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":100,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":395,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":491,"com.graphhopper.routing.PathBidirRefTest.testExtract2":109,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":316,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":125,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":168,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":336,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":540,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":300,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":504,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":407,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":47,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":91,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":45,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":479,"com.graphhopper.util.SimpleIntDequeTest.testPush":332,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":155,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":448,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":162,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":303,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":501,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":211,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":413,"com.graphhopper.GraphHopperTest.testFootAndCar":26,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":65,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":369,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":193,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":526,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":51,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":351,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":414,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":60,"com.graphhopper.storage.StorablePropertiesTest.testLoad":548,"com.graphhopper.GraphHopperTest.testPrepareOnly":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":128,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":438,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":362,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":93,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":201,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":136,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":493,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":373,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":466,"com.graphhopper.routing.AStarBidirectionTest.initializationError":499,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":381,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":232,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":230,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":59}}]
