[{"failures":[],"tindex":"281bfab5-dab7-11e4-a257-d165c57b6c28","variableMapping":{"lastIndex":"shift","fromIndex":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"281ce516-dab7-11e4-a257-19c6eec0fddc","variableMapping":{"size":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:152","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-1},{"failures":[],"tindex":"281ce517-dab7-11e4-a257-b14d28f25d6b","variableMapping":{"deltaX":"maxLon","tmp":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"281ce518-dab7-11e4-a257-9379528cbb31","variableMapping":{"start":"biggestStart","onStack":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":0},{"failures":[],"tindex":"281ce519-dab7-11e4-a257-8b58a165fe31","variableMapping":{"oldValueIndex":"value","lastKey":"value","key":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[],"tindex":"281ce51a-dab7-11e4-a257-ab3600c6027b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[],"tindex":"281ce51b-dab7-11e4-a257-e570ffcf632f","variableMapping":{"size":"segmentSizePower","i":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:151","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[66,67,68,69,70,71,72,73],"tindex":"281ce51c-dab7-11e4-a257-2f5e1943fe5f","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:245","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[74],"tindex":"281ce51d-dab7-11e4-a257-d13ad702832b","variableMapping":{"turnCostIndex":"index","nextTurnCostIndex":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"281ce51e-dab7-11e4-a257-73d342fd399d","variableMapping":{"java.lang.Double.MAX_VALUE":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:91","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"281d0c2f-dab7-11e4-a257-8135a2f9f14f","variableMapping":{"time":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[75,76,77],"tindex":"281d0c30-dab7-11e4-a257-c769fc7e2b67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:633","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[78,79,80,81,82,83,84,85,86],"tindex":"281d0c31-dab7-11e4-a257-79abffa3ef37","variableMapping":{"maxSpeed":"midLon","fwdSpeed":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"281d0c32-dab7-11e4-a257-bf9c5ba3b365","variableMapping":{"currentBucket":"frontIndex","retBucket":"frontIndex","currentIndex":"frontIndex","bucketSize":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"281d0c33-dab7-11e4-a257-b32978e2e2ce","variableMapping":{"nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[87],"tindex":"281d0c34-dab7-11e4-a257-5feb551dbbb9","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[88],"tindex":"281d0c35-dab7-11e4-a257-51bad973749c","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","capacity":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"281d0c36-dab7-11e4-a257-4bf4629241bc","variableMapping":{"name":"res"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":0},{"failures":[89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"281d0c37-dab7-11e4-a257-ed61fec8a195","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"281d0c38-dab7-11e4-a257-43dff846c6ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:468","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"281d0c39-dab7-11e4-a257-ef82156477ba","variableMapping":{"a":"empty","approx":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[101,102,103],"tindex":"281d0c3a-dab7-11e4-a257-c155c2a67a18","variableMapping":{"from":"err","hash":"dLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"281d0c3b-dab7-11e4-a257-1993c1a6ee34","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[104,88,105,43,44,45,46,47,49,52,53,55,58,59,60,61,62],"tindex":"281d334c-dab7-11e4-a257-09ba62fcf5ce","variableMapping":{"weightLong":"directionBitMask","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[1,2,3,4,5,7,9,11,13,14,15,16,17,20,22,24,26,27,28,29,30,32,33,106,34,35,36,38,39,40,43,44,46,47,51,52,55,57,58,60,64,65],"tindex":"281d334d-dab7-11e4-a257-a1c186eb3e1e","variableMapping":{"capacity":"v"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[107,108],"tindex":"281d334e-dab7-11e4-a257-175288a9df3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"281d334f-dab7-11e4-a257-5f5bc393b3aa","variableMapping":{"red":"prevConnectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[],"tindex":"281d3350-dab7-11e4-a257-7b1f056aa214","variableMapping":{"high":"usedBits","guess":"nextNodeBit","low":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[109,67,69,71,110,111,73],"tindex":"281d3351-dab7-11e4-a257-0b80e7bdcb2b","variableMapping":{"midLat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[],"tindex":"281d3352-dab7-11e4-a257-dda11a2b8573","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Use setDoubleValue instead\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[],"tindex":"281d3353-dab7-11e4-a257-55ad84e6b8c7","variableMapping":{"type":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:178","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"281d3354-dab7-11e4-a257-451176f7229d","variableMapping":{"line":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[75,112,77],"tindex":"281d3355-dab7-11e4-a257-cf07491e0226","variableMapping":{"id":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"281d3356-dab7-11e4-a257-d9b59922d5a4","variableMapping":{"edgeId":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,88,163,105,164,165,166,167,168,98,169,99,100,170,171,172,173,174,175,176,38,39,177,178,179,180,43,46,52,63,181,64],"tindex":"281d3357-dab7-11e4-a257-1b60b66c68d9","variableMapping":{"todoBytes":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"281d3358-dab7-11e4-a257-936a08887939","variableMapping":{"foundIndex":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"281d5a69-dab7-11e4-a257-99fa1243a914","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"281d5a6a-dab7-11e4-a257-e1b58d6b3dcf","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":0},{"failures":[],"tindex":"281d5a6b-dab7-11e4-a257-1b145158e308","variableMapping":{"ref":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":0},{"failures":[],"tindex":"281d5a6c-dab7-11e4-a257-4196124123cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:340","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[182,183],"tindex":"281d5a6d-dab7-11e4-a257-bdecaa352984","variableMapping":{"pointIndex":"priorityFromRelation","index":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[90,167,94,168,95,96,97,184,98,99,185,100,170,172,186,187,173,174,188,189,175,37,190,176,191,38,39,192,193,40,194,195,196,197,198,177,43,44,47,48],"tindex":"281d5a6e-dab7-11e4-a257-fdd12356d343","variableMapping":{"heap":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"281d5a6f-dab7-11e4-a257-4d7817b27f2d","variableMapping":{"high":"priorityFromRelation","guess":"priorityFromRelation","low":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":0},{"failures":[74],"tindex":"281d5a70-dab7-11e4-a257-1b5dc1a710f6","variableMapping":{"cp":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:122","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[94,98,100,186,188,39,40,195,197],"tindex":"281d5a71-dab7-11e4-a257-6963c788f220","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-1},{"failures":[],"tindex":"281d5a72-dab7-11e4-a257-4d17e3c60e5b","variableMapping":{"visitedCountFrom":"shift","visitedCountTo":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-2},{"failures":[],"tindex":"281d5a73-dab7-11e4-a257-9b3fe0d271ce","variableMapping":{"flags":"directionBitMask","tmpValue":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[199,200,201,115,202,203,120,204,0,1,2,205,3,4,5,206,6,207,7,8,9,10,208,11,209,12,13,14,15,16,17,18,19,210,20,21,22,23,211,24,212,25,26,27,28,29,30,31,213,214,215,216,217,218,219,220,221,222,223,224,130,225,136,226,227,141,147,228,148,229,230,153,231,232,233,234,235,236,237,238,239,104,159,32,33,160,161,240,34,35,36,162,241,242,243,244,245,246,247,248,166,167,94,168,95,96,97,184,98,169,99,185,100,170,171,172,186,187,173,174,188,189,175,37,190,176,191,38,39,192,193,40,194,195,196,197,198,177,249,178,250,250,251,251,252,252,253,253,179,179,254,254,255,255,180,180,256,256,257,257,258,258,259,259,41,43,44,45,46,47,48,49,50,51,260,108,52,53,54,55,56,57,58,59,60,61,62,261,63,181,262,64,65],"tindex":"281d8184-dab7-11e4-a257-9f0ca94e7fa5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[263,264,265,41,46,50,51,108,52,53,54,56,57,59,62,261,63],"tindex":"281d8185-dab7-11e4-a257-b1ea79a0ae91","variableMapping":{"wayTypeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"281d8186-dab7-11e4-a257-31754ea4c10a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"281d8187-dab7-11e4-a257-637247620121","variableMapping":{"edgeId":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"281d8188-dab7-11e4-a257-67b03d424afc","variableMapping":{"nodeId":"shift","mainNodes":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[104,266,267,265,41,42,43,44,45,46,47,48,49,50,51,108,52,53,54,55,58,59,60,61,62,261,63],"tindex":"281d8189-dab7-11e4-a257-356638663210","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"281d818a-dab7-11e4-a257-8dbae9a59e60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"281d818b-dab7-11e4-a257-75c558f5f44a","variableMapping":{"todoBytes":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[240,162,241],"tindex":"281d818c-dab7-11e4-a257-355b278d887e","variableMapping":{"x1":"index","sLon":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"281d818d-dab7-11e4-a257-a3b3531a5507","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"281d818e-dab7-11e4-a257-852406cd82f2","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"281d818f-dab7-11e4-a257-cfc85136fc14","variableMapping":{"carEncoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:80","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.CarFlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[],"tindex":"281d8190-dab7-11e4-a257-27c3765dde90","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"281d8191-dab7-11e4-a257-8b0d3234894e","variableMapping":{"keyIndex":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[],"tindex":"281d8192-dab7-11e4-a257-57045df62472","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[244],"tindex":"281d8193-dab7-11e4-a257-d1f857205251","variableMapping":{"eleDelta":"fwdSlower","decEleSum":"decDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[268,6,208,209,12,19,211,212,25,78,79,80,81,82,84,85,269,270,86],"tindex":"281da8a4-dab7-11e4-a257-056f8f8d48b5","variableMapping":{"resultOrientation":"maxLonTmp","orientation":"maxLonTmp","java.lang.Math.PI":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[266,267],"tindex":"281da8a5-dab7-11e4-a257-3deed7334293","variableMapping":{"updatedA":"nextRelBit","nodeA":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1305","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[],"tindex":"281da8a6-dab7-11e4-a257-33ac3b3e40f7","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","edge":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-2},{"failures":[166,98,169,186,174,188,40,195,197],"tindex":"281da8a7-dab7-11e4-a257-295968028553","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[182,271,272,183,273,266,267],"tindex":"281da8a8-dab7-11e4-a257-21d307cff848","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"281da8a9-dab7-11e4-a257-a178cb16c728","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[274,87,275,276,110,105,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,261,277,63],"tindex":"281da8aa-dab7-11e4-a257-ffac61d0970f","variableMapping":{"tt":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[268,6,208,209,12,19,211,212,25,78,79,80,81,82,84,85,269,270],"tindex":"281da8ab-dab7-11e4-a257-b75b7ec877d6","variableMapping":{"size":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"281da8ac-dab7-11e4-a257-a7240b311f0b","variableMapping":{"maxMCSpeed":"r","speed":"r"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":0},{"failures":[268,6,208,209,12,19,211,212,25,78,79,80,81,82,84,85,269,270,86],"tindex":"281da8ad-dab7-11e4-a257-d7fb4e6bfa3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"281da8ae-dab7-11e4-a257-1311bc3242d7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"281da8af-dab7-11e4-a257-f3a3a0ba95fb","variableMapping":{"bits":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"281da8b0-dab7-11e4-a257-17543ecb829d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[91,278],"tindex":"281da8b1-dab7-11e4-a257-4f3392cba619","variableMapping":{"allSegments":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"281da8b2-dab7-11e4-a257-f58ad99ebf56","variableMapping":{"updatedA":"i","nodeA":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1305","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":0},{"failures":[],"tindex":"281da8b3-dab7-11e4-a257-89cdece87c27","variableMapping":{"size":"bytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:80","type":"CtLocalVariableImpl","sourcecode":"long long = (long) * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[166,94,98,169,170,171,172,186,187,173,174,188,189,175,37,190,191,38,39,192,193,40,195,196,197,198,177,43,44,47,50],"tindex":"281da8b4-dab7-11e4-a257-49d74be8930a","variableMapping":{"edge":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"281dcfc5-dab7-11e4-a257-fd1679cc9520","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":0},{"failures":[265],"tindex":"281dcfc6-dab7-11e4-a257-377b53688d8a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"281dcfc7-dab7-11e4-a257-4f0ec97811de","variableMapping":{"this":"this","y":"fromHeight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[113,279,199,280,114,200,281,201,115,202,203,282,283,116,117,118,284,285,286,287,288,289,119,290,120,291,292,293,294,121,295,296,297,298,299,300,301,122,302,303,304,305,123,306,307,124,308,309,310,125,311,0,1,2,205,312,3,4,5,206,6,207,7,8,9,10,208,11,209,12,13,14,15,16,313,17,18,19,210,20,21,22,23,211,24,212,25,26,27,28,29,314,30,31,213,214,215,216,315,217,218,219,220,221,222,316,223,224,126,127,128,317,318,319,320,321,322,129,323,130,324,325,326,327,131,328,329,330,331,332,333,334,132,335,336,337,338,133,339,340,134,341,342,343,135,344,225,136,226,227,345,346,137,138,139,347,348,349,350,351,352,140,353,141,354,355,356,357,142,358,359,360,361,362,363,364,143,365,366,367,368,144,369,370,145,371,372,373,146,374,147,375,228,148,229,230,376,377,149,150,151,378,379,380,381,382,383,152,384,153,385,386,387,388,154,389,390,391,392,393,394,395,155,396,397,398,399,156,400,401,157,402,403,404,158,405,231,232,233,234,406,235,236,237,238,239,104,159,32,33,160,161,407,408,409,75,182,410,411,412,271,413,414,415,416,417,418,419,420,66,421,67,422,423,424,425,112,426,272,427,428,429,430,431,432,68,433,69,434,435,436,274,240,34,35,36,162,241,437,438,439,76,440,441,442,443,444,445,70,446,71,447,448,449,450,87,88,275,276,163,110,111,105,451,452,453,164,454,455,456,242,263,165,457,264,458,459,243,244,460,77,183,461,462,463,273,464,465,466,467,468,469,470,471,72,472,73,473,474,475,476,477,265,478,245,246,247,248,479,480,166,167,481,94,168,95,96,97,184,98,169,99,185,100,170,171,172,186,187,173,174,188,189,175,37,190,176,191,38,39,192,193,40,194,195,196,197,198,177,249,178,482,483,250,251,252,253,179,254,255,180,256,257,258,259,41,42,43,44,45,46,47,484,48,49,50,51,485,108,52,53,54,55,56,57,58,59,486,60,61,62,261,63,181,262,64,65,487],"tindex":"281dcfc8-dab7-11e4-a257-11b929ff5a0c","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","key":"entryVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[],"tindex":"281dcfc9-dab7-11e4-a257-5bb6246082bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[266,267,486],"tindex":"281dcfca-dab7-11e4-a257-5f6a00edcefc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[90,167,94,168,95,96,97,184,98,99,185,100,170,172,186,187,173,174,188,189,175,37,190,176,191,38,39,192,193,40,194,195,196,197,198,177,43,44,47,48],"tindex":"281dcfcb-dab7-11e4-a257-95d469e32ceb","variableMapping":{"segmentSizeInBytes":"size","index":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-1},{"failures":[],"tindex":"281dcfcc-dab7-11e4-a257-bf46ff6c7be5","variableMapping":{"high":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"281dcfcd-dab7-11e4-a257-3fcd22efb256","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[104,266,267,265,41,42,43,44,45,46,47,48,49,50,51,108,52,53,54,55,56,57,58,59,60,61,62,261,63],"tindex":"281dcfce-dab7-11e4-a257-1769d318a6ff","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"281df6df-dab7-11e4-a257-65ef46c5e040","variableMapping":{"hasOther":"defaultB","hasRel":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"281df6e0-dab7-11e4-a257-691a0b8c29de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[200,115,202,136,226,488,489,147,148,229,490,41,47,48,49,51],"tindex":"281df6e1-dab7-11e4-a257-0bfc4b58f818","variableMapping":{"i":"segmentsToCreate","to":"segmentsToCreate","lonSize":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"281df6e2-dab7-11e4-a257-012ac6270464","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-2},{"failures":[182,424,244,183,475,266,491,267,265,246,171,190,52,63],"tindex":"281df6e3-dab7-11e4-a257-dd434001082b","variableMapping":{"workerThreads":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[113,4,94,95,98,99,185,100,170,172,186,187,173,174,188,189,175,37,190,176,191,38,39,192,193,40,194,195,196,197,198,177,41,43,44,47,48,50],"tindex":"281df6e4-dab7-11e4-a257-0b71e1513b56","variableMapping":{"initialized":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[],"tindex":"281df6e5-dab7-11e4-a257-b7d285be24f5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"281df6e6-dab7-11e4-a257-953b7023b6c9","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":0},{"failures":[35,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"281df6e7-dab7-11e4-a257-63352134f861","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":194,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":251,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":109,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":200,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":221,"com.graphhopper.GraphHopperAPITest.testNoLoad":487,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":127,"com.graphhopper.reader.OSMReaderTest.testFerry":108,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":160,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":412,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":440,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":8,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":42,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":311,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":472,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":384,"com.graphhopper.coll.CompressedArrayTest.testCompress":79,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":70,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":373,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":95,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":332,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":141,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":206,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":99,"com.graphhopper.GraphHopperTest.testPrepare":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":166,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":359,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":410,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":190,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":237,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":204,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":446,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":33,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":282,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":162,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":175,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":21,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":271,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":485,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":147,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":269,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":116,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":170,"com.graphhopper.GraphHopperTest.testLoadOSM":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":22,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":477,"com.graphhopper.reader.OSMReaderTest.testSort":54,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":67,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":35,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":229,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":369,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":136,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":342,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":180,"com.graphhopper.routing.DijkstraTest.initializationError":482,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":401,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":101,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":302,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":351,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":279,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":375,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":462,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":149,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":290,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":436,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":69,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":11,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":357,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":39,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":10,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":484,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":174,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":173,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":392,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":295,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":115,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":297,"com.graphhopper.coll.CompressedArrayTest.testCompress2":78,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":361,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":112,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":153,"com.graphhopper.GraphHopperAPITest.testLoad":64,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":283,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":455,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":354,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":139,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":107,"com.graphhopper.storage.LevelGraphStorageTest.testClone":285,"com.graphhopper.reader.OSMReaderTest.testBarriers":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":150,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":241,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":464,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":189,"com.graphhopper.util.GHUtilityTest.testCopy":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":319,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":432,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":447,"com.graphhopper.routing.PathTest.testFindInstruction":248,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":443,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":300,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":151,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":159,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":264,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":308,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":220,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":461,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":370,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":156,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":97,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":388,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":471,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":491,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":483,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":320,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":345,"com.graphhopper.util.InstructionListTest.testWayList2":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":27,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":381,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":403,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":407,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":226,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":243,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":289,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":385,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":0,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":188,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":56,"com.graphhopper.routing.AStarTest.initializationError":479,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":152,"com.graphhopper.routing.PathBidirRefTest.testExtract":249,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":458,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":337,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":438,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":415,"com.graphhopper.storage.RAMDataAccessTest.testSegments":490,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":31,"com.graphhopper.util.GHUtilityTest.testSort2":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":192,"com.graphhopper.reader.OSMReaderTest.testMain":53,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":202,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":391,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":417,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":270,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":422,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":87,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":340,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":120,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":294,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":125,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":179,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":155,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":77,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":296,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":261,"com.graphhopper.storage.StorablePropertiesTest.testStore":489,"com.graphhopper.storage.GraphHopperStorageTest.testClone":348,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":339,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":105,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":110,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":356,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":113,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":434,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":321,"com.graphhopper.routing.PathTest.testTime":246,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":431,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":309,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":286,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":454,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":29,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":331,"com.graphhopper.reader.OSMReaderTest.testRelation":486,"com.graphhopper.util.GHUtilityTest.testSortDirected":235,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":73,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":253,"com.graphhopper.GraphHopperTest.testFootOnly":50,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":103,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":439,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":1,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":208,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":460,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":131,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":250,"com.graphhopper.routing.QueryGraphTest.testOneWay":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":314,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":82,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":20,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":80,"com.graphhopper.reader.OSMReaderTest.testWithBounds":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":473,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":34,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":333,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":459,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":266,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":117,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":72,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":448,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":163,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":154,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":137,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":172,"com.graphhopper.util.InstructionListTest.testWayList":238,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":371,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":414,"com.graphhopper.GraphHopperAPITest.testDisconnected179":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":322,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":396,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":469,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":262,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":135,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":45,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":350,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":398,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":185,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":409,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":191,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":478,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":169,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":124,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":451,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":428,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":421,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":198,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":346,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":424,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":225,"com.graphhopper.routing.PathTest.testWayList":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":343,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":429,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":177,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":394,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":420,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":358,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":456,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":382,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":209,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":12,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":466,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":91,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":426,"com.graphhopper.util.GHUtilityTest.testSort":234,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":335,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":86,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":419,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":158,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":207,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":222,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":3,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":215,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":463,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":255,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":244,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":228,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":427,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":408,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":457,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":389,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":240,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":293,"com.graphhopper.routing.PathTest.testFound":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":336,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":51,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":265,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":307,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":74,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":199,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":418,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":386,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":90,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":130,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":140,"com.graphhopper.util.InstructionListTest.testEmptyList":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":37,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":68,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":164,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":450,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":71,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":449,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":193,"com.graphhopper.reader.PrinctonReaderTest.testRead":181,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":145,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":9,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":383,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":126,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":390,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":445,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":467,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":430,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":183,"com.graphhopper.reader.OSMReaderTest.testFoot":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":132,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":259,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":212,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":310,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":437,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":25,"com.graphhopper.reader.OSMReaderTest.testOneWay":63,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":355,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":368,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":400,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":444,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":488,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":363,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":329,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":352,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":96,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":111,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":168,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":216,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":242,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":326,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":252,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":227,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":277,"com.graphhopper.routing.PathBidirRefTest.testExtract2":178,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":224,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":433,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":366,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":315,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":435,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":58,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":344,"com.graphhopper.util.SimpleIntDequeTest.testPush":106,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":470,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":23,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":144,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":406,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":288,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":452,"com.graphhopper.GraphHopperTest.testFootAndCar":46,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":362,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":318,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":476,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":453,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":379,"com.graphhopper.GraphHopperTest.testPrepareOnly":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":195,"com.graphhopper.GraphHopperTest.testVia":43,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":223,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":128,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":60,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":114,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":104,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":365,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":165,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":328,"com.graphhopper.routing.AStarBidirectionTest.initializationError":480,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":274,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":306,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":305,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":148}}]
