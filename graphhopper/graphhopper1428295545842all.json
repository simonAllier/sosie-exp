[{"failures":[0,1],"tindex":"cea13f70-dc17-11e4-a628-55fe3877d3cf","variableMapping":{"ret":"removed","retBucket":"removed","i":"removed","bucketSize":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"cea5ac41-dc17-11e4-a628-f7e55ee4aa3b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,0,234,235,236,237,1,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"cea5d352-dc17-11e4-a628-0937a74c1f95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"cea5d353-dc17-11e4-a628-8f0b365fe819","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"cea5d354-dc17-11e4-a628-99f17813cc88","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","java.lang.Double.POSITIVE_INFINITY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[],"tindex":"cea5d355-dc17-11e4-a628-a35c2bdcacfe","variableMapping":{"incEleSum":"minLon","incDist2DSum":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[9,240],"tindex":"cea5d356-dc17-11e4-a628-3d3815bbd848","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"cea5d357-dc17-11e4-a628-e5c189123b43","variableMapping":{"high":"ferryBit","len":"ferryBit","start":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":0},{"failures":[],"tindex":"cea5d358-dc17-11e4-a628-3f35758e4eff","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-2},{"failures":[294,295,296,297],"tindex":"cea62179-dc17-11e4-a628-73766bcb884e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"cea6217a-dc17-11e4-a628-dbb9c10e0ea0","variableMapping":{"speed":"maxSpeed","way":"way","badSurfaceSpeedMap":"safeHighwayTags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:230","type":"CtIfImpl","sourcecode":"if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n    double = 30;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"cea6217b-dc17-11e4-a628-b15b6f3d885b","variableMapping":{"ghLocation":"com.graphhopper.routing.util.EncodingManager.FOOT","osmFile":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"cea6217c-dc17-11e4-a628-df06d54b4b9b","variableMapping":{"lastTime":"lastTime","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[],"tindex":"cea6217d-dc17-11e4-a628-5f10ded2228e","variableMapping":{"visitedCountFrom":"length","visitedCountTo":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-2},{"failures":[],"tindex":"cea6217e-dc17-11e4-a628-a9cca5e0a4f5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,298,299,233,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"tindex":"cea6bdbf-dc17-11e4-a628-033ec6129cf7","variableMapping":{"tmpNo":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"cea6bdc0-dc17-11e4-a628-45aaf1f41b83","variableMapping":{"gradient":"maxLat","yend":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[45,59,62,64,69,76,100,103,105,110,117,325,326,327,328,329,194,197,199,204,211,0,236],"tindex":"cea6bdc1-dc17-11e4-a628-7730a9c5d1c0","variableMapping":{"edgeId":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"cea6e4d2-dc17-11e4-a628-71787fcc599e","variableMapping":{"entries":"mValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":0},{"failures":[],"tindex":"cea6e4d3-dc17-11e4-a628-e53460d32335","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"cea6e4d4-dc17-11e4-a628-07dc0702ec0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[330,331,332],"tindex":"cea6e4d5-dc17-11e4-a628-4913b7a2050f","variableMapping":{"ref":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"cea6e4d6-dc17-11e4-a628-11564c25fc10","variableMapping":{"tmp":"minLatTmp","tmpNo":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:142","type":"CtIfImpl","sourcecode":"if (double >= 64) {\n    int = 64;\n} else if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-2},{"failures":[],"tindex":"cea6e4d7-dc17-11e4-a628-4d9bd7c58436","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"cea6e4d8-dc17-11e4-a628-513f9433ab1c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[306],"tindex":"cea6e4d9-dc17-11e4-a628-43ac3b625edc","variableMapping":{"len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"cea6e4da-dc17-11e4-a628-bd88d25b52ff","variableMapping":{"bytesForFlags":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[],"tindex":"cea6e4db-dc17-11e4-a628-5fc00582fe09","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","capacity":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:328","type":"CtIfImpl","sourcecode":"if (long < (int))\n    long = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[304],"tindex":"cea6e4dc-dc17-11e4-a628-753f54625c79","variableMapping":{"flags":"acceptBit","tmpValue":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"cea70bed-dc17-11e4-a628-037eef4a4ccf","variableMapping":{"sacScale":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[],"tindex":"cea70bee-dc17-11e4-a628-7fe73b5db802","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[],"tindex":"cea70bef-dc17-11e4-a628-eba89d3de9ff","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"cea70bf0-dc17-11e4-a628-c15a75c092cf","variableMapping":{"indexWithMaxDist":"to","lastIndex":"to","fromIndex":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":0},{"failures":[],"tindex":"cea70bf1-dc17-11e4-a628-53873c385a89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[2,3,4,5,6,7,8,333,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,334,335,33,34,35,336,337,36,37,38,39,40,41,42,43,44,338,45,46,47,339,340,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,341,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,342,343,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,344,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,345,346,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,347,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,348,224,225,226,227,228,229,230,231,232,233,0,234,235,236,237,1,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"cea73302-dc17-11e4-a628-53a942c592f1","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"cea73303-dc17-11e4-a628-e799829f3891","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"cea73304-dc17-11e4-a628-2bf41974c6e6","variableMapping":{"foundIndex":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"cea73305-dc17-11e4-a628-7f173c3a9208","variableMapping":{"origEdgeId":"err","mainEdges":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"cea73306-dc17-11e4-a628-95b7f13b1c34","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"cea73307-dc17-11e4-a628-55e14a006748","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"cea73308-dc17-11e4-a628-ab1343e5f5bb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"cea73309-dc17-11e4-a628-0568c7e50892","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"cea7330a-dc17-11e4-a628-379a8f197d2c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"cea7330b-dc17-11e4-a628-fd89dc5c4532","variableMapping":{"p":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:99","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathNative"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-2},{"failures":[],"tindex":"cea7330c-dc17-11e4-a628-5fe7529edbdd","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"cea7330d-dc17-11e4-a628-07d6e17e3b0b","variableMapping":{"precision":"bwFaster","lat":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[2,3,4,5,6,7,8,333,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,334,335,33,34,349,35,336,36,37,38,39,40,41,42,43,44,338,45,46,47,339,340,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,341,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,342,343,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,344,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,350,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,345,346,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,347,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,0,234,235,236,237,1,238,239,351,352,240,241,242,243,244,244,245,245,246,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"cea75a1e-dc17-11e4-a628-03c7e5337c9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"cea75a1f-dc17-11e4-a628-8ba941088dca","variableMapping":{"baseNode":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","id":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:360","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"cea75a20-dc17-11e4-a628-d54c9ad2b5ad","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":0},{"failures":[],"tindex":"cea75a21-dc17-11e4-a628-11447adcfae5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:99","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"Africa\" , \"Australia\" , \"Eurasia\" , \"Islands\" , \"North_America\" , \"South_America\" }"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[0,237,1],"tindex":"cea75a22-dc17-11e4-a628-6fd563133d12","variableMapping":{"turnCostIndex":"nodes","nextTurnCostIndex":"nodes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-1},{"failures":[],"tindex":"cea75a23-dc17-11e4-a628-ff4c7419894d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"cea75a24-dc17-11e4-a628-c78a5270bcab","variableMapping":{"need":"size","i":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"cea75a25-dc17-11e4-a628-37f084ba0680","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[353],"tindex":"cea78136-dc17-11e4-a628-813e1ff08478","variableMapping":{"cp":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:125","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"cea78137-dc17-11e4-a628-3ffb3d7313a8","variableMapping":{"resultOrientation":"r","orientation":"r","java.lang.Math.PI":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":0},{"failures":[20,21,22,23,24,25,26,27,28,29,30,32,223,348,224,225,226,227,228,229,230,231,232,235],"tindex":"cea78138-dc17-11e4-a628-570afab501d7","variableMapping":{"graph":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1042","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage) != null)\n    com.graphhopper.storage.GraphStorage.close();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-1},{"failures":[],"tindex":"cea78139-dc17-11e4-a628-8704ed151ee3","variableMapping":{"entry":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"cea7813a-dc17-11e4-a628-abb1bdc56f6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"cea7813b-dc17-11e4-a628-3781672e3644","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"cea7813c-dc17-11e4-a628-77b0f26cb07e","variableMapping":{"retBucket":"shift","bucketSize":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,40,41,42,43,44,338,45,46,47,339,340,48,354,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,341,74,75,76,77,78,79,80,81,82,83,84,85,86,355,87,88,342,343,89,356,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,344,115,116,117,118,119,120,121,122,123,124,125,126,132,151,162,178,357,358,359,360,361,362,363,364,365,366,325,179,367,326,368,327,369,370,371,372,328,373,374,375,376,377,180,378,329,379,380,381,382,383,384,385,386,387,181,182,345,346,183,388,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,347,209,210,211,212,213,214,215,216,217,218,219,220,223,227,231,232,298,299,233,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,389,323,324,390,391,392,393,244,394,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"cea7a84d-dc17-11e4-a628-1bf17affaeeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[2,3,4,5,6,7,8,333,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,334,335,395,33,34,349,35,336,36,37,38,39,40,41,42,43,44,338,45,46,47,339,340,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,341,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,342,343,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,344,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,350,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,345,346,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,347,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,0,234,235,236,237,1,238,239,351,352,240,241,242,243,244,244,245,245,246,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"cea7a84e-dc17-11e4-a628-fddec9b7fe09","variableMapping":{"high":"segmentSizeIntsPower","guess":"segmentSizeInBytes","low":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"cea7a84f-dc17-11e4-a628-43dd77a9781d","variableMapping":{"speedEncoder":"reverseSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"cea7a850-dc17-11e4-a628-d7bcdd441d8c","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"cea7a851-dc17-11e4-a628-d7c23c294c49","variableMapping":{"cap":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-2},{"failures":[40,41,42,43,44,338,45,46,47,339,340,48,354,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,341,74,75,76,77,78,79,80,81,82,83,84,85,86,355,87,88,342,343,89,356,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,344,115,116,117,118,119,120,121,122,123,124,125,126,132,151,162,178,357,358,359,360,361,362,363,364,365,366,325,179,367,326,368,327,369,370,371,372,328,373,374,375,376,377,180,378,329,379,380,381,382,383,384,385,386,387,181,182,345,346,183,388,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,347,209,210,211,212,213,214,215,216,217,218,219,220,227,298,299,233,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,396,323,324,397,398,399,400,401,402,332,403,404,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"cea7cf62-dc17-11e4-a628-29c7e11f1f72","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[405,338,47,86,88,182,223,228,229,230,232],"tindex":"cea7cf63-dc17-11e4-a628-8fb7739dd3b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"cea7cf64-dc17-11e4-a628-2d72e8087ebd","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[298,306,406,407,408,409],"tindex":"cea7cf65-dc17-11e4-a628-29d247832d85","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"cea7cf66-dc17-11e4-a628-3bcc2d3ce52b","variableMapping":{"factor":"eleDelta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[410,411,412,413,414,415,416,417,418,419,136,142,144,145,420,163,169,171,172],"tindex":"cea7f677-dc17-11e4-a628-87b87da3b11f","variableMapping":{"tmp":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[19],"tindex":"cea7f678-dc17-11e4-a628-7b435e2a2220","variableMapping":{"len":"acceptBit","start":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[32,235,236],"tindex":"cea7f679-dc17-11e4-a628-d772236f420d","variableMapping":{"size":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failures":[411,412,413,414,416,418,419,136,144,145,163,171,172],"tindex":"cea7f67a-dc17-11e4-a628-95016e7921b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[303],"tindex":"cea7f67b-dc17-11e4-a628-ff0de0f357af","variableMapping":{"tt":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"cea7f67c-dc17-11e4-a628-b1f3b95072b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:143","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[239],"tindex":"cea7f67d-dc17-11e4-a628-9bf4ca8d4e07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"cea7f67e-dc17-11e4-a628-df231d2145ba","variableMapping":{"size":"I_SKIP_EDGE2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":0},{"failures":[6,9,10,11,12,421,422,423,19,20,21,22,23,24,25,26,27,28,29,30,31,32,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,338,47,339,49,70,75,80,83,86,88,342,90,111,116,121,124,138,139,140,165,166,167,180,182,345,184,205,210,215,218,439,440,441,442,223,348,224,225,226,227,228,229,230,231,232,238,239,240,241,244,245,247,248,249,250,251,252,254,255,290],"tindex":"cea7f67f-dc17-11e4-a628-f581581a741b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[6,41,45,224,225,228,256,257,258,259,260,261,262,264,265,266,268,269,270,271,272,273,274,276,277,278,280,281,282,283,284,285,286,287,289,290,291,293],"tindex":"cea7f680-dc17-11e4-a628-6329a8bfa76b","variableMapping":{"from":"I_LEVEL","hash":"I_LEVEL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[20,223,227,231,300,304],"tindex":"cea7f681-dc17-11e4-a628-bd681866cf85","variableMapping":{"sacScale":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"cea7f682-dc17-11e4-a628-1f7f74022cf1","variableMapping":{"y":"defaultD","angle":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[12,353],"tindex":"cea81d93-dc17-11e4-a628-b1d0bc3f9ae0","variableMapping":{"cp":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:122","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[239],"tindex":"cea81d94-dc17-11e4-a628-f162bc95d486","variableMapping":{"size":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"cea81d95-dc17-11e4-a628-dbe60c87bada","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:134","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"cea81d96-dc17-11e4-a628-c95e18c4953d","variableMapping":{"factor":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":0},{"failures":[],"tindex":"cea81d97-dc17-11e4-a628-613a85a0851c","variableMapping":{"initLeafSize":"start","maxLeafEntries":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"cea81d98-dc17-11e4-a628-b12311ece083","variableMapping":{"angle":"midLon","com.graphhopper.util.AngleCalc.PI3_4":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":0},{"failures":[],"tindex":"cea81d99-dc17-11e4-a628-8590168746b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":0},{"failures":[353],"tindex":"cea844aa-dc17-11e4-a628-e3cf2ed29426","variableMapping":{"from":"val","hash":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[443,444,330,445,446,447,448,449,450,451,452,453,454,399,400,401,455,456,457,458,459,331,460,461,462,463,464,465,466,467,468,469,332,404,470,471,472,473,474,475,476],"tindex":"ceaa678b-dc17-11e4-a628-511151dac859","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:432","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int)"},"status":-1},{"failures":[],"tindex":"ceaa678c-dc17-11e4-a628-291aff8fd9ad","variableMapping":{"index":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"ceaa678d-dc17-11e4-a628-175a9a7ffee4","variableMapping":{"newUniqueOsmId":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"ceaa678e-dc17-11e4-a628-979b8ee9aefa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"ceaa678f-dc17-11e4-a628-f1e0778cb2ca","variableMapping":{"id":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[],"tindex":"ceaa6790-dc17-11e4-a628-19647ff6a72d","variableMapping":{"min":"start","tmpSize":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[],"tindex":"ceaa6791-dc17-11e4-a628-1fe62f3ac00f","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"ceaa6792-dc17-11e4-a628-932ed2cf4c24","variableMapping":{"shift":"mask","tmpValue":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[231,303],"tindex":"ceaa6793-dc17-11e4-a628-27e33c6be4ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":74,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":288,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":338,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":358,"com.graphhopper.reader.OSMReaderTest.testFerry":19,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":401,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":139,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":348,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":469,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":100,"com.graphhopper.coll.CompressedArrayTest.testCompress":419,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":218,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":373,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":195,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":135,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":437,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":266,"com.graphhopper.GraphHopperTest.testPrepare":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":383,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":446,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":280,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":350,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":457,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":3,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":48,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":136,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":237,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":400,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":330,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":272,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":166,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":124,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":86,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":415,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":269,"com.graphhopper.GraphHopperTest.testLoadOSM":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":173,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":167,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":396,"com.graphhopper.reader.OSMReaderTest.testSort":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":452,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":342,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":432,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":213,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":182,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":384,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":251,"com.graphhopper.routing.DijkstraTest.initializationError":393,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":120,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":429,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":341,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":349,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":191,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":355,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":95,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":90,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":476,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":474,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":143,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":199,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":141,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":275,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":274,"com.graphhopper.coll.OSMIDMapTest.testGetLong":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":104,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":110,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":66,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":47,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":68,"com.graphhopper.coll.CompressedArrayTest.testCompress2":418,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":204,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":332,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":101,"com.graphhopper.GraphHopperAPITest.testLoad":221,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":354,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":34,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":298,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":196,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":186,"com.graphhopper.storage.LevelGraphStorageTest.testClone":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":1,"com.graphhopper.reader.OSMReaderTest.testBarriers":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":133,"com.graphhopper.util.GHUtilityTest.testCopy":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":362,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":151,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":295,"com.graphhopper.routing.PathTest.testFindInstruction":241,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":92,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":15,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":303,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":81,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":461,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":214,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":200,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":118,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":262,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":389,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":392,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":55,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":363,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":39,"com.graphhopper.util.InstructionListTest.testWayList2":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":468,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":379,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":174,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":96,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":445,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":238,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":345,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":102,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":152,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":276,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":24,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":431,"com.graphhopper.routing.AStarTest.initializationError":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":290,"com.graphhopper.coll.OSMIDMapTest.testGet":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":99,"com.graphhopper.routing.PathBidirRefTest.testExtract":242,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":304,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":70,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":426,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":448,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":147,"com.graphhopper.storage.RAMDataAccessTest.testCopy":435,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":433,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":378,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":398,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":406,"com.graphhopper.storage.RAMDataAccessTest.testSegments":438,"com.graphhopper.util.GHUtilityTest.testSort2":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":285,"com.graphhopper.reader.OSMReaderTest.testMain":21,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":339,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":109,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":294,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":73,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":381,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":60,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":64,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":84,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":61,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":114,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":331,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":67,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":31,"com.graphhopper.storage.StorablePropertiesTest.testStore":430,"com.graphhopper.storage.GraphHopperStorageTest.testClone":188,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":380,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":315,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":313,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":297,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":364,"com.graphhopper.routing.PathTest.testTime":352,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":472,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":82,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":54,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":176,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":328,"com.graphhopper.util.GHUtilityTest.testSortDirected":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":467,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":247,"com.graphhopper.GraphHopperTest.testFootOnly":231,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":399,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":153,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":311,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":142,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":444,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":369,"com.graphhopper.search.NameIndexTest.testCreate":442,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":244,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":337,"com.graphhopper.routing.QueryGraphTest.testOneWay":253,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":412,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":455,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":165,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":410,"com.graphhopper.reader.OSMReaderTest.testWithBounds":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":234,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":326,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":374,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":443,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":50,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":340,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":402,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":459,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":113,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":162,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":106,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":184,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":271,"com.graphhopper.util.InstructionListTest.testWayList":10,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":216,"com.graphhopper.GraphHopperAPITest.testDisconnected179":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":365,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":360,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":464,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":236,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":386,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":226,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":190,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":267,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":208,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":282,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":265,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":80,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":316,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":470,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":451,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":292,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":388,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":336,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":395,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":454,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":181,"com.graphhopper.routing.PathTest.testWayList":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":385,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":367,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":353,"com.graphhopper.coll.OSMIDMapTest.testGet2":425,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":293,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":77,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":421,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":112,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":201,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":97,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":189,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":65,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":144,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":145,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":436,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":146,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":408,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":403,"com.graphhopper.util.GHUtilityTest.testSort":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":377,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":417,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":407,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":450,"com.graphhopper.search.NameIndexTest.testPut":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":125,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":356,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":130,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":137,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":156,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":159,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":37,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":250,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":87,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":230,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":409,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":422,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":291,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":0,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":38,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":180,"com.graphhopper.routing.PathTest.testFound":351,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":232,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":323,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":79,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":449,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":103,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":441,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":179,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":193,"com.graphhopper.util.InstructionListTest.testEmptyList":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":279,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":283,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":319,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":307,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":306,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":458,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":286,"com.graphhopper.reader.PrinctonReaderTest.testRead":16,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":215,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":140,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":325,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":411,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":357,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":463,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":471,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":460,"com.graphhopper.reader.OSMReaderTest.testFoot":20,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":376,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":423,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":171,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":414,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":397,"com.graphhopper.reader.OSMReaderTest.testOneWay":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":172,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":197,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":211,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":119,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":456,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":434,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":206,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":371,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":261,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":420,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":258,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":268,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":314,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":259,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":233,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":368,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":246,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":346,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":36,"com.graphhopper.routing.PathBidirRefTest.testExtract2":243,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":270,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":175,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":473,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":439,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":209,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":475,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":26,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":387,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":465,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":168,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":212,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":56,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":317,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":205,"com.graphhopper.GraphHopperTest.testFootAndCar":227,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":150,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":361,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":94,"com.graphhopper.GraphHopperTest.testPrepareOnly":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":289,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":131,"com.graphhopper.GraphHopperTest.testVia":224,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":453,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":359,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":28,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":44,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":12,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":347,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":301,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":370,"com.graphhopper.routing.AStarBidirectionTest.initializationError":394,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":324,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":78,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":76,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":88}}]
