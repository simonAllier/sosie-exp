[{"failures":[0,1,2],"tindex":"621218c7-db2a-11e4-b6a4-fd8dd8e832d2","variableMapping":{"encoded":"oldRelationFlags","backwardBit":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[3,4],"tindex":"62130328-db2a-11e4-b6a4-85d55bd98fdc","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"62130329-db2a-11e4-b6a4-273fcf4160ec","variableMapping":{"red":"start","green":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-2},{"failures":[],"tindex":"6213032a-db2a-11e4-b6a4-8755d0a6a941","variableMapping":{"bytePos":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[5,6,7,8,9,10],"tindex":"6213032b-db2a-11e4-b6a4-5308db598de1","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"6213032c-db2a-11e4-b6a4-ff89ad00ea56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[11,12],"tindex":"6213032d-db2a-11e4-b6a4-2d744c51102f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[13],"tindex":"6213032e-db2a-11e4-b6a4-0f2596eb1c2c","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"6213032f-db2a-11e4-b6a4-d99f1363a4af","variableMapping":{"fileDetails":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[5,6,9,14,15],"tindex":"62130330-db2a-11e4-b6a4-e5b06ee4532b","variableMapping":{"cap":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"62130331-db2a-11e4-b6a4-d9ece5a849ac","variableMapping":{"initLeafSize":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"62130332-db2a-11e4-b6a4-21a1e134e632","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-2},{"failures":[],"tindex":"62130333-db2a-11e4-b6a4-6bdb3a0ad4db","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"62130334-db2a-11e4-b6a4-cf2581f2b50e","variableMapping":{"high":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"62130335-db2a-11e4-b6a4-eb937599e991","variableMapping":{"byteCount":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[],"tindex":"62132a46-db2a-11e4-b6a4-b19e721c694c","variableMapping":{"high":"scDirMask","len":"scDirMask","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[],"tindex":"62132a47-db2a-11e4-b6a4-39f4ef044ef1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[16],"tindex":"62132a48-db2a-11e4-b6a4-ff9d523fe85c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[17],"tindex":"62132a49-db2a-11e4-b6a4-e935f9c95a23","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"62132a4a-db2a-11e4-b6a4-c5255a5b5310","variableMapping":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"connectedId","bytes":"connectedId","segmentSizeInBytes":"connectedId","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":0},{"failures":[],"tindex":"62132a4b-db2a-11e4-b6a4-49cc4f6ad03a","variableMapping":{"resultOrientation":"com.graphhopper.util.AngleCalc.PI3_4","orientation":"angle","java.lang.Math.PI":"com.graphhopper.util.AngleCalc.PI3_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"62132a4c-db2a-11e4-b6a4-951f0d080990","variableMapping":{"motorcarTag":"highway","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"62132a4d-db2a-11e4-b6a4-df0a89578209","variableMapping":{"compressionLevel":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":0},{"failures":[16],"tindex":"62132a4e-db2a-11e4-b6a4-2f62fa969cd1","variableMapping":{"resultOrientation":"fullDist2D","orientation":"restDist2D","java.lang.Math.PI":"restDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[],"tindex":"62132a4f-db2a-11e4-b6a4-b1a43b8877b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[],"tindex":"62132a50-db2a-11e4-b6a4-298ffebe79bf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"62132a51-db2a-11e4-b6a4-6be081c96484","variableMapping":{"this":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:237","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"62132a52-db2a-11e4-b6a4-7dceb7c3c036","variableMapping":{"unpavedBit":"flags","shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,11,12,86,87,88,5,89,90,91,92,93,94,95,96,97,98,99,100,101,102,7,8,103,9,104,105,106,107,108,109,110,111,10,112],"tindex":"62132a53-db2a-11e4-b6a4-01cb0369fc8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[],"tindex":"62132a54-db2a-11e4-b6a4-016bb876eb04","variableMapping":{"initLeafSize":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"62139f85-db2a-11e4-b6a4-5b9df898e889","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"62139f86-db2a-11e4-b6a4-c9cda308e337","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":0},{"failures":[113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"62139f87-db2a-11e4-b6a4-5fd88f83bc1d","variableMapping":{"maxSpeed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"62139f88-db2a-11e4-b6a4-cb29765e7465","variableMapping":{"obtained":"synched"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"62139f89-db2a-11e4-b6a4-c7cc59c5b579","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"62139f8a-db2a-11e4-b6a4-89012d56dcc2","variableMapping":{"i":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":0},{"failures":[130],"tindex":"6213c69b-db2a-11e4-b6a4-eb3f1ede4cba","variableMapping":{"configLocation":"hourStr","fileStr":"hourStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:64","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"6213c69c-db2a-11e4-b6a4-1d2d9559df90","variableMapping":{"y":"ele","angle":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[131,132,133,134,135,136,137,138,13,139,140,141,142,143,144,124,145,146,127,147,148],"tindex":"6213c69d-db2a-11e4-b6a4-512e80a05d9b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[13,141,143,144,146,148],"tindex":"6213c69e-db2a-11e4-b6a4-35c951f8ef1c","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"6213c69f-db2a-11e4-b6a4-5d17d0721667","variableMapping":{"factor":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[],"tindex":"6213c6a0-db2a-11e4-b6a4-8d99a51ba930","variableMapping":{"speed":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"6213c6a1-db2a-11e4-b6a4-4b678fcd6b61","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"6213c6a2-db2a-11e4-b6a4-fb32d1af56a9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"6213c6a3-db2a-11e4-b6a4-e5ac0e826dcd","variableMapping":{"a_lat_deg":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:223","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[16],"tindex":"6213c6a4-db2a-11e4-b6a4-ebb2cd4faecf","variableMapping":{"speed":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"6213edb5-db2a-11e4-b6a4-13f7908e91cf","variableMapping":{"compressionLevel":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[149,134,150,151,152,135,136,153,154,114,155,156,157,158,159,160,161,162,3,124,163,164,165,166,4,127,167,168,169,1,2],"tindex":"6213edb6-db2a-11e4-b6a4-f59fbb8e8104","variableMapping":{"elevation":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:96","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"6213edb7-db2a-11e4-b6a4-d510f7fc226f","variableMapping":{"pointer":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":0},{"failures":[],"tindex":"6213edb8-db2a-11e4-b6a4-9f65d537cd87","variableMapping":{"speedVal":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":0},{"failures":[],"tindex":"6213edb9-db2a-11e4-b6a4-1d55c9ecb9a4","variableMapping":{"res":"weightLong","value":"weightLong"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":0},{"failures":[],"tindex":"6213edba-db2a-11e4-b6a4-573b3b15a732","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"6213edbb-db2a-11e4-b6a4-a150f7e6dccd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:394","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[],"tindex":"6213edbc-db2a-11e4-b6a4-65a40b98fc1c","variableMapping":{"nodesContracted":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":0},{"failures":[],"tindex":"6213edbd-db2a-11e4-b6a4-d326673ce5f8","variableMapping":{"this":"em"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:323","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.(getVehicleCount()) == 0)\n    throw new java.lang.IllegalStateException(\"No encoder is active!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":0},{"failures":[],"tindex":"621414ce-db2a-11e4-b6a4-7d396e3c3313","variableMapping":{"gradient":"maxLon","yend":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"621414cf-db2a-11e4-b6a4-5daee990f732","variableMapping":{"val":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:769","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"621414d0-db2a-11e4-b6a4-0505403347c2","variableMapping":{"shiftSum":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"621414d1-db2a-11e4-b6a4-2950140b3c43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[],"tindex":"621414d2-db2a-11e4-b6a4-91a7ac0388cc","variableMapping":{"bytesForFlags":"bytesForFlags","acceptStr":"flagEncodersStr","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1400","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = new com.graphhopper.routing.util.EncodingManager(java.lang.String , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[170,171,132,133,172,173,174,175,176,177,178,179,180,181,40,182,183,184,185,186,187,188,189,190,191,192,41],"tindex":"621414d3-db2a-11e4-b6a4-933aecb57ce8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":-1},{"failures":[149,115,193,194,138,195,196,116,17,117,118,141,121,197,198,199,200,163,167,201,202,5,6,203,9],"tindex":"621414d4-db2a-11e4-b6a4-d5a58f6718da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[204,205,206,207,208,209,93,96,102,8,104,109,110,111],"tindex":"621414d5-db2a-11e4-b6a4-417c4b9ba283","variableMapping":{"index":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[],"tindex":"621414d6-db2a-11e4-b6a4-8347a2cd4305","variableMapping":{"y":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","angle":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[159,161,162,165,166,169,1,2],"tindex":"621414d7-db2a-11e4-b6a4-0ffde25e26ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"621414d8-db2a-11e4-b6a4-413ff5dbe888","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"62143be9-db2a-11e4-b6a4-4f4be8054079","variableMapping":{"latSize":"endNode","lonSize":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"62143bea-db2a-11e4-b6a4-7bb682f0a143","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"62143beb-db2a-11e4-b6a4-8fe6329fdf7f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-2},{"failures":[199,200,210,211],"tindex":"62143bec-db2a-11e4-b6a4-bf5dc29f8a45","variableMapping":{"i":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[113,212,213,214,43,44,47,50,215,216,54,6,203,9,14,104,105,109,15,110,10],"tindex":"62143bed-db2a-11e4-b6a4-b968ef75f2a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.next()"},"status":-1},{"failures":[],"tindex":"62143bee-db2a-11e4-b6a4-7366888263fc","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[84,86,217],"tindex":"62143bef-db2a-11e4-b6a4-5b663f7528c3","variableMapping":{"numTiles":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[218,219],"tindex":"62143bf0-db2a-11e4-b6a4-530d3abdd388","variableMapping":{"fwdFaster":"midLat","incDist2DSum":"lat","fwdSlower":"midLat","fullDist2D":"midLat","restDist2D":"lat","speed":"midLat","decDist2DSum":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"62143bf1-db2a-11e4-b6a4-bf819935225e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[212,109,111],"tindex":"62143bf2-db2a-11e4-b6a4-f196304ccff4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"62143bf3-db2a-11e4-b6a4-d1a6a7d7b830","variableMapping":{"err":"start","dLat":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[131,113,170,171,132,220,221,222,133,223,18,19,149,134,150,151,224,152,135,136,153,225,226,154,114,155,227,228,20,21,229,230,22,231,232,233,23,24,25,115,234,235,236,34,237,238,239,240,241,38,242,243,244,245,246,39,247,248,249,250,251,252,253,254,172,173,174,175,255,176,256,257,177,178,179,180,181,40,258,182,259,260,261,183,184,185,186,262,187,263,264,188,189,190,191,192,41,265,266,267,268,269,270,271,272,273,274,275,212,276,213,277,278,279,280,281,42,282,283,214,284,43,44,285,45,46,286,287,288,47,289,290,291,292,293,294,48,295,49,296,297,298,299,300,50,301,51,302,303,52,215,53,216,304,305,306,54,307,308,55,309,310,311,312,56,57,313,58,59,314,315,316,60,317,318,319,320,321,322,61,323,62,324,325,326,327,328,63,329,64,330,331,65,332,66,333,334,335,336,67,337,68,338,69,339,340,341,342,70,71,343,72,73,344,345,346,74,347,348,349,350,351,352,75,353,76,354,355,356,357,358,77,359,78,360,361,79,362,80,363,364,365,366,81,367,82,83,368,84,85,11,12,86,217,369,16,87,88,370,201,202,371,5,6,89,90,91,92,93,94,95,96,97,372,373,203,98,99,100,101,374,102,7,8,103,9,14,375,104,105,106,107,108,376,109,15,110,377,111,10,378,378,379,379,380,380,381,381,112,112,382,382,383,383,384,384,385,385,386,386,387,387,388,388],"tindex":"62143bf4-db2a-11e4-b6a4-f3a96cb811e5","variableMapping":{"bytePos":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"62143bf5-db2a-11e4-b6a4-f53865322700","variableMapping":{"baseUrl":"str","name":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:162","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[113,170,171,132,220,222,133,18,19,149,134,150,151,224,152,135,136,153,225,226,154,114,155,228,20,22,115,389,26,27,30,236,31,33,35,390,37,212,42,284,43,44,47,290,48,50,52,216,54,55,312,56,57,60,318,61,63,65,333,67,68,69,342,70,71,74,348,75,77,79,363,81,82,391,193,368,137,194,392,138,13,195,84,86,217,196,393,394,116,17,139,140,395,117,118,141,396,397,398,399,400,401,402,5,6,89,90,92,94,95,97,373,203,98,100,102,8,103,9,14,375,104,105,109,15,110,111,10,112,384],"tindex":"62146306-db2a-11e4-b6a4-cb5b20302ae5","variableMapping":{"unpavedBit":"forwardBit","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"62146307-db2a-11e4-b6a4-1fcec4847390","variableMapping":{"sInt":"this","speed":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[158,160,164,168],"tindex":"62146308-db2a-11e4-b6a4-19760eec106c","variableMapping":{"graphHopperFolder":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[403,404,218,405,406,219,407,408],"tindex":"62146309-db2a-11e4-b6a4-7daac93b335d","variableMapping":{"factor":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[136,398,409,410,402],"tindex":"6214630a-db2a-11e4-b6a4-ebaa9d2f5573","variableMapping":{"flags2":"flags","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"turnRestrictionBit","flags1":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"6214630b-db2a-11e4-b6a4-d77783b9efd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[403,404,253,255,256,257,411,260,262,263,264,218,405,406,407,408,412,413],"tindex":"6214630c-db2a-11e4-b6a4-f930f2bcc8a3","variableMapping":{"res":"hash","maxBit":"hash","value":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"6214630d-db2a-11e4-b6a4-7d0791954b8a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"6214630e-db2a-11e4-b6a4-e94f9e72e9ce","variableMapping":{"from":"maxCount","hash":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[84,86],"tindex":"6214630f-db2a-11e4-b6a4-a7c05727d111","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[12],"tindex":"62146310-db2a-11e4-b6a4-4d159b105011","variableMapping":{"y1":"biggestStart","y2":"biggestStart","x1":"biggestStart","x2":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[],"tindex":"62146311-db2a-11e4-b6a4-9783408726f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:114","type":"CtLocalVariableImpl","sourcecode":"int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int))"},"status":-2},{"failures":[131,414,113,170,171,132,220,221,222,133,223,149,134,150,151,224,152,135,136,153,225,226,154,114,415,155,137,138,196,116,17,117,141,416,156,157,417,418,419,158,120,420,159,199,421,200,422,423,424,160,123,161,210,162,425,3,163,426,427,428,164,126,429,165,211,166,430,4,167,431,432,433,168,129,434,169,1,2,435],"tindex":"62146312-db2a-11e4-b6a4-6d7b77f7ddab","variableMapping":{"speedVal":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"62146313-db2a-11e4-b6a4-d5b7cfe8635b","variableMapping":{"res":"weightLong","value":"weightLong"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":0},{"failures":[],"tindex":"62159b94-db2a-11e4-b6a4-b1e2a053c99c","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"62159b95-db2a-11e4-b6a4-f5c7382da2e5","variableMapping":{"this":"this","unknownSpeed":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"62159b96-db2a-11e4-b6a4-9b87f60241fb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"62159b97-db2a-11e4-b6a4-85a38160a550","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"62159b98-db2a-11e4-b6a4-4de623f26a32","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"62159b99-db2a-11e4-b6a4-2938877b326c","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":374,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":379,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":121,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":279,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":26,"com.graphhopper.reader.OSMReaderTest.testFerry":149,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":20,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":124,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":422,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":184,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":414,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":347,"com.graphhopper.coll.CompressedArrayTest.testCompress":404,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":122,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":336,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":106,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":280,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":318,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":259,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":110,"com.graphhopper.GraphHopperTest.testPrepare":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":14,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":62,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":209,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":425,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":97,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":247,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":160,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":235,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":214,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":260,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":86,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":200,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":210,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":95,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":173,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":366,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":68,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":412,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":284,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":10,"com.graphhopper.GraphHopperTest.testLoadOSM":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":177,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":174,"com.graphhopper.reader.OSMReaderTest.testSort":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":126,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":11,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":339,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":332,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":55,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":407,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":384,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":80,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":301,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":269,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":315,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":276,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":73,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":4,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":342,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":159,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":120,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":187,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":98,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":182,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":92,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":351,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":355,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":295,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":42,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":296,"com.graphhopper.coll.CompressedArrayTest.testCompress2":403,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":325,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":416,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":348,"com.graphhopper.GraphHopperAPITest.testLoad":82,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":268,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":391,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":319,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":57,"com.graphhopper.storage.LevelGraphStorageTest.testClone":45,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":217,"com.graphhopper.reader.OSMReaderTest.testBarriers":224,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":258,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":410,"com.graphhopper.util.GHUtilityTest.testCopy":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":94,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":41,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":144,"com.graphhopper.routing.PathTest.testFindInstruction":371,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":71,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":204,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":138,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":228,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":304,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":243,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":430,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":66,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":79,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":108,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":352,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":286,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":311,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":275,"com.graphhopper.util.InstructionListTest.testWayList2":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":434,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":178,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":162,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":365,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":369,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":349,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":248,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":93,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":74,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":13,"com.graphhopper.routing.PathBidirRefTest.testExtract":87,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":426,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":367,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":40,"com.graphhopper.util.GHUtilityTest.testSort2":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":99,"com.graphhopper.reader.OSMReaderTest.testMain":150,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":282,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":354,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":413,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":146,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":190,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":50,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":340,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":290,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":294,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":54,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":112,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":211,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":267,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":49,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":114,"com.graphhopper.storage.GraphHopperStorageTest.testClone":58,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":337,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":141,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":117,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":321,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":143,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":277,"com.graphhopper.routing.PathTest.testTime":201,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":419,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":305,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":180,"com.graphhopper.reader.OSMReaderTest.testRelation":0,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":300,"com.graphhopper.util.GHUtilityTest.testSortDirected":232,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":129,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":381,"com.graphhopper.GraphHopperTest.testFootOnly":133,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":421,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":140,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":249,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":262,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":31,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":378,"com.graphhopper.routing.QueryGraphTest.testOneWay":386,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":406,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":423,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":172,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":218,"com.graphhopper.reader.OSMReaderTest.testWithBounds":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":148,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":364,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":382,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":195,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":1,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":43,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":283,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":128,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":161,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":358,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":75,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":312,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":6,"com.graphhopper.util.InstructionListTest.testWayList":24,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":334,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":145,"com.graphhopper.GraphHopperAPITest.testDisconnected179":83,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":219,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":359,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":432,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":12,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":125,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":171,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":314,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":377,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":63,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":373,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":15,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":216,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":396,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":164,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":103,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":271,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":165,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":308,"com.graphhopper.routing.PathTest.testWayList":202,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":9,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":357,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":323,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":193,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":345,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":48,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":263,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":264,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":188,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":156,"com.graphhopper.util.GHUtilityTest.testSort":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":81,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":313,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":245,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":261,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":252,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":239,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":127,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":383,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":16,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":237,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":338,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":198,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":392,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":353,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":84,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":274,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":34,"com.graphhopper.routing.PathTest.testFound":370,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":223,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":435,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":53,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":427,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":350,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":205,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":236,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":60,"com.graphhopper.util.InstructionListTest.testEmptyList":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":119,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":203,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":399,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":394,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":393,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":100,"com.graphhopper.reader.PrinctonReaderTest.testRead":18,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":333,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":185,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":346,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":389,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":76,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":431,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":402,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":166,"com.graphhopper.reader.OSMReaderTest.testFoot":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":33,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":388,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":256,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":306,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":408,"com.graphhopper.reader.OSMReaderTest.testOneWay":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":257,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":320,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":331,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":362,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":424,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":327,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":32,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":107,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":411,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":111,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":105,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":240,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":368,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":183,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":380,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":310,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":415,"com.graphhopper.routing.PathBidirRefTest.testExtract2":88,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":272,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":5,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":39,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":179,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":64,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":420,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":136,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":137,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":241,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":433,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":175,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":65,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":287,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":397,"com.graphhopper.GraphHopperTest.testFootAndCar":132,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":326,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":157,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":28,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":401,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":398,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":102,"com.graphhopper.GraphHopperTest.testPrepareOnly":131,"com.graphhopper.GraphHopperTest.testVia":113,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":27,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":225,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":278,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":115,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":329,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":194,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":153,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":196,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":215,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":303,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":69}}]
