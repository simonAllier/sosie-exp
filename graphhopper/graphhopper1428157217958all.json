[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"b9875236-dad5-11e4-9d81-735606530398","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"b9899c27-dad5-11e4-9d81-a9543db48900","variableMapping":{"i":"i","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[28,7,29],"tindex":"b9899c28-dad5-11e4-9d81-23e3bd88e39d","variableMapping":{"err":"tmpPrevEdge","dLat":"tmpPrevEdge","tmpErr":"tmpPrevEdge","x1":"tmpPrevEdge","sLon":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[30],"tindex":"b9899c29-dad5-11e4-9d81-43907ded0e7c","variableMapping":{"str":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[9,10,21,31,22,23,24,27],"tindex":"b9899c2a-dad5-11e4-9d81-3b0cacfd51a3","variableMapping":{"incEleSum":"midLon","eleDelta":"lon","incDist2DSum":"lon","decEleSum":"midLon","fullDist2D":"lon","decDist2DSum":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[32,33,34],"tindex":"b9899c2b-dad5-11e4-9d81-4fef1a58abb7","variableMapping":{"osmFile":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"b9899c2c-dad5-11e4-9d81-bfa7bf8d3973","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"b9899c2d-dad5-11e4-9d81-bd5aff171575","variableMapping":{"nodeId":"directionBitMask","nodeIdOffset":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"b9899c2e-dad5-11e4-9d81-5907d7d9d836","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[53,38,54,41,55,56,57],"tindex":"b9899c2f-dad5-11e4-9d81-cbf19107e6ff","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"b9899c30-dad5-11e4-9d81-75f4f73682ba","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,50,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,96,97,1,2,98,99,100,101,102,103,104,105,106,107,3,108,4,109,5,110,111,6,112,113,114,115,116,117,118,7,8,119,120,29,121],"tindex":"b989c341-dad5-11e4-9d81-d3b74309a918","variableMapping":{"str":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":-1},{"failures":[],"tindex":"b989c342-dad5-11e4-9d81-d9f85196cac7","variableMapping":{"freeIndex":"unvisitedDeadEnds","currentIndex":"unvisitedDeadEnds"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[122,123],"tindex":"b989c343-dad5-11e4-9d81-57a209d0d195","variableMapping":{"dist":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"b989c344-dad5-11e4-9d81-a3f95d3d3583","variableMapping":{"weightLong":"encoded","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[],"tindex":"b989c345-dad5-11e4-9d81-13c24e266be6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26],"tindex":"b989c346-dad5-11e4-9d81-6145b447d6b9","variableMapping":{"incEleSum":"maxLatTmp","eleDelta":"lat","incDist2DSum":"lat","decEleSum":"maxLatTmp","fullDist2D":"minLatTmp","decDist2DSum":"maxLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[53,124,35,36,37,38,39,125,40,54,126,127,41,42,128,43,129,130,44,45,46,47,48,131,49,132,133,134,135,136,137,138,139,140],"tindex":"b989c347-dad5-11e4-9d81-331768eb533b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[53,124,35,36,37,38,39,125,40,54,58,59,41,42,43,44,45,46,47,48,49,61,62,63,66,70,71,72,50,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,28,157,133,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,135,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,137,138,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,79,81,206,82,83,85,86,51,207,52,208,209,210,211,88,89,91,92,93,94,95,0,96,97,1,2,98,99,100,101,102,103,104,105,106,107,3,108,4,109,5,110,111,6,112,113,114,115,116,117,7,8,119,120,29,121,212,213],"tindex":"b989c348-dad5-11e4-9d81-4b0f9a0d3b2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-1},{"failures":[],"tindex":"b989c349-dad5-11e4-9d81-ef8b9067dd24","variableMapping":{"counts":"endIndexPlusOne","counter":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[9,10,20,21,31,22,214,23,24,27],"tindex":"b989c34a-dad5-11e4-9d81-a965f526e839","variableMapping":{"i":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"b989ea5b-dad5-11e4-9d81-a5475c3a6876","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"b989ea5c-dad5-11e4-9d81-cf48c9b22825","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:154","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"b989ea5d-dad5-11e4-9d81-2513f261e98e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[124,36,37,38,39,125,40,41,42,43,44,45,46,48,61,70,71,72,145,148,149,150,152,153,154,156,215,216,217,218,133,162,165,166,167,169,170,171,173,135,178,181,182,183,185,186,187,189,137,138,194,197,198,199,201,202,203,205,79,81,82,83,84,85,86,209,92,0,96,2,101,103,106,3,4,109,5,111,113,114,115,116,117,7,119,29],"tindex":"b989ea5e-dad5-11e4-9d81-1b237352ed74","variableMapping":{"high":"dir","len":"flags","start":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"b989ea5f-dad5-11e4-9d81-316800960934","variableMapping":{"line":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[44],"tindex":"b989ea60-dad5-11e4-9d81-090165bd7d67","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"maxTurnCosts","nodeType":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-1},{"failures":[],"tindex":"b989ea61-dad5-11e4-9d81-2dd421aa4900","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[82,86,87],"tindex":"b989ea62-dad5-11e4-9d81-4f56e49fc023","variableMapping":{"index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[32,34,219,220,221,222,223,224,225,226,227,228],"tindex":"b989ea63-dad5-11e4-9d81-7f507bbd48b4","variableMapping":{"edgeId":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[],"tindex":"b989ea64-dad5-11e4-9d81-b77cd8d0078e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"b989ea65-dad5-11e4-9d81-9779d3c130cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"b989ea66-dad5-11e4-9d81-d73c10731567","variableMapping":{"size":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[],"tindex":"b989ea67-dad5-11e4-9d81-e76437d00fc5","variableMapping":{"dataAccess":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:163","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[229],"tindex":"b989ea68-dad5-11e4-9d81-6b787b63ca9c","variableMapping":{"str":"str","name":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:82","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[28,4,112,113,7,29],"tindex":"b989ea69-dad5-11e4-9d81-f3056260233a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[82,86,87],"tindex":"b98a117a-dad5-11e4-9d81-45727ccd8bef","variableMapping":{"values":"nodeLowLink","n":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:321","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int[][int] = -1;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-1},{"failures":[],"tindex":"b98a117b-dad5-11e4-9d81-27d64f344f9c","variableMapping":{"flags":"oldRelationFlags","tmpValue":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"b98a117c-dad5-11e4-9d81-3bb708c7d828","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[],"tindex":"b98a117d-dad5-11e4-9d81-2b28560c6126","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[210],"tindex":"b98a117e-dad5-11e4-9d81-a318e4ce8d24","variableMapping":{"turnCostsCount":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"b98a117f-dad5-11e4-9d81-6f3bcc2cffcc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"b98a1180-dad5-11e4-9d81-81d54cbfbeb8","variableMapping":{"bit":"sLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[35,36,37,38,39,40,54,42,128,43,11,230,231,232,233,234,13,14,235,236,237,238,239,217,240,15,241,242,16,243,244,245,246,247,18,19,248,249,250,251,252,218,79,80,100,104,105,3],"tindex":"b98a1181-dad5-11e4-9d81-f1a7ff1622d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b98a1182-dad5-11e4-9d81-c96e4f82d14c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[53,35,36,37,38,39,125,40,54,126,58,59,127,41,42,128,43,129,130,44,45,46,47,48,131,49,60,61,62,63,64,65,66,67,68,69,70,71,72,50,73,74,148,152,253,254,255,256,257,215,258,259,260,261,262,216,263,264,265,266,267,11,268,230,231,232,233,234,13,14,235,236,237,238,239,217,241,242,269,16,270,243,244,245,246,247,18,19,248,249,250,251,252,218,271,272,273,274,275,276,277,278,28,279,75,280,157,281,133,282,158,159,160,283,161,162,284,285,163,164,286,165,287,288,289,166,290,167,291,292,293,294,295,168,169,296,297,170,298,171,172,299,300,301,173,302,135,303,174,175,176,304,177,178,305,306,179,180,307,181,308,309,310,182,311,183,312,313,314,315,316,184,185,317,318,186,319,187,188,320,321,322,189,323,137,138,324,190,191,192,325,193,194,326,327,195,196,328,197,329,330,331,198,332,199,333,334,335,336,337,200,201,338,339,202,340,203,204,341,342,343,205,344,79,80,81,82,83,84,85,86,87,345,210,88,89,92,93,94,95,0,96,97,1,2,98,99,100,101,102,103,104,105,106,107,3,108,4,109,5,110,111,6,112,113,114,115,116,117,118,7,8,119,120,29,121,346,347,123,348,212,349,350,213,351,352,353],"tindex":"b98a1183-dad5-11e4-9d81-99b71610aadf","variableMapping":{"i":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-1},{"failures":[],"tindex":"b98a3894-dad5-11e4-9d81-c7295742ffe4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[53,35,36,37,38,39,125,40,54,126,58,59,127,41,42,128,43,129,130,44,45,46,47,48,131,49,60,61,62,63,64,65,66,67,68,70,71,72,50,73,74,148,152,253,254,255,256,257,215,258,259,260,261,262,216,263,264,265,266,267,11,268,230,231,232,233,12,234,13,14,235,236,237,238,239,217,241,242,269,16,270,243,244,245,246,17,247,18,19,248,249,250,251,252,218,271,272,273,274,275,276,277,278,28,279,75,280,157,281,354,133,282,158,159,160,283,161,162,284,285,163,164,286,165,287,288,355,289,166,290,167,291,292,293,294,295,168,169,296,297,170,298,171,172,299,300,301,173,302,356,135,303,174,175,176,304,177,178,305,306,179,180,307,181,308,309,357,310,182,311,183,312,313,314,315,316,184,185,317,318,186,319,187,188,320,321,322,189,323,137,358,138,324,190,191,192,325,193,194,326,327,195,196,328,197,329,330,359,331,198,332,199,333,334,335,336,337,200,201,338,339,202,340,203,204,341,342,343,205,344,79,80,81,82,83,84,85,86,87,345,210,88,89,92,93,94,95,0,96,97,1,2,98,99,100,101,102,103,104,105,106,107,3,108,4,109,5,110,111,6,112,113,114,115,116,117,118,7,8,119,120,29,121,346,347,123,348,212,349,350,213,351,352,360,353],"tindex":"b98a3895-dad5-11e4-9d81-8580a6cdb549","variableMapping":{"flags":"bytePos","mask":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[32,34,361,362,363,219,364,365,366,367,368,225,369,370,371,228],"tindex":"b98a3896-dad5-11e4-9d81-c589f7f0fcfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[53,124,35,36,37,38,39,372,125,40,54,126,373,58,59,127,41,42,128,43,129,130,44,45,374,46,47,48,131,49,61,62,63,64,65,66,67,375,68,69,70,71,72,50,73,74,141,142,143,376,144,145,377,378,146,147,379,148,380,381,382,383,149,384,150,385,386,387,388,389,151,390,152,391,392,153,393,154,155,394,395,396,156,397,253,254,255,256,398,257,215,258,259,260,261,399,262,216,263,264,265,266,400,267,11,268,230,231,232,233,12,234,13,14,235,236,237,238,401,239,217,241,242,269,16,270,243,244,245,246,17,247,18,19,248,249,250,251,402,252,218,28,279,75,280,157,132,281,354,133,134,403,282,76,158,159,160,283,161,162,284,285,163,164,286,165,287,288,355,289,166,290,167,291,292,293,294,295,168,404,169,296,297,170,298,171,172,299,300,301,173,302,356,135,136,405,303,77,174,175,176,304,177,178,305,306,179,180,307,181,308,309,357,310,182,311,183,312,313,314,315,316,184,406,185,317,318,186,319,187,188,320,321,322,189,323,137,407,358,138,139,408,324,78,190,191,192,325,193,194,326,327,195,196,328,197,329,330,359,331,198,332,199,333,334,335,336,337,200,409,201,338,339,202,340,203,204,341,342,343,205,344,79,80,410,411,412,413,81,55,206,414,56,57,415,82,83,84,85,86,87,416,417,418,419,51,420,421,207,422,423,52,424,208,425,209,426,427,32,33,34,428,429,430,361,431,432,433,362,363,434,219,435,436,437,438,220,439,221,222,440,441,442,443,444,445,364,365,446,447,448,223,449,450,451,452,224,453,454,455,456,457,366,458,459,460,367,368,461,225,462,345,210,463,226,464,465,466,467,227,468,469,470,471,472,369,473,474,475,370,371,476,228,477,478,479,480,88,89,90,91,92,93,481,94,95,0,96,97,1,2,98,99,100,101,102,103,104,105,106,107,3,108,4,109,5,110,111,6,112,482,113,114,115,116,117,118,7,8,119,120,29,121,483,346,347,123,348,212,349,350,213,351,352,360,353,484,485],"tindex":"b98a5fa7-dad5-11e4-9d81-e5cf09783d09","variableMapping":{"size":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[33,34,362,221,364,451,224,367,466,227,370],"tindex":"b98a5fa8-dad5-11e4-9d81-13aed7db86c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[],"tindex":"b98a5fa9-dad5-11e4-9d81-1537f0361fda","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":-2},{"failures":[124,35,36,37,38,39,125,40,126,127,41,42,128,43,44,45,46,47,48,131,49,50,416,419,51,422,423,52,486],"tindex":"b98a5faa-dad5-11e4-9d81-cfc648df7da2","variableMapping":{"nanoTime":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"b98a5fab-dad5-11e4-9d81-85d7fc8aa0cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[53,35,36,37,38,39,125,40,54,126,41,42,128,43,129,130,44,45,46,47,48,49,84],"tindex":"b98a5fac-dad5-11e4-9d81-e95a23b340f5","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"b98a5fad-dad5-11e4-9d81-45a6ac567bb3","variableMapping":{"name":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:161","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String + \".tif\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":0},{"failures":[41,49,33,34,362,435,220,221,364,447,449,451,224,367,462,464,466,227,370,477,487,488,480],"tindex":"b98a5fae-dad5-11e4-9d81-5fb88cdf7155","variableMapping":{"len":"encoded","start":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-1},{"failures":[32,34,219,220,221,222,223,452,224,225,226,467,227,228],"tindex":"b98a5faf-dad5-11e4-9d81-3961132652d3","variableMapping":{"tInt":"hwInt","speed":"hwInt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:155","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    java.lang.Integer = java.lang.Integer;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[53,35,36,37,38,39,125,40,54,126,41,42,128,43,129,130,44,45,46,47,48,49,84],"tindex":"b98a5fb0-dad5-11e4-9d81-fd85009858cc","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[53,124,35,36,37,38,39,125,40,54,126,127,41,42,128,43,129,130,44,45,374,46,47,48,131,489,49,490,491,492,50,412,55,56,57,416,417,418,419,51,420,421,422,423,52,427,32,33,34,428,429,361,431,432,433,362,363,434,219,435,486,438,220,439,221,222,440,441,443,444,445,364,365,446,447,223,449,450,451,452,224,454,455,456,366,458,459,460,367,368,461,225,462,345,226,464,465,466,467,227,469,470,471,369,473,474,475,370,371,476,228,477,487,488,480],"tindex":"b98a5fb1-dad5-11e4-9d81-5965549aa824","variableMapping":{"str":"name","this":"value","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:97","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"b98a5fb2-dad5-11e4-9d81-831b91b93af3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[53,38,54,41,55,56,57],"tindex":"b98a5fb3-dad5-11e4-9d81-9f866f920f8a","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[53,124,35,36,37,38,39,125,40,54,126,127,41,42,128,43,129,130,44,45,46,47,48,131,49,493,494,495,496,497,498,499,500,66,70,71,72,50,501,502,503,504,152,505,506,507,508,509,510,511,512,513,514,515,516,263,264,265,266,267,230,231,232,243,244,245,517,518,519,520,521,522,523,524,525,526,527,528,529,132,133,134,158,161,293,296,172,300,301,135,136,174,177,314,185,317,188,321,322,137,138,139,190,193,335,201,338,204,342,343,530,140,345,210,92,93,109,346,347,348,212,349,350,213,351,360,353],"tindex":"b98a86c4-dad5-11e4-9d81-67afa38d219d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:114","type":"CtAssignmentImpl","sourcecode":"byte[][][int] = new byte[1 << (int)]"},"status":-1},{"failures":[],"tindex":"b98a86c5-dad5-11e4-9d81-a3370c134283","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"b98a86c6-dad5-11e4-9d81-99ae9b177d3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"b98a86c7-dad5-11e4-9d81-ff5f30d68713","variableMapping":{"value":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[210],"tindex":"b98a86c8-dad5-11e4-9d81-f30fe7a71488","variableMapping":{"towerNodeDistance":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[49,143,379,380,381,383,385,386,391,392,281,160,286,287,288,289,291,292,296,297,176,307,308,309,310,312,313,317,318,192,328,329,330,331,333,334,338,339,82,84,85],"tindex":"b98a86c9-dad5-11e4-9d81-49b4d4a39e50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[54,56],"tindex":"b98a86ca-dad5-11e4-9d81-61717c07a372","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"b98a86cb-dad5-11e4-9d81-0321c717ef37","variableMapping":{"high":"flags","low":"relationFlags","guess":"flags","guessedKey":"includeWay","key":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":0},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,31,22,23,24,25,26,27],"tindex":"b98a86cc-dad5-11e4-9d81-d780b270fd23","variableMapping":{"size":"allBits","newSize":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"b98a86cd-dad5-11e4-9d81-83d3fd9d5bbf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[32],"tindex":"b98a86ce-dad5-11e4-9d81-bb73b20ccc64","variableMapping":{"motorcarTag":"highway","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"b98a86cf-dad5-11e4-9d81-4512760de680","variableMapping":{"tmpNo":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[44,425,453,468,531],"tindex":"b98a86d0-dad5-11e4-9d81-f7fd9ccc4f4d","variableMapping":{"scDirMask":"turnRestrictionBit","flags":"turnRestrictionBit","dir":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[53,35,36,37,38,39,125,40,54,126,58,59,127,41,42,128,43,129,130,44,45,46,47,48,131,49,60,532,533,496,497,498,499,500,61,62,63,64,65,66,67,68,69,70,71,72,50,73,74,501,502,503,504,141,142,143,376,144,145,377,378,146,147,379,148,380,381,382,383,149,384,150,385,386,387,388,389,151,390,152,391,392,153,393,154,155,394,395,396,156,397,505,506,507,534,508,509,535,510,511,512,513,514,515,516,253,254,255,256,257,215,258,259,260,261,262,216,536,263,264,265,266,400,267,11,268,230,231,232,233,12,234,13,14,235,236,237,238,239,217,241,242,269,16,270,243,244,245,246,17,247,18,19,248,249,250,251,252,218,537,271,538,272,273,539,274,540,541,275,276,277,278,518,519,520,542,521,522,543,523,524,525,526,527,528,529,544,545,546,547,548,549,550,551,28,279,75,280,157,132,281,354,133,134,403,282,158,159,160,283,161,162,284,285,163,164,286,165,287,288,355,289,166,290,167,291,292,293,294,295,168,404,169,296,297,170,298,171,172,299,300,301,173,302,356,135,136,405,303,174,175,176,304,177,178,305,306,179,180,307,181,308,309,357,310,182,311,183,312,313,314,315,316,184,406,185,317,318,186,319,187,188,320,321,322,189,323,137,407,358,138,139,408,324,190,191,192,325,193,194,326,327,195,196,328,197,329,330,359,331,198,332,199,333,334,335,336,337,200,409,201,338,339,202,340,203,204,341,342,343,205,344,530,552,553,554,555,556,557,558,559,560,561,562,563,564,565,140,79,80,81,82,83,84,85,86,87,345,210,88,89,90,91,92,93,94,95,0,96,97,1,2,98,99,100,101,102,103,104,105,106,107,3,108,4,109,5,110,111,6,112,113,114,115,116,117,118,7,8,119,120,29,121,346,346,347,347,123,123,348,348,212,212,349,349,350,350,213,213,351,351,352,352,360,360,353,353],"tindex":"b98aade1-dad5-11e4-9d81-1f0bfb9b0886","variableMapping":{"latSize":"segmentSizeInBytes","size":"tmp","this":"this","lonSize":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:146","type":"CtAssignmentImpl","sourcecode":"int = int = java.lang.Math.((int)(java.lang.Math.sqrt(int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[],"tindex":"b98be662-dad5-11e4-9d81-efc9af277ce2","variableMapping":{"strLen":"usedBits","res":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:192","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[35,36,37,38,39,40,131,50,416,419,422,423,486],"tindex":"b98be663-dad5-11e4-9d81-c1742d487347","variableMapping":{"r":"speed","x":"speed","absY":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"b98be664-dad5-11e4-9d81-2b94a8b22172","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"b98be665-dad5-11e4-9d81-ad917a9b124b","variableMapping":{"versionHint":"entryVal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[422,423,363,486,365,368,371],"tindex":"b98be666-dad5-11e4-9d81-bb16695411d5","variableMapping":{"r":"speed","x":"speed","absY":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[374,412,413,81,55,206,414,56,57,415,416,417,418,419,51,420,421,207,422,423,52,424,208,425,209,426,221,448,223,449,450,451,452,224,453,454,455,456,457,366,458,459,460,367,368,461,225,462,345,210,463,226,464,465,466,467,227,468,469,470,471,472,369,473,474,475,370,371,476,228,477,478],"tindex":"b98be667-dad5-11e4-9d81-41ab68672b1c","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[32,34,429,361,431,362,363,219,435],"tindex":"b98c0d78-dad5-11e4-9d81-af93856ee3f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"b98c0d79-dad5-11e4-9d81-9d7676e85d92","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[94,95,101,103,111],"tindex":"b98c0d7a-dad5-11e4-9d81-d904abe85c17","variableMapping":{"flags":"flags","nodeFlags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"b98c0d7b-dad5-11e4-9d81-11cfaf76ad15","variableMapping":{"shift":"encoded","tmpValue":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":0},{"failures":[],"tindex":"b98c0d7c-dad5-11e4-9d81-6573dca4ad89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[57],"tindex":"b98c0d7d-dad5-11e4-9d81-8d3c382e761f","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[53,124,35,36,37,38,39,125,40,54,126,127,41,42,128,43,129,130,44,45,374,46,47,48,131,489,49,490,491,492,50,412,55,56,57,416,417,418,419,51,420,421,422,423,52,427,32,33,34,428,429,361,431,362,363,434,219,435,486,220,439,221,222,440,441,443,364,365,446,447,223,449,450,451,452,224,454,455,456,366,458,367,368,461,225,462,345,226,464,465,466,467,227,469,470,471,369,473,370,371,476,228,477,487,488],"tindex":"b98c0d7e-dad5-11e4-9d81-cfc15a20e2da","variableMapping":{"name":"value","properties":"properties"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:183","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.remove(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"b98c0d7f-dad5-11e4-9d81-af6bb7658cf5","variableMapping":{"compressionLevel":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"b98c0d80-dad5-11e4-9d81-0da9e6a5ce53","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"b98c0d81-dad5-11e4-9d81-f5b592d0196c","variableMapping":{"edgeId":"biggestStart","nextEdge":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[],"tindex":"b98c0d82-dad5-11e4-9d81-a398bf501b05","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"b98c0d83-dad5-11e4-9d81-5d2a8962e0fb","variableMapping":{"com.graphhopper.storage.DAType.MemRef.HEAP":"value","memRef":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:107","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DAType.MemRef) == (com.graphhopper.storage.DAType.MemRef.com.graphhopper.storage.DAType.MemRef)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"b98c0d84-dad5-11e4-9d81-edda87b89bb3","variableMapping":{"flags":"acceptBit","scDirMask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"b98c0d85-dad5-11e4-9d81-a3c41811889a","variableMapping":{"bytePos":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"b98c0d86-dad5-11e4-9d81-cf8ee85010e8","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"b98c0d87-dad5-11e4-9d81-e9cf07206676","variableMapping":{"line":"entryVal","key":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"b98c0d88-dad5-11e4-9d81-3f5eb5eae204","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":108,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":347,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":132,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":486,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":260,"com.graphhopper.GraphHopperAPITest.testNoLoad":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":142,"com.graphhopper.reader.OSMReaderTest.testFerry":127,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":62,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":452,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":222,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":244,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":124,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":477,"com.graphhopper.storage.MMapDataAccessTest.testSegments":563,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":328,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":505,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":533,"com.graphhopper.coll.CompressedArrayTest.testCompress":10,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":445,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":322,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":115,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":387,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":181,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":269,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":506,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":524,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":119,"com.graphhopper.GraphHopperTest.testPrepare":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":394,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":6,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":183,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":450,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":101,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":536,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":364,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":74,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":282,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":86,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":221,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":223,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":99,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":307,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":558,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":231,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":343,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":224,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":137,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":25,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":559,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":121,"com.graphhopper.GraphHopperTest.testLoadOSM":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":235,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":232,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":479,"com.graphhopper.reader.OSMReaderTest.testSort":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":368,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":47,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":139,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":509,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":319,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":135,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":395,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":213,"com.graphhopper.storage.RAMDataAccessTest.testHeader":525,"com.graphhopper.routing.DijkstraTest.initializationError":484,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":60,"com.graphhopper.storage.MMapDataAccessTest.testHeader":561,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":203,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":530,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":560,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":404,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":547,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":539,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":306,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":279,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":407,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":194,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":466,"com.graphhopper.reader.OSMNodeTest.testSetTags":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":190,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":286,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":435,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":363,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":247,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":105,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":242,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":246,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":372,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":97,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":160,"com.graphhopper.coll.OSMIDMapTest.testGetLong":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":359,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":334,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":290,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":133,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":291,"com.graphhopper.coll.CompressedArrayTest.testCompress2":9,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":313,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":32,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":197,"com.graphhopper.GraphHopperAPITest.testLoad":79,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":76,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":273,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":412,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":308,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":176,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":30,"com.graphhopper.storage.LevelGraphStorageTest.testClone":161,"com.graphhopper.reader.OSMReaderTest.testBarriers":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":191,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":549,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":241,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":468,"com.graphhopper.util.GHUtilityTest.testCopy":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":145,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":535,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":218,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":432,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":399,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":446,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":528,"com.graphhopper.routing.PathTest.testFindInstruction":93,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":442,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":192,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":56,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":61,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":299,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":465,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":187,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":182,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":542,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":331,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":354,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":474,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":211,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":483,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":284,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":377,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":562,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":278,"com.graphhopper.util.InstructionListTest.testWayList2":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":236,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":189,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":342,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":436,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":449,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":136,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":345,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":163,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":543,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":507,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":453,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":510,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":329,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":2,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":175,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":129,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":508,"com.graphhopper.routing.AStarTest.initializationError":411,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":109,"com.graphhopper.coll.OSMIDMapTest.testGet":496,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":196,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":57,"com.graphhopper.routing.PathBidirRefTest.testExtract":88,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":293,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":456,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":498,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":546,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":249,"com.graphhopper.storage.RAMDataAccessTest.testCopy":521,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":511,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":344,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":391,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":455,"com.graphhopper.storage.RAMDataAccessTest.testSegments":527,"com.graphhopper.util.GHUtilityTest.testSort2":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":106,"com.graphhopper.reader.OSMReaderTest.testMain":42,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":134,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":457,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":250,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":461,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":168,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":408,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":165,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":289,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":173,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":212,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":287,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":472,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":226,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":272,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":167,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":131,"com.graphhopper.storage.StorablePropertiesTest.testStore":140,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":520,"com.graphhopper.storage.GraphHopperStorageTest.testClone":177,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":393,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":52,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":357,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":422,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":28,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":434,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":378,"com.graphhopper.routing.PathTest.testTime":91,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":431,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":300,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":162,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":426,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":238,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":295,"com.graphhopper.reader.OSMReaderTest.testRelation":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":386,"com.graphhopper.util.GHUtilityTest.testSortDirected":68,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":371,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":515,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":348,"com.graphhopper.GraphHopperTest.testFootOnly":54,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":439,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":421,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":517,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":17,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":488,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":556,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":96,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":240,"com.graphhopper.reader.OSMElementTest.testSetTags":491,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":463,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":149,"com.graphhopper.search.NameIndexTest.testCreate":504,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":526,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":346,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":541,"com.graphhopper.routing.QueryGraphTest.testOneWay":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":401,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":22,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":441,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":532,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":230,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":20,"com.graphhopper.reader.OSMReaderTest.testWithBounds":48,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":529,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":545,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":476,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":519,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":341,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":388,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":415,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":487,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":159,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":403,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":427,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":475,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":447,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":337,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":207,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":198,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":174,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":95,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":551,"com.graphhopper.util.InstructionListTest.testWayList":71,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":320,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":553,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":454,"com.graphhopper.GraphHopperAPITest.testDisconnected179":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":146,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":214,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":409,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":11,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":564,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":369,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":59,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":385,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":537,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":156,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":460,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":37,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":305,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":338,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":120,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":184,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":448,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":103,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":485,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":8,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":172,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":424,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":429,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":367,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":324,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":110,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":402,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":538,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":540,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":462,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":356,"com.graphhopper.routing.PathTest.testWayList":92,"com.graphhopper.storage.MMapDataAccessTest.testCopy":557,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":396,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":430,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":380,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":420,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":229,"com.graphhopper.coll.OSMIDMapTest.testGet2":497,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":111,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":512,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":170,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":493,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":336,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":459,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":311,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":413,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":327,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":18,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":166,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":19,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":522,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":516,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":248,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":470,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":33,"com.graphhopper.util.GHUtilityTest.testSort":67,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":555,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":390,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":440,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":458,"com.graphhopper.search.NameIndexTest.testPut":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":205,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":304,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":261,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":270,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":267,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":255,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":467,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":210,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":253,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":358,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":428,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":437,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":494,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":414,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":332,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":82,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":277,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":355,"com.graphhopper.routing.PathTest.testFound":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":152,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":126,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":480,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":171,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":534,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":75,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":366,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":330,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":503,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":544,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":148,"com.graphhopper.util.InstructionListTest.testEmptyList":69,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":180,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":518,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":100,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":104,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":209,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":418,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":365,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":417,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":107,"com.graphhopper.reader.PrinctonReaderTest.testRead":58,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":188,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":565,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":245,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":195,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":379,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":141,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":199,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":444,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":471,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":552,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":531,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":464,"com.graphhopper.reader.OSMReaderTest.testFoot":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":151,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":353,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":495,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":13,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":24,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":301,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":438,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":14,"com.graphhopper.reader.OSMReaderTest.testOneWay":49,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":309,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":318,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":340,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":443,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":514,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":469,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":150,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":116,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":15,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":550,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":423,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":114,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":256,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":513,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":81,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":548,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":382,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":123,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":405,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":489,"com.graphhopper.routing.PathBidirRefTest.testExtract2":89,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":275,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":94,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":216,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":237,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":362,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":501,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":185,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":398,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":219,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":44,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":397,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":473,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":233,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":186,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":375,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":285,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":208,"com.graphhopper.GraphHopperTest.testFootAndCar":38,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":314,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":288,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":34,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":252,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":523,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":144,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":478,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":554,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":425,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":4,"com.graphhopper.GraphHopperTest.testPrepareOnly":53,"com.graphhopper.GraphHopperTest.testVia":35,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":143,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":46,"com.graphhopper.reader.OSMElementTest.testHasTag":490,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":157,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":50,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":406,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":206,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":384,"com.graphhopper.routing.AStarBidirectionTest.initializationError":481,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":416,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":298,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":297,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":138}}]
