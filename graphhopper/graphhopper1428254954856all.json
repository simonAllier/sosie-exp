[{"failures":[],"tindex":"47f1d0ee-dbb9-11e4-847b-9782234dce79","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:83","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator"},"status":-2},{"failures":[],"tindex":"47f1f7ff-dbb9-11e4-847b-d3ca0dceef78","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"47f1f800-dbb9-11e4-847b-4980930df854","variableMapping":{"time":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"47f1f801-dbb9-11e4-847b-c12e19d91ec8","variableMapping":{"high":"speed","guess":"speed","low":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":0},{"failures":[24,294,295,296,297],"tindex":"47f1f802-dbb9-11e4-847b-fd2cf219f71c","variableMapping":{"tmp":"costs","tmpNo":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:156","type":"CtOperatorAssignmentImpl","sourcecode":"double /= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[],"tindex":"47f21f13-dbb9-11e4-847b-b5a59cfd74f5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[0,1,2,3,4,5,6,298,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,299,38,39,40,41,42,300,43,44,45,301,302,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,303,72,73,74,75,76,77,78,79,80,81,82,83,84,304,85,86,305,306,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,307,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,308,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,309,148,149,310,150,151,152,153,311,154,155,156,157,158,312,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,313,175,176,314,315,316,317,318,319,320,321,322,323,324,177,325,326,327,328,329,330,331,332,333,334,335,336,337,338,178,339,340,341,342,343,344,345,346,347,348,349,179,180,350,351,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,352,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,353,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,354,355,240,241,242,243,244,244,245,245,246,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"47f21f14-dbb9-11e4-847b-5359655a2a29","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"47f21f15-dbb9-11e4-847b-45731167870f","variableMapping":{"i":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":0},{"failures":[],"tindex":"47f21f16-dbb9-11e4-847b-b9dcefb45e92","variableMapping":{"closestNode":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[17,18,19,20,22,23,24,25,28,29,30,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403],"tindex":"47f21f17-dbb9-11e4-847b-c5f22d1b3974","variableMapping":{"versionHint":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[358],"tindex":"47f21f18-dbb9-11e4-847b-f7b4c4981aa6","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"47f24629-dbb9-11e4-847b-555989469b2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:78","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.Integer, java.lang.Integer> java.util.Map<java.lang.Integer, java.lang.Integer> = com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks()"},"status":-2},{"failures":[],"tindex":"47f2462a-dbb9-11e4-847b-8d90668980ea","variableMapping":{"edgeId":"minNetworkSize","nextEdge":"minNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"47f2462b-dbb9-11e4-847b-81c9b9ec4e2b","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"length","id":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"47f2462c-dbb9-11e4-847b-bd04a2b70022","variableMapping":{"highwayValue":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":0},{"failures":[],"tindex":"47f2462d-dbb9-11e4-847b-31a9b6d355a2","variableMapping":{"size":"dLon","delta":"dLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"47f2462e-dbb9-11e4-847b-b17f20f051a3","variableMapping":{"this":"osmValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:98","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NativeFSLockFactory.NativeLock.lockExists())\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-2},{"failures":[280],"tindex":"47f2462f-dbb9-11e4-847b-b3fab4849892","variableMapping":{"directionBitMask":"flags","blockByDefault":"backward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":-1},{"failures":[404,356,357],"tindex":"47f24630-dbb9-11e4-847b-a3f0e5f9230d","variableMapping":{"res":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[405],"tindex":"47f24631-dbb9-11e4-847b-0fa222ecad74","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"47f24632-dbb9-11e4-847b-1feeb898f7e7","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:448","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[406,407,408,21,131,132,134,136,138,139,141,142,143,144,145,146,147,148,149,161,163,165,166,168,169,170,171,172,173,174,175,176,219,220,225,229,279,284,287],"tindex":"47f24633-dbb9-11e4-847b-353df3379473","variableMapping":{"bm":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"47f24634-dbb9-11e4-847b-0f8b6f2e071f","variableMapping":{"empty":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[370,375,392,402],"tindex":"47f24635-dbb9-11e4-847b-37e6148b1ea9","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-1},{"failures":[],"tindex":"47f24636-dbb9-11e4-847b-95ff366041a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"47f24637-dbb9-11e4-847b-71514621f91b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[358],"tindex":"47f26d48-dbb9-11e4-847b-0d8213b09f45","variableMapping":{"this":"this","speed":"speed","encoded":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:90","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"47f26d49-dbb9-11e4-847b-09b21a201ead","variableMapping":{"initialBits":"wayBitMask","allBits":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"47f26d4a-dbb9-11e4-847b-b18add85b2df","variableMapping":{"newName":"key","name":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"47f26d4b-dbb9-11e4-847b-3fccf9e9d418","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[359,363,364,370,372,374,375,381,385,386,392,394,396,402],"tindex":"47f26d4c-dbb9-11e4-847b-c1693f1b43ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[0,1,409,410,18,19,20,21,22,23,24,25,26,27,28,30,131,132,134,136,137,138,139,141,143,144,145,146,147,148,149,150,151,152,153,154,161,163,164,165,166,168,170,171,172,173,174,175,176,219,220,221,353,222,223,224,225,226,227,228,229,230,233,234,235,279,283,284,287],"tindex":"47f26d4d-dbb9-11e4-847b-11b944ef59e9","variableMapping":{"index":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"47f26d4e-dbb9-11e4-847b-6dfcfdf9ba5b","variableMapping":{"radiusInMeter":"durationInHours","lon":"durationInHours","lat":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":0},{"failures":[],"tindex":"47f26d4f-dbb9-11e4-847b-e1b335db85d4","variableMapping":{"nodeFlags":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":-2},{"failures":[],"tindex":"47f26d50-dbb9-11e4-847b-899ae7d4d339","variableMapping":{"min":"toSize","tmpSize":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":0},{"failures":[],"tindex":"47f26d51-dbb9-11e4-847b-5dd2764ad649","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[],"tindex":"47f26d52-dbb9-11e4-847b-0bea5bc1c4d3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"47f26d53-dbb9-11e4-847b-a54ecfd2a159","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"47f26d54-dbb9-11e4-847b-3355689ea0d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-2},{"failures":[],"tindex":"47f26d55-dbb9-11e4-847b-fd193bbecb80","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[4,7,8,9,13,38,42,45,52,58,63,65,72,75,77,82,84,86,93,99,104,106,113,116,118,123,319,177,329,331,178,341,343,348,180,187,193,198,200,207,210,212,217,219,411,231,412,413,414,415,416,232,236,359,372,239,381,394,417,355,240,258,259,260,261,262,264,268,270,271,272,273,276,280,282,285,287,289,290,291,293],"tindex":"47f26d56-dbb9-11e4-847b-ab4cb5acc441","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"47f29467-dbb9-11e4-847b-39ccfbd1f798","variableMapping":{"min":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","time":"weightLong"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:49","type":"CtIfImpl","sourcecode":"if (long < (double))\n    double = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"47f29468-dbb9-11e4-847b-45092c3f951d","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"47f29469-dbb9-11e4-847b-a1a5283e5355","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[4,7,8,9,10,19,20,21,22,23,418,419,420,421,422,423,424,425,300,45,47,68,73,78,80,81,84,86,88,109,114,119,121,122,136,137,138,163,164,165,178,180,182,203,208,213,215,216,426,427,428,221,222,223,224,225,226,227,228,229,230,238,239,240,241,244,245,247,248,249,251,252,255,290],"tindex":"47f2946a-dbb9-11e4-847b-8bbe0b745e66","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"47f2946b-dbb9-11e4-847b-91f51b0fba6f","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":0},{"failures":[],"tindex":"47f2946c-dbb9-11e4-847b-4bbbe9fbbcc6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[404,356,357,359,360,361,362,364,365,429,366,367,368,369,370,371,373,374,375,376,430,377,378,379,380,381,382,383,384,386,387,431,388,389,390,391,392,393,394,395,396,397,432,398,399,400,401,402,403,433,434],"tindex":"47f2946d-dbb9-11e4-847b-af029333ebd3","variableMapping":{"high":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-1},{"failures":[],"tindex":"47f2946e-dbb9-11e4-847b-5d14c0460190","variableMapping":{"nanoTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"47f2946f-dbb9-11e4-847b-f1510cfd1a6d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-2},{"failures":[],"tindex":"47f29470-dbb9-11e4-847b-f9637f4c7466","variableMapping":{"mask":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-2},{"failures":[],"tindex":"47f29471-dbb9-11e4-847b-bd28108458f7","variableMapping":{"maxSpeed":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"47f29472-dbb9-11e4-847b-9f2276c567b5","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"maxTurnCosts","flags":"flags","roundaboutBit":"turnRestrictionBit","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"maxTurnCosts","forwardBit":"turnRestrictionBit","key":"maxTurnCosts","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"maxTurnCosts","backwardBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[359,372,374,381],"tindex":"47f29473-dbb9-11e4-847b-17927555e590","variableMapping":{"start":"speed","delta":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"47f29474-dbb9-11e4-847b-4553b24e0f4e","variableMapping":{"edgePointer":"encoded","edgeEntryBytes":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[],"tindex":"47f29475-dbb9-11e4-847b-238028aa547d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:774","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":0},{"failures":[435],"tindex":"47f2ba86-dbb9-11e4-847b-9b9d25dbf2e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"47f2ba87-dbb9-11e4-847b-4fe5daddd40e","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[436,437],"tindex":"47f2ba88-dbb9-11e4-847b-0f574106e711","variableMapping":{"eleDelta":"midLon","decEleSum":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"47f2ba89-dbb9-11e4-847b-b35ad08ea9b9","variableMapping":{"orientation":"maxLon","java.lang.Math.PI":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[11,12,13,14,15,38,39,40,41,42,300,43,44,45,301,302,46,438,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,303,72,73,74,75,76,77,78,79,80,81,82,83,84,304,85,86,305,306,87,439,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,307,113,114,115,116,117,118,119,120,121,122,123,124,130,132,149,160,176,314,315,316,317,318,319,320,321,322,323,324,177,325,326,327,328,329,330,331,332,333,334,335,336,337,338,178,339,340,341,342,343,344,345,346,347,348,349,179,180,350,351,181,440,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,352,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,224,225,226,228,229,441,411,231,442,412,443,444,445,413,446,447,435,414,448,405,415,449,450,451,452,453,294,416,454,455,456,358,457,458,359,360,361,362,363,364,296,459,460,365,429,366,367,461,462,368,369,463,370,371,464,372,373,374,375,465,376,430,377,466,467,378,379,468,380,238,239,469,381,382,383,384,385,386,297,470,471,387,431,388,389,472,473,390,391,474,392,393,475,394,395,396,476,397,432,398,399,477,478,400,401,479,402,403,417,480,354,355,240,241,242,243,248,256,257,481,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"47f2ba8a-dbb9-11e4-847b-13985250817b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:229","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n        return com.graphhopper.routing.util.AbstractFlagEncoder;\n    \n}"},"status":-1},{"failures":[],"tindex":"47f2ba8b-dbb9-11e4-847b-cb53d7f58460","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":0},{"failures":[],"tindex":"47f2ba8c-dbb9-11e4-847b-97820aaed9cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"47f2ba8d-dbb9-11e4-847b-bf47ed3d8470","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":0},{"failures":[441],"tindex":"47f2ba8e-dbb9-11e4-847b-c519d23cf6ea","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"locked","v":"locked"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"47f2ba8f-dbb9-11e4-847b-09d250cd4d8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"47f2ba90-dbb9-11e4-847b-dbbbc100e506","variableMapping":{"orientation":"java.lang.Double.MAX_VALUE","java.lang.Math.PI":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"47f2ba91-dbb9-11e4-847b-e5a21d60b330","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[49,60,62,66,67,73,74,90,101,103,107,108,114,115,316,326,328,332,333,339,340,184,195,197,201,202,208,209,232,235],"tindex":"47f2e1a2-dbb9-11e4-847b-b332360e2307","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-1},{"failures":[],"tindex":"47f2e1a3-dbb9-11e4-847b-cdff00a92012","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"47f2e1a4-dbb9-11e4-847b-376a0a5afa9e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"47f2e1a5-dbb9-11e4-847b-25b268c605e6","variableMapping":{"counts":"maxTurnCosts","counter":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,404,26,27,28,29,30,40,441,411,231,442,412,443,444,445,413,446,447,435,414,448,405,415,449,450,451,452,453,294,416,454,455,356,295,482,357,358,234,457,458,359,360,361,362,363,364,296,459,460,365,429,366,367,461,462,368,369,463,370,371,464,372,373,374,375,465,376,430,377,466,467,378,379,468,380,238,239,469,381,382,383,384,385,386,297,470,471,387,431,388,389,472,473,390,391,474,392,393,475,394,395,396,476,397,432,398,399,477,478,400,401,479,402,403,355,270,280],"tindex":"47f2e1a6-dbb9-11e4-847b-4dba380e1464","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"47f2e1a7-dbb9-11e4-847b-a16877f848d6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"47f2e1a8-dbb9-11e4-847b-23192eb93699","variableMapping":{"latSize":"from","lonSize":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"47f2e1a9-dbb9-11e4-847b-3fe107404c8d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":0},{"failures":[356,357,359,360,362,364,381,382,384,386],"tindex":"47f2e1aa-dbb9-11e4-847b-e1d5d2c46140","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[],"tindex":"47f2e1ab-dbb9-11e4-847b-c78d1a941768","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"47f2e1ac-dbb9-11e4-847b-f1ca7563ed1f","variableMapping":{"maxMCSpeed":"resultOrientation","speed":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"47f2e1ad-dbb9-11e4-847b-7f6a12629e57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"47f2e1ae-dbb9-11e4-847b-cdaf8b37846d","variableMapping":{"counts":"maxTurnCosts","counter":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"47f2e1af-dbb9-11e4-847b-dfa1decd0cc1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[45,84,86,142,169,180,222],"tindex":"47f2e1b0-dbb9-11e4-847b-4bb8e6dd73a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-1},{"failures":[436,483,406,484,407,485,486,487,408,488,489,134,140,142,143,490,161,167,169,170],"tindex":"47f308c1-dbb9-11e4-847b-3da9c741db38","variableMapping":{"cap":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"47f308c2-dbb9-11e4-847b-0910c3c74410","variableMapping":{"high":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[370,375,392,402],"tindex":"47f308c3-dbb9-11e4-847b-1bc1837b4086","variableMapping":{"index":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[4,7,8,9,17,19,20,21,22,23,24,25,26,27,28,29,30,418,419,421,422,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,45,47,68,73,78,81,84,86,88,109,114,119,122,136,137,138,151,152,153,154,163,164,165,180,182,203,208,213,216,222,223,224,226,228,229,238,239,240,244,245,247,248,249,251,252,255,290],"tindex":"47f308c4-dbb9-11e4-847b-3f29e6d29837","variableMapping":{"endIndexPlusOne":"bufferIndex","frontIndex":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-1},{"failures":[10,17,29,58,99,177,193,411,412,435,405,449,450,454,356,357,358,457,359,360,364,369,371,372,379,380,239,381,382,386,391,393,394,401,403,508,417,355,240,270,271,280,282,283],"tindex":"47f308c5-dbb9-11e4-847b-339eaabf1c66","variableMapping":{"midLat":"speed","spatialKey":"flags","midLon":"speed","bits":"flags","lon":"speed","lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28,30,221,222,223,224,225,226,227,228,229,230,234],"tindex":"47f308c6-dbb9-11e4-847b-ebb9d521e581","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"47f308c7-dbb9-11e4-847b-af1c1a5d2c58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[16,24,294,295,296,297],"tindex":"47f308c8-dbb9-11e4-847b-67ddf6377d26","variableMapping":{"turnCostIndex":"maxTurnCosts","nextTurnCostIndex":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[441,460,465,471,476],"tindex":"47f308c9-dbb9-11e4-847b-998c22a4734f","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"47f308ca-dbb9-11e4-847b-d55adf5e2df1","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[24],"tindex":"47f308cb-dbb9-11e4-847b-db5123d7e64c","variableMapping":{"lastKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,404,26,27,28,29,30,40,441,411,231,442,412,443,444,445,413,446,447,435,414,448,405,415,449,450,451,452,453,294,416,454,455,356,295,482,357,358,234,457,458,359,360,361,362,363,364,296,459,460,365,429,366,367,461,462,368,369,463,370,371,464,372,373,374,375,465,376,430,377,466,467,378,379,468,380,238,239,469,381,382,383,384,385,386,297,470,471,387,431,388,389,472,473,390,391,474,392,393,475,394,395,396,476,397,432,398,399,477,478,400,401,479,402,403,355,270,280],"tindex":"47f308cc-dbb9-11e4-847b-f775221ba6f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[0,1,2,3,4,5,509,6,298,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,510,30,38,39,40,41,42,300,43,44,45,301,302,46,438,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,303,72,73,74,75,76,77,78,79,80,81,82,83,84,304,85,86,305,306,87,439,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,307,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,308,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,309,148,149,150,151,152,153,311,154,155,156,157,158,312,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,313,175,176,314,315,316,317,318,319,320,321,322,323,324,177,325,326,327,328,329,330,331,332,333,334,335,336,337,338,178,339,340,341,342,343,344,345,346,347,348,349,179,180,350,351,181,440,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,352,207,208,209,210,211,212,213,214,215,216,217,218,219,220,511,221,353,222,223,224,225,226,512,227,228,230,513,441,411,231,442,412,443,444,445,413,446,447,435,414,448,405,415,449,450,451,452,453,294,416,454,455,295,482,456,232,233,234,235,236,237,457,508,417,480,514,515,516,517,354,355,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,518,256,257,481,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"47f32fdd-dbb9-11e4-847b-01bdbfb0234b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:138","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"secondary\") , java.util.Map<java.lang.String, java.lang.Integer>.get(\"motorway\"))"},"status":-1},{"failures":[417],"tindex":"47f32fde-dbb9-11e4-847b-05bfd50031da","variableMapping":{"java.lang.Double.MAX_VALUE":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:372","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-1},{"failures":[519,520,521,522,268],"tindex":"47f32fdf-dbb9-11e4-847b-33a63ff1cf20","variableMapping":{"start":"i","delta":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"47f32fe0-dbb9-11e4-847b-01e4cd721677","variableMapping":{"level":"index","lg":"g","polledNode":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:348","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.setLevel(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-2},{"failures":[],"tindex":"47f32fe1-dbb9-11e4-847b-231de3233e48","variableMapping":{"line":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":72,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":288,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":300,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":508,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":127,"com.graphhopper.GraphHopperAPITest.testNoLoad":511,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":315,"com.graphhopper.reader.OSMReaderTest.testFerry":17,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":11,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":363,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":375,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":137,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":353,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":390,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":98,"com.graphhopper.coll.CompressedArrayTest.testCompress":489,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":467,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":216,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":334,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":193,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":133,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":492,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":266,"com.graphhopper.GraphHopperTest.testPrepare":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":345,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":256,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":522,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":361,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":280,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":310,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":378,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":1,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":134,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":236,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":374,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":272,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":164,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":122,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":364,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":513,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":84,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":486,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":47,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":521,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":269,"com.graphhopper.GraphHopperTest.testLoadOSM":226,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":171,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":165,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":456,"com.graphhopper.reader.OSMReaderTest.testSort":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":369,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":305,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":494,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":211,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":180,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":346,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":251,"com.graphhopper.routing.DijkstraTest.initializationError":517,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":118,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":303,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":189,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":304,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":384,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":88,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":403,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":401,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":141,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":197,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":139,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":512,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":275,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":274,"com.graphhopper.coll.OSMIDMapTest.testGetLong":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":102,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":108,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":64,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":45,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":66,"com.graphhopper.coll.CompressedArrayTest.testCompress2":488,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":394,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":99,"com.graphhopper.GraphHopperAPITest.testLoad":219,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":438,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":32,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":441,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":194,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":184,"com.graphhopper.storage.LevelGraphStorageTest.testClone":51,"com.graphhopper.reader.OSMReaderTest.testBarriers":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":89,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":237,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":131,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":297,"com.graphhopper.util.GHUtilityTest.testCopy":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":319,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":149,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":477,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":308,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":468,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":506,"com.graphhopper.routing.PathTest.testFindInstruction":241,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":430,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":90,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":519,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":13,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":444,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":79,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":383,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":212,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":198,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":116,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":262,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":472,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":482,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":516,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":53,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":320,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":37,"com.graphhopper.util.InstructionListTest.testWayList2":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":172,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":217,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":94,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":362,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":121,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":360,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":238,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":350,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":55,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":424,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":296,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":495,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":100,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":150,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":276,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":22,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":493,"com.graphhopper.routing.AStarTest.initializationError":515,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":290,"com.graphhopper.coll.OSMIDMapTest.testGet":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":97,"com.graphhopper.routing.PathBidirRefTest.testExtract":242,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":445,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":365,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":420,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":145,"com.graphhopper.storage.RAMDataAccessTest.testCopy":501,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":372,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":460,"com.graphhopper.storage.RAMDataAccessTest.testSegments":505,"com.graphhopper.util.GHUtilityTest.testSort2":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":285,"com.graphhopper.reader.OSMReaderTest.testMain":19,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":301,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":107,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":429,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":487,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":463,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":71,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":343,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":58,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":62,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":409,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":82,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":434,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":59,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":248,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":112,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":31,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":381,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":65,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":29,"com.graphhopper.storage.StorablePropertiesTest.testStore":423,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":425,"com.graphhopper.storage.GraphHopperStorageTest.testClone":186,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":342,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":451,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":196,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":449,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":38,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":479,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":321,"com.graphhopper.routing.PathTest.testTime":355,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":399,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":80,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":52,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":454,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":174,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":333,"com.graphhopper.reader.OSMReaderTest.testRelation":404,"com.graphhopper.util.GHUtilityTest.testSortDirected":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":391,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":498,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":247,"com.graphhopper.GraphHopperTest.testFootOnly":229,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":373,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":151,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":405,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":140,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":469,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":329,"com.graphhopper.search.NameIndexTest.testCreate":428,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":504,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":244,"com.graphhopper.routing.QueryGraphTest.testOneWay":253,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":313,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":484,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":376,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":163,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":436,"com.graphhopper.reader.OSMReaderTest.testWithBounds":28,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":507,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":474,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":120,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":233,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":335,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":413,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":356,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":48,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":302,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":475,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":473,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":380,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":111,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":160,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":104,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":182,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":271,"com.graphhopper.util.InstructionListTest.testWayList":8,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":214,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":459,"com.graphhopper.GraphHopperAPITest.testDisconnected179":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":322,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":437,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":307,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":388,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":462,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":224,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":188,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":152,"com.graphhopper.routing.util.EncodedValueTest.testSwap":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":267,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":458,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":282,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":514,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":265,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":78,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":452,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":397,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":368,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":292,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":440,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":309,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":371,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":179,"com.graphhopper.routing.PathTest.testWayList":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":347,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":325,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":448,"com.graphhopper.coll.OSMIDMapTest.testGet2":419,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":293,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":110,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":461,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":199,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":95,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":187,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":63,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":142,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":143,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":502,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":499,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":144,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":471,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":520,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":395,"com.graphhopper.util.GHUtilityTest.testSort":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":338,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":408,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":367,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":465,"com.graphhopper.search.NameIndexTest.testPut":426,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":123,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":439,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":128,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":135,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":154,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":157,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":385,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":250,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":155,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":85,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":228,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":476,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":480,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":291,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":232,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":36,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":178,"com.graphhopper.routing.PathTest.testFound":354,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":230,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":358,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":77,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":40,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":366,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":101,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":427,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":177,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":191,"com.graphhopper.util.InstructionListTest.testEmptyList":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":279,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":478,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":283,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":416,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":447,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":379,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":446,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":286,"com.graphhopper.reader.PrinctonReaderTest.testRead":14,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":138,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":324,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":422,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":314,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":387,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":466,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":491,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":295,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":382,"com.graphhopper.reader.OSMReaderTest.testFoot":18,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":337,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":169,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":485,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":464,"com.graphhopper.reader.OSMReaderTest.testOneWay":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":170,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":195,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":209,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":117,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":377,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":497,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":470,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":331,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":261,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":490,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":258,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":268,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":450,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":259,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":496,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":231,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":327,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":246,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":351,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":510,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":34,"com.graphhopper.routing.PathBidirRefTest.testExtract2":243,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":270,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":400,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":207,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":312,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":402,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":349,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":442,"com.graphhopper.util.SimpleIntDequeTest.testPush":410,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":166,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":210,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":509,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":54,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":453,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":203,"com.graphhopper.GraphHopperTest.testFootAndCar":225,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":396,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":148,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":503,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":318,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":455,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":92,"com.graphhopper.GraphHopperTest.testPrepareOnly":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":289,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":129,"com.graphhopper.GraphHopperTest.testVia":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":316,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":26,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":42,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":10,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":352,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":412,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":330,"com.graphhopper.routing.AStarBidirectionTest.initializationError":518,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":457,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":76,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":74,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":86}}]
