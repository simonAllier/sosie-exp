[{"failures":[],"tindex":"716d0c87-db61-11e4-b667-9d7a4d57e9a9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"716d3398-db61-11e4-b667-337b689e7768","variableMapping":{"neighborUpdates":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"716d3399-db61-11e4-b667-6d646b55b87a","variableMapping":{"val":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"716d339a-db61-11e4-b667-e76ac783c64a","variableMapping":{"res":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"716d339b-db61-11e4-b667-4d59c7be57ff","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[46,47,48,49,50,51,52,53,54,55],"tindex":"716d339c-db61-11e4-b667-9f6f0fbccf32","variableMapping":{"precision":"midLon","lat":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[56,57],"tindex":"716f2f6d-db61-11e4-b667-379c881d3b7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[],"tindex":"716f2f6e-db61-11e4-b667-77ef15336f6c","variableMapping":{"nodeId":"shift","mainNodes":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[58,59],"tindex":"716f2f6f-db61-11e4-b667-e7830bb683ed","variableMapping":{"str":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[58,60,61,62,63,64,65,66,67,8,68,69,11,70,12,71,72,73,74,4,75,18,76,77,78,79,80,23,81],"tindex":"716f2f70-db61-11e4-b667-69f1ac0f2699","variableMapping":{"index":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"716f2f71-db61-11e4-b667-3560a3cb5b5f","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"716f2f72-db61-11e4-b667-13e9f0efae3b","variableMapping":{"splitIndex":"segmentSizePower","entrySize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"716f2f73-db61-11e4-b667-9be32acf63a6","variableMapping":{"nanoTime":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"716f2f74-db61-11e4-b667-bf330ef6e6d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"716f2f75-db61-11e4-b667-519cb34de1bf","variableMapping":{"lastTime":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"716f2f76-db61-11e4-b667-7b719f9221b7","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"skippedEdge2","nodeId":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-2},{"failures":[],"tindex":"716f5687-db61-11e4-b667-47e774692ed9","variableMapping":{"i":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":0},{"failures":[82,83,84,85],"tindex":"716f5688-db61-11e4-b667-7385185898c8","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[25,26,27,86,28,87,88,89,29,30,33,34,90,35,91,92,93,36,37,94,95,96,97,98,99,100,101,102,40,41,103,42,104,105,106,43,44,107,57],"tindex":"716f5689-db61-11e4-b667-b7259e286e7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[],"tindex":"716f568a-db61-11e4-b667-8515b880b847","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"71734e2b-db61-11e4-b667-c7311688a5da","variableMapping":{"freeIndex":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-2},{"failures":[58,108],"tindex":"71734e2c-db61-11e4-b667-6bcd4b7cf7f1","variableMapping":{"version":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:82","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"-\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[82,83,84,85],"tindex":"71734e2d-db61-11e4-b667-ed6b5fa6c650","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"71734e2e-db61-11e4-b667-8d9ba12e874b","variableMapping":{"minDistance":"orientation","rMin":"java.lang.Math.PI"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"71734e2f-db61-11e4-b667-bda7d9cb2d57","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-2},{"failures":[109,110,111,112,113,114,115,116,117],"tindex":"71734e30-db61-11e4-b667-5154ebc92e6b","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"71734e31-db61-11e4-b667-c3d2f50a729d","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-2},{"failures":[58,60,61,118,62,119,120,63,64,65,66,67,8,68,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,9,163,164,10,165,166,167,168,169,170,171,172,173,174,115],"tindex":"71734e32-db61-11e4-b667-fd8ce2674279","variableMapping":{"this":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:462","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[175,176,177,178,179,180,181,110,182,183],"tindex":"71734e33-db61-11e4-b667-7d83ef21ef39","variableMapping":{"maxLeafEntries":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-1},{"failures":[],"tindex":"71734e34-db61-11e4-b667-f1a5dad454c3","variableMapping":{"factor":"baseOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"71734e35-db61-11e4-b667-2b11fa27a8b0","variableMapping":{"allBits":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":0},{"failures":[],"tindex":"71734e36-db61-11e4-b667-83e465e36f05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[56,57],"tindex":"71734e37-db61-11e4-b667-a3999547a57f","variableMapping":{"segmentsToMap":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[],"tindex":"71734e38-db61-11e4-b667-5d46b7c40129","variableMapping":{"time":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"71734e39-db61-11e4-b667-9305a0ac3f74","variableMapping":{"this":"this","unknownSpeed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":0},{"failures":[78,184,79],"tindex":"71734e3a-db61-11e4-b667-87b62255e325","variableMapping":{"ghLocation":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[63,72,14,3,74,4,19,6,79],"tindex":"7173754b-db61-11e4-b667-6f6c9724d0e6","variableMapping":{"shift":"encoded","tmpValue":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[185,186,187,188,189,190,191,192,193,194,7,195,196,197,198,199,200,201,202,122,203,204,205,26,206,207,208,209,210,86,28,211,87,212,213,214,88,89,215,216,217,29,30,218,219,220,221,222,32,124,223,224,125,225,226,227,33,228,229,230,231,232,90,35,233,91,234,235,236,92,93,237,238,239,36,37,240,241,242,243,244,39,245,246,247,248,249,250,127,128,129,251,130,131,132,133,252,134,253,135,136,137,138,139,141,142,254,255,256,257,258,259,260,261,262,263,264,143,265,144,145,146,147,266,148,267,149,150,151,152,153,155,156,268,269,94,270,271,272,273,274,96,97,275,98,276,277,278,99,100,279,280,281,101,102,282,283,284,285,286,287,288,157,289,290,291,40,292,293,294,295,296,103,42,297,104,298,299,300,105,106,301,302,303,43,44,304,305,306,307,308,45,159,160,107,309,56,57,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,179,326,327,180,181,328,110,182,329,183,330,331,112,332,333,113,114,334,335,172,336,337,174,338,339,115,340,116,341,117,342,343],"tindex":"7173754c-db61-11e4-b667-315831614a2e","variableMapping":{"initialized":"forward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:241","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call loadExisting only once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"7173754d-db61-11e4-b667-eb37df9ea913","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"7173754e-db61-11e4-b667-0773527afb7c","variableMapping":{"i":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"7173754f-db61-11e4-b667-e3dd89515d9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[],"tindex":"71737550-db61-11e4-b667-59c0b288bbb7","variableMapping":{"hasOther":"edgeBased","hasRel":"edgeBased"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[344,345,346,347,348,121,202,122,123,124,224,125,126,157,158,161,165,167,168,170,56,349,334,335,172,336,337,350,173,174,338,339,115,340,341,342,343],"tindex":"71737551-db61-11e4-b667-9bb6bc508c21","variableMapping":{"cap":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[185,186,187,188,189,190,351,191,352,192,193,194,7,195,196,353,197,198,199,58,60,61,118,62,119,120,63,64,0,65,66,67,8,354,68,200,355,356,201,357,121,25,202,122,123,358,203,359,204,205,26,206,207,208,360,209,361,210,27,362,86,28,211,87,212,213,214,88,89,363,364,215,216,365,217,29,30,218,366,219,31,367,220,221,222,32,124,223,224,125,126,368,225,369,226,227,33,228,229,230,370,231,371,232,34,372,90,35,233,91,234,235,236,92,93,373,374,237,238,375,239,36,37,240,376,241,38,377,242,243,244,39,245,246,247,248,378,249,250,127,128,379,129,251,130,131,132,133,252,134,253,135,136,137,138,139,140,141,142,254,255,256,257,380,258,259,260,261,262,381,263,264,143,265,144,145,146,147,266,148,267,149,150,151,152,153,154,155,156,268,269,94,270,271,272,382,273,383,274,95,384,96,97,275,98,276,277,278,99,100,385,386,279,280,387,281,101,102,282,388,283,389,390,284,285,286,287,288,157,158,391,289,392,290,291,40,292,293,294,393,295,394,296,41,395,103,42,297,104,298,299,300,105,106,396,397,301,302,398,303,43,44,304,399,305,400,401,306,307,308,45,159,160,402,161,162,9,163,164,10,165,166,167,168,169,170,171,403,404,405,406,69,407,408,409,410,411,412,11,413,414,70,415,12,13,59,416,417,418,419,420,421,1,422,71,423,424,72,107,309,56,57,310,311,73,425,426,2,427,428,14,3,429,430,431,432,433,434,435,436,15,437,16,82,438,439,440,74,441,4,442,443,444,75,445,446,17,447,18,83,76,448,77,449,450,5,451,452,19,6,453,454,455,456,457,458,459,460,20,461,21,84,462,463,464,78,184,79,465,466,80,467,468,469,22,470,23,85,471,81,24,472,473,474,475,476,477,478,479,480,481,312,313,314,315,482,316,317,318,319,320,321,322,323,324,483,109,325,484,179,326,327,180,181,328,110,111,182,329,183,330,331,349,112,332,333,113,114,334,335,172,336,337,350,173,174,338,339,115,340,116,341,117,342,343],"tindex":"71739c62-db61-11e4-b667-332fb48d6cfc","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[406,409],"tindex":"71739c63-db61-11e4-b667-1f58aa51e045","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"71739c64-db61-11e4-b667-0d230c75b915","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[77],"tindex":"71739c65-db61-11e4-b667-f1d1a9f3be46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"71739c66-db61-11e4-b667-652be108cd91","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":"71739c67-db61-11e4-b667-1d51cb6ccb71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":0},{"failures":[],"tindex":"71739c68-db61-11e4-b667-8d5f5113568c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"71739c69-db61-11e4-b667-87eefced1468","variableMapping":{"nodes":"length","adj":"length","base":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[12],"tindex":"71739c6a-db61-11e4-b667-19405b16f76e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"71739c6b-db61-11e4-b667-1ffef480c880","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"71739c6c-db61-11e4-b667-8d5351558867","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[485,486,487,189,193,194,58,61,118,62,119,120,63,64,65,66,67,8,68,488,489,490,491,492,493,345,494,495,496,346,497,498,347,499,500,501,348,502,503,504,505,506,507,122,204,363,29,31,221,124,125,226,373,36,38,243,130,132,144,146,268,385,281,101,389,285,157,290,396,43,400,307,161,9,163,164,165,168,169,480,315,318,321,324,341],"tindex":"7173c37d-db61-11e4-b667-4fd3aabf7f9a","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[],"tindex":"7173c37e-db61-11e4-b667-51c55e61805b","variableMapping":{"size":"dLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[508],"tindex":"7173c37f-db61-11e4-b667-599dd3d11b7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[],"tindex":"7173c380-db61-11e4-b667-e1ae8f7e0588","variableMapping":{"bits":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-2},{"failures":[],"tindex":"7173c381-db61-11e4-b667-23b332940c8a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"7173c382-db61-11e4-b667-a1342aa68e6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"7173c383-db61-11e4-b667-cb72beb89c9b","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.trimToSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"7173c384-db61-11e4-b667-d1891fb1e4db","variableMapping":{"width":"length","latSimilar":"segmentSizeInBytes","lonSimilar":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:100","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[403],"tindex":"7173c385-db61-11e4-b667-cb2a010a7ac9","variableMapping":{"initialized":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:130","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"7173c386-db61-11e4-b667-bb45210b9362","variableMapping":{"segmentSizeInBytes":"priorityFromRelation","allSegments":"com.graphhopper.routing.util.PriorityWeighting.KEY","capacity":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:97","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-2},{"failures":[],"tindex":"7173c387-db61-11e4-b667-8397dc0d160f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[414],"tindex":"7173c388-db61-11e4-b667-0dc6e4daa7b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"7173c389-db61-11e4-b667-2534a14acab7","variableMapping":{"segmentSizeInBytes":"endNode","indexDivisor":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[1,423,2,439,76,5,463,81],"tindex":"7173c38a-db61-11e4-b667-a971565bfd4b","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[185,186,187,188,189,190,191,352,192,193,194,7,195,196,353,197,198,199,58,60,61,118,62,119,120,63,64,65,66,67,8,68,200,355,356,201,357,121,25,202,122,123,358,203,204,205,26,206,207,208,360,209,361,210,27,362,86,28,211,87,212,213,214,88,89,363,364,215,216,365,217,29,30,218,366,219,31,367,220,221,222,32,124,223,224,125,126,368,225,226,227,33,228,229,230,370,231,371,232,34,372,90,35,233,91,234,235,236,92,93,373,374,237,238,375,239,36,37,240,376,241,38,377,242,243,244,39,245,246,247,248,378,249,250,127,128,379,129,251,130,131,132,133,252,134,253,135,136,137,138,139,140,141,142,509,254,255,256,257,380,258,259,260,261,262,381,263,264,143,265,144,145,146,147,266,148,267,149,150,151,152,153,154,155,156,268,269,94,270,271,272,382,273,383,274,95,384,96,97,275,98,276,277,278,99,100,385,386,279,280,387,281,101,102,282,388,283,389,390,284,285,286,287,288,157,158,391,289,290,291,40,292,293,294,393,295,394,296,41,395,103,42,297,104,298,299,300,105,106,396,397,301,302,398,303,43,44,304,399,305,400,401,306,307,308,45,159,160,161,162,9,163,164,10,165,167,168,169,170,405,107,309,56,57,310,311,448,77,478,479,480,481,312,313,314,314,315,315,482,482,316,316,317,317,318,318,319,319,320,320,321,321,322,322,323,323,324,324,109,325,179,326,327,180,181,328,110,111,182,329,183,330,331,349,112,332,333,113,114,334,335,172,336,337,350,173,174,338,339,115,340,116,341,117,342,343],"tindex":"7173e99b-db61-11e4-b667-c58e4357a984","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"7173e99c-db61-11e4-b667-2b8f561828b4","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":0},{"failures":[],"tindex":"7173e99d-db61-11e4-b667-1fe3adb9736d","variableMapping":{"dLat":"length","dLon":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"7173e99e-db61-11e4-b667-ad70824f7fe9","variableMapping":{"distance":"lon","speed":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:140","type":"CtReturnImpl","sourcecode":"return com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[],"tindex":"7173e99f-db61-11e4-b667-d7bc33446933","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[185,186,187,188,189,190,351,191,352,192,193,194,7,195,196,353,197,198,58,60,61,118,62,119,120,63,64,65,66,67,8,68,200,355,356,201,357,121,25,202,122,123,358,203,359,204,205,26,206,207,208,360,209,361,210,27,362,86,28,211,87,212,213,214,88,89,363,364,215,216,365,217,29,30,218,366,219,31,367,220,221,222,32,124,223,224,125,126,368,225,369,226,227,33,228,229,230,370,231,371,232,34,372,90,35,233,91,234,235,236,92,93,373,374,237,238,375,239,36,37,240,376,241,38,377,242,243,244,39,245,246,247,248,378,249,250,127,128,379,129,251,130,131,132,133,252,134,253,135,136,137,138,139,140,141,142,254,255,256,257,380,258,259,260,261,262,381,263,264,143,265,144,145,146,147,266,148,267,149,150,151,152,153,154,155,156,268,269,94,270,271,272,382,273,383,274,95,384,96,97,275,98,276,277,278,99,100,385,386,279,280,387,281,101,102,282,388,283,389,390,284,285,286,287,288,157,158,391,289,392,290,291,40,292,293,294,393,295,394,296,41,395,103,42,297,104,298,299,300,105,106,396,397,301,302,398,303,43,44,304,399,305,400,401,306,307,308,45,159,160,402,161,162,9,163,164,10,165,166,167,168,169,170,171,403,404,405,406,69,407,408,409,410,411,412,11,413,414,70,415,12,13,59,416,417,418,419,420,421,424,107,309,56,57,310,311,73,425,426,2,427,428,14,3,429,430,431,432,433,434,435,436,15,437,16,82,438,439,440,74,441,4,442,443,444,75,445,446,17,447,18,83,76,448,77,449,450,5,451,452,19,6,453,454,455,456,457,458,459,460,20,461,21,84,462,463,464,78,184,79,465,466,80,467,468,469,22,470,23,85,471,81,472,473,474,475,476,477,478,479,480,481,312,313,314,315,482,316,317,318,319,320,321,322,323,324,483,109,325,484,179,326,327,180,181,328,110,111,182,329,183,330,331,349,112,332,333,113,114,334,335,172,336,337,350,173,174,338,339,115,340,116,341,117,342,343],"tindex":"7173e9a0-db61-11e4-b667-7dd7a6966865","variableMapping":{"com.graphhopper.util.Constants.VERSION":"entry","tmp":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[68,56],"tindex":"7173e9a1-db61-11e4-b667-a1b068c2b1e6","variableMapping":{"size":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[],"tindex":"7173e9a2-db61-11e4-b667-8145fb5c15d3","variableMapping":{"bit":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[],"tindex":"7173e9a3-db61-11e4-b667-d7d34ed6d84e","variableMapping":{"java.lang.Double.MAX_VALUE":"speedVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:372","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[63],"tindex":"717410b4-db61-11e4-b667-e72d3b494c36","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"717410b5-db61-11e4-b667-9f1de36825df","variableMapping":{"java.lang.Double.NaN":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:139","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[510,179,327,110,182,183],"tindex":"71776c16-db61-11e4-b667-cbc7a8918d97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"71776c17-db61-11e4-b667-ed3a07656f04","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[185,186,187,188,189,190,191,352,192,193,194,7,195,196,353,197,198,199,58,60,61,118,62,119,120,63,64,65,66,67,8,68,511,512,504,513,514,515,505,506,507,200,355,356,201,357,121,25,202,122,123,358,203,204,205,26,206,207,208,360,209,361,210,27,362,86,28,211,87,212,213,214,88,89,363,364,215,216,365,217,29,30,218,366,219,31,367,220,221,222,32,124,224,125,126,368,225,226,227,33,228,229,230,370,231,371,232,34,372,90,35,233,91,234,235,236,92,93,373,374,237,238,375,239,36,37,240,376,241,38,377,242,243,244,39,245,246,247,248,249,250,127,128,379,129,251,130,131,132,133,252,134,253,135,136,137,138,139,141,142,509,254,255,256,257,258,259,260,261,262,263,264,143,265,144,145,146,147,266,148,267,149,150,151,152,153,155,156,384,281,288,157,158,391,289,290,291,40,292,293,294,393,295,394,296,41,395,103,42,297,104,298,299,300,105,106,396,397,301,302,398,303,43,44,304,399,305,400,401,306,307,308,45,159,160,161,162,9,163,164,10,165,167,168,169,170,405,107,309,56,57,310,311,448,77,478,479,480,481,312,313,314,314,315,315,482,482,316,316,317,317,318,318,319,319,320,320,321,321,322,322,323,323,324,324,109,325,179,326,327,180,181,328,110,111,182,329,183,330,331,349,112,332,333,113,114,334,335,172,336,337,350,173,174,338,339,115,340,116,341,117,342,343],"tindex":"71776c18-db61-11e4-b667-cf40f0d15402","variableMapping":{"splitIndex":"segmentSizeIntsPower","entrySize":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"71776c19-db61-11e4-b667-bd14a19c8121","variableMapping":{"highwayValue":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"71776c1a-db61-11e4-b667-fddf389b9c96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"71776c1b-db61-11e4-b667-99724f09ba0e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"71776c1c-db61-11e4-b667-45921d73e107","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[185,186,187,188,189,190,351,191,352,192,193,194,7,195,196,353,197,198,58,60,61,118,62,119,120,63,64,0,65,66,67,8,68,200,355,356,201,357,121,25,202,122,123,358,203,359,204,205,26,206,207,208,360,209,361,210,27,362,86,28,211,87,212,213,214,88,89,363,364,215,216,365,217,29,30,218,366,219,31,367,220,221,222,32,124,223,224,125,126,368,225,369,226,227,33,228,229,230,370,231,371,232,34,372,90,35,233,91,234,235,236,92,93,373,374,237,238,375,239,36,37,240,376,241,38,377,242,243,244,39,245,246,247,248,378,249,250,127,128,379,129,251,130,131,132,133,252,134,253,135,136,137,138,139,140,141,142,254,255,256,257,380,258,259,260,261,262,381,263,264,143,265,144,145,146,147,266,148,267,149,150,151,152,153,154,155,156,268,269,94,270,271,272,382,273,383,274,95,384,96,97,275,98,276,277,278,99,100,385,386,279,280,387,281,101,102,282,388,283,389,390,284,285,286,287,288,157,158,391,289,392,290,291,40,292,293,294,393,295,394,296,41,395,103,42,297,104,298,299,300,105,106,396,397,301,302,398,303,43,44,304,399,305,400,401,306,307,308,45,159,160,402,161,162,9,163,164,10,165,166,167,168,169,170,171,403,404,405,406,69,407,408,409,410,411,412,11,413,414,70,415,12,13,59,416,417,418,419,420,421,424,72,107,309,56,57,310,311,73,425,426,2,427,428,14,3,429,430,431,432,433,434,435,436,15,437,16,82,438,439,440,74,441,4,442,443,444,75,445,446,17,447,18,83,76,448,77,449,450,5,451,452,19,6,453,454,455,456,457,458,459,460,20,461,21,84,462,463,464,78,184,79,465,466,80,467,468,469,22,470,23,85,471,81,472,473,474,475,476,477,478,479,480,481,312,313,314,315,482,316,317,318,319,320,321,322,323,324,483,109,325,484,179,326,327,180,181,328,110,111,182,329,183,330,331,349,112,332,333,113,114,334,335,172,336,337,350,173,174,338,339,115,340,116,341,117,342,343],"tindex":"7177932d-db61-11e4-b667-1dd1dc1083b8","variableMapping":{"baseUrl":"key","name":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:162","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"7177932e-db61-11e4-b667-01b29cd81cdb","variableMapping":{"segmentSizeInBytes":"size","length":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":0},{"failures":[189,192,193,194,7,195,196,353,197,198,60,61,62,63,64,65,66,67,68,200,357,122,204,205,26,207,208,361,210,362,212,214,216,217,218,219,31,222,124,125,226,227,33,229,230,371,232,372,234,236,238,239,240,241,38,244,268,269,94,271,272,383,274,384,276,278,280,281,282,283,389,286,157,290,291,40,293,294,394,296,395,298,300,302,303,304,305,400,308,159,161,162,9,163,164,10,165,167,168,169,405,69,413,415,59,417,419,71,107,309,57,310,77,479,480,481,312,313,317,320,109,325,179,326,327,180,181,110,111,182,329,183,330,331,349,112,332,333,113,114,334,335,172,336,337,350,173,174,338,339,115,340,116,341,117,342,343],"tindex":"7177932f-db61-11e4-b667-21b1ba37edd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-1},{"failures":[],"tindex":"71779330-db61-11e4-b667-639064e31d96","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[199,63,418,422,429,453],"tindex":"71779331-db61-11e4-b667-734fee6bdc28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[185,186,187,188,189,190,351,191,352,192,193,194,7,195,196,353,197,198,58,60,61,118,62,119,120,63,64,0,65,66,67,8,68,200,355,356,201,357,121,25,202,122,123,358,203,359,204,205,26,206,207,208,360,209,361,210,27,362,86,28,211,87,212,213,214,88,89,363,364,215,216,365,217,29,30,218,366,219,31,367,220,221,222,32,124,223,224,125,126,368,225,369,226,227,33,228,229,230,370,231,371,232,34,372,90,35,233,91,234,235,236,92,93,373,374,237,238,375,239,36,37,240,376,241,38,377,242,243,244,39,245,246,247,248,378,249,250,127,128,379,129,251,130,131,132,133,252,134,253,135,136,137,138,139,140,141,142,254,255,256,257,380,258,259,260,261,262,381,263,264,143,265,144,145,146,147,266,148,267,149,150,151,152,153,154,155,156,268,269,94,270,271,272,382,273,383,274,95,384,96,97,275,98,276,277,278,99,100,385,386,279,280,387,281,101,102,282,388,283,389,390,284,285,286,287,288,157,158,391,289,392,290,291,40,292,293,294,393,295,394,296,41,395,103,42,297,104,298,299,300,105,106,396,397,301,302,398,303,43,44,304,399,305,400,401,306,307,308,45,159,160,402,161,162,9,163,164,10,165,166,167,168,169,170,171,403,404,405,406,69,407,408,409,410,411,412,11,413,414,70,415,12,13,59,416,417,418,419,420,421,424,72,107,309,56,57,310,311,73,425,426,2,427,428,14,3,429,430,431,432,433,434,435,436,15,437,16,82,438,439,440,74,441,4,442,443,444,75,445,446,17,447,18,83,76,448,77,449,450,5,451,452,19,6,453,454,455,456,457,458,459,460,20,461,21,84,462,463,464,78,184,79,465,466,80,467,468,469,22,470,23,85,471,81,472,473,474,475,476,477,478,479,480,481,312,313,314,315,482,316,317,318,319,320,321,322,323,324,483,109,325,484,179,326,327,180,181,328,110,111,182,329,183,330,331,349,112,332,333,113,114,334,335,172,336,337,350,173,174,338,339,115,340,116,341,117,342,343],"tindex":"7177ba42-db61-11e4-b667-f3ff1591eb63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[],"tindex":"7177ba43-db61-11e4-b667-b70bf3d7e9bf","variableMapping":{"err":"tmp","dLat":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":0},{"failures":[7,8,9,163,164,10,165,168,412,11,12,13,72,73,14,3,15,16,74,4,17,18,19,6,20,21,516,79,22,23,24],"tindex":"7177ba44-db61-11e4-b667-edea2de46ed2","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":-1},{"failures":[189,192,193,194,7,58,60,61,118,62,119,120,63,64,65,66,67,8,68,488,489,491,492,344,517,518,121,122,123,204,363,29,31,220,221,124,125,126,226,373,36,38,242,243,130,131,132,254,255,256,257,258,144,145,146,281,157,158,290,396,43,400,306,307,519,520,521,522,161,162,9,163,164,10,165,167,168,169,170,448,77,480,481,314,315,316,317,318,319,320,321,323,324,341],"tindex":"7177ba45-db61-11e4-b667-43a8be0ba2cc","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"7177ba46-db61-11e4-b667-810c37a4a16c","variableMapping":{"cap":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"7177e157-db61-11e4-b667-81297e0fa087","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[414],"tindex":"7177e158-db61-11e4-b667-0339beb586d9","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"7177e159-db61-11e4-b667-c79326bca7c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:158","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl com.graphhopper.coll.GHBitSetImpl = new com.graphhopper.coll.GHBitSetImpl(com.graphhopper.storage.GraphStorage.getNodes())"},"status":-2},{"failures":[],"tindex":"7177e15a-db61-11e4-b667-8ded869c3377","variableMapping":{"size":"x2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":217,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":340,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":24,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":121,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":247,"com.graphhopper.GraphHopperAPITest.testNoLoad":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":269,"com.graphhopper.reader.OSMReaderTest.testFerry":58,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":195,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":196,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":442,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":131,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":162,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":461,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":463,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":34,"com.graphhopper.coll.CompressedArrayTest.testCompress":55,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":17,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":307,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":385,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":395,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":379,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":182,"com.graphhopper.GraphHopperTest.testPrepare":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":109,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":300,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":427,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":336,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":509,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":447,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":186,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":203,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":129,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":310,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":426,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":511,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":112,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":335,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":145,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":243,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":124,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":204,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":330,"com.graphhopper.GraphHopperTest.testLoadOSM":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":150,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":513,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":146,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":424,"com.graphhopper.reader.OSMReaderTest.testSort":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":56,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":126,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":494,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":399,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":157,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":284,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":320,"com.graphhopper.routing.DijkstraTest.initializationError":477,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":241,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":493,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":365,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":295,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":355,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":484,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":223,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":452,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":81,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":23,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":134,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":104,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":174,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":133,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":166,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":113,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":333,"com.graphhopper.coll.OSMIDMapTest.testGetLong":491,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":233,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":228,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":213,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":122,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":88,"com.graphhopper.coll.CompressedArrayTest.testCompress2":54,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":106,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":78,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":372,"com.graphhopper.GraphHopperAPITest.testLoad":159,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":359,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":504,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":403,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":103,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":40,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":108,"com.graphhopper.storage.LevelGraphStorageTest.testClone":207,"com.graphhopper.reader.OSMReaderTest.testBarriers":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":227,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":311,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":453,"com.graphhopper.util.GHUtilityTest.testCopy":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":334,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":469,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":83,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":378,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":502,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":75,"com.graphhopper.routing.PathTest.testFindInstruction":481,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":33,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":175,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":353,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":408,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":367,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":451,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":305,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":298,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":181,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":460,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":71,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":476,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":360,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":382,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":507,"com.graphhopper.util.InstructionListTest.testWayList2":194,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":282,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":151,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":308,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":428,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":242,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":472,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":158,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":448,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":361,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":517,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":429,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":495,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":114,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":291,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":119,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":345,"com.graphhopper.routing.AStarTest.initializationError":475,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":341,"com.graphhopper.coll.OSMIDMapTest.testGet":488,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":232,"com.graphhopper.routing.PathBidirRefTest.testExtract":312,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":409,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":432,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":490,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":137,"com.graphhopper.storage.RAMDataAccessTest.testCopy":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":101,"com.graphhopper.storage.RAMDataAccessTest.testSegments":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":431,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":156,"com.graphhopper.util.GHUtilityTest.testSort2":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":338,"com.graphhopper.reader.OSMReaderTest.testMain":61,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":433,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":82,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":11,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":368,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":362,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":87,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":222,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":86,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":238,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":450,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":512,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":214,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":8,"com.graphhopper.storage.StorablePropertiesTest.testStore":344,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":518,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":45,"com.graphhopper.storage.GraphHopperStorageTest.testClone":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":388,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":59,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":12,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":297,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":200,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":85,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":273,"com.graphhopper.routing.PathTest.testTime":479,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":468,"com.graphhopper.util.BitUtilLittleTest.testToFloat":486,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":220,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":420,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":380,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":153,"com.graphhopper.reader.OSMReaderTest.testRelation":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":100,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":215,"com.graphhopper.util.GHUtilityTest.testSortDirected":191,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":21,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":497,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":316,"com.graphhopper.GraphHopperTest.testFootOnly":169,"com.graphhopper.util.BitUtilLittleTest.testToInt":487,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":441,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":70,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":255,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":252,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":423,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":332,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":276,"com.graphhopper.search.NameIndexTest.testCreate":522,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":501,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":314,"com.graphhopper.routing.QueryGraphTest.testOneWay":322,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":154,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":49,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":444,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":144,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":46,"com.graphhopper.reader.OSMReaderTest.testWithBounds":67,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":503,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":309,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":386,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":410,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":1,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":205,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":358,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":464,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":20,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":76,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":237,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":234,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":290,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":349,"com.graphhopper.util.BitUtilLittleTest.testToBitString":485,"com.graphhopper.util.InstructionListTest.testWayList":193,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":430,"com.graphhopper.GraphHopperAPITest.testDisconnected179":160,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":383,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":458,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":198,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":286,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":164,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":393,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":329,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":302,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":425,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":350,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":474,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":111,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":31,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":416,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":466,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":437,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":342,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":392,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":140,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":514,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":439,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":288,"com.graphhopper.routing.PathTest.testWayList":480,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":96,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":414,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":516,"com.graphhopper.coll.OSMIDMapTest.testGet2":489,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":343,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":374,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":436,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":299,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":231,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":294,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":253,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":135,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":499,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":498,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":136,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":455,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":176,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":184,"com.graphhopper.util.GHUtilityTest.testSort":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":387,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":435,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":443,"com.graphhopper.search.NameIndexTest.testPut":520,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":244,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":369,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":251,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":258,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":261,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":505,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":19,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":77,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":259,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":224,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":465,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":473,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":235,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":107,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":506,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":281,"com.graphhopper.routing.PathTest.testFound":478,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":72,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":170,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":219,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":508,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":356,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":434,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":35,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":510,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":521,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":384,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":296,"com.graphhopper.util.InstructionListTest.testEmptyList":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":172,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":22,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":173,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":419,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":412,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":18,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":411,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":339,"com.graphhopper.reader.PrinctonReaderTest.testRead":197,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":400,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":132,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":371,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":95,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":268,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":236,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":446,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":456,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":422,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":467,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":5,"com.graphhopper.reader.OSMReaderTest.testFoot":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":280,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":324,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":52,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":221,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":267,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":440,"com.graphhopper.reader.OSMReaderTest.testOneWay":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":149,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":42,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":44,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":445,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":346,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":397,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":454,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":278,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":394,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":180,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":183,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":326,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":496,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":405,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":275,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":482,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":354,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":391,"com.graphhopper.routing.PathBidirRefTest.testExtract2":313,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":515,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":152,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":250,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":470,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":519,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":303,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":381,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":471,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":287,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":406,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":459,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":147,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":304,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":351,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":209,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":417,"com.graphhopper.GraphHopperTest.testFootAndCar":10,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":396,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":28,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":79,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":141,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":500,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":271,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":421,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":418,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":116,"com.graphhopper.GraphHopperTest.testPrepareOnly":161,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":438,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":94,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":65,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":357,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":7,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":398,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":69,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":277,"com.graphhopper.routing.AStarBidirectionTest.initializationError":483,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":73,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":366,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":30,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":125}}]
