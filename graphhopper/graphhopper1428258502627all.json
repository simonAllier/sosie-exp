[{"failures":[],"tindex":"8a8d89b8-dbc1-11e4-94ea-d327dc9c5b77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"8a8d89b9-dbc1-11e4-94ea-55aa5399ea89","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[7],"tindex":"8a8d89ba-dbc1-11e4-94ea-cf8da80336c6","variableMapping":{"str":"str","s":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:132","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String + \".\\n\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[8,9,10],"tindex":"8a8d89bb-dbc1-11e4-94ea-b3bf7e7f5775","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:60","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int))"},"status":-1},{"failures":[],"tindex":"8a8d89bc-dbc1-11e4-94ea-cf7de64c63db","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"8a8db0cd-dbc1-11e4-94ea-c3b8048669dc","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"child","tmpNode":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[11,12,13,14,15,16,17],"tindex":"8a8db0ce-dbc1-11e4-94ea-e7491a2133d0","variableMapping":{"importance":"priorityFromRelation","hash":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"8a8db0cf-dbc1-11e4-94ea-a9b1001f744a","variableMapping":{"r":"fullDist2D","x":"fwdFaster","absY":"restDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[],"tindex":"8a8db0d0-dbc1-11e4-94ea-bf4702042458","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[18,7],"tindex":"8a8db0d1-dbc1-11e4-94ea-4741d4d687ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,0,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,18,270,271,272,273,274,8,275,276,277,9,10,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,1,305,11,306,307,308,12,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,2,328,15,329,330,331,16,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,17,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,3,4,5,437,6,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460],"tindex":"8a8dd7e2-dbc1-11e4-94ea-d717658b73b6","variableMapping":{"baseUrl":"entryVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[461,462,463,20,25,46,52,57,59,60,65,66,67,105,106,107,464,120,123,128,149,155,160,162,163,0,208,211,216,237,243,248,250,251,465,466,262,267,268,269,18,303,304,379,380,382,383,385,386,387,389,390,393,429,467,468,469,470,471,435,3,4,5,437,6,439,440,441,442,446,447,448,449,450],"tindex":"8a8dd7e3-dbc1-11e4-94ea-d976f877a4ad","variableMapping":{"segmentsToMap":"delta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[],"tindex":"8a8dd7e4-dbc1-11e4-94ea-c1bd61a80b25","variableMapping":{"angle":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[11,15],"tindex":"8a8dd7e5-dbc1-11e4-94ea-7fe539b13981","variableMapping":{"size":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[281,285,437,441,445],"tindex":"8a8dd7e6-dbc1-11e4-94ea-233f3da477c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[27,35,37,38,40,44,45,52,53,130,138,140,141,143,147,148,155,156,168,176,178,179,181,185,186,192,193,209,218,226,228,229,231,235,236,243,244,8,277],"tindex":"8a8dd7e7-dbc1-11e4-94ea-cd6eb93f66f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[],"tindex":"8a8dd7e8-dbc1-11e4-94ea-8574288eb2a4","variableMapping":{"edgePointer":"encoded","edgeEntryBytes":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[292,444],"tindex":"8a8dd7e9-dbc1-11e4-94ea-273f8b714e8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[],"tindex":"8a8dd7ea-dbc1-11e4-94ea-071f7083d2ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"8a8dd7eb-dbc1-11e4-94ea-0f508c20f326","variableMapping":{"size":"start","capacity":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":0},{"failures":[],"tindex":"8a8dd7ec-dbc1-11e4-94ea-739427068a49","variableMapping":{"maxLeafEntries":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[27,38,40,44,45,52,53,130,141,143,147,148,155,156,168,179,181,185,186,192,193,218,229,231,235,236,243,244,8,277],"tindex":"8a8dd7ed-dbc1-11e4-94ea-f39800e1cc52","variableMapping":{"origEdgeId":"start","mainEdges":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-1},{"failures":[],"tindex":"8a8dfefe-dbc1-11e4-94ea-7b4b4235055b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[],"tindex":"8a8dfeff-dbc1-11e4-94ea-97b8562f820b","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[397,403,419,424,425,428,430,432],"tindex":"8a8dff00-dbc1-11e4-94ea-ef4943da8310","variableMapping":{"pos":"tmpPrevEdge","mSize":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"8a8dff01-dbc1-11e4-94ea-a7aabefcaea1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"8a8dff02-dbc1-11e4-94ea-0172438cf892","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"value","id":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"8a8dff03-dbc1-11e4-94ea-ad1fb19c879d","variableMapping":{"edgeId":"start","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[],"tindex":"8a8dff04-dbc1-11e4-94ea-638e935e6ccc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:342","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[304],"tindex":"8a8dff05-dbc1-11e4-94ea-4d5a4888512d","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.KM_MILE":"fwdDecline","distInMeter":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:76","type":"CtLocalVariableImpl","sourcecode":"double double = (double / 1000) / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-1},{"failures":[],"tindex":"8a8dff06-dbc1-11e4-94ea-f9e753da0fed","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[8,9],"tindex":"8a8dff07-dbc1-11e4-94ea-19eaec6b723e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[],"tindex":"8a8dff08-dbc1-11e4-94ea-cd58cfc9b113","variableMapping":{"high":"shift","len":"shift","start":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"8a8dff09-dbc1-11e4-94ea-f93438f0ac95","variableMapping":{"newName":"val","name":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[295,472,7],"tindex":"8a8dff0a-dbc1-11e4-94ea-c744afe815b4","variableMapping":{"cp":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:125","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"8a8dff0b-dbc1-11e4-94ea-63f8185c6403","variableMapping":{"max":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[296],"tindex":"8a8dff0c-dbc1-11e4-94ea-0bd7cdb4f6e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[409],"tindex":"8a8dff0d-dbc1-11e4-94ea-27fb220756c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:250","type":"CtIfImpl","sourcecode":"if (!boolean)\n    return com.graphhopper.storage.GraphHopperStorage.reverseFlags(long, long);\n"},"status":-1},{"failures":[18,290,296,3,4,5,437,6,440,445,446,448,451,452,454,455,456,458],"tindex":"8a8dff0e-dbc1-11e4-94ea-eda639aebf34","variableMapping":{"enableIfAssert":"isRoundabout"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1371","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,0,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,18,270,271,272,273,274,8,275,276,277,9,10,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,1,305,11,306,307,308,12,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,2,328,15,329,330,331,16,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,17,349,350,351,352,353,354,355,356,357,358,359,360,473,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,3,4,5,437,6,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460],"tindex":"8a8e261f-dbc1-11e4-94ea-61213dff533e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"8a8e2620-dbc1-11e4-94ea-8945e3105871","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"8a8e2621-dbc1-11e4-94ea-39ad7fbe098c","variableMapping":{"ghLocation":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":0},{"failures":[346,347,348,17,349,350,351,352,353,354,355,356,357,358,359,360],"tindex":"8a8e2622-dbc1-11e4-94ea-77189cd596f3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:252","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-1},{"failures":[],"tindex":"8a8e2623-dbc1-11e4-94ea-d507967ec436","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[20,25,26,27,33,34,36,41,49,54,57,61,79,86,99,119,120,123,128,129,130,136,137,139,144,152,157,160,164,166,167,168,174,175,177,182,190,194,197,201,207,211,216,217,218,224,225,227,232,240,245,248,252,254,257,258,262,8,9,10,279,282,286,293,300,304,305,323,324,328,347,362,379,386,389,397,398,403,405,408,409,410,419,420,421,422,423,432,459,460],"tindex":"8a8e2624-dbc1-11e4-94ea-b52d42e8d235","variableMapping":{"high":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:273","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, boolean), com.graphhopper.routing.util.FlagEncoder.int, boolean)"},"status":-1},{"failures":[],"tindex":"8a8e2625-dbc1-11e4-94ea-31a96c7960a9","variableMapping":{"high":"allowed","len":"allowed","start":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"8a8e4c36-dbc1-11e4-94ea-430686de498c","variableMapping":{"scDirMask":"defaultL","flags":"defaultL","dir":"defaultL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"8a8e4c37-dbc1-11e4-94ea-e317121306da","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"oldValue","edge":"oldValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":-2},{"failures":[27,35,37,38,40,44,45,52,53,130,138,140,141,143,147,148,155,156,474,475,209,218,226,228,229,231,235,236,243,244,8,276,277,458],"tindex":"8a8e4c38-dbc1-11e4-94ea-47ff2040b36c","variableMapping":{"edgePointer":"capacity","edgeId":"segmentSizeInBytes","baseNode":"segmentSizeInBytes","adjNode":"segmentSizeInBytes","nextEdge":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:804","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.AssertionError((((((((\"endless loop detected for \" + (int)) + \", \") + (int)) + \", \") + (long)) + \", \") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[305,307,308,12,318,321,322,14,327,328,330,331,16,341,344,345,347,348,17,356,359,360,362,364,365,372,375,444,445,446,447,449,450,451,452,456,457,458],"tindex":"8a8e4c39-dbc1-11e4-94ea-1f13bc1b7ca8","variableMapping":{"size":"speed","index":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[317,319,340,342,355,357,371,373],"tindex":"8a8e4c3a-dbc1-11e4-94ea-2f738402c36e","variableMapping":{"dist":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[307,12,318,330,16,341,348,17,356,364,372],"tindex":"8a8e4c3b-dbc1-11e4-94ea-8fd3c528184e","variableMapping":{"retBucket":"paveType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"8a8e4c3c-dbc1-11e4-94ea-5bd4884c3b54","variableMapping":{"high":"scDirMask","highKey":"dir","key":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"8a8e4c3d-dbc1-11e4-94ea-e502920af6c0","variableMapping":{"logMessages":"resultOrientation","logMessagesPercentage":"baseOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:158","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"8a8e4c3e-dbc1-11e4-94ea-692fba8d8928","variableMapping":{"nodeThis":"start","nextEdgeOther":"start","nodeOther":"start","nextEdge":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[289],"tindex":"8a8e4c3f-dbc1-11e4-94ea-033a702cc292","variableMapping":{"str":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"8a8e4c40-dbc1-11e4-94ea-47b84c63c1f8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:433","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[11,14,15],"tindex":"8a8e4c41-dbc1-11e4-94ea-b3d33ca956f5","variableMapping":{"id":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[317,319,340,342,355,357,371,373],"tindex":"8a8e4c42-dbc1-11e4-94ea-9db5f5998e1e","variableMapping":{"turnCosts":"maxSpeed","weight":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"8a8e4c43-dbc1-11e4-94ea-c9e5cbf0bc7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[475],"tindex":"8a8e4c44-dbc1-11e4-94ea-c9239bf06c82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[20,25,46,52,57,60,67,107,476,120,123,128,149,155,160,163,166,187,0,192,197,200,477,478,479,480,211,216,237,243,248,251,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,268,269,379,383,387,390,393,429,467,468,469,470,471,435,4,5,6,440,441,444,446,447,448,449,450,451,452,454,455,456,457,458],"tindex":"8a8e7355-dbc1-11e4-94ea-491c4fea3bef","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[294],"tindex":"8a8e7356-dbc1-11e4-94ea-89d74cc0c827","variableMapping":{"deltaX":"maxSpeed","maxX":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[498,499,500,501,268,269,379,380],"tindex":"8a8e7357-dbc1-11e4-94ea-4d61465260b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[318,341,356,362,364,372],"tindex":"8a8e7358-dbc1-11e4-94ea-cd3a322ca4a3","variableMapping":{"alreadyRun":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"8a8e7359-dbc1-11e4-94ea-47faab3d4463","variableMapping":{"low":"start","guess":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[480,6],"tindex":"8a8e735a-dbc1-11e4-94ea-3d6c61d6b4d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:293","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.close()"},"status":-1},{"failures":[],"tindex":"8a8e735b-dbc1-11e4-94ea-b36deb7d30c6","variableMapping":{"closestNode":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"8a8e735c-dbc1-11e4-94ea-7377527264ad","variableMapping":{"id":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"8a8e735d-dbc1-11e4-94ea-ddc8832aa02b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"8a8e735e-dbc1-11e4-94ea-9d1cfdd1b244","variableMapping":{"other":"osmValue","message":"osmValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:96","type":"CtIfImpl","sourcecode":"if ((this.java.lang.String) == null ? (com.graphhopper.util.InstructionAnnotation.java.lang.String) != null : !(this.java.lang.String.equals(com.graphhopper.util.InstructionAnnotation.java.lang.String)))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":0},{"failures":[],"tindex":"8a8e735f-dbc1-11e4-94ea-b3c577681311","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"8a8e7360-dbc1-11e4-94ea-097b19b9b1be","variableMapping":{"store":"synched"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"8a8e7361-dbc1-11e4-94ea-89a028581440","variableMapping":{"this":"g","index":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1126","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getRemovedNodes().add(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"8a8e7362-dbc1-11e4-94ea-894e406b15ca","variableMapping":{"this":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:462","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":0},{"failures":[],"tindex":"8a8e7363-dbc1-11e4-94ea-d748da3ac5e9","variableMapping":{"fwdFaster":"bwSlower","incDist2DSum":"bwSlower","fwdSlower":"bwSlower","fullDist2D":"bwSlower","restDist2D":"bwSlower","speed":"bwSlower","decDist2DSum":"bwSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"8a8e7364-dbc1-11e4-94ea-bbb74a688e89","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,79,86,99,101,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,0,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,257,258,259,18,272,273,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,323,324,325,326,377,378,379,380,386,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,3,4,5,437,6,440,442,459,460],"tindex":"8a8e9a75-dbc1-11e4-94ea-552a99e848fb","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"8a8e9a76-dbc1-11e4-94ea-1d79e1c4f4ef","variableMapping":{"str":"val","name":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0},{"failures":[],"tindex":"8a8e9a77-dbc1-11e4-94ea-f5a96f3d95d8","variableMapping":{"node":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"8a8e9a78-dbc1-11e4-94ea-771af93033dc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[294],"tindex":"8a8e9a79-dbc1-11e4-94ea-031a7e6a6403","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[281,437,445],"tindex":"8a8e9a7a-dbc1-11e4-94ea-af81372ad379","variableMapping":{"high":"allowed","len":"allowed","start":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"8a8e9a7b-dbc1-11e4-94ea-b33ce2e1fd95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[255,397,403,408,410,411,412,413,414,416,417,419,420,421,422,423,424,425,426,429,431,432,3,4,6],"tindex":"8a8e9a7c-dbc1-11e4-94ea-f3cc9a371233","variableMapping":{"eof":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:162","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"EOF reached\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[294,295,319,342,357,472,373],"tindex":"8a8e9a7d-dbc1-11e4-94ea-8140c060a2d6","variableMapping":{"r":"speed","x":"speed","absY":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[],"tindex":"8a8e9a7e-dbc1-11e4-94ea-391c0b0ed033","variableMapping":{"bytesForFlags":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"8a8e9a7f-dbc1-11e4-94ea-275d738a5bc9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[63,69,71,72,502,103,109,111,112,503,504,505,506,507,508,509,510,511],"tindex":"8a8e9a80-dbc1-11e4-94ea-0fb78999b421","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[18,13,14,327,435,436,3,4,5,437,6,439,440,441,442,444,445,446,447,448,449,450,451,452,454,455,456,457,512,458],"tindex":"8a8e9a81-dbc1-11e4-94ea-6ddc07f69c56","variableMapping":{"bm":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":-1},{"failures":[20,25,46,52,57,60,65,67,88,89,90,92,105,107,513,120,123,128,149,155,160,163,166,187,0,192,197,477,478,479,480,211,216,237,243,248,251,481,482,483,484,485,486,487,488,489,490,491,492,493,494,496,514,497,515,262,268,269,379,383,387,389,390,393,429,467,468,469,470,471,435,3,4,5,6,440,441,444,446,447,448,449,450,451,452,454,455,456,457,458],"tindex":"8a8ec192-dbc1-11e4-94ea-a70e5bc42bf1","variableMapping":{"noNumberValue":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:332","type":"CtReturnImpl","sourcecode":"return int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-1},{"failures":[19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,516,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,517,120,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,0,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,265,266,267,268,269,18,270,271,272,273,8,275,276,277,9,10,280,303,304,377,378,379,380,382,382,383,383,384,384,385,385,386,386,387,387,388,388,389,389,390,390,391,391,392,392,393,393,394,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,436,3,4,5,437,6,439,440,441,442,444,445,446,447,448,449,450,451,452,454,455,456,457,458,518,459,460],"tindex":"8a8ec193-dbc1-11e4-94ea-9d671fd35743","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"8a8ec194-dbc1-11e4-94ea-6b8a304d4042","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[],"tindex":"8a8ec195-dbc1-11e4-94ea-3be22b5ab872","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":0},{"failures":[],"tindex":"8a8ec196-dbc1-11e4-94ea-9104c192434d","variableMapping":{"byteCount":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"8a8ec197-dbc1-11e4-94ea-93c39bc56ae7","variableMapping":{"edgeState":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[8,9,10],"tindex":"8a8ec198-dbc1-11e4-94ea-7b8409b16603","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[63,71,72,103,111,112,503,504,506,507,508,509,511],"tindex":"8a8ec199-dbc1-11e4-94ea-bdb08cfcafb6","variableMapping":{"factor":"maxLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[100,102,204,206,209,262,395,397,398,399,400,401,403,405,407,408,415,419,428,430,432],"tindex":"8a8ec19a-dbc1-11e4-94ea-c19cab27e8a7","variableMapping":{"high":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":242,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":427,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":208,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":472,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":82,"com.graphhopper.GraphHopperAPITest.testNoLoad":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":167,"com.graphhopper.reader.OSMReaderTest.testFerry":444,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":258,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":259,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":365,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":106,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":436,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":498,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":138,"com.graphhopper.coll.CompressedArrayTest.testCompress":504,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":371,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":60,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":187,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":36,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":102,"com.graphhopper.util.AngleCalcTest.testOrientation":499,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":405,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":426,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":394,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":329,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":419,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":516,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":372,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":271,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":214,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":103,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":364,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":328,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":474,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":411,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":66,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":16,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":120,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":510,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":408,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":67,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":326,"com.graphhopper.reader.OSMReaderTest.testSort":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":342,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":276,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":124,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":489,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":55,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":20,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":508,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":199,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":389,"com.graphhopper.routing.DijkstraTest.initializationError":376,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":518,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":159,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":476,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":241,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":32,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":121,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":133,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":128,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":360,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":357,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":110,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":40,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":108,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":438,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":414,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":413,"com.graphhopper.coll.OSMIDMapTest.testGetLong":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":142,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":148,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":233,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":211,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":235,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":501,"com.graphhopper.coll.CompressedArrayTest.testCompress2":503,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":45,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":347,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":139,"com.graphhopper.GraphHopperAPITest.testLoad":254,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":215,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":477,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":278,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":37,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":27,"com.graphhopper.storage.LevelGraphStorageTest.testClone":220,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":129,"com.graphhopper.reader.OSMReaderTest.testBarriers":448,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":171,"com.graphhopper.util.GHUtilityTest.testCopy":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":119,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":354,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":84,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":374,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":486,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":368,"com.graphhopper.routing.PathTest.testFindInstruction":380,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":130,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":257,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":284,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":249,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":306,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":56,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":157,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":143,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":316,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":381,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":222,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":172,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":480,"com.graphhopper.util.InstructionListTest.testWayList2":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":74,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":134,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":330,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":517,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":162,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":323,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":303,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":224,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":466,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":332,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":490,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":140,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":87,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":415,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":449,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":488,"com.graphhopper.routing.AStarTest.initializationError":434,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":429,"com.graphhopper.coll.OSMIDMapTest.testGet":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":137,"com.graphhopper.routing.PathBidirRefTest.testExtract":272,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":285,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":335,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":469,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":114,"com.graphhopper.storage.RAMDataAccessTest.testCopy":481,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":192,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":362,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":334,"com.graphhopper.storage.RAMDataAccessTest.testSegments":485,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":79,"com.graphhopper.util.GHUtilityTest.testSort2":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":424,"com.graphhopper.reader.OSMReaderTest.testMain":446,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":212,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":147,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":336,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":511,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":343,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":240,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":196,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":227,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":231,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":252,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":228,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":305,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":234,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":457,"com.graphhopper.storage.StorablePropertiesTest.testStore":464,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":465,"com.graphhopper.storage.GraphHopperStorageTest.testClone":29,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":296,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":39,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":294,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":173,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":206,"com.graphhopper.routing.PathTest.testTime":378,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":353,"com.graphhopper.util.BitUtilLittleTest.testToFloat":496,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":250,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":221,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":301,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":186,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":239,"com.graphhopper.reader.OSMReaderTest.testRelation":453,"com.graphhopper.util.GHUtilityTest.testSortDirected":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":319,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":493,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":385,"com.graphhopper.GraphHopperTest.testFootOnly":441,"com.graphhopper.util.BitUtilLittleTest.testToInt":497,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":363,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":88,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":292,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":109,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":412,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":395,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":182,"com.graphhopper.search.NameIndexTest.testCreate":463,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":484,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":382,"com.graphhopper.routing.QueryGraphTest.testOneWay":391,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":77,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":507,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":367,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":505,"com.graphhopper.reader.OSMReaderTest.testWithBounds":456,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":487,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":179,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":275,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":188,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":286,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":13,"com.graphhopper.util.BitUtilLittleTest.testToDouble":514,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":217,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":213,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":346,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":317,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":375,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":151,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":99,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":144,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":25,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":390,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":410,"com.graphhopper.util.BitUtilLittleTest.testToBitString":495,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":58,"com.graphhopper.util.InstructionListTest.testWayList":268,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":333,"com.graphhopper.GraphHopperAPITest.testDisconnected179":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":174,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":314,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":460,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":201,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":340,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":31,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":155,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":406,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":2,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":49,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":421,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":433,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":404,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":248,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":297,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":350,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":126,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":236,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":431,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":117,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":345,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":19,"com.graphhopper.routing.PathTest.testWayList":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":200,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":291,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":7,"com.graphhopper.coll.OSMIDMapTest.testGet2":468,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":432,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":339,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":42,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":279,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":135,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":111,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":232,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":112,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":482,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":494,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":113,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":311,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":348,"com.graphhopper.util.GHUtilityTest.testSort":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":191,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":338,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":366,"com.graphhopper.search.NameIndexTest.testPut":461,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":164,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":83,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":92,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":95,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":478,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":308,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":388,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":122,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":440,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":349,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":324,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":430,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":8,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":479,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":0,"com.graphhopper.routing.PathTest.testFound":377,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":327,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":442,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":247,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":473,"com.graphhopper.util.AngleCalcTest.testAtan2":500,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":337,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":141,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":462,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":177,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":34,"com.graphhopper.util.InstructionListTest.testEmptyList":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":418,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":355,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":116,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":422,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":288,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":287,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":373,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":425,"com.graphhopper.reader.PrinctonReaderTest.testRead":459,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":57,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":107,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":176,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":471,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":506,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":166,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":146,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":312,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":370,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":513,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":11,"com.graphhopper.reader.OSMReaderTest.testFoot":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":190,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":393,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":71,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":251,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":509,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":72,"com.graphhopper.reader.OSMReaderTest.testOneWay":458,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":38,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":53,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":158,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":369,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":492,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":47,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":310,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":400,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":502,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":397,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":407,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":398,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":491,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":280,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":180,"com.graphhopper.util.BitUtilLittleTest.testToLong":515,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":384,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":22,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":512,"com.graphhopper.routing.PathBidirRefTest.testExtract2":273,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":475,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":409,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":75,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":86,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":356,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":51,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":97,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":359,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":202,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":281,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":315,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":68,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":54,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":264,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":223,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":298,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":46,"com.graphhopper.GraphHopperTest.testFootAndCar":437,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":229,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":17,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":118,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":483,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":170,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":325,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":299,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":402,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":428,"com.graphhopper.GraphHopperTest.testPrepareOnly":435,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":85,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":168,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":454,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":207,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":18,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":50,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":282,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":183,"com.graphhopper.routing.AStarBidirectionTest.initializationError":274,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":302,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":246,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":244,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":123}}]
