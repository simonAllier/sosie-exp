[{"failures":[],"tindex":"2c3bc96e-dbb0-11e4-88c0-d9a2f09bbf4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:143","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"tindex":"2c3d771f-dbb0-11e4-88c0-6df7122215b1","variableMapping":{"segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"2c3d9e30-dbb0-11e4-88c0-5d3977e83101","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"2c3d9e31-dbb0-11e4-88c0-3f451f6a49c1","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","entryVal":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"2c3d9e32-dbb0-11e4-88c0-d110a36a0705","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"2c3d9e33-dbb0-11e4-88c0-398d86a2fecd","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[310,311],"tindex":"2c3d9e34-dbb0-11e4-88c0-a1b80cf3c8be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[2,3,4,5,6,8,9,11,12,312],"tindex":"2c3d9e35-dbb0-11e4-88c0-b1a88b5bf8ae","variableMapping":{"sacScale":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-1},{"failures":[313,314,315,316,317,318,319],"tindex":"2c3d9e36-dbb0-11e4-88c0-6fe61c033c06","variableMapping":{"maxMCSpeed":"speed","speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[320],"tindex":"2c3d9e37-dbb0-11e4-88c0-9588574c7d81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,31,32,33,34,35,36,37,38,39,40,41,42,43,44,109,110,205,207,208,321,265,268,269],"tindex":"2c3d9e38-dbb0-11e4-88c0-958724a7b877","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"2c3d9e39-dbb0-11e4-88c0-27120598a76b","variableMapping":{"fileDetails":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[2,3,4,5,9,10,31,32,33,35,36,37,39,40,41,42,44,322,323,324,325,326,327,328],"tindex":"2c3d9e3a-dbb0-11e4-88c0-51a3d0e7246d","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"2c3dc54b-dbb0-11e4-88c0-815b570ce80c","variableMapping":{"initLeafSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[],"tindex":"2c3dc54c-dbb0-11e4-88c0-0f79d1afef7f","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"2c3dc54d-dbb0-11e4-88c0-bb1e12e71104","variableMapping":{"i":"unvisitedDeadEnds"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"2c3dc54e-dbb0-11e4-88c0-75047191018d","variableMapping":{"pos":"speed","mSize":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"2c3dc54f-dbb0-11e4-88c0-ff2b11353525","variableMapping":{"size":"bytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-3},{"failures":[],"tindex":"2c3e3980-dbb0-11e4-88c0-19f120277be1","variableMapping":{"orientation":"fwdSpeed","resultOrientation":"fwdSpeed","baseOrientation":"fwdSpeed","java.lang.Math.PI":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"2c3e3981-dbb0-11e4-88c0-0fad973192ab","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[],"tindex":"2c3e6092-dbb0-11e4-88c0-b7eff304b320","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"2c3e6093-dbb0-11e4-88c0-9b85300cd559","variableMapping":{"todoBytes":"internalFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"2c3e6094-dbb0-11e4-88c0-ebeee66b335b","variableMapping":{"origEdgeId":"indexDivisor","mainEdges":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"2c3e6095-dbb0-11e4-88c0-514748f463b5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-1},{"failures":[],"tindex":"2c3e6096-dbb0-11e4-88c0-ab73bdff1baf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"2c3e6097-dbb0-11e4-88c0-6944889f6f51","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[],"tindex":"2c3e6098-dbb0-11e4-88c0-9dda1e1bfb4e","variableMapping":{"speed":"r"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-1},{"failures":[],"tindex":"2c3e6099-dbb0-11e4-88c0-dd1d28b9ebe3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-1},{"failures":[],"tindex":"2c3e609a-dbb0-11e4-88c0-85f7621508ee","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-1},{"failures":[],"tindex":"2c3e609b-dbb0-11e4-88c0-ff31f7133c9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"2c3e609c-dbb0-11e4-88c0-9b20640a1d90","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"2c3e609d-dbb0-11e4-88c0-e10d5eb25719","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"2c3e609e-dbb0-11e4-88c0-9fb1a4be81f9","variableMapping":{"tmp":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-1},{"failures":[],"tindex":"2c3eaebf-dbb0-11e4-88c0-dda095f8604e","variableMapping":{"val":"weight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"2c3eaec0-dbb0-11e4-88c0-b5cde49bd478","variableMapping":{"mKeys":"mKeys","nkeys":"mKeys"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"2c3eaec1-dbb0-11e4-88c0-87b3bc198724","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"2c3eaec2-dbb0-11e4-88c0-0359f3a8ccbd","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"2c3eaec3-dbb0-11e4-88c0-87cbf86fbdb5","variableMapping":{"incEleSum":"y","incDist2DSum":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-1},{"failures":[],"tindex":"2c3eaec4-dbb0-11e4-88c0-35409a8b3d48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:54","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"2c3eaec5-dbb0-11e4-88c0-af4326a6356e","variableMapping":{"orientation":"midLat","resultOrientation":"lon","baseOrientation":"lat","java.lang.Math.PI":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"2c3eaec6-dbb0-11e4-88c0-b7cef78e7158","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.RacingBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-1},{"failures":[],"tindex":"2c3eaec7-dbb0-11e4-88c0-e7c3aaf6a5f8","variableMapping":{"min":"i","tmpSize":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"2c3eaec8-dbb0-11e4-88c0-9f3e1f4b4128","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[],"tindex":"2c3ed5d9-dbb0-11e4-88c0-cb1f08ca1f6c","variableMapping":{"nodesContracted":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[],"tindex":"2c3ed5da-dbb0-11e4-88c0-15959a916982","variableMapping":{"name":"wayTypeName","refName":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:449","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":-1},{"failures":[],"tindex":"2c3ed5db-dbb0-11e4-88c0-a9c2440a0a65","variableMapping":{"eleDelta":"angle","decEleSum":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-1},{"failures":[],"tindex":"2c3efcec-dbb0-11e4-88c0-2fbf5acdce0b","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"2c3efced-dbb0-11e4-88c0-b5b65152c555","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-1},{"failures":[],"tindex":"2c3efcee-dbb0-11e4-88c0-c7baf7d3c0da","variableMapping":{"speedEncoder":"reverseSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-1},{"failures":[],"tindex":"2c3efcef-dbb0-11e4-88c0-77800670a96c","variableMapping":{"edgeId":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","nextEdge":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-1},{"failures":[],"tindex":"2c3efcf0-dbb0-11e4-88c0-ef69c450c026","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"2c3f7221-dbb0-11e4-88c0-55fca1fe5cc1","variableMapping":{"currEdge":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-1},{"failures":[],"tindex":"2c3f7222-dbb0-11e4-88c0-459a7bfde3c9","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-1},{"failures":[],"tindex":"2c3f7223-dbb0-11e4-88c0-579c6450a6ad","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:228","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"already initialized\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"2c3f7224-dbb0-11e4-88c0-a91d951aab71","variableMapping":{"neighborUpdates":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[],"tindex":"2c3f7225-dbb0-11e4-88c0-b30729cf8a59","variableMapping":{"high":"value","low":"value","guess":"value","guessedKey":"value","key":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":-1},{"failures":[],"tindex":"2c3f7226-dbb0-11e4-88c0-6d102d147c2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[],"tindex":"2c3f7227-dbb0-11e4-88c0-c9777a25fb0c","variableMapping":{"incEleSum":"maxLonTmp","eleDelta":"maxLonTmp","incDist2DSum":"lon","decEleSum":"lon","fullDist2D":"maxLonTmp","decDist2DSum":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"2c3f7228-dbb0-11e4-88c0-9b6a4c284767","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"2c3f7229-dbb0-11e4-88c0-7df5f7992ee1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-1},{"failures":[],"tindex":"2c3f722a-dbb0-11e4-88c0-9d6ace389458","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"2c3f722b-dbb0-11e4-88c0-015b0a4ed691","variableMapping":{"mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-2},{"failures":[],"tindex":"2c3f722c-dbb0-11e4-88c0-5f977f989902","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":-2},{"failures":[],"tindex":"2c3f722d-dbb0-11e4-88c0-cd3ce81758a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-2},{"failures":[],"tindex":"2c3f993e-dbb0-11e4-88c0-a1c77c5276d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:145","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"2c3f993f-dbb0-11e4-88c0-7345ecd545ac","variableMapping":{"i":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[],"tindex":"2c3f9940-dbb0-11e4-88c0-77f79c5fd014","variableMapping":{"dataAccess":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:308","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create((64 * 1024))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-2},{"failures":[],"tindex":"2c3f9941-dbb0-11e4-88c0-9d45f0a62c8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:143","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"2c3f9942-dbb0-11e4-88c0-4d2efbd28d11","variableMapping":{"nodes":"length","adj":"length","base":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[],"tindex":"2c3f9943-dbb0-11e4-88c0-bb73c52a67c0","variableMapping":{"size":"low"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"2c3f9944-dbb0-11e4-88c0-0d2b9053c2a6","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"2c3f9945-dbb0-11e4-88c0-8b21283c1be3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"2c3f9946-dbb0-11e4-88c0-4b2a7aabd7c2","variableMapping":{"retBucket":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-2},{"failures":[],"tindex":"2c3f9947-dbb0-11e4-88c0-470f8b27052c","variableMapping":{"costs":"decEleSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:612","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-2},{"failures":[],"tindex":"2c3f9948-dbb0-11e4-88c0-afd59002864f","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"2c3f9949-dbb0-11e4-88c0-ab99ca2a5af4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:133","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"2c3f994a-dbb0-11e4-88c0-11ccff9d7de7","variableMapping":{"indexWithMaxDist":"size","lastIndex":"size","fromIndex":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":-2},{"failures":[],"tindex":"2c3f994b-dbb0-11e4-88c0-39c3fa21dc9e","variableMapping":{"dX":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","dY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"2c3f994c-dbb0-11e4-88c0-f53fbb981e7e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"2c3f994d-dbb0-11e4-88c0-c7724e69157c","variableMapping":{"location":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-2},{"failures":[],"tindex":"2c3f994e-dbb0-11e4-88c0-0b9a195f8925","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"2c3f994f-dbb0-11e4-88c0-f1cd86d8db5c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"2c3f9950-dbb0-11e4-88c0-5bea6a726041","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"2c3f9951-dbb0-11e4-88c0-87ac6474504e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":-2},{"failures":[],"tindex":"2c3f9952-dbb0-11e4-88c0-f9df4ca0c5ba","variableMapping":{"i":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-2},{"failures":[],"tindex":"2c3f9953-dbb0-11e4-88c0-3746c05f86cd","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"2c3fc064-dbb0-11e4-88c0-b336f9964cbf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:62","type":"CtReturnImpl","sourcecode":"return \"FASTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"status":-2},{"failures":[],"tindex":"2c3fc065-dbb0-11e4-88c0-6b87e659a295","variableMapping":{"shift":"bits","preferWayEncoder":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"2c3fc066-dbb0-11e4-88c0-4339556344fe","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-2},{"failures":[],"tindex":"2c3fc067-dbb0-11e4-88c0-3ddf9ca7f038","variableMapping":{"distInMeter":"fwdFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-2},{"failures":[],"tindex":"2c3fc068-dbb0-11e4-88c0-eff01dee1dca","variableMapping":{"size":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"2c3fc069-dbb0-11e4-88c0-e907d9ad508f","variableMapping":{"res":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-2},{"failures":[],"tindex":"2c3fc06a-dbb0-11e4-88c0-f79a94685175","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"2c3fc06b-dbb0-11e4-88c0-bf38570a34f3","variableMapping":{"cp":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-2},{"failures":[],"tindex":"2c3fc06c-dbb0-11e4-88c0-e941c55ce17a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-2},{"failures":[],"tindex":"2c3fc06d-dbb0-11e4-88c0-f5178ba0cc14","variableMapping":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"endNode","i":"endNode","mValues":"parentNodes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:118","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.coll.SparseIntIntArray.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-2},{"failures":[],"tindex":"2c3fc06e-dbb0-11e4-88c0-b988693a3708","variableMapping":{"width":"minutes","lonSimilar":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"2c3fc06f-dbb0-11e4-88c0-9796d57a947a","variableMapping":{"max":"lat","time":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:52","type":"CtIfImpl","sourcecode":"if (long > (double))\n    double = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-2},{"failures":[],"tindex":"2c3fc070-dbb0-11e4-88c0-81b179fdc645","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":298,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":88,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":265,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":319,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":172,"com.graphhopper.reader.OSMReaderTest.testFerry":31,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":26,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":27,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":56,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":255,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":339,"com.graphhopper.routing.QueryGraphTest.testOneWay":65,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":337,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":157,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":189,"com.graphhopper.reader.OSMReaderTest.testWithBounds":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":49,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":244,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":98,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":266,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":273,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":270,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":124,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":153,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":104,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":186,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":87,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":94,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":131,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":71,"com.graphhopper.util.InstructionListTest.testWayList":17,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":146,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":80,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":14,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":271,"com.graphhopper.GraphHopperAPITest.testDisconnected179":12,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":154,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":52,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":336,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":236,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":250,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":78,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":190,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":30,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":205,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":249,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":119,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":178,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":238,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":197,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":253,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":191,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":312,"com.graphhopper.reader.OSMReaderTest.testSort":34,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":136,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":82,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":208,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":103,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":109,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":210,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":292,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":92,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":28,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":254,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":108,"com.graphhopper.routing.PathTest.testWayList":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":242,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":323,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":297,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":93,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":120,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":301,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":261,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":216,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":211,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":282,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":218,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":161,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":162,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":288,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":128,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":84,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":152,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":159,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":164,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":324,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":310,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":331,"com.graphhopper.util.GHUtilityTest.testSort":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":74,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":274,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":327,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":66,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":247,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":155,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":173,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":231,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":183,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":289,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":268,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":257,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":330,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":46,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":181,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":206,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":133,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":333,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":170,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":222,"com.graphhopper.GraphHopperAPITest.testLoad":11,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":228,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":325,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":48,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":115,"com.graphhopper.storage.LevelGraphStorageTest.testClone":276,"com.graphhopper.reader.OSMReaderTest.testBarriers":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":212,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":258,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":204,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":10,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":151,"com.graphhopper.util.GHUtilityTest.testCopy":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":77,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":303,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":169,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":262,"com.graphhopper.routing.PathTest.testFindInstruction":55,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":294,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":224,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":203,"com.graphhopper.util.InstructionListTest.testEmptyList":15,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":20,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":79,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":305,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":171,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":144,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":167,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":83,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":317,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":322,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":21,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":226,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":267,"com.graphhopper.reader.PrinctonReaderTest.testRead":29,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":145,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":158,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":219,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":232,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":112,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":229,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":259,"com.graphhopper.util.InstructionListTest.testWayList2":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":332,"com.graphhopper.reader.OSMReaderTest.testFoot":32,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":198,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":195,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":307,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":149,"com.graphhopper.reader.OSMReaderTest.testOneWay":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":245,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":45,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":110,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":126,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":280,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":141,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":241,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":223,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":76,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":114,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":121,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":314,"com.graphhopper.routing.PathBidirRefTest.testExtract":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":97,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":184,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":293,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":47,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":328,"com.graphhopper.util.GHUtilityTest.testSort2":22,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":85,"com.graphhopper.reader.OSMReaderTest.testMain":33,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":269,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":58,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":230,"com.graphhopper.routing.PathBidirRefTest.testExtract2":69,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":166,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":296,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":209,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":283,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":199,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":287,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":139,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":335,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":38,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":308,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":60,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":235,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":329,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":290,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":43,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":102,"com.graphhopper.storage.StorablePropertiesTest.testStore":321,"com.graphhopper.storage.GraphHopperStorageTest.testClone":117,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":192,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":142,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":279,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":127,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":313,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":134,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":260,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":285,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":334,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":263,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":168,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":306,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":277,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":81,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":295,"com.graphhopper.util.GHUtilityTest.testSortDirected":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":215,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":89,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":174,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":311,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":341,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":315,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":264,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":59,"com.graphhopper.GraphHopperTest.testFootOnly":9,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":19,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":138,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":177,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":160,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":73,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":300,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":95,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":207}}]
