[{"failures":[0,1,2],"tindex":"5ea050dd-da79-11e4-a4fb-95fedeb4faea","variableMapping":{"val":"trackType","existing":"trackType","key":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[3,4,5],"tindex":"5ea13b3e-da79-11e4-a4fb-3b215e7cb773","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[6],"tindex":"5ea13b3f-da79-11e4-a4fb-adee069918ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"5ea16150-da79-11e4-a4fb-8fd8023ad07a","variableMapping":{"turnCosts":"angle","weight":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"5ea16151-da79-11e4-a4fb-9f45d232ba09","variableMapping":{"neighborUpdates":"nodeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"5ea16152-da79-11e4-a4fb-1974f0465c97","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"5ea16153-da79-11e4-a4fb-4fb8eb4fff4d","variableMapping":{"edgeId":"child","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"child","nodeA":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"5ea16154-da79-11e4-a4fb-ef1e6b7ca195","variableMapping":{"this":"em"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:323","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.(getVehicleCount()) == 0)\n    throw new java.lang.IllegalStateException(\"No encoder is active!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":0},{"failures":[21],"tindex":"5ea16155-da79-11e4-a4fb-5f248008d6c9","variableMapping":{"acceptBit":"acceptBit","ferryBit":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[22,23,24,25,26,27,28,21,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,0,1,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"5ea16156-da79-11e4-a4fb-fd01e804099f","variableMapping":{"time":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[7,120,121,122,34,40],"tindex":"5ea16157-da79-11e4-a4fb-fbf6842885bb","variableMapping":{"nameIndexRef":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"5ea16158-da79-11e4-a4fb-7b171fbdaa85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[123,124,125,16,126,127,18,128,19,20,129,5,130],"tindex":"5ea16159-da79-11e4-a4fb-9f626a0d73f6","variableMapping":{"distance":"weight","maxSpeed":"weight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[97],"tindex":"5ea1615a-da79-11e4-a4fb-2f5735e7a5f0","variableMapping":{"java.lang.Double.NaN":"incDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-1},{"failures":[],"tindex":"5ea1615b-da79-11e4-a4fb-730f0371e67f","variableMapping":{"flags":"cap","scDirMask":"bytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[7,131,132,120,8,133,134,121,135,136,137,138,139,140,141,142,122,22,31,35,48,65,84,107],"tindex":"5ea1886c-da79-11e4-a4fb-111b1bcd20cb","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[7,131,132,120,143,144,8,134,145,146,147,148,149,150,151,23,25,26,28,29,30,33,36,38,39,45,0,47,56,59,152,153,154,155,61,63,72,74,76,77,80,81,92,95,97,99,100,103,104,115,118,2,156,157,158,159,160,161,16,126,162,20],"tindex":"5ea1886d-da79-11e4-a4fb-ff4c02f9a5f2","variableMapping":{"flags":"flags","scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[],"tindex":"5ea1886e-da79-11e4-a4fb-c3b1697f0c71","variableMapping":{"res":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"5ea1886f-da79-11e4-a4fb-ab46ebe80ce9","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"5ea18870-da79-11e4-a4fb-e98d01b0c959","variableMapping":{"empty":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[57,73,93,116],"tindex":"5ea18871-da79-11e4-a4fb-21845f19a84b","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[163,46,57,73,80,83,93,103,106,116],"tindex":"5ea18872-da79-11e4-a4fb-3506a603aada","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"5ea18873-da79-11e4-a4fb-03ba14fc9bd3","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"5ea18874-da79-11e4-a4fb-07935f9b9e88","variableMapping":{"algo":"entryVal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[47,61,63,81,104,157],"tindex":"5ea18875-da79-11e4-a4fb-c12a8e1e5f37","variableMapping":{"midLat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[21],"tindex":"5ea18876-da79-11e4-a4fb-297faed622b9","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-1},{"failures":[],"tindex":"5ea18877-da79-11e4-a4fb-0d5f6048d3f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:143","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"5ea18878-da79-11e4-a4fb-d924245d3c85","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[61,63,71,76,81,91,99,104,114],"tindex":"5ea1af89-da79-11e4-a4fb-17b6fcdf7d08","variableMapping":{"edgeCount":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","lastEdgeIndex":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[],"tindex":"5ea1af8a-da79-11e4-a4fb-17c819debb6d","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[134,164],"tindex":"5ea1af8b-da79-11e4-a4fb-4104c7633a99","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"index","speed":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[164],"tindex":"5ea1af8c-da79-11e4-a4fb-01147e28f2a2","variableMapping":{"message":"dayStr","hash":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:82","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + ((this.java.lang.String) != null ? this.java.lang.String.hashCode() : 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[3,4],"tindex":"5ea1af8d-da79-11e4-a4fb-0d86817b4c5b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"5ea1af8e-da79-11e4-a4fb-431b51a15698","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[],"tindex":"5ea1af8f-da79-11e4-a4fb-af7a82f667b9","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"5ea1af90-da79-11e4-a4fb-0f7d6d2e8d68","variableMapping":{"size":"speed","capacity":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":0},{"failures":[28],"tindex":"5ea1af91-da79-11e4-a4fb-33e02208abef","variableMapping":{"tt":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[165,15,128,129,166,167,168,169,5,130,170,171],"tindex":"5ea1af92-da79-11e4-a4fb-8dbbb9f8cbec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-1},{"failures":[],"tindex":"5ea1af93-da79-11e4-a4fb-7962f1592780","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"5ea1af94-da79-11e4-a4fb-4512d63373ca","variableMapping":{"initLeafSize":"encoderCount","maxLeafEntries":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":0},{"failures":[],"tindex":"5ea1af95-da79-11e4-a4fb-b58e9145b533","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[63],"tindex":"5ea1af96-da79-11e4-a4fb-b3024b6256b8","variableMapping":{"entry":"trackType","entryVal":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"5ea1af97-da79-11e4-a4fb-8fa4a8830664","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[120,8,121,25,21],"tindex":"5ea1af98-da79-11e4-a4fb-dd5540d8b7d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"5ea1af99-da79-11e4-a4fb-0bd6b07ea62a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[160,16],"tindex":"5ea1d6aa-da79-11e4-a4fb-49da5a6f694d","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"5ea1d6ab-da79-11e4-a4fb-c517a3e7a84b","variableMapping":{"lastKey":"wayBitMask","key":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"5ea1d6ac-da79-11e4-a4fb-0705fb067db5","variableMapping":{"newAdjIndex":"maxTurnCosts","newBaseIndex":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-2},{"failures":[],"tindex":"5ea1d6ad-da79-11e4-a4fb-c5c3bba3c9bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[97],"tindex":"5ea1d6ae-da79-11e4-a4fb-d9cec915a301","variableMapping":{"allIter":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:385","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIterator.fetchWayGeometry(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-1},{"failures":[],"tindex":"5ea1d6af-da79-11e4-a4fb-31f50a82cd17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"5ea1d6b0-da79-11e4-a4fb-b926786fa852","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"5ea1d6b1-da79-11e4-a4fb-a11892632774","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[63,71],"tindex":"5ea1d6b2-da79-11e4-a4fb-d9ee474339fe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[119],"tindex":"5ea1d6b3-da79-11e4-a4fb-a73bfc6f7f44","variableMapping":{"byteCount":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[57,73,93,116],"tindex":"5ea1d6b4-da79-11e4-a4fb-3b91b03fd2db","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"5ea1d6b5-da79-11e4-a4fb-ed82f59c2b19","variableMapping":{"capacity":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[172,173,174,175,176,177,178,179,180],"tindex":"5ea1d6b6-da79-11e4-a4fb-ddbe5696a270","variableMapping":{"midLat":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"5ea1d6b7-da79-11e4-a4fb-79e5351c2ae6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"5ea1d6b8-da79-11e4-a4fb-b7d773db80b0","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"edgeId","nodeId":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[134,36,40],"tindex":"5ea1fdc9-da79-11e4-a4fb-4dfed2876ad4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"5ea1fdca-da79-11e4-a4fb-89b3d7a73231","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[],"tindex":"5ea1fdcb-da79-11e4-a4fb-2711aca90b89","variableMapping":{"osmId":"flags","com.graphhopper.reader.OSMReader.TOWER_NODE":"encoderCount","this":"osmReader","com.graphhopper.reader.OSMReader.EMPTY":"encoderCount","com.graphhopper.reader.OSMReader.PILLAR_NODE":"encoderCount","tmpIndex":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:591","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int);\n} else if (int > (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int);\n} else {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"5ea1fdcc-da79-11e4-a4fb-310ec0723d2e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":0},{"failures":[163,1,47,55,59,61,63,71,74,77,79,80,81,91,95,100,102,103,104,114,118,156],"tindex":"5ea1fdcd-da79-11e4-a4fb-bfd64559fc33","variableMapping":{"time":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"5ea1fdce-da79-11e4-a4fb-3385cb1181a9","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"5ea1fdcf-da79-11e4-a4fb-b3da0269ac56","variableMapping":{"newName":"encoder","name":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[],"tindex":"5ea1fdd0-da79-11e4-a4fb-03797b22f01e","variableMapping":{"factor":"minLat","delta_lon":"minLat","a_lon":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[77,100,2,156],"tindex":"5ea1fdd1-da79-11e4-a4fb-610fdf6e2c80","variableMapping":{"shift":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[181,182,3,4,165,14,18,19,20,129,166,167,168,5,130],"tindex":"5ea1fdd2-da79-11e4-a4fb-25257e7bd36c","variableMapping":{"arrayLength":"size","maxGeoRef":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-1},{"failures":[],"tindex":"5ea1fdd3-da79-11e4-a4fb-e78ab417e84f","variableMapping":{"maxTurnCosts":"maxTurnCosts","costs":"costs","turnRestrictionBit":"turnRestrictionBit","restricted":"restricted"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":0},{"failures":[],"tindex":"5ea1fdd4-da79-11e4-a4fb-2fb33a190e6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:304","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"5ea1fdd5-da79-11e4-a4fb-1d0ee6733eeb","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":0},{"failures":[],"tindex":"5ea1fdd6-da79-11e4-a4fb-01d420d23a38","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"5ea1fdd7-da79-11e4-a4fb-155cd526926e","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"5ea1fdd8-da79-11e4-a4fb-ed7c13a94905","variableMapping":{"bestPath":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:166","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-1},{"failures":[],"tindex":"5ea1fdd9-da79-11e4-a4fb-9549562a22ba","variableMapping":{"iter":"mainEdgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:364","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterator.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"5ea1fdda-da79-11e4-a4fb-cddd487f9546","variableMapping":{"high":"unpavedBit","guess":"unpavedBit","low":"unpavedBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":0},{"failures":[0,1,55,63,71,76,79,81,91,99,102,104,114,157],"tindex":"5ea1fddb-da79-11e4-a4fb-19c70caaa613","variableMapping":{"location":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[],"tindex":"5ea1fddc-da79-11e4-a4fb-cf64105ebfef","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[0,76,99],"tindex":"5ea224ed-da79-11e4-a4fb-111a62e5bef6","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"speed","speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"5ea224ee-da79-11e4-a4fb-d1ffec67a951","variableMapping":{"speedEncoder":"turnCostEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"5ea224ef-da79-11e4-a4fb-6d18c4fbed9f","variableMapping":{"java.lang.Double.NaN":"java.lang.Double.POSITIVE_INFINITY","com.graphhopper.reader.OSMReader.EMPTY":"maxTurnCosts","id":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:482","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[120,8,121,25,28,157],"tindex":"5ea224f0-da79-11e4-a4fb-47ecb0d88bf0","variableMapping":{"acceptBit":"value","ferryBit":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"5ea224f1-da79-11e4-a4fb-edc6120fe2b0","variableMapping":{"weight":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-2},{"failures":[172,173,174,175,183,176,177,178,179,180],"tindex":"5ea224f2-da79-11e4-a4fb-7f8452e3b63b","variableMapping":{"start":"allBits","delta":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[161,14,184,15,162,127,185,186,18,128,19,187,20,5,170],"tindex":"5ea224f3-da79-11e4-a4fb-c99c80f5a654","variableMapping":{"segmentSizeInBytes":"size","length":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"5ea224f4-da79-11e4-a4fb-5554f231146d","variableMapping":{"err":"bytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[134,121,135,188,136,137,138,163,139,140,141,142,145,122,22,23,24,25,26,27,28,21,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,0,1,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,2,189,156,157],"tindex":"5ea224f5-da79-11e4-a4fb-63d9687b2c9a","variableMapping":{"i":"shift","to":"shift","lonSize":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"5ea224f6-da79-11e4-a4fb-cdd50b50cf54","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[190,191],"tindex":"5ea224f7-da79-11e4-a4fb-a7451ac1aab0","variableMapping":{"compressionLevel":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[192,7,131,132,120,143,193,144,8,133,194,195,134,121,135,188,136,137,138,163,139,140,141,142,145,122,196,197,198,199,200,201,202,203,204,205,206,207,208,146,209,210,147,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,9,245,10,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,11,123,12,124,13,270,271,272,273,274,275,276,277,278,279,280,281,282,283,148,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,149,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,150,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,151,388,24,190,389,6,390,191,391,96,97,392,393,159,394,160,161,125,165,395,396,14,184,397,15,16,398,126,162,399,127,185,17,186,18,128,19,187,20,400,401,129,402,166,167,168,169,5,403,130,404,170,171,405,406,407,408,409,410,411,412,413,414,415,416],"tindex":"5ea24c08-da79-11e4-a4fb-2b8c6988def1","variableMapping":{"size":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"5ea24c09-da79-11e4-a4fb-8b0cc474ad24","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"5ea24c0a-da79-11e4-a4fb-6fb6f885ddb6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"5ea24c0b-da79-11e4-a4fb-69f2653d6da3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"5ea24c0c-da79-11e4-a4fb-cf9ef474d987","variableMapping":{"latlon":"com.graphhopper.routing.util.EncodingManager.BIKE2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[122,417,418,419,420,421,422,423,424,425,13,275,283,284,285,287,291,292,298,299,314,322,323,324,326,330,331,337,338,354,362,363,364,366,370,371,377,378,190,6,390],"tindex":"5ea24c0d-da79-11e4-a4fb-9f5a444b29af","variableMapping":{"oldPriorities":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[190,191,391],"tindex":"5ea24c0e-da79-11e4-a4fb-c1b94ac10297","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:97","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator))"},"status":-1},{"failures":[],"tindex":"5ea24c0f-da79-11e4-a4fb-6baed673927e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":186,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":406,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":152,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":220,"com.graphhopper.reader.OSMReaderTest.testFerry":134,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":198,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":199,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":80,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":64,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":249,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":308,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":362,"com.graphhopper.coll.CompressedArrayTest.testCompress":173,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":70,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":345,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":166,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":149,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":130,"com.graphhopper.GraphHopperTest.testPrepare":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":17,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":329,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":400,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":16,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":206,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":71,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":210,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":246,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":191,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":125,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":232,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":348,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":273,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":171,"com.graphhopper.GraphHopperTest.testLoadOSM":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":239,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":233,"com.graphhopper.reader.OSMReaderTest.testSort":188,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":6,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":141,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":340,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":310,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":178,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":412,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":381,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":319,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":11,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":357,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":102,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":352,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":253,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":326,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":399,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":396,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":365,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":371,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":289,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":271,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":291,"com.graphhopper.coll.CompressedArrayTest.testCompress2":172,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":331,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":150,"com.graphhopper.GraphHopperAPITest.testLoad":151,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":263,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":22,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":323,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":314,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":164,"com.graphhopper.storage.LevelGraphStorageTest.testClone":277,"com.graphhopper.reader.OSMReaderTest.testBarriers":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":353,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":391,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":184,"com.graphhopper.util.GHUtilityTest.testCopy":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":53,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":261,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":73,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":67,"com.graphhopper.routing.PathTest.testFindInstruction":394,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":294,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":354,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":28,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":197,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":101,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":219,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":341,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":327,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":379,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":168,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":112,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":279,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":311,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":268,"com.graphhopper.util.InstructionListTest.testWayList2":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":240,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":346,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":79,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":77,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":384,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":96,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":281,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":363,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":14,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":313,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":361,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":21,"com.graphhopper.routing.PathBidirRefTest.testExtract":392,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":85,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":293,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":387,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":424,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":84,"com.graphhopper.util.GHUtilityTest.testSort2":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":127,"com.graphhopper.reader.OSMReaderTest.testMain":135,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":93,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":258,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":33,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":296,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":148,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":287,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":307,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":284,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":375,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":99,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":262,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":290,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":145,"com.graphhopper.storage.GraphHopperStorageTest.testClone":316,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":347,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":40,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":38,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":325,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":269,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":57,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":12,"com.graphhopper.routing.PathTest.testTime":158,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":52,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":305,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":278,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":242,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":423,"com.graphhopper.util.GHUtilityTest.testSortDirected":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":115,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":408,"com.graphhopper.GraphHopperTest.testFootOnly":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":36,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":252,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":243,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":405,"com.graphhopper.routing.QueryGraphTest.testOneWay":414,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":176,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":231,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":174,"com.graphhopper.reader.OSMReaderTest.testWithBounds":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":383,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":389,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":420,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":29,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":2,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":274,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":113,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":74,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":374,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":37,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":367,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":312,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":413,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":161,"com.graphhopper.util.InstructionListTest.testWayList":207,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":343,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":83,"com.graphhopper.GraphHopperAPITest.testDisconnected179":388,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":177,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":110,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":195,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":422,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":90,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":132,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":318,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":377,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":75,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":335,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":403,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":41,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":303,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":91,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":95,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":309,"com.graphhopper.routing.PathTest.testWayList":159,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":50,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":419,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":20,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":300,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":373,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":89,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":328,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":23,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":359,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":254,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":288,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":255,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":256,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":107,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":182,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.util.GHUtilityTest.testSort":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":236,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":153,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":180,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":88,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":386,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":247,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":228,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":214,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":266,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":103,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":97,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":212,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":349,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":48,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":368,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":190,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":267,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":211,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":133,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":157,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":302,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":87,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":364,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":147,"com.graphhopper.util.InstructionListTest.testEmptyList":205,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":259,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":162,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":31,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":72,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":185,"com.graphhopper.reader.PrinctonReaderTest.testRead":194,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":250,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":360,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":372,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":276,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":369,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":189,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":100,"com.graphhopper.reader.OSMReaderTest.testFoot":121,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":416,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":179,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":237,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":306,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":60,"com.graphhopper.reader.OSMReaderTest.testOneWay":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":238,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":324,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":338,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":380,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":68,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":106,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":320,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":167,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":170,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":402,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":24,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":248,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":407,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":265,"com.graphhopper.routing.PathBidirRefTest.testExtract2":393,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":160,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":55,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":241,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":336,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":58,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":163,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":25,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":234,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":339,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":280,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":42,"com.graphhopper.GraphHopperTest.testFootAndCar":120,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":332,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":285,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":47,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":260,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":18,"com.graphhopper.GraphHopperTest.testPrepareOnly":192,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":417,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":140,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":124,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":146,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":26,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":139,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":30,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":301,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":299,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":350}}]
