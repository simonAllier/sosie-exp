[{"failures":[0,1,2,3,4],"tindex":"bf819952-db91-11e4-855e-27904e68c21b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[],"tindex":"bf819953-db91-11e4-855e-e7d7e0b5e66e","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[5,6,7,8,9,10,11,12],"tindex":"bf81c064-db91-11e4-855e-212bf7c00ebc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[13,14,15],"tindex":"bf81c065-db91-11e4-855e-c3dc525ca2b7","variableMapping":{"edgeCount":"start","this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:373","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException((\"too many edges. new edge id would be negative. \" + com.graphhopper.storage.GraphHopperStorage.(toString())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[16,17,18,19,20],"tindex":"bf81c066-db91-11e4-855e-85f6a9c017bf","variableMapping":{"a_lat_deg":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:223","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-1},{"failures":[],"tindex":"bf81c067-db91-11e4-855e-6fae463fcd59","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[21,22,23,24],"tindex":"bf81c068-db91-11e4-855e-27b290b668b2","variableMapping":{"nanoTime":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":-1},{"failures":[25],"tindex":"bf81c069-db91-11e4-855e-29abbfaa1ab6","variableMapping":{"y1":"lastEdgeIndex","y2":"lastEdgeIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-1},{"failures":[26,27,28,29,21,30,31,22,32,33],"tindex":"bf81c06a-db91-11e4-855e-1d3f90862e03","variableMapping":{"bits":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"bf81c06b-db91-11e4-855e-9b9935f6d071","variableMapping":{"val":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:55","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"bf81c06c-db91-11e4-855e-11a34537eb99","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"bf81c06d-db91-11e4-855e-49ec088e0c4d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:53","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"bf81c06e-db91-11e4-855e-adc6ce0b9f0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[34],"tindex":"bf81c06f-db91-11e4-855e-4dcef649e207","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[35,26,36,37,38,39,40,41,42,43,44,45,18,27,46,47,48,49,29,50,21,51,52,53,54,55,56,57,58,59,19,20,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"bf81e780-db91-11e4-855e-979d315aa141","variableMapping":{"latSize":"segmentSizePower","lonSize":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[26,36,37,38,39,41,42,43,27,102,28,29,21,51,52,30,31,22,103,32,104,33,23,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,5,121,122,123,124,24,125,126,127,128,129,130,131,132,133,134,7,135,136,137,138,139,140,141,142,9,143,144,145,146,147,148,149,150,151,152,153,11,154,155,156,157],"tindex":"bf81e781-db91-11e4-855e-f178a73f8160","variableMapping":{"properties":"properties"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:107","type":"CtReturnImpl","sourcecode":"return !(java.util.Map<java.lang.String, java.lang.Object>.isEmpty())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-1},{"failures":[158,159,160,161],"tindex":"bf81e782-db91-11e4-855e-11254c595270","variableMapping":{"factor":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[139],"tindex":"bf81e783-db91-11e4-855e-656b968eba6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"bf81e784-db91-11e4-855e-f1358d2897fc","variableMapping":{"nanoTime":"defaultValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-2},{"failures":[],"tindex":"bf8235a5-db91-11e4-855e-f3bc02211b96","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"bf825cb6-db91-11e4-855e-a389c6c2b32c","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"high","id":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"bf825cb7-db91-11e4-855e-c1035053c3ec","variableMapping":{"currentEntry":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"bf825cb8-db91-11e4-855e-a1969a9435d9","variableMapping":{"i":"start","to":"start","lonSize":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"bf825cb9-db91-11e4-855e-0d359ba419d8","variableMapping":{"edgeState":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:39","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-2},{"failures":[],"tindex":"bf825cba-db91-11e4-855e-65ba7bea2b05","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[162],"tindex":"bf825cbb-db91-11e4-855e-6bf2bc51d0ab","variableMapping":{"cp":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"bf825cbc-db91-11e4-855e-0779223971f5","variableMapping":{"incEleSum":"decDist2DSum","incDist2DSum":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":0},{"failures":[35,163,26,36,37,38,39,40,41,42,43,164,165,102,28,29,50,21,51,52,30,31,22,103,32,104,33,166,167,168,169,170,69,171,172,173,174,175,76,77,78,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,79,80,81,191,192,193,194,195,196,197,198,199,200,82,201,84,85,202,203,204,205,93,94,206,207,208,209],"tindex":"bf82d1ed-db91-11e4-855e-699a6efcfb70","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.EMPTY_PARENT":"bytePos","n":"value","parents":"header"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:131","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"bf82f8fe-db91-11e4-855e-f1d62c148de3","variableMapping":{"maxSpeed":"java.lang.Math.PI","fwdSpeed":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"bf82f8ff-db91-11e4-855e-0b135ccb8c1e","variableMapping":{"high":"allowed","len":"allowed","start":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"bf82f900-db91-11e4-855e-31b7ae6cadee","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"bf82f901-db91-11e4-855e-4184e94b2722","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"bf82f902-db91-11e4-855e-3f275716e1f5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:252","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[35,39,40,41,43,69,84,85,210,93,94],"tindex":"bf82f903-db91-11e4-855e-b16adc60e084","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[211,212],"tindex":"bf82f904-db91-11e4-855e-a9eaa210eeac","variableMapping":{"line":"highway","key":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"bf82f905-db91-11e4-855e-13e40293527c","variableMapping":{"towerNodeDistance":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":0},{"failures":[157],"tindex":"bf82f906-db91-11e4-855e-5992c778ccf4","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[35,163,26,36,37,38,39,213,40,41,42,43,214,164,165,215,216,217,218,44,45,18,27,219,220,221,46,222,223,224,225,226,227,228,229,102,28,29,50,21,51,52,30,31,230,22,103,32,104,231,33,23,232,105,106,107,108,233,109,110,111,234,235,158,236,237,238,239,240,58,59,241,112,211,113,114,242,115,159,116,117,243,244,118,119,120,245,5,121,122,123,6,246,247,160,248,249,250,124,24,251,252,125,253,254,255,126,256,127,128,129,130,131,257,258,132,133,134,259,7,135,136,137,8,138,260,261,139,262,140,263,264,141,142,265,9,143,144,10,13,266,267,268,14,15,269,145,212,146,147,270,148,161,149,150,271,272,151,152,153,273,11,154,155,156,12,157,274,275,19,20,276,277,278,60,61,279,62,63,64,280,65,66,281,282,67,283,284,285,286,34,287,288,289,290,291,292,293,294,166,295,296,297,167,168,298,299,169,300,301,68,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,69,171,321,322,323,70,324,325,326,172,327,328,329,330,331,332,0,333,334,335,336,337,338,339,340,341,71,342,343,344,345,173,72,346,347,348,349,73,350,74,75,351,352,174,175,353,354,355,76,77,78,176,356,177,357,358,178,179,180,181,182,183,184,359,360,361,362,363,364,365,185,186,187,188,189,190,366,367,368,369,370,371,372,373,374,79,80,81,191,375,192,376,377,193,194,195,196,197,198,199,378,379,380,381,200,382,383,384,385,386,387,1,388,389,390,391,392,393,394,395,396,397,398,399,400,401,82,402,403,404,405,406,407,408,409,410,411,412,84,413,414,85,202,415,416,417,86,418,419,420,203,421,422,423,424,425,426,2,427,428,429,430,431,432,433,434,435,87,436,437,438,439,204,88,440,441,442,443,89,444,90,91,445,446,447,448,25,449,450,93,451,452,94,206,453,454,455,95,456,457,458,207,459,460,461,462,463,464,4,465,466,467,468,469,470,471,472,473,96,474,475,476,477,478,97,479,480,481,482,98,483,99,100,484,485],"tindex":"bf851be7-db91-11e4-855e-e1d037d8b23b","variableMapping":{"edgeId":"usedBits","nextEdge":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":-1},{"failures":[],"tindex":"bf851be8-db91-11e4-855e-31eb45f4a35a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"bf851be9-db91-11e4-855e-53ec7231c04f","variableMapping":{"high":"allowed","len":"allowed","start":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":0},{"failures":[13,14,15],"tindex":"bf851bea-db91-11e4-855e-8baecb63077c","variableMapping":{"index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[164,166,300,68],"tindex":"bf851beb-db91-11e4-855e-6b5649ade3e0","variableMapping":{"allBits":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-1},{"failures":[35,43,29],"tindex":"bf851bec-db91-11e4-855e-0b2db4cd98a4","variableMapping":{"cp":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"bf851bed-db91-11e4-855e-3549f30a1aa1","variableMapping":{"i":"guess","child":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[34,287,304,305,315],"tindex":"bf851bee-db91-11e4-855e-83e1679d3b46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"bf851bef-db91-11e4-855e-91eb5abb03c6","variableMapping":{"additionalEdgeFilter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[],"tindex":"bf854300-db91-11e4-855e-a749b326a09a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"bf854301-db91-11e4-855e-09f5b02af1b0","variableMapping":{"entry":"location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-2},{"failures":[],"tindex":"bf854302-db91-11e4-855e-7b520c06595b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"bf854303-db91-11e4-855e-473629b67955","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"bf854304-db91-11e4-855e-59c1a33f9655","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"bf854305-db91-11e4-855e-d10a1f556fce","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[34,295],"tindex":"bf854306-db91-11e4-855e-ff6d677481de","variableMapping":{"bits":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"bf854307-db91-11e4-855e-3bd0b7a0ce3c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[26,36,37,38,39,41,42,164,165,29,50,21,486,487,166,167,168,169,488,489,490,491,492,493,494,495,496,497,498,174,175,354,355,76,77,78,176,356,177,357,358,178,179,180,181,183,184,373,374,79,80,81,191,375,192,376,377,193,194,195,196,198,199],"tindex":"bf854308-db91-11e4-855e-e94fbf46bd13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = com.graphhopper.util.shapes.BBox.clone()"},"status":-1},{"failures":[],"tindex":"bf854309-db91-11e4-855e-c304abe21369","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"bf85430a-db91-11e4-855e-b1fa68e79df0","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[112,242,115,123,128,130,137,260,139,262,145,270,148,156],"tindex":"bf85430b-db91-11e4-855e-a36459d48f9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-1},{"failures":[499],"tindex":"bf85430c-db91-11e4-855e-ffd2f938103c","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[13,15],"tindex":"bf85430d-db91-11e4-855e-952ba718ee8b","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-1},{"failures":[],"tindex":"bf85430e-db91-11e4-855e-039b59e65e56","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"bf85430f-db91-11e4-855e-51d571748680","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"bf854310-db91-11e4-855e-29272f588814","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[35,43],"tindex":"bf854311-db91-11e4-855e-11d3108e5764","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[],"tindex":"bf854312-db91-11e4-855e-3dc96a2e3d68","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[59,124,275,34,295],"tindex":"bf854313-db91-11e4-855e-a3a085ed130f","variableMapping":{"speedEncoder":"reverseSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-1},{"failures":[],"tindex":"bf856a24-db91-11e4-855e-e37d88d54c04","variableMapping":{"lastKey":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG","key":"weightLong"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[],"tindex":"bf856a25-db91-11e4-855e-29d0b5a3cf23","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[35,38,42,28,125,255,126],"tindex":"bf856a26-db91-11e4-855e-37400d6c985c","variableMapping":{"directionBitMask":"acceptBit","flags":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"bf856a27-db91-11e4-855e-ddeee00b03f0","variableMapping":{"capacity":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"bf856a28-db91-11e4-855e-4d0ac071b2d5","variableMapping":{"edgePointer":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":0},{"failures":[13,14,15],"tindex":"bf856a29-db91-11e4-855e-170b1328c944","variableMapping":{"values":"nodeLowLink","n":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:321","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int[][int] = -1;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"bf856a2a-db91-11e4-855e-c1b6a1188c54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:340","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[230,211,115,247,139,212,148],"tindex":"bf856a2b-db91-11e4-855e-d18ca55f18f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"bf856a2c-db91-11e4-855e-b969c09f10b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[13,14],"tindex":"bf856a2d-db91-11e4-855e-dda75f7fdb62","variableMapping":{"edgeCount":"start","lastEdgeIndex":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[486,487,488,489,491,493,494,495,496,497,498,354,356,357,358,373,375,376,377],"tindex":"bf856a2e-db91-11e4-855e-635c1722b62f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[35,163,26,36,39,40,42,287,288,289,290,291,292,293,294,166,295,296,297,167,168,298,299,169,300,301,68,302,303,304,308,310,314,316,317,318,319],"tindex":"bf856a2f-db91-11e4-855e-d9e03c6fca78","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1},{"failures":[27,162],"tindex":"bf856a30-db91-11e4-855e-99730ab05445","variableMapping":{"indexM":"kmInteger","tmp":"str","version":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:98","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[486,487,488,489,490,491,492,493,494,497],"tindex":"bf856a31-db91-11e4-855e-fdd75ba6d1aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"bf856a32-db91-11e4-855e-83787c91b4eb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"bf856a33-db91-11e4-855e-5f592650affa","variableMapping":{"flags":"defaultL","tmpValue":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[26,287,289,297,299,301,68,302,304,308,314,318],"tindex":"bf856a34-db91-11e4-855e-774fc634ed66","variableMapping":{"retBucket":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"bf856a35-db91-11e4-855e-0da60898edc1","variableMapping":{"dist":"maxLat","com.graphhopper.util.DistanceCalcEarth.R":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"bf856a36-db91-11e4-855e-150a226eca8c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"bf859147-db91-11e4-855e-6514237520a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[30],"tindex":"bf859148-db91-11e4-855e-d9eef86c4b42","variableMapping":{"size":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"bf859149-db91-11e4-855e-55a317881697","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[35,26,39,40,41,42,43,44,45,18,27,47,48,49,29,51,52,53,54,56,57,19,20,61,63,64,65,66,67,68,69,70,71,72,73,74,76,78,186,187,188,190,79,81,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,101],"tindex":"bf85914a-db91-11e4-855e-cf2efce59531","variableMapping":{"segmentSizeInBytes":"length","index":"delta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[],"tindex":"bf85914b-db91-11e4-855e-17eb2991bec4","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[13],"tindex":"bf85914c-db91-11e4-855e-9f184a72b4cd","variableMapping":{"freeIndex":"i","currentIndex":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[],"tindex":"bf85914d-db91-11e4-855e-b3415413855e","variableMapping":{"flags":"oldRelationFlags","mask":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[13,14,15],"tindex":"bf85b85e-db91-11e4-855e-439c0a0ca74f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[35,163,26,36,37,38,39,40,41,42,43,44,45,18,27,46,500,47,48,49,501,502,503,102,28,29,50,21,51,52,30,31,22,103,32,104,33,53,54,55,56,57,58,59,19,20,60,61,62,63,64,280,65,66,282,67,68,69,171,70,71,72,73,75,76,77,78,185,186,187,188,190,79,80,81,82,504,505,506,507,508,509,510,84,85,202,86,87,88,89,91,92,93,94,206,95,96,97,98,100,511,512,513,514,515,516,517,518],"tindex":"bf85b85f-db91-11e4-855e-d7f794f64e04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"bf85b860-db91-11e4-855e-e11dd3694e42","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:185","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.length()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[301,306,308,314,318,447],"tindex":"bf85b861-db91-11e4-855e-45610db6803a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[126],"tindex":"bf85b862-db91-11e4-855e-75cfafae40e8","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[519],"tindex":"bf85b863-db91-11e4-855e-e3bc9794c0f0","variableMapping":{"name":"valueStr","location":"valueStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:66","type":"CtReturnImpl","sourcecode":"return (java.lang.String) + (java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[162],"tindex":"bf85b864-db91-11e4-855e-b5968fcca5a6","variableMapping":{"from":"kmInteger","hash":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[],"tindex":"bf85b865-db91-11e4-855e-df49e8eda561","variableMapping":{"nodeThis":"low","nextEdgeOther":"guess","nodeOther":"low","nextEdge":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":478,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":300,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":93,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":157,"com.graphhopper.GraphHopperAPITest.testNoLoad":215,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":379,"com.graphhopper.reader.OSMReaderTest.testFerry":102,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":225,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":226,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":270,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":262,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":77,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":163,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":485,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":426,"com.graphhopper.coll.CompressedArrayTest.testCompress":487,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":265,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":310,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":397,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":0,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":353,"com.graphhopper.util.AngleCalcTest.testOrientation":16,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":511,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":508,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":316,"com.graphhopper.GraphHopperTest.testPrepare":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":408,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":305,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":339,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":146,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":295,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":9,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":217,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":454,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":354,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":294,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":332,"com.graphhopper.coll.BitSetImplTest.testCopy":499,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":80,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":91,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":148,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":84,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":495,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":319,"com.graphhopper.GraphHopperTest.testLoadOSM":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":81,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":250,"com.graphhopper.reader.OSMReaderTest.testSort":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":154,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":103,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":202,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":513,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":348,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":69,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":493,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":409,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":65,"com.graphhopper.storage.RAMDataAccessTest.testHeader":201,"com.graphhopper.routing.DijkstraTest.initializationError":285,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":227,"com.graphhopper.storage.MMapDataAccessTest.testHeader":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":443,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":518,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":477,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":170,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":329,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":448,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":413,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":421,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":86,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":464,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":8,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":135,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":177,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":168,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":175,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":176,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":291,"com.graphhopper.coll.OSMIDMapTest.testGetLong":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":290,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":457,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":435,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":470,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":94,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":472,"com.graphhopper.coll.CompressedArrayTest.testCompress2":486,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":341,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":128,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":2,"com.graphhopper.GraphHopperAPITest.testLoad":164,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":455,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":24,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":333,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":325,"com.graphhopper.storage.LevelGraphStorageTest.testClone":207,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":15,"com.graphhopper.reader.OSMReaderTest.testBarriers":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":159,"com.graphhopper.util.GHUtilityTest.testCopy":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":382,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":134,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":184,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":144,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":363,"com.graphhopper.routing.PathTest.testFindInstruction":20,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":264,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":474,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":419,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":219,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":255,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":483,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":113,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":360,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":349,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":337,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":441,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":430,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":452,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":120,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":248,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":278,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":460,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":383,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":3,"com.graphhopper.util.InstructionListTest.testWayList2":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":404,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":194,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":351,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":422,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":147,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":212,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":58,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":171,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":462,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":161,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":514,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":427,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":292,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":324,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":51,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":512,"com.graphhopper.routing.AStarTest.initializationError":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":68,"com.graphhopper.coll.OSMIDMapTest.testGet":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":425,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":126,"com.graphhopper.routing.PathBidirRefTest.testExtract":283,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":55,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":96,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":271,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":179,"com.graphhopper.storage.RAMDataAccessTest.testCopy":505,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":515,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":446,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":402,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":150,"com.graphhopper.storage.RAMDataAccessTest.testSegments":510,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":199,"com.graphhopper.util.GHUtilityTest.testSort2":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":298,"com.graphhopper.reader.OSMReaderTest.testMain":29,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":206,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":106,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":434,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":496,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":180,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":105,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":476,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":415,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":4,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":468,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":484,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":63,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":465,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":438,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":112,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":471,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":104,"com.graphhopper.storage.StorablePropertiesTest.testStore":92,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":83,"com.graphhopper.storage.GraphHopperStorageTest.testClone":172,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":405,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":111,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":109,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":335,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":447,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":384,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":449,"com.graphhopper.routing.PathTest.testTime":275,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":133,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":99,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":459,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":237,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":196,"com.graphhopper.reader.OSMReaderTest.testRelation":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":396,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":475,"com.graphhopper.util.GHUtilityTest.testSortDirected":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":121,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":62,"com.graphhopper.GraphHopperTest.testFootOnly":42,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":261,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":108,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":186,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":356,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":289,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":306,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":241,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":392,"com.graphhopper.search.NameIndexTest.testCreate":49,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":509,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":60,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":205,"com.graphhopper.routing.QueryGraphTest.testOneWay":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":197,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":491,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":79,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":488,"com.graphhopper.reader.OSMReaderTest.testWithBounds":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":122,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":504,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":444,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":398,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":247,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":456,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":453,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":245,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":10,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":437,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":233,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":431,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":70,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":287,"com.graphhopper.util.InstructionListTest.testWayList":45,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":350,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":149,"com.graphhopper.GraphHopperAPITest.testDisconnected179":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":385,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":492,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":439,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":381,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":118,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":229,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":395,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":411,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":37,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":269,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":344,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":297,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":315,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":416,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":473,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":303,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":323,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":12,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":320,"com.graphhopper.routing.PathTest.testWayList":19,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":410,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":388,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":162,"com.graphhopper.coll.OSMIDMapTest.testGet2":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":304,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":208,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":480,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":501,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":436,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":153,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":338,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":251,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":357,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":469,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":358,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":506,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":178,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":117,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":129,"com.graphhopper.util.GHUtilityTest.testSort":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":401,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":497,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":152,"com.graphhopper.search.NameIndexTest.testPut":47,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":355,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":362,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":190,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":242,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":59,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":366,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":414,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":131,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":240,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":502,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":432,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":13,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":467,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":82,"com.graphhopper.routing.PathTest.testFound":274,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":43,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":124,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":482,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":519,"com.graphhopper.util.AngleCalcTest.testAtan2":17,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":151,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":428,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":48,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":1,"com.graphhopper.util.InstructionListTest.testEmptyList":218,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":166,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":259,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":167,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":232,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":23,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":143,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":299,"com.graphhopper.reader.PrinctonReaderTest.testRead":228,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":73,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":78,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":424,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":387,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":378,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":458,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":433,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":160,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":211,"com.graphhopper.reader.OSMReaderTest.testFoot":28,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":400,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":503,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":376,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":494,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":138,"com.graphhopper.reader.OSMReaderTest.testOneWay":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":377,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":334,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":346,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":442,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":141,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":517,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":342,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":116,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":394,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":311,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":498,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":309,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":369,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":516,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":252,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":390,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":279,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":231,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":321,"com.graphhopper.routing.PathBidirRefTest.testExtract2":284,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":34,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":195,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":365,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":500,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":173,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":370,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":137,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":30,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":412,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":191,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":347,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":223,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":461,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":235,"com.graphhopper.GraphHopperTest.testFootAndCar":38,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":71,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":466,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":130,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":183,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":507,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":200,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":246,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":203,"com.graphhopper.GraphHopperTest.testPrepareOnly":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":301,"com.graphhopper.GraphHopperTest.testVia":26,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":364,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":380,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":22,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":450,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":27,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":345,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":253,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":31,"com.graphhopper.routing.AStarBidirectionTest.initializationError":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":393,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":238,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":481,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":479,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":85}}]
