[{"failures":[],"tindex":"f9e3ae76-daf8-11e4-84ad-8152974e901a","variableMapping":{"edge1":"bitsForEdgeFlags","edge2":"bitsForEdgeFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:147","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[],"tindex":"f9e3d587-daf8-11e4-84ad-295019c8c83b","variableMapping":{"byteCount":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"f9e3d588-daf8-11e4-84ad-83ff59938945","variableMapping":{"tmpNo":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[13,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"f9e3d589-daf8-11e4-84ad-650d183a8344","variableMapping":{"elem":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-1},{"failures":[13,64,42,65,66,67,68,45,46,47,69,70,71,72,50,51,52,73,74,75,76,55,56,57,77,78,79,80,60,61,63],"tindex":"f9e3d58a-daf8-11e4-84ad-dbd4dbf77bbd","variableMapping":{"java.lang.Integer.MAX_VALUE":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"f9e3fc9b-daf8-11e4-84ad-656339a6aac8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[81],"tindex":"f9e3fc9c-daf8-11e4-84ad-e749c83bf895","variableMapping":{"key":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:76","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-1},{"failures":[82,83,84,85,86],"tindex":"f9e3fc9d-daf8-11e4-84ad-4bcb4607fbff","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"java.lang.Double.POSITIVE_INFINITY","java.lang.Double.POSITIVE_INFINITY":"speed","weight":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,0,1,2,3,4,5,6,7,8,9,10,11,12,13,105,106,107,108,109,110,111,112,113,114,115,116,64,117,118,119,120,121,122,42,123,124,125,126,127,128,129,65,130,66,67,131,43,132,133,134,68,44,135,136,137,138,139,45,46,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,47,156,157,158,159,160,161,162,69,163,70,71,164,48,165,166,167,72,49,168,169,170,171,172,50,51,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,57,242,243,244,245,246,247,248,77,249,78,79,250,58,251,252,253,80,59,254,255,256,257,258,60,61,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,82,275,276,277,278,279,16,280,281,62,63,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,84,317,318,319,320,321,322,323,324,85,325,326,86,327,328,329,330,331,332,333,334,335,336],"tindex":"f9e5aa4e-daf8-11e4-84ad-b54ca25a2f4a","variableMapping":{"width":"segmentSizeIntsPower","i":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:149","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"f9e5aa4f-daf8-11e4-84ad-c5dbb4bde417","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"f9e5aa50-daf8-11e4-84ad-35e0a80c4cc9","variableMapping":{"red":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[],"tindex":"f9e5aa51-daf8-11e4-84ad-1be8efb7007c","variableMapping":{"graphHopperFolder":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":0},{"failures":[],"tindex":"f9e5d162-daf8-11e4-84ad-f3142c1b57bc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"f9e5d163-daf8-11e4-84ad-314c91acda36","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[1,7,13,35,337,39,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363],"tindex":"f9e5d164-daf8-11e4-84ad-0ffdbb417d86","variableMapping":{"oldValueIndex":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[0,1,2,3,5,6,7,8,11,12,13,40,339,340,364,341,344,345,365,348,349,350,351,366,352,355,356,357,358,360,361],"tindex":"f9e5d165-daf8-11e4-84ad-0f8848d95287","variableMapping":{"width":"priorityFromRelation","lonSimilar":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[],"tindex":"f9e5d166-daf8-11e4-84ad-c18d70a69b02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"f9e5d167-daf8-11e4-84ad-9f7912627f4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,0,1,2,3,4,5,6,7,8,9,10,11,12,13,105,106,107,108,109,110,111,112,113,114,115,116,64,117,118,119,120,121,122,42,123,124,125,126,127,128,129,65,130,66,67,131,43,132,133,134,68,44,135,136,137,138,139,45,46,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,47,156,157,158,159,160,161,162,69,163,70,71,164,48,165,166,167,72,49,168,169,170,171,172,50,51,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,57,242,243,244,245,246,247,248,77,249,78,79,250,58,251,252,253,80,59,254,255,256,257,258,60,61,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,82,275,276,277,278,279,16,280,281,62,63,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,84,317,318,319,320,321,322,323,324,85,325,326,86,327,328,329,330,331,332,333,334,335,336],"tindex":"f9e61f88-daf8-11e4-84ad-95ea3e32dbef","variableMapping":{"size":"segmentSizeIntsPower","delta":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"f9e61f89-daf8-11e4-84ad-8f667b1798ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:244","type":"CtLocalVariableImpl","sourcecode":"java.util.List<gnu.trove.list.array.TIntArrayList> java.util.List<gnu.trove.list.array.TIntArrayList> = new com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm(com.graphhopper.storage.GraphStorage , com.graphhopper.routing.util.EdgeFilter).findComponents()"},"status":-2},{"failures":[],"tindex":"f9e61f8a-daf8-11e4-84ad-d98905503eb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[315,316,84,333,336],"tindex":"f9e61f8b-daf8-11e4-84ad-9d44544404d3","variableMapping":{"max":"to","tmpSize":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"f9e6469c-daf8-11e4-84ad-a9492b1ae53b","variableMapping":{"silent":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"f9e6469d-daf8-11e4-84ad-9f2d4274f2da","variableMapping":{"encoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[367],"tindex":"f9e6469e-daf8-11e4-84ad-dfd254e1dfd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,368,369,370,0,1,2,3,4,5,6,7,8,371,9,10,11,12,372,13,373,374,375,376,377,378,379,380,381,382,383,384,112,113,114,115,116,385,64,117,118,386,119,120,387,121,122,42,123,124,125,126,127,128,129,65,130,66,67,131,43,132,133,134,68,44,135,136,137,138,388,139,45,46,140,141,142,143,144,145,146,147,148,149,150,151,389,152,153,390,154,155,47,156,157,158,159,160,161,162,69,163,70,71,164,48,165,166,167,72,49,168,169,170,171,391,172,50,51,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,392,205,206,393,207,208,209,210,394,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,395,232,233,234,235,236,237,396,238,239,397,240,241,57,242,243,244,245,246,247,248,77,249,78,79,250,58,251,252,253,80,59,254,255,256,257,398,258,60,61,259,260,261,262,263,264,265,266,267,399,400,401,402,403,404,268,269,270,271,272,273,274,82,275,405,276,277,278,279,406,16,280,281,62,63,282,283,284,285,407,408,286,287,288,289,290,290,291,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,84,317,318,319,320,321,322,323,324,85,325,326,86,327,328,329,330,331,332,333,334,335,336],"tindex":"f9e6469f-daf8-11e4-84ad-7bf2259c5e59","variableMapping":{"index":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:400","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[],"tindex":"f9e646a0-daf8-11e4-84ad-592f67fa28e1","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"usedBits","sign":"nextWayBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"f9e646a1-daf8-11e4-84ad-a13016dd4ac0","variableMapping":{"distance":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"f9e646a2-daf8-11e4-84ad-5fc5360bd2b8","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,13,270,272,273,274,82,275,276,277,278,279,62],"tindex":"f9e646a3-daf8-11e4-84ad-f360c4013bd2","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"f9e646a4-daf8-11e4-84ad-67f15fbebd72","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.REACH_DEST","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.REACH_DEST"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[340,351],"tindex":"f9e646a5-daf8-11e4-84ad-a9381668a3ca","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"f9e646a6-daf8-11e4-84ad-1f982fd829c0","variableMapping":{"factor":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"f9e66db7-daf8-11e4-84ad-d3c24a0a0768","variableMapping":{"line":"encoderList"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"f9e66db8-daf8-11e4-84ad-7bdfbda515ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:504","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"f9e66db9-daf8-11e4-84ad-b9b48ec131c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,0,1,2,3,4,5,6,7,8,9,10,11,12,13,384,112,113,114,115,116,385,64,117,118,386,119,120,121,122,42,123,124,125,126,127,128,129,65,130,66,67,131,43,132,133,134,68,44,135,136,137,138,388,139,45,46,140,141,142,143,144,145,146,147,148,149,409,150,151,389,152,153,154,155,47,156,157,158,159,160,161,162,69,163,70,71,164,48,165,166,167,72,49,168,169,170,171,391,172,50,51,173,174,175,176,177,178,179,180,181,182,183,184,185,410,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,392,205,206,393,207,208,209,210,394,211,212,213,214,215,411,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,395,232,233,412,413,52,414,415,416,417,418,419,420,73,234,74,75,421,53,422,423,424,76,54,425,426,427,428,429,235,55,56,430,431,432,433,434,435,436,437,438,236,237,396,238,239,240,241,57,242,243,244,245,246,247,248,77,249,78,79,250,58,251,252,253,80,59,254,255,256,257,398,258,60,61,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,82,275,276,277,278,279,16,280,281,62,63,282,283,284,285,407,408,286,287,288,289,290,290,291,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,84,317,318,319,320,321,322,323,324,85,325,326,86,327,328,329,330,331,332,333,334,335,336],"tindex":"f9e66dba-daf8-11e4-84ad-6f611e52254f","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[91,95,96,97,98,368,369,370,0,1,2,3,4,5,6,7,8,9,10,11,12,13,373,374,375,376,377,439,382,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,385,118,386,121,135,45,143,145,146,149,151,389,154,168,50,176,178,179,193,194,195,207,208,209,210,211,220,221,222,235,237,396,240,254,60,262,264,265,401,402,403,404,270,271,272,273,274,82,275,276,277,278,279,284,285,286,287,290,291,293,294,295,296,297,298,300,301,333],"tindex":"f9e694cb-daf8-11e4-84ad-c7dbdb56eb31","variableMapping":{"allBits":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-1},{"failures":[],"tindex":"f9e694cc-daf8-11e4-84ad-bf1dbebf19a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[378,399],"tindex":"f9e694cd-daf8-11e4-84ad-3d98a00e4d08","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-1},{"failures":[112,114,303,304,306,310,314,317,321,85,328,330,332,333,334,336],"tindex":"f9e694ce-daf8-11e4-84ad-ebacdb81c3cb","variableMapping":{"high":"flags","len":"flags","start":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[191,199,200,464,465,466,467,218,226,227],"tindex":"f9e694cf-daf8-11e4-84ad-d557ec20cbd9","variableMapping":{"turnCostIndex":"y2","NO_TURN_ENTRY":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-1},{"failures":[],"tindex":"f9e694d0-daf8-11e4-84ad-11565d96ba4d","variableMapping":{"segmentSizeInBytes":"usedBits","capacity":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"f9e694d1-daf8-11e4-84ad-0191f01e2143","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:354","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHTBitSet(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":0},{"failures":[91,113,64,272,273,275,302,303,304,305,306,307,308,310,311,312,314,315,316,84,317,318,319,321,322,323,85,325,326,86,327,328,329,330,332,333,334,336],"tindex":"f9e694d2-daf8-11e4-84ad-7fdf70fbcb56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"f9e694d3-daf8-11e4-84ad-8f49f7b63d10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"f9e694d4-daf8-11e4-84ad-0f242b09ed80","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"f9e6bbe5-daf8-11e4-84ad-1b2ce06a301a","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[468,469,470,91,96,97,0,2,3,4,5,6,7,8,9,10,11,12,13,373,451,463,118,121,135,45,143,149,151,154,168,50,176,193,195,220,222,412,425,235,55,433,237,240,254,60,262,270,273,274,275,277,286,291,298,301,333],"tindex":"f9e6bbe6-daf8-11e4-84ad-a981c0263849","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[],"tindex":"f9e6bbe7-daf8-11e4-84ad-53bdda0ad8ac","variableMapping":{"i":"endNode","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":0},{"failures":[471,472,473,474,475,476,304,310,312,314],"tindex":"f9e6bbe8-daf8-11e4-84ad-abda4a835ebf","variableMapping":{"index":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[],"tindex":"f9e6bbe9-daf8-11e4-84ad-39c1a9a6be8c","variableMapping":{"heap":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[],"tindex":"f9e6bbea-daf8-11e4-84ad-c5fe890af6b2","variableMapping":{"finishedTo":"blockFords","finishedFrom":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[40],"tindex":"f9e6bbeb-daf8-11e4-84ad-8b99c5df7d0c","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"f9e6bbec-daf8-11e4-84ad-dbeb84e9036f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:132","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"f9e6bbed-daf8-11e4-84ad-cd1619a84c68","variableMapping":{"node":"nodes","lg":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:299","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraphStorage.getLevel(int)) != 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-2},{"failures":[12,272,24,25,30,364,477,478,366,479,367,480],"tindex":"f9e6bbee-daf8-11e4-84ad-dbb072681e8c","variableMapping":{"ref":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[],"tindex":"f9e6bbef-daf8-11e4-84ad-cd036d07c612","variableMapping":{"java.lang.Double.MAX_VALUE":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:372","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[],"tindex":"f9e6bbf0-daf8-11e4-84ad-e52135c7c560","variableMapping":{"allBits":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":0},{"failures":[],"tindex":"f9e6bbf1-daf8-11e4-84ad-4b78a2582020","variableMapping":{"maxSpeed":"java.lang.Math.PI","fwdSpeed":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[40,364,341,365,346,366,352,358],"tindex":"f9e6bbf2-daf8-11e4-84ad-81f5fba25485","variableMapping":{"speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"f9e6bbf3-daf8-11e4-84ad-9b0fc6cac511","variableMapping":{"lat":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[98,0,1,2,3,4,5,6,7,8,9,10,11,12,372,13,271,272,273,274,82,275,276,277,279,25,26,30,31,32,337,338,40,41,339,340,341,344,477,345,365,346,348,478,349,350,351,352,355,479,356,357,358,360,480,361,481],"tindex":"f9e6bbf4-daf8-11e4-84ad-9fe6af2c7430","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"maxSpeed","java.lang.Double.POSITIVE_INFINITY":"maxSpeed","weight":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[],"tindex":"f9e6bbf5-daf8-11e4-84ad-3f0c53528f58","variableMapping":{"edgePointer":"encoded","edgeEntryBytes":"com.graphhopper.routing.util.PriorityWeighting.KEY","nextEdge":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:797","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-2},{"failures":[340,341,344,346,348,351,352,355,357,358,360],"tindex":"f9e6e206-daf8-11e4-84ad-fd90feec6a0f","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:100","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-1},{"failures":[344,348,355,360],"tindex":"f9e6e207-daf8-11e4-84ad-41e2b531014e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"f9e6e208-daf8-11e4-84ad-e7f251232382","variableMapping":{"ab_rb":"com.graphhopper.util.NumHelper.DEFAULT_PRECISION","ab_ar":"d1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-2},{"failures":[],"tindex":"f9e6e209-daf8-11e4-84ad-5f52f63e09f5","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"f9e6e20a-daf8-11e4-84ad-b5ff585639a8","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[42,67,43,68,44,45,46,47,71,48,72,49,50,51,52,75,53,76,54,55,56,57,79,58,80,59,60,61,280,63],"tindex":"f9e6e20b-daf8-11e4-84ad-5bf3a0b9bf26","variableMapping":{"java.lang.Integer.MAX_VALUE":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-1},{"failures":[],"tindex":"f9e6e20c-daf8-11e4-84ad-b1e12fcb43e2","variableMapping":{"initialized":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:299","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call prepareIndex only once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-2},{"failures":[40],"tindex":"f9e6e20d-daf8-11e4-84ad-57f066afefc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"f9e6e20e-daf8-11e4-84ad-15b621de4bf1","variableMapping":{"flags":"flags","scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"f9e6e20f-daf8-11e4-84ad-e1d5a169946f","variableMapping":{"size":"speed","from":"speed","end":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":0},{"failures":[],"tindex":"f9e6e210-daf8-11e4-84ad-8b031582d322","variableMapping":{"res":"turnRestrictionBit","maxBits":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:261","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"f9e6e211-daf8-11e4-84ad-dfe6fda81614","variableMapping":{"file":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:142","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || ((java.io.File.length()) == 0)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"f9e6e212-daf8-11e4-84ad-6bf6501ce08c","variableMapping":{"silent":"storing"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"f9e6e213-daf8-11e4-84ad-3f62c179d00a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"f9e6e214-daf8-11e4-84ad-93129d1ff36c","variableMapping":{"a_lat_deg":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:223","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"f9e6e215-daf8-11e4-84ad-5d020473f7ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[371,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363],"tindex":"f9e6e216-daf8-11e4-84ad-97b8e8f23ed5","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-1},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,368,369,370,0,1,2,3,4,5,6,7,8,371,9,10,11,12,372,13,373,374,375,376,377,378,379,381,382,383,384,112,113,114,115,116,385,64,117,118,386,119,120,387,121,122,42,123,124,125,126,127,128,129,65,130,66,67,131,43,132,133,134,68,44,135,136,137,138,388,139,45,46,140,141,142,143,144,145,146,147,148,149,150,151,389,152,153,390,154,155,47,156,157,158,159,160,161,162,69,163,70,71,164,48,165,166,167,72,49,168,169,170,171,391,172,50,51,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,393,207,208,209,210,394,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,396,238,239,397,240,241,57,242,243,244,245,246,247,248,77,249,78,79,250,58,251,252,253,80,59,254,255,256,257,398,258,60,61,259,260,261,262,263,264,265,266,267,399,401,402,403,404,268,269,270,271,272,273,274,82,275,405,276,277,278,279,406,16,280,281,62,63,282,283,284,285,407,408,286,287,288,289,290,290,291,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,84,317,318,319,320,321,322,323,324,85,325,326,86,327,328,329,330,331,332,333,334,335,336],"tindex":"f9e70927-daf8-11e4-84ad-918a5a946439","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"f9e70928-daf8-11e4-84ad-0395997d4dc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"f9e70929-daf8-11e4-84ad-cf0d857f0791","variableMapping":{"orientation":"minLon","java.lang.Math.PI":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[114,40,284,285,408,316,85],"tindex":"f9e7092a-daf8-11e4-84ad-df53d69f7237","variableMapping":{"tmpNo":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"f9e7092b-daf8-11e4-84ad-0bd2e8d21c27","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"f9e7092c-daf8-11e4-84ad-1dfcb28d9523","variableMapping":{"width":"dLat","lonSimilar":"dLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"f9e7092d-daf8-11e4-84ad-25cd82c728bf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"f9e7092e-daf8-11e4-84ad-c7a00746ccbb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"f9e7092f-daf8-11e4-84ad-b99467e33db5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[],"tindex":"f9e70930-daf8-11e4-84ad-5318d0f951c3","variableMapping":{"fromNode":"locs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"f9e73041-daf8-11e4-84ad-2359109e7842","variableMapping":{"high":"minOnewayNetworkSize","guess":"minOnewayNetworkSize","low":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[316],"tindex":"f9e73042-daf8-11e4-84ad-77c3602c918e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeFlagEncoder.reverseFlags(long)"},"status":-1},{"failures":[91,95,96,97,98,368,369,370,0,1,2,3,4,5,6,7,8,9,10,11,12,13,373,374,375,376,377,439,382,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,385,118,386,121,135,45,143,145,146,149,151,389,154,168,50,176,178,179,193,194,195,207,208,209,210,211,220,221,222,235,237,396,240,254,60,262,264,265,401,402,403,404,270,271,272,273,274,82,275,276,277,278,279,284,285,286,287,290,291,293,294,295,296,297,298,300,301,333],"tindex":"f9e73043-daf8-11e4-84ad-af474fb1cdbf","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[21],"tindex":"f9e73044-daf8-11e4-84ad-e10a3b05947e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"f9e73045-daf8-11e4-84ad-5b3e4f51722d","variableMapping":{"size":"endNode","delta":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,368,369,370,0,1,2,3,4,5,6,7,8,371,9,10,11,12,372,13,373,374,375,376,377,378,380,383,384,112,113,114,115,116,64,117,119,120,387,121,122,42,123,124,125,126,127,128,129,65,130,66,67,131,43,132,133,134,68,44,135,136,137,138,388,139,45,46,140,141,142,143,144,145,146,147,148,150,152,153,390,154,155,47,156,157,158,159,160,161,162,69,163,70,71,164,48,165,166,167,72,49,168,169,170,171,391,172,50,51,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,393,207,208,209,210,394,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,397,240,241,57,242,243,244,245,246,247,248,77,249,78,79,250,58,251,252,253,80,59,254,255,256,257,398,258,60,61,259,260,261,262,263,264,265,266,267,399,400,401,402,403,404,268,269,273,274,82,405,278,16,280,281,62,63,282,283,284,285,407,408,286,287,288,289,290,290,291,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,84,317,318,319,320,321,322,323,324,85,325,326,86,327,328,329,330,331,332,333,334,335,336],"tindex":"f9e75756-daf8-11e4-84ad-9fc308040c58","variableMapping":{"heights":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"f9e75757-daf8-11e4-84ad-7df626182092","variableMapping":{"flags":"flags","scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"f9e75758-daf8-11e4-84ad-dd928d475df9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"f9e75759-daf8-11e4-84ad-3fbbbbd671d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.DefaultEdgeFilter.this(com.graphhopper.routing.util.FlagEncoder, true, true)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":139,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":331,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":385,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":481,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":413,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":99,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":100,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":364,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":194,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":271,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":69,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":440,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":265,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":425,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":249,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":190,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":441,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":458,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":312,"com.graphhopper.GraphHopperTest.testPrepare":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":434,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":253,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":302,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":476,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":85,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":95,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":393,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":348,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":88,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":120,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":191,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":282,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":317,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":323,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":221,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":341,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":149,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":121,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":474,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":315,"com.graphhopper.GraphHopperTest.testLoadOSM":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":228,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":222,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":477,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":389,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":444,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":260,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":435,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":297,"com.graphhopper.storage.RAMDataAccessTest.testHeader":459,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":175,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":439,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":388,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":246,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":409,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":158,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":351,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":154,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":361,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":480,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":198,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":58,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":327,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":196,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":320,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":319,"com.graphhopper.coll.OSMIDMapTest.testGetLong":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":164,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":156,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":133,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":81,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":118,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":68,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":59,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":163,"com.graphhopper.GraphHopperAPITest.testLoad":268,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":387,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":106,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":14,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":78,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":57,"com.graphhopper.storage.LevelGraphStorageTest.testClone":124,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":155,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":283,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":188,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":353,"com.graphhopper.util.GHUtilityTest.testCopy":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":206,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":410,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":465,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":462,"com.graphhopper.routing.PathTest.testFindInstruction":287,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":347,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":47,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":471,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":20,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":101,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":144,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":183,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":261,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":251,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":48,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":308,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":126,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":417,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":111,"com.graphhopper.util.InstructionListTest.testWayList2":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":229,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":159,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":340,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":384,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":284,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":396,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":128,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":442,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":342,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":53,"com.graphhopper.storage.RAMDirectoryTest.testSynched":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":70,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":207,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":321,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":333,"com.graphhopper.coll.OSMIDMapTest.testGet":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":162,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":21,"com.graphhopper.routing.PathBidirRefTest.testExtract":288,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":135,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":375,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":202,"com.graphhopper.storage.RAMDataAccessTest.testCopy":455,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":446,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":55,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":365,"com.graphhopper.storage.RAMDataAccessTest.testSegments":461,"com.graphhopper.util.GHUtilityTest.testSort2":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":328,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":72,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":203,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":25,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":432,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":130,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":43,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":147,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":363,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":66,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":171,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":105,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":134,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.storage.StorablePropertiesTest.testStore":382,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":454,"com.graphhopper.storage.GraphHopperStorageTest.testClone":243,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":431,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":32,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":379,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":30,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":250,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":112,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":418,"com.graphhopper.routing.PathTest.testTime":408,"com.graphhopper.util.BitUtilLittleTest.testToFloat":469,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":145,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":125,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":37,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":394,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":54,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":137,"com.graphhopper.reader.OSMReaderTest.testRelation":371,"com.graphhopper.util.GHUtilityTest.testSortDirected":93,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":475,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":479,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":450,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":293,"com.graphhopper.GraphHopperTest.testFootOnly":278,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":467,"com.graphhopper.util.BitUtilLittleTest.testToInt":470,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":28,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":208,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":197,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":303,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":422,"com.graphhopper.search.NameIndexTest.testCreate":404,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":460,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":290,"com.graphhopper.routing.QueryGraphTest.testOneWay":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":220,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":463,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":453,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":177,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":281,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":295,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":426,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":337,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":122,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":119,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":349,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":170,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":29,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":165,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":240,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":84,"com.graphhopper.util.BitUtilLittleTest.testToBitString":468,"com.graphhopper.util.InstructionListTest.testWayList":96,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":263,"com.graphhopper.GraphHopperAPITest.testDisconnected179":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":419,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":391,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":414,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":400,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":103,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":437,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":274,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":245,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":209,"com.graphhopper.routing.util.EncodedValueTest.testSwap":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":313,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":257,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":326,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":311,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":33,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":344,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":335,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":397,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":392,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":345,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":236,"com.graphhopper.routing.PathTest.testWayList":286,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":436,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":74,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":367,"com.graphhopper.coll.OSMIDMapTest.testGet2":374,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":336,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":447,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":140,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":368,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":169,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":252,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":160,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":244,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":132,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":199,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":200,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":456,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":451,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":201,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":473,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":357,"com.graphhopper.util.GHUtilityTest.testSort":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":429,"com.graphhopper.search.NameIndexTest.testPut":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":180,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":390,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":185,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":192,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":211,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":214,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":366,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":296,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":150,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":277,"com.graphhopper.storage.MMapDirectoryTest.testSynched":399,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":369,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":334,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":280,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":110,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":235,"com.graphhopper.routing.PathTest.testFound":407,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":40,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":279,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":142,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":114,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":71,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":472,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":403,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":234,"com.graphhopper.util.InstructionListTest.testEmptyList":94,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":248,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":452,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":324,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":204,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":86,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":24,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":23,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":478,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":329,"com.graphhopper.reader.PrinctonReaderTest.testRead":102,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":262,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":195,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":73,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":412,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":167,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":39,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":350,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":301,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":428,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":226,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":227,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":79,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":61,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":174,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":449,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":255,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":424,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":307,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":314,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":305,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":448,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":466,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":16,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":421,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":292,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":238,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":372,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":108,"com.graphhopper.routing.PathBidirRefTest.testExtract2":289,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":316,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":230,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":360,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":401,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":258,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":411,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":438,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":310,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":223,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":259,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":127,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":34,"com.graphhopper.GraphHopperTest.testFootAndCar":82,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":254,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":358,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":205,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":457,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":415,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":157,"com.graphhopper.storage.StorablePropertiesTest.testLoad":383,"com.graphhopper.GraphHopperTest.testPrepareOnly":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":332,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":186,"com.graphhopper.GraphHopperTest.testVia":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":52,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":116,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":98,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":398,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":18,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":423,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":41,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":141,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":46,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":151}}]
