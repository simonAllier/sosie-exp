[{"failures":[],"tindex":"94c87586-da88-11e4-a4ed-b5f9f696f7e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:66","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop()"},"status":-2},{"failures":[],"tindex":"94c9d517-da88-11e4-a4ed-b52c09cf3c92","variableMapping":{"foundIndex":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"94c9d518-da88-11e4-a4ed-5bd375368c53","variableMapping":{"minLatInit":"maxLat","maxLonInit":"minLon","minLonInit":"java.lang.Double.NaN","bounds":"this","maxLatInit":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[0],"tindex":"94c9fc29-da88-11e4-a4ed-47264e102f09","variableMapping":{"cp":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:125","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[1],"tindex":"94c9fc2a-da88-11e4-a4ed-5dcfa0d5c65e","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[2],"tindex":"94c9fc2b-da88-11e4-a4ed-e9a9f843a42c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeFlagEncoder.reverseFlags(long)"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"94c9fc2c-da88-11e4-a4ed-75b31c2b8626","variableMapping":{"edgeCount":"x1","lastEdgeIndex":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"94c9fc2d-da88-11e4-a4ed-8d7096156eb5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[54],"tindex":"94c9fc2e-da88-11e4-a4ed-d3792904836b","variableMapping":{"len":"acceptBit","start":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[55,1,56],"tindex":"94c9fc2f-da88-11e4-a4ed-67b679e0564a","variableMapping":{"index":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"94c9fc30-da88-11e4-a4ed-a5fbe2d21c4d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"94c9fc31-da88-11e4-a4ed-f97f9de2cb16","variableMapping":{"size":"indexDivisor","delta":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"94c9fc32-da88-11e4-a4ed-e5cf11393433","variableMapping":{"maxSpeed":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[57,58,59],"tindex":"94c9fc33-da88-11e4-a4ed-776cd4798345","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[],"tindex":"94c9fc34-da88-11e4-a4ed-75856e2bb134","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 1))"},"status":-2},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,57,83,84,58,85,2,86,87,88,89,90,91,6,92,93,94,95,96,97,98,99,100,7,101,102,10,11,12,15,17,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,59,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"tindex":"94ca2345-da88-11e4-a4ed-93d1ea4ed775","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[156,157,158,159],"tindex":"94ca2346-da88-11e4-a4ed-a54f3cdd25b9","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"94ca2347-da88-11e4-a4ed-6951a96474ea","variableMapping":{"osmFile":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[160],"tindex":"94ca2348-da88-11e4-a4ed-31ccbeb376f3","variableMapping":{"reverse":"locked"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:618","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Not yet supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[60,61,62,63,161,162,65,66,163,67,68,164,165,78,79,80,81,82,57,84,58,85,2,86,87,166,167,88,168,169,3,89,5,91,170,6,92,93,94,171,95,96,172,173,17,18,174,175,37,53,103,104,105,106,176,107,177,109,110,111,112,113,114,116,117,118,119,178,120,179,122,123,124,125,126,127,129,130,131,180,132,181,134,135,136,137,138,139,141,143,144,145,182,146,183,148,149,150,151,152,153,155],"tindex":"94ca2349-da88-11e4-a4ed-cdc01f80dab1","variableMapping":{"lastKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[],"tindex":"94ca234a-da88-11e4-a4ed-4b8afe3b714b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"94ca234b-da88-11e4-a4ed-f98c1b155e87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"94ca234c-da88-11e4-a4ed-fb8620de90f8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"94ca234d-da88-11e4-a4ed-e9ddd3f3b286","variableMapping":{"allIter":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:385","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIterator.fetchWayGeometry(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[],"tindex":"94ca234e-da88-11e4-a4ed-dd0ab265d02b","variableMapping":{"arrayLength":"start","maxGeoRef":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"94ca234f-da88-11e4-a4ed-1920b9a8f656","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"tindex":"94ca4a60-da88-11e4-a4ed-6be8ab25e104","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[],"tindex":"94ca4a61-da88-11e4-a4ed-dfe62fa1c913","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":0},{"failures":[],"tindex":"94ca4a62-da88-11e4-a4ed-5743e5d7e0b6","variableMapping":{"lat":"distance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[],"tindex":"94ca4a63-da88-11e4-a4ed-75d181fea390","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[208,209,22,24,210,30,31,40,211,46,47,212,213,214,215,216,217,218,219],"tindex":"94ca7174-da88-11e4-a4ed-9dd451aadafa","variableMapping":{"shift":"hash","flags":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"94ca7175-da88-11e4-a4ed-097710219aac","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":0},{"failures":[],"tindex":"94ca7176-da88-11e4-a4ed-0d453d97484e","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.BIKE","entryVal":"com.graphhopper.routing.util.EncodingManager.BIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"94ca7177-da88-11e4-a4ed-75a0f6bb0c67","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[220,221,222,100,102,13],"tindex":"94ca7178-da88-11e4-a4ed-2faa82efe996","variableMapping":{"len":"encoded","start":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[223,101],"tindex":"94ca7179-da88-11e4-a4ed-9b76703d4961","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-1},{"failures":[],"tindex":"94ca988a-da88-11e4-a4ed-35b1906e37bd","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"94ca988b-da88-11e4-a4ed-2fe1ad2495a9","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"94ca988c-da88-11e4-a4ed-fde69d1d175a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"94ca988d-da88-11e4-a4ed-c74f3f2b7e75","variableMapping":{"high":"flags","highKey":"scDirMask","key":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[224,225,226,227,55,228,229,230,231,232,233,234,1,235,236,237,238,239,240,241,56,242,243,244,245,246,247,248],"tindex":"94ca988e-da88-11e4-a4ed-d79e0b592e1f","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[60,61,62,63,249,250,69,93,251,252,253,96,254,97,255,256,99,257,7,8,9,258,259,10,11,12,13,14,15,16,260,261,262,263,264,265,266,267,25,26,27,41,42,43,103,104,268,269,270,115,271,272,117,273,274,275,128,276,277,137,195,143,278,279,280,154,281,282,204],"tindex":"94ca988f-da88-11e4-a4ed-7d10113242f0","variableMapping":{"size":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"94ca9890-da88-11e4-a4ed-63cab3db5038","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:79","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"94ca9891-da88-11e4-a4ed-bf942301fad8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[283,284,285,286,287,288,289],"tindex":"94ca9892-da88-11e4-a4ed-7350e85fadc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:643","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[290,291,60,292,293,294,295,296,61,62,63,249,64,161,162,65,66,163,67,68,297,250,69,70,164,165,76,77,78,79,80,81,82,298,57,83,84,299,58,85,2,300,86,87,166,167,88,168,169,3,89,301,90,4,5,91,170,6,302,92,93,94,171,95,251,251,252,252,303,303,253,253,96,96,254,254,304,304,97,97,255,255,305,305,306,306,256,256,307,98,99,257,222,100,7,8,9,258,259,101,308,309,310,311,312,102,172,173,313,314,315,10,11,12,13,14,316,15,16,317,17,18,318,319,320,321,322,174,323,324,325,326,327,328,329,330,331,332,333,175,24,334,25,26,27,28,210,29,30,31,32,33,34,35,36,37,38,39,335,40,336,41,42,43,44,211,45,46,47,48,49,50,51,52,53,103,337,104,338,339,340,268,105,106,341,176,107,342,343,344,177,345,108,346,347,348,349,109,350,110,351,352,269,353,354,111,355,112,270,356,113,357,114,115,358,271,272,116,359,360,117,361,362,363,273,118,119,364,178,120,365,366,367,179,368,121,369,370,371,372,122,373,123,374,375,274,376,377,124,378,125,275,379,126,380,127,128,381,276,277,129,382,190,383,384,385,386,192,193,387,388,133,137,59,389,390,391,142,392,393,394,143,395,396,397,278,144,145,398,182,146,399,400,401,183,402,147,403,404,405,406,148,407,149,408,409,279,410,411,150,412,151,280,413,152,414,153,154,415,281,282,155,416],"tindex":"94cabfa3-da88-11e4-a4ed-5b300783d80e","variableMapping":{"freeIndex":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"94cabfa4-da88-11e4-a4ed-773f4d276697","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"94cabfa5-da88-11e4-a4ed-4128ce39b0ab","variableMapping":{"java.lang.Double.MAX_VALUE":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","java.lang.Integer.MAX_VALUE":"val","storedInt":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:371","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[417,283,55,286,56],"tindex":"94cabfa6-da88-11e4-a4ed-c58346de217b","variableMapping":{"edgeId":"speed","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"speed","nodeA":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[290,291,60,292,293,294,295,61,62,63,249,64,161,162,65,66,163,67,68,297,250,69,70,164,165,76,77,78,79,80,81,82,298,57,83,84,299,58,85,2,300,86,87,166,167,88,168,169,3,89,301,90,4,5,91,170,6,302,92,93,94,171,95,251,252,303,253,96,254,304,97,255,305,306,256,99,257,222,100,7,8,9,258,259,101,308,309,310,311,312,102,172,173,313,314,10,11,12,13,14,316,15,16,317,17,18,318,319,320,321,322,174,324,325,326,327,328,329,330,331,332,333,175,24,334,25,26,27,28,210,29,30,31,32,33,34,35,36,37,38,39,335,40,336,41,42,43,44,211,45,46,47,48,49,50,51,52,53,103,337,104,340,268,105,106,341,176,107,342,343,344,177,345,108,346,347,348,349,109,350,110,351,352,269,353,354,111,112,270,356,113,357,114,115,358,271,272,116,359,360,117,363,273,118,119,364,178,120,365,366,367,179,368,121,369,370,371,372,122,373,123,374,375,274,376,377,124,125,275,379,126,380,127,128,381,276,277,129,382,383,384,385,192,193,387,388,133,137,59,389,390,391,142,393,394,143,397,278,144,145,398,182,146,399,400,401,183,402,147,403,404,405,406,148,407,149,408,409,279,410,411,150,151,280,413,152,414,153,154,415,281,282,155,416],"tindex":"94cabfa7-da88-11e4-a4ed-b59674567550","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[67,106,346,347,349,352,270,356,119,369,370,372,375,275,379,131,418,419,420,421,422,423,145,403,404,406,409,280,413],"tindex":"94cae6b8-da88-11e4-a4ed-0b81a4701b7c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-1},{"failures":[],"tindex":"94cae6b9-da88-11e4-a4ed-5ddcb70b6e7f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"94cae6ba-da88-11e4-a4ed-e9575932c4fc","variableMapping":{"edgeId":"shift","nextEdge":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":0},{"failures":[163,67,102],"tindex":"94cae6bb-da88-11e4-a4ed-43407e17f2db","variableMapping":{"node":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"94cae6bc-da88-11e4-a4ed-bb66e3bf222e","variableMapping":{"mKeys":"mValues","nkeys":"mValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":0},{"failures":[],"tindex":"94cc946d-da88-11e4-a4ed-c563e716d5d3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"94cc946e-da88-11e4-a4ed-c708f9144923","variableMapping":{"relationCodeEncoder":"this","shift":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[286,424],"tindex":"94cc946f-da88-11e4-a4ed-3ba907e77e53","variableMapping":{"size":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[208,209,212,213,425,214,426,215,216,219],"tindex":"94cc9470-da88-11e4-a4ed-b9c5c3dc2274","variableMapping":{"fwdFaster":"midLon","incDist2DSum":"midLon","fwdSlower":"midLon","fullDist2D":"midLon","restDist2D":"lon","speed":"midLon","decDist2DSum":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"94cc9471-da88-11e4-a4ed-57679536c3cd","variableMapping":{"that":"graph","index":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:125","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"94ccbb82-da88-11e4-a4ed-9da678900212","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[],"tindex":"94ccbb83-da88-11e4-a4ed-e11d94fec02e","variableMapping":{"d":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[65,68,297],"tindex":"94ccbb84-da88-11e4-a4ed-633c26651643","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"94ccbb85-da88-11e4-a4ed-49813330dd7c","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.VERY_NICE","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.VERY_NICE","highway":"highway","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"94ccbb86-da88-11e4-a4ed-914e16672f72","variableMapping":{"eleDelta":"baseOrientation","decEleSum":"baseOrientation","fullDist2D":"resultOrientation","decDist2DSum":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":0},{"failures":[163,100,7,8,9,258,259,101,308,309,310,311,102,314,315,10,11,12,13,14,316,15,16,317],"tindex":"94ccbb87-da88-11e4-a4ed-2741c6a0017c","variableMapping":{"locs":"unvisitedDeadEnds"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":-1},{"failures":[],"tindex":"94ccbb88-da88-11e4-a4ed-419dbe91af6b","variableMapping":{"oldValueIndex":"flags","lastKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":0},{"failures":[],"tindex":"94ccbb89-da88-11e4-a4ed-091a340f5e1b","variableMapping":{"visitedCountFrom":"index","visitedCountTo":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-2},{"failures":[427,222],"tindex":"94ccbb8a-da88-11e4-a4ed-475b8840f070","variableMapping":{"pos":"minutes","mSize":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"94ccbb8b-da88-11e4-a4ed-e3eb0b2974c6","variableMapping":{"need":"shift","i":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[428,429],"tindex":"94ccbb8c-da88-11e4-a4ed-5351e2f78b7c","variableMapping":{"type":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"94ccbb8d-da88-11e4-a4ed-7b10d169750f","variableMapping":{"tmp":"nodeB","initializedCounter":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[430,431,432,433,160],"tindex":"94ccbb8e-da88-11e4-a4ed-09dcd5ab642e","variableMapping":{"mGarbage":"blockByDefault"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"94cce29f-da88-11e4-a4ed-bbd133bf1224","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:620","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[],"tindex":"94cce2a0-da88-11e4-a4ed-1dfcc3d4afec","variableMapping":{"time":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[434],"tindex":"94cce2a1-da88-11e4-a4ed-8508e94b8fce","variableMapping":{"nodeId":"flags","nodeIdOffset":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[89],"tindex":"94cce2a2-da88-11e4-a4ed-d1fff7b73e30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":-1},{"failures":[435],"tindex":"94cce2a3-da88-11e4-a4ed-7fc716b4a761","variableMapping":{"key":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:712","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(((\"Unknown key \" + int) + \" for double value.\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"94cce2a4-da88-11e4-a4ed-13ec16e778ad","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[417,283,436,55,437,285,233,1,235,240,56,438,288,247],"tindex":"94cce2a5-da88-11e4-a4ed-b1a17232bd0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[],"tindex":"94cce2a6-da88-11e4-a4ed-47702e10f1d1","variableMapping":{"tmpNode":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"94cce2a7-da88-11e4-a4ed-4f1ff7534444","variableMapping":{"this":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.isShortcut())\n    throw new java.lang.IllegalStateException((\"Cannot call setName on shortcut \" + com.graphhopper.storage.GraphHopperStorage.EdgeIterable.(getEdge())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-2},{"failures":[],"tindex":"94cce2a8-da88-11e4-a4ed-5fed9b78546e","variableMapping":{"r":"bwSlower","x":"bwSlower","absY":"bwSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"94cce2a9-da88-11e4-a4ed-c1f0336d7772","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-2},{"failures":[],"tindex":"94cce2aa-da88-11e4-a4ed-7bfdff56438e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[],"tindex":"94cce2ab-da88-11e4-a4ed-af2ad16714e6","variableMapping":{"i":"x1","to":"sLon","lonSize":"sLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"94cd08bc-da88-11e4-a4ed-6fb638859ea4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[76,83,2,300,95],"tindex":"94cd08bd-da88-11e4-a4ed-ef01d52a6af9","variableMapping":{"edgeId":"from","nextEdge":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"94cd08be-da88-11e4-a4ed-47425346a18d","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[],"tindex":"94cd08bf-da88-11e4-a4ed-b55bb6ce324d","variableMapping":{"highwayValue":"highwayValue","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[65,67,106,347,349,351,352,270,356,119,370,372,374,375,275,379,131,419,420,439,421,422,423,145,404,406,408,409,280,413],"tindex":"94cd08c0-da88-11e4-a4ed-c1058b044a2e","variableMapping":{"java.lang.Integer.MAX_VALUE":"com.graphhopper.coll.SparseIntIntArray.DELETED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-1},{"failures":[440,441,223,442,443,444,445,101],"tindex":"94cd08c1-da88-11e4-a4ed-f98e75c0335d","variableMapping":{"baseNode":"maxTurnCosts","id":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:360","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"94cd08c2-da88-11e4-a4ed-5fe6fad34fab","variableMapping":{"i":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"94cd08c3-da88-11e4-a4ed-119d3d94646d","variableMapping":{"todoBytes":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"94cd08c4-da88-11e4-a4ed-47daf82d78f5","variableMapping":{"indexWithMaxDist":"child","lastIndex":"i","fromIndex":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":0},{"failures":[294,295,446,66,163,67,4,5,6,100,9,259,101,309,10,11,13,14,317,17,18,325,326,328,25,27,29,32,33,34,35,36,38,39,41,43,45,48,49,50,51,52],"tindex":"94cd08c5-da88-11e4-a4ed-d7cefb714623","variableMapping":{"elem":"arr","i":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[259,447,448,325,326,449,184,450,451,187,188,189,130,131,180,452,419,420,134,135,439,136,137,422,423,453,140,141,454,194,455,456,197,198,203,457,458,206,207],"tindex":"94cd08c6-da88-11e4-a4ed-5592f39697c6","variableMapping":{"current":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:599","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":151,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":302,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":392,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":434,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":130,"com.graphhopper.reader.OSMReaderTest.testFerry":222,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":161,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":162,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":437,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":436,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":42,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":315,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":416,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":245,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":248,"com.graphhopper.storage.MMapDataAccessTest.testSegments":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":345,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":448,"com.graphhopper.coll.CompressedArrayTest.testCompress":209,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":277,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":80,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":393,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":335,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":84,"com.graphhopper.GraphHopperTest.testPrepare":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":76,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":228,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":89,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":323,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":225,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":295,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":397,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":283,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":55,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":169,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":368,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":26,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":272,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":103,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":217,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":451,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":85,"com.graphhopper.GraphHopperTest.testLoadOSM":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":32,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":385,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":27,"com.graphhopper.reader.OSMReaderTest.testSort":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":232,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":163,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":338,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":380,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":117,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":215,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":97,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":114,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":412,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":366,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":189,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":268,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":402,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":241,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":239,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":45,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":5,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":39,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":167,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":166,"com.graphhopper.coll.OSMIDMapTest.testGetLong":266,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":352,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":407,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":143,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":408,"com.graphhopper.coll.CompressedArrayTest.testCompress2":208,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":375,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":108,"com.graphhopper.GraphHopperAPITest.testLoad":17,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":384,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":160,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":369,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":119,"com.graphhopper.storage.LevelGraphStorageTest.testClone":182,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":427,"com.graphhopper.reader.OSMReaderTest.testBarriers":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":105,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":297,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":202,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":38,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":443,"com.graphhopper.util.GHUtilityTest.testCopy":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":168,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":53,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":158,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":20,"com.graphhopper.routing.PathTest.testFindInstruction":257,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":106,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":64,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":221,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":242,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":330,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":127,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":122,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":113,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":349,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":394,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":159,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":435,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":399,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":363,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":187,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":388,"com.graphhopper.util.InstructionListTest.testWayList2":63,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":33,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":129,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":271,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":284,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":250,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":361,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":401,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":195,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":441,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":420,"com.graphhopper.storage.RAMDirectoryTest.testSynched":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":346,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":88,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":118,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":258,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":455,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":93,"com.graphhopper.coll.OSMIDMapTest.testGet":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":177,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":54,"com.graphhopper.routing.PathBidirRefTest.testExtract":164,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":265,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":279,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":49,"com.graphhopper.storage.RAMDataAccessTest.testCopy":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":359,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":422,"com.graphhopper.storage.RAMDataAccessTest.testSegments":207,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":431,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":37,"com.graphhopper.util.GHUtilityTest.testSort2":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":91,"com.graphhopper.reader.OSMReaderTest.testMain":7,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":351,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":218,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":50,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":339,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":147,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":406,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":155,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":96,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":56,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":383,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":149,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":312,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":204,"com.graphhopper.storage.GraphHopperStorageTest.testClone":178,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":453,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":74,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":371,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":59,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":391,"com.graphhopper.routing.PathTest.testTime":98,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":237,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":281,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":146,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":35,"com.graphhopper.reader.OSMReaderTest.testRelation":289,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":411,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":421,"com.graphhopper.util.GHUtilityTest.testSortDirected":293,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":246,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":253,"com.graphhopper.GraphHopperTest.testFootOnly":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":325,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":211,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":186,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":424,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":87,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":134,"com.graphhopper.search.NameIndexTest.testCreate":262,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":206,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":251,"com.graphhopper.routing.QueryGraphTest.testOneWay":305,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":214,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":447,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":25,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":212,"com.graphhopper.reader.OSMReaderTest.testWithBounds":311,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":200,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":203,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":66,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":419,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":286,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":144,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":396,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":227,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":73,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":109,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":273,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":300,"com.graphhopper.util.InstructionListTest.testWayList":62,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":381,"com.graphhopper.GraphHopperAPITest.testDisconnected179":18,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":426,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":355,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":243,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":173,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":141,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":12,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":365,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":299,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":124,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":440,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":83,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":154,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":444,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":340,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":409,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":171,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":191,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":386,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":234,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":360,"com.graphhopper.routing.PathTest.testWayList":99,"com.graphhopper.storage.MMapDataAccessTest.testCopy":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":418,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":0,"com.graphhopper.coll.OSMIDMapTest.testGet2":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":95,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":353,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":157,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":373,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":46,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":148,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":47,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":433,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":185,"com.graphhopper.util.GHUtilityTest.testSort":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":29,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":219,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":230,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":430,"com.graphhopper.search.NameIndexTest.testPut":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":116,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":364,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":332,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":336,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":328,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":320,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":438,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":69,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":318,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":337,"com.graphhopper.storage.MMapDirectoryTest.testSynched":428,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":432,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":350,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":65,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":387,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":137,"com.graphhopper.routing.PathTest.testFound":307,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":220,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":317,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":153,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":196,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":229,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":347,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":199,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":261,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":133,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":179,"com.graphhopper.util.InstructionListTest.testEmptyList":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":3,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":4,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":75,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":226,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":374,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":170,"com.graphhopper.reader.PrinctonReaderTest.testRead":172,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":128,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":43,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":344,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":213,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":269,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":110,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":156,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":223,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":236,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":287,"com.graphhopper.reader.OSMReaderTest.testFoot":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":136,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":30,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":216,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":282,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":31,"com.graphhopper.reader.OSMReaderTest.testOneWay":102,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":370,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":379,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":357,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":224,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":198,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":135,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":367,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":81,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":79,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":197,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":321,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":70,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":201,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":41,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":303,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":362,"com.graphhopper.routing.PathBidirRefTest.testExtract2":165,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":192,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":34,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":175,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":238,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":240,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":454,"com.graphhopper.util.SimpleIntDequeTest.testPush":446,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":322,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":57,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":28,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":126,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":400,"com.graphhopper.GraphHopperTest.testFootAndCar":13,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":274,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":404,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":235,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":52,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":458,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":180,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":184,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":445,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":92,"com.graphhopper.GraphHopperTest.testPrepareOnly":314,"com.graphhopper.GraphHopperTest.testVia":10,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":131,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":309,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":142,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":249,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":378,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":71,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":308,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":414,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":413,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":104}}]
