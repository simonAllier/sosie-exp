[{"failures":[0,1,2],"tindex":"27a13768-da90-11e4-95c5-0540023ba3b6","variableMapping":{"segmentsToMap":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"27a13769-da90-11e4-95c5-37aa895b32e1","variableMapping":{"length":"start","factor":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-2},{"failures":[],"tindex":"27a1376a-da90-11e4-95c5-5741478f6b6e","variableMapping":{"ret":"paveType","retBucket":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","i":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","storedKey":"flags","bucketSize":"paveType","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:120","type":"CtIfImpl","sourcecode":"if (long == long) {\n    int = (int * (int)) + int;\n    break;\n} else if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-2},{"failures":[],"tindex":"27a15e7b-da90-11e4-95c5-17ddc662f3ac","variableMapping":{"flags":"oldRelationFlags","scDirMask":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"27a15e7c-da90-11e4-95c5-a5f717abe0c0","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11],"tindex":"27a15e7d-da90-11e4-95c5-8311a73a3af1","variableMapping":{"edgeId":"skippedEdge1","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"skippedEdge1","nodeA":"skippedEdge1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"27a15e7e-da90-11e4-95c5-61c94ae2ba05","variableMapping":{"baseUrl":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"27a15e7f-da90-11e4-95c5-09d8a96fcf07","variableMapping":{"high":"flags","len":"directionBitMask","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":0},{"failures":[],"tindex":"27a15e80-da90-11e4-95c5-11a909ebfcee","variableMapping":{"factor":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[3,12,5,13,14,15,6,16,17,8,18,19,20,21,22,23,24,25,9,10,11,26,27,28],"tindex":"27a15e81-da90-11e4-95c5-1df54f96abbf","variableMapping":{"eleDelta":"dist","decEleSum":"distance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"27a15e82-da90-11e4-95c5-2feb9ffe2846","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[29],"tindex":"27a15e83-da90-11e4-95c5-0f8d379365a4","variableMapping":{"nodeThis":"segmentSizeInBytes","nextEdgeOther":"segmentSizeInBytes","nodeOther":"segmentSizeInBytes","nextEdge":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"27a15e84-da90-11e4-95c5-f1a68ce5e25b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[30],"tindex":"27a15e85-da90-11e4-95c5-b7daec360d4b","variableMapping":{"size":"index","from":"index","end":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"27a15e86-da90-11e4-95c5-f9de35b6874d","variableMapping":{"byteCount":"flags2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[],"tindex":"27a15e87-da90-11e4-95c5-df95799b6e58","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"27a15e88-da90-11e4-95c5-4f73448cfb86","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"27a1d3b9-da90-11e4-95c5-1bee946ca101","variableMapping":{"length":"bitsForEdgeFlags","factor":"bitsForEdgeFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[],"tindex":"27a1d3ba-da90-11e4-95c5-612a7ce6accb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"27a1d3bb-da90-11e4-95c5-d7c04e27639a","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:284","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\",\"))\n    return \"destinations: \" + java.lang.String;\nelse\n    return \"destination: \" + java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"27a1d3bc-da90-11e4-95c5-6571d2d48159","variableMapping":{"nanoTime":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[3,5,14,15,27],"tindex":"27a1d3bd-da90-11e4-95c5-a5ced21fdfaa","variableMapping":{"size":"from","delta":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[31],"tindex":"27a1d3be-da90-11e4-95c5-2d34fdc99760","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"27a1d3bf-da90-11e4-95c5-b11fa20408c6","variableMapping":{"y1":"lastEdgeIndex","y2":"edgeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[],"tindex":"27a1d3c0-da90-11e4-95c5-6f20bdbe0c12","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"27a1d3c1-da90-11e4-95c5-534b1c65ff4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"27a1d3c2-da90-11e4-95c5-dfdc3197754f","variableMapping":{"size":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[32,33,34,35,36,14,20],"tindex":"27a1fad3-da90-11e4-95c5-0bca27d17d54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:55","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Reverse Speed\" , int , int , double , com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\") , 30)"},"status":-1},{"failures":[],"tindex":"27a1fad4-da90-11e4-95c5-ebe6ec3b72ad","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"27a1fad5-da90-11e4-95c5-771511f0d612","variableMapping":{"distance":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":0},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,30,32,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,0,1,265,266,267,33,34,268,36,269,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,280,281,281,282,282,3,283,12,284,285,286,287,288,4,5,289,290,291,13,14,15,6,16,17,7,8,18,292,19,20,293,21,22,23,24,25,9,294,10,295,11,26,27,296,297,298,299,300,301,302,28,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,2,328,329,330,331,332,333],"tindex":"27a221e6-da90-11e4-95c5-5f97c4013e62","variableMapping":{"dataAccess":"location","type":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:177","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"SYNC\"))\n    com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[85,91,93,94,334,124,130,132,133,335,336,337,338,339,340,341,342,343,344,345],"tindex":"27a221e7-da90-11e4-95c5-79d2d2a0601b","variableMapping":{"len":"hash","start":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[263,265],"tindex":"27a221e8-da90-11e4-95c5-af356beb92c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[258,346,347,348,31,349,350,351,352,353,354,355,356,357,358,33,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,35,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,301,302,28,303,304,305,306,308,309,310,311,427,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,2,428,429],"tindex":"27a248f9-da90-11e4-95c5-4186902825a6","variableMapping":{"str":"name","this":"value","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:97","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[360,362,364,430,372,376,377,378,380,382,384,431,392,396,399,400,432,407,411,416,433,423,426,434,435,310],"tindex":"27a248fa-da90-11e4-95c5-c7dc27895023","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[352,313,326,2],"tindex":"27a248fb-da90-11e4-95c5-072b7590cfb2","variableMapping":{"initialized":"isRoundabout"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:241","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call loadExisting only once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[34],"tindex":"27a248fc-da90-11e4-95c5-f351c4b3940c","variableMapping":{"resultOrientation":"fullDist2D","orientation":"fwdSlower","java.lang.Math.PI":"fwdSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,436,437,438,439,440,441,442,29,443,444,445,191,30,32,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,0,1,265,266,267,33,34,268,36,269,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,280,281,281,282,282,3,283,12,284,285,286,287,288,4,5,289,290,291,13,14,15,6,16,17,7,8,18,292,19,20,293,21,22,23,24,25,9,294,10,295,11,26,27,301,28,303,304,305,306,308,309,310,311,313,314,315,316,317,318,319,320,321,323,324,325,326,2,328,332,333],"tindex":"27a2700d-da90-11e4-95c5-2b6fed4c228c","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","index":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[374,394,409,425],"tindex":"27a2700e-da90-11e4-95c5-192be81d7f5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"27a2700f-da90-11e4-95c5-bfa45fcabf6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"27a27010-da90-11e4-95c5-cb64c0c4fe6c","variableMapping":{"value":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[],"tindex":"27a27011-da90-11e4-95c5-719fda4556d2","variableMapping":{"high":"ferryBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-2},{"failures":[446],"tindex":"27a27012-da90-11e4-95c5-032e422a3d0c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[360,377,378,380],"tindex":"27a2be33-da90-11e4-95c5-33f89ffd91c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[38,39,40,42,47,68,74,79,81,87,89,126,128,141,144,146,151,172,178,183,185,194,197,202,223,229,234,236,447,448,251,255,256,257,258,269,270,272,278,279,282,295,296,297,298,299,300,301,28,306,308,309,311,315,318,319],"tindex":"27a2be34-da90-11e4-95c5-f9a9ddec41c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"27a2be35-da90-11e4-95c5-c9b71df5bd6a","variableMapping":{"nodes":"size","adj":"size","base":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[],"tindex":"27a2be36-da90-11e4-95c5-53b080e3f949","variableMapping":{"item":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:256","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"27a2e547-da90-11e4-95c5-2176c96d768c","variableMapping":{"weightToPrioMap":"weightToPrioMap","highway":"trackType","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"27a2e548-da90-11e4-95c5-f3e856c009ea","variableMapping":{"high":"encoded","highKey":"encoded","key":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"27a2e549-da90-11e4-95c5-51bf83892a36","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"27a2e54a-da90-11e4-95c5-9fc2a234756d","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"27a2e54b-da90-11e4-95c5-5d2b9d412f72","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"dLon","entityType":"dLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":0},{"failures":[],"tindex":"27a2e54c-da90-11e4-95c5-f7f5edb2f5bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"27a2e54d-da90-11e4-95c5-8b6ce70861ba","variableMapping":{"version":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[41,88,93,94,127,132,133,145,437,29,443,196,244,245,12,4,291,15,6,8,18,19,20,22,24,25,9,294,10,11,26,27,301,28,303,304,305,306,308,309,310,311,313,314,315,316,317,318,320,321,323,325,326,2,333],"tindex":"27a2e54e-da90-11e4-95c5-373b103f6a2a","variableMapping":{"guess":"bytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-1},{"failures":[],"tindex":"27a2e54f-da90-11e4-95c5-8f74bb5d19d3","variableMapping":{"periodicUpdates":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":0},{"failures":[359,360,361,362,363,364,367,368,369,372,373,375,376,377,378,35,379,380,381,382,383,384,387,388,389,392,393,395,396,398,399,400,402,403,404,407,408,410,411,414,415,416,417,419,420,423,424,426,313,314,315,316,318,319,320,321,325,326,2],"tindex":"27a2e550-da90-11e4-95c5-abd9865b9a62","variableMapping":{"val":"service","existing":"highway","key":"service"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[3,12,4,5,13,14,15,6,16,17,7,8,18,292,19,20,21,22,23,24,25,9,10,295,11,26,27,28,303,306,310],"tindex":"27a2e551-da90-11e4-95c5-e1d9e3813961","variableMapping":{"i":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[354,313],"tindex":"27a2e552-da90-11e4-95c5-e5ac11e135cf","variableMapping":{"logMessages":"durationInHours","logMessagesPercentage":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:158","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"27a2e553-da90-11e4-95c5-29863ab46e21","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[4,291,15,16,8,18,19,22,24,25,294,10,295,11,26,27,449,450],"tindex":"27a2e554-da90-11e4-95c5-0f168952fabe","variableMapping":{"turnCostIndex":"i","nextTurnCostIndex":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-1},{"failures":[],"tindex":"27a2e555-da90-11e4-95c5-3b82b655224b","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"shift","entityType":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"27a2e556-da90-11e4-95c5-ab8b0f7511e8","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"closed","v":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"27a30b67-da90-11e4-95c5-e7d7f1b9cf92","variableMapping":{"name":"footTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":0},{"failures":[],"tindex":"27a30b68-da90-11e4-95c5-b72b52479b26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"27a30b69-da90-11e4-95c5-37c654d38f4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[37,38,39,40,42,43,47,68,74,79,81,82,87,88,89,109,110,111,112,114,126,127,128,141,451,144,146,147,151,172,178,183,185,186,190,194,197,198,202,223,229,234,236,237,452,453,447,454,455,456,457,458,459,460,461,462,463,464,448,465,466,467,468,469,470,471,472,473,251,255,256,257,258,33,34,269,270,271,272,274,275,276,277,278,279,281,282,295,296,297,298,299,300,301,302,28,303,304,305,306,308,309,310,311,313,314,315,316,317,318,319,320,321,323,324,325,326,2,329,330,331],"tindex":"27a30b6a-da90-11e4-95c5-d34423462436","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"27a30b6b-da90-11e4-95c5-ed822ad97c54","variableMapping":{"need":"nodeB","i":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"27a30b6c-da90-11e4-95c5-711c7d590cd9","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"27a30b6d-da90-11e4-95c5-1b6c4f961b49","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[],"tindex":"27a30b6e-da90-11e4-95c5-0b50c7a6a661","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[359,363,364,375,379,383,384,395,398,400,410,414,416,417],"tindex":"27a30b6f-da90-11e4-95c5-efb1841f7213","variableMapping":{"periodicUpdates":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[360,363,364,376,377,378,380,383,384,396,400,411,414,416,426],"tindex":"27a30b70-da90-11e4-95c5-5f50f630c85a","variableMapping":{"bytePos":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"27a30b71-da90-11e4-95c5-695307bd3ada","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"cap","entityType":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[],"tindex":"27a30b72-da90-11e4-95c5-f702cde1e87a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[20],"tindex":"27a30b73-da90-11e4-95c5-efa928a7e2b1","variableMapping":{"scDirMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":-1},{"failures":[],"tindex":"27a30b74-da90-11e4-95c5-6f7c7c4a7a75","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"27a30b75-da90-11e4-95c5-2b11496cf7d7","variableMapping":{"distance":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[335,336,337,338,340,474,341,342,345],"tindex":"27a30b76-da90-11e4-95c5-db005229e5b2","variableMapping":{"cap":"initialBits","bytes":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-1},{"failures":[],"tindex":"27a30b77-da90-11e4-95c5-b7be23c58fbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:37","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalcEarth.calcDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"27a33288-da90-11e4-95c5-6fc5c3f0017d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"27a33289-da90-11e4-95c5-653448b0f4d6","variableMapping":{"osmFile":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[38,39,40,42,47,74,79,81,82,87,88,89,126,127,128,144,146,151,178,183,185,186,190,197,202,229,234,236,237,447,448,251,255,256,257,258,269,270,271,272,274,275,276,278,279,282,295,296,297,298,299,300,301,28,303,304,305,306,308,309,310,315,316,317,318,319,321,323],"tindex":"27a3328a-da90-11e4-95c5-af0c45718010","variableMapping":{"segmentSizeInBytes":"length","index":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"27a3328b-da90-11e4-95c5-753b88a69ad2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-2},{"failures":[38,39,40,42,47,68,74,79,81,87,89,126,128,141,144,146,151,172,178,183,185,194,197,202,223,229,234,236,447,448,251,255,256,257,258,269,270,272,278,279,282,295,296,297,298,299,300,301,28,306,308,309,311,315,318,319],"tindex":"27a3328c-da90-11e4-95c5-3fb60f6a6bca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,451,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,30,32,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,452,447,454,455,456,457,458,460,461,462,463,448,465,466,467,468,469,471,472,473,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,0,1,265,266,267,33,34,268,36,269,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,280,281,281,282,282,3,283,12,284,285,286,287,288,4,5,289,290,291,13,14,15,6,16,17,7,8,18,292,19,20,293,21,22,23,24,25,9,294,10,295,11,26,27,296,297,298,299,300,301,302,28,303,304,305,306,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,2,328,329,330,331,332,333],"tindex":"27a3328d-da90-11e4-95c5-9935992db7e4","variableMapping":{"index":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[327],"tindex":"27a3328e-da90-11e4-95c5-9dfab16bde9e","variableMapping":{"size":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-1},{"failures":[],"tindex":"27a3328f-da90-11e4-95c5-591637f359e7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[],"tindex":"27a33290-da90-11e4-95c5-b79a541f9cde","variableMapping":{"val":"speedVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"27a33291-da90-11e4-95c5-0fc651306cde","variableMapping":{"maxTurnCosts":"maxTurnCosts","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","cost":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"27a359a2-da90-11e4-95c5-23c80f22352d","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[374,394,409,425],"tindex":"27a359a3-da90-11e4-95c5-9d89a09859b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[42,44,45,47,48,49,50,51,52,53,54,55,56,57,58,60,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,139,140,144,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,437,438,439,440,29,443,444,445,191,30,32,192,193,195,197,199,200,202,203,204,205,206,207,208,209,210,211,212,213,215,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,251,252,255,256,257,258,259,260,261,262,263,264,0,1,265,267,33,34,269,270,271,272,273,274,275,276,277,278,279,280,281,282,3,283,12,284,285,286,287,4,5,289,291,13,14,15,6,16,17,7,8,18,292,19,20,21,22,23,24,25,9,294,10,295,11,26,27,301,302,28,303,304,305,306,308,309,310,311,313,314,315,316,317,318,319,320,321,323,324,325,326,2,328,332,333],"tindex":"27a380b4-da90-11e4-95c5-a9cfdfd5aafe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-1},{"failures":[],"tindex":"27a380b5-da90-11e4-95c5-45a53c024cd2","variableMapping":{"hasOther":"uTurnSupport","hasRel":"uTurnSupport"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"27a380b6-da90-11e4-95c5-93d2245e24e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:485","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"27a380b7-da90-11e4-95c5-e9bc38655a3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"27a380b8-da90-11e4-95c5-5b9c69903b4a","variableMapping":{"y":"maxSpeed","angle":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:336","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[357,313,326,2],"tindex":"27a380b9-da90-11e4-95c5-73c2789781aa","variableMapping":{"str":"motorcarTag","d":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:276","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String.trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"27a380ba-da90-11e4-95c5-9927443a0cb5","variableMapping":{"newName":"val","name":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":228,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":294,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":194,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":412,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":104,"com.graphhopper.reader.OSMReaderTest.testFerry":313,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":247,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":383,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":417,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":127,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":302,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":372,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":161,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":463,"com.graphhopper.coll.CompressedArrayTest.testCompress":336,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":422,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":82,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":285,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":58,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":123,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":464,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":457,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":289,"com.graphhopper.GraphHopperTest.testPrepare":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":3,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":381,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":20,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":255,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":108,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":423,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":260,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":200,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":265,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":416,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":379,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":6,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":88,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":186,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":384,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":144,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":343,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":13,"com.graphhopper.GraphHopperTest.testLoadOSM":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":95,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":440,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":89,"com.graphhopper.reader.OSMReaderTest.testSort":316,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":393,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":0,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":147,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":466,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":77,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":42,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":341,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":278,"com.graphhopper.storage.RAMDataAccessTest.testHeader":458,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":182,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":451,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":227,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":54,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":30,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":156,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":362,"com.graphhopper.reader.OSMNodeTest.testSetTags":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":151,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":411,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":408,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":131,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":23,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":122,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":129,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":17,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":204,"com.graphhopper.coll.OSMIDMapTest.testGetLong":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":165,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":171,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":219,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":197,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":221,"com.graphhopper.coll.CompressedArrayTest.testCompress2":335,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":398,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":162,"com.graphhopper.GraphHopperAPITest.testLoad":244,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":201,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":439,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":346,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":59,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":49,"com.graphhopper.storage.LevelGraphStorageTest.testClone":206,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":152,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":266,"com.graphhopper.reader.OSMReaderTest.testBarriers":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":18,"com.graphhopper.util.GHUtilityTest.testCopy":251,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":140,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":405,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":425,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":461,"com.graphhopper.routing.PathTest.testFindInstruction":270,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":433,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":153,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":246,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":348,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":235,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":103,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":361,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":78,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":180,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":166,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":287,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":370,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":208,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":45,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":445,"com.graphhopper.util.InstructionListTest.testWayList2":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":96,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":83,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":157,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":382,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":185,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":33,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":43,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":210,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":448,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":467,"com.graphhopper.storage.RAMDirectoryTest.testSynched":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":163,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":8,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":48,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":318,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":465,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":295,"com.graphhopper.coll.OSMIDMapTest.testGet":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":160,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":31,"com.graphhopper.routing.PathBidirRefTest.testExtract":261,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":223,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":135,"com.graphhopper.storage.RAMDataAccessTest.testCopy":454,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":468,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":188,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":414,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":386,"com.graphhopper.storage.RAMDataAccessTest.testSegments":460,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":101,"com.graphhopper.util.GHUtilityTest.testSort2":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":24,"com.graphhopper.reader.OSMReaderTest.testMain":315,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":170,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":431,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":344,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":136,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":394,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":226,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":148,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":213,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":217,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":238,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":435,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":214,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":175,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":359,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":438,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":220,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":326,"com.graphhopper.storage.StorablePropertiesTest.testStore":141,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":447,"com.graphhopper.storage.GraphHopperStorageTest.testClone":51,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":84,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":357,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":241,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":355,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":191,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":409,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":192,"com.graphhopper.routing.PathTest.testTime":36,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":404,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":236,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":207,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":98,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":225,"com.graphhopper.reader.OSMReaderTest.testRelation":322,"com.graphhopper.util.GHUtilityTest.testSortDirected":253,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":450,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":373,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":472,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":274,"com.graphhopper.GraphHopperTest.testFootOnly":310,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":415,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":110,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":354,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":242,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":130,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":378,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":16,"com.graphhopper.reader.OSMElementTest.testSetTags":429,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":100,"com.graphhopper.search.NameIndexTest.testCreate":40,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":459,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":271,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":442,"com.graphhopper.routing.QueryGraphTest.testOneWay":280,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":99,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":340,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":87,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":337,"com.graphhopper.reader.OSMReaderTest.testWithBounds":325,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":374,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":184,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":264,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":276,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":377,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":203,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":199,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":397,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":371,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":426,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":174,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":167,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":47,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":15,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":80,"com.graphhopper.util.InstructionListTest.testWayList":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":385,"com.graphhopper.GraphHopperAPITest.testDisconnected179":245,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":474,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":368,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":333,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":1,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":436,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":391,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":304,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":53,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":111,"com.graphhopper.routing.util.EncodedValueTest.testSwap":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":290,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":71,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":5,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":402,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":149,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":26,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":138,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":441,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":396,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":41,"com.graphhopper.routing.PathTest.testWayList":269,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":432,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":353,"com.graphhopper.coll.OSMIDMapTest.testGet2":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":27,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":469,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":231,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":329,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":173,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":390,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":64,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":158,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":132,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":218,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":133,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":455,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":473,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":366,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":449,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":399,"com.graphhopper.util.GHUtilityTest.testSort":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":92,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":345,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":389,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":418,"com.graphhopper.search.NameIndexTest.testPut":38,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":187,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":105,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":125,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":114,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":117,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":363,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":34,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":145,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":309,"com.graphhopper.storage.MMapDirectoryTest.testSynched":243,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":401,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":168,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":263,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":444,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":190,"com.graphhopper.routing.PathTest.testFound":268,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":35,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":311,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":233,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":32,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":388,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":164,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":39,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":189,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":56,"com.graphhopper.util.InstructionListTest.testEmptyList":254,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":452,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":19,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":406,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":22,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":350,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":349,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":424,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":25,"com.graphhopper.reader.PrinctonReaderTest.testRead":332,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":79,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":128,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":159,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":300,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":172,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":367,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":421,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":403,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":360,"com.graphhopper.reader.OSMReaderTest.testFoot":314,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":282,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":93,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":237,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":342,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":413,"com.graphhopper.reader.OSMReaderTest.testOneWay":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":94,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":60,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":75,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":181,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":420,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":471,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":365,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":286,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":334,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":291,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":356,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":284,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":470,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":267,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":126,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":273,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":44,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":327,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":29,"com.graphhopper.routing.PathBidirRefTest.testExtract2":262,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":97,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":107,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":407,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":37,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":410,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":320,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":347,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":369,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":90,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":76,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":209,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":68,"com.graphhopper.GraphHopperTest.testFootAndCar":305,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":215,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":400,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":139,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":456,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":293,"com.graphhopper.storage.StorablePropertiesTest.testLoad":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":10,"com.graphhopper.GraphHopperTest.testPrepareOnly":301,"com.graphhopper.GraphHopperTest.testVia":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":106,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":395,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":323,"com.graphhopper.reader.OSMElementTest.testHasTag":428,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":193,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":72,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":258,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":321,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":358,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":232,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":230,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":146}}]
