[{"failures":[],"tindex":"24f08ec0-db57-11e4-a50b-87905e3aaea0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"24f12b01-db57-11e4-a50b-f9bcbef84408","variableMapping":{"lat":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-1},{"failures":[],"tindex":"24f12b02-db57-11e4-a50b-016bfa849e0d","variableMapping":{"keyIndex":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-2},{"failures":[8,9,10],"tindex":"24f12b03-db57-11e4-a50b-f317c88b5c04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:60","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int))"},"status":-1},{"failures":[],"tindex":"24f12b04-db57-11e4-a50b-b719c6a59d00","variableMapping":{"todoBytes":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"24f15215-db57-11e4-a50b-4318d59ad232","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"24f15216-db57-11e4-a50b-8f9e2f4076ac","variableMapping":{"node":"speedBits","priority":"speedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:885","type":"CtReturnImpl","sourcecode":"return (((int) + \" (\") + (int)) + \")\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:774","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":0},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"24f15217-db57-11e4-a50b-11323d805108","variableMapping":{"mainEdgeState":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-1},{"failures":[25,26,27,28,12,29,17,19,20,21,22],"tindex":"24f15218-db57-11e4-a50b-1d23cc08bbc0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"24f15219-db57-11e4-a50b-7df8431003e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:143","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"24f1521a-db57-11e4-a50b-95def7c94f37","variableMapping":{"i":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-2},{"failures":[],"tindex":"24f1521b-db57-11e4-a50b-6f64587e2010","variableMapping":{"store":"edgeBased"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[30],"tindex":"24f1521c-db57-11e4-a50b-4b35df9eb4a8","variableMapping":{"shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","backwardBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"24f1521d-db57-11e4-a50b-b3e6869d4204","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:71","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"24f1521e-db57-11e4-a50b-bd4d40fc6d97","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"24f1521f-db57-11e4-a50b-37e494ec4d85","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[28,12,29,19,31,21,23,24],"tindex":"24f15220-db57-11e4-a50b-837fd9181259","variableMapping":{"map":"map"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,1,2,75,76,77,78,79,80,30,6,7,22,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"24f15221-db57-11e4-a50b-13335a5407e3","variableMapping":{"currentBucket":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"24f1c752-db57-11e4-a50b-bb93c27f8c2b","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":0},{"failures":[],"tindex":"24f1c753-db57-11e4-a50b-97b074aefb1c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[11,28,12,13,14,15,16,17,120,121,18,19,122,123,124,125,126,127,128,129,20,21,22,23,130,24,93,94,97,100],"tindex":"24f1c754-db57-11e4-a50b-0da881650ff1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[131,132],"tindex":"24f1c755-db57-11e4-a50b-3bb64a75b257","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[8,9],"tindex":"24f1c756-db57-11e4-a50b-e93f3cd1d21e","variableMapping":{"eIter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:282","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-1},{"failures":[],"tindex":"24f1c757-db57-11e4-a50b-f71ecfd69d7d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"24f1c758-db57-11e4-a50b-8fd2ac54d374","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":0},{"failures":[133,134,135,136,137,138,139],"tindex":"24f1c759-db57-11e4-a50b-21ecb4b5f662","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-1},{"failures":[],"tindex":"24f1c75a-db57-11e4-a50b-4b94bfa80d3f","variableMapping":{"nodeFlags":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-2},{"failures":[],"tindex":"24f1c75b-db57-11e4-a50b-dddfe8270680","variableMapping":{"lastIndex":"bufferIndex","fromIndex":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-2},{"failures":[133,136],"tindex":"24f1c75c-db57-11e4-a50b-494aa7aa3523","variableMapping":{"line":"highway","key":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[25,26,140,33,141,35,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,36,158,159,37,160,161,162,38,39,163,164,165,166,167,46,47,48,168,169,170,171,172,173,174,175,176,177,73,178,11,27,28,179,180,181,182,12,13,183,184,29,14,15,16,17,120,121,18,19,122,123,124,31,185,125,126,127,128,129,20,186,21,22,23,130,24,91,92,93,94,97,98,100],"tindex":"24f34dfd-db57-11e4-a50b-9b970f93d00b","variableMapping":{"initLeafSize":"I_SKIP_EDGE2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[187,143,188,151,152,37,160,189,190,191,192,193,194,195,196,197,198,57,199,200,201,202,203,68,204,205],"tindex":"24f34dfe-db57-11e4-a50b-959b2b35cd7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"24f34dff-db57-11e4-a50b-bda376e6ea57","variableMapping":{"line":"entryVal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"24f34e00-db57-11e4-a50b-df8ee83d44c1","variableMapping":{"dX":"prio","dY":"prio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[25,206,26,140,207,187,208,33,209,141,35,142,143,144,145,146,147,148,149,150,188,210,151,152,211,153,154,212,155,156,157,36,213,214,158,159,37,160,161,215,162,38,216,39,40,163,164,41,42,43,44,45,165,166,217,167,218,46,47,48,168,219,169,170,171,172,173,174,175,176,177,220,221,49,50,51,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,52,253,53,254,255,55,256,195,257,258,259,260,261,262,263,196,264,197,198,265,266,267,268,269,270,271,56,272,273,274,275,57,199,276,277,278,58,279,59,60,280,281,63,282,64,283,284,66,285,200,286,287,288,289,290,291,292,201,293,202,203,294,295,296,297,298,299,300,67,301,302,303,304,68,204,305,306,307,69,308,70,71,309,310,311,312,73,313,314,315,74,1,2,75,178,316,317,318,319,8,320,321,205,9,10,322,80,30,6,7,11,27,28,179,180,181,182,323,12,13,183,184,29,14,15,16,17,120,121,18,19,122,123,124,31,185,125,126,127,128,129,20,186,21,22,23,130,24,324,325,81,82,326,83,84,85,86,87,88,327,89,90,91,92,93,94,95,96,97,98,99,100,101,328,102,103,104,105,106,107,108,109,110,111,112,113,114,115,329,330,331,332],"tindex":"24f37511-db57-11e4-a50b-3bb69cb77bad","variableMapping":{"size":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"24f37512-db57-11e4-a50b-97bfd305c21a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[8,10],"tindex":"24f37513-db57-11e4-a50b-eb002264c3db","variableMapping":{"segmentSizeInBytes":"minOnewayNetworkSize","index":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"24f37514-db57-11e4-a50b-d18246f4aca8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"24f37515-db57-11e4-a50b-29fc5bb2c1e0","variableMapping":{"factor":"x"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[],"tindex":"24f37516-db57-11e4-a50b-b300fe40c565","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:134","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"24f37517-db57-11e4-a50b-c3181eb21598","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"maxCount","sign":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"24f37518-db57-11e4-a50b-1feeb508f7ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"24f37519-db57-11e4-a50b-f565941eef9b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"24f3751a-db57-11e4-a50b-2fccf6d477e0","variableMapping":{"red":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"24f39c2b-db57-11e4-a50b-b7da895d22a0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"24f39c2c-db57-11e4-a50b-e186e4d652c2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"24f39c2d-db57-11e4-a50b-5f57dea3deef","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[],"tindex":"24f39c2e-db57-11e4-a50b-13411811efb7","variableMapping":{"endX":"tmpPrevEdge","reachedX":"found","x":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:88","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    boolean = true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":0},{"failures":[],"tindex":"24f39c2f-db57-11e4-a50b-a1e31ad9a57c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[333,334,12,29,16,120,19,122,124,126,128,129,186,21,22,23,130,24],"tindex":"24f39c30-db57-11e4-a50b-6d0502d32f03","variableMapping":{"lat":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"24f39c31-db57-11e4-a50b-8b2db6be6c58","variableMapping":{"turnCosts":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"24f39c32-db57-11e4-a50b-55ded17744bd","variableMapping":{"bytePos":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-2},{"failures":[206,140,187,165,11,28,180,12,13,183,184,29,14,15,16,17,120,121,18,19,122,123,124,31,185,125,126,127,128,129,20,186,21,22,23,130,24,91,92,93,94,97,98,100],"tindex":"24f39c33-db57-11e4-a50b-1fa07a95aad4","variableMapping":{"locs":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[335,336,337,338,339,340,341],"tindex":"24f39c34-db57-11e4-a50b-2b44653ad13a","variableMapping":{"latSimilar":"tmpErr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"24f39c35-db57-11e4-a50b-bde1d81f27ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"24f3c346-db57-11e4-a50b-5b7dc6f98f23","variableMapping":{"foundNext":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:809","type":"CtIfImpl","sourcecode":"if (boolean)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-2},{"failures":[25,207,33,35,142,143,145,146,147,149,150,210,154,155,158,159,161,162,38,163,177,232,238,244,342,343,189,344,345,346,347,348,252,349,350,351,52,352,353,354,355,53,55,256,195,258,259,260,262,263,264,267,269,274,275,276,278,58,280,63,64,66,285,200,287,288,289,291,292,293,296,298,303,304,305,307,69,309,73,74,1,2,178,318,319,356,357,358,8,320,321,205,9,359,360,361,362,363,322,364,365,30,366,367,6,7,11,27,28,179,180,181,182,12,13,183,184,29,14,15,16,17,120,121,18,19,122,123,124,31,185,125,126,127,128,129,20,186,21,22,23,130,24,324,325,84,87,91,92,93,94,97,98,100,329,330,331,332],"tindex":"24f3c347-db57-11e4-a50b-45082a45842c","variableMapping":{"intLow":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","intHigh":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[368,358,369,370,371,372,373,374,375,376,377,378,379,380,381,382],"tindex":"24f3c348-db57-11e4-a50b-e5d7014dc255","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-1},{"failures":[],"tindex":"24f3c349-db57-11e4-a50b-3711033c8d19","variableMapping":{"allSegments":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":0},{"failures":[],"tindex":"24f3c34a-db57-11e4-a50b-57caea7fc063","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"24f3c34b-db57-11e4-a50b-a9d1d045bb4c","variableMapping":{"enabled3D":"reverse"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PillarInfo:56","type":"CtReturnImpl","sourcecode":"return boolean ? 3 : 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[25,12,29],"tindex":"24f3c34c-db57-11e4-a50b-d58d52243fda","variableMapping":{"segmentsToMap":"edgeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[],"tindex":"24f3c34d-db57-11e4-a50b-f1bf86ff71ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[25,206,26,140,207,32,187,208,33,34,34,209,141,383,35,142,143,144,145,146,147,148,149,150,188,210,151,152,211,153,154,212,155,156,157,36,213,214,158,384,159,37,160,161,215,162,38,216,39,40,163,164,385,41,42,43,44,45,165,166,217,167,218,46,47,48,168,219,169,170,171,172,173,174,175,386,176,177,220,221,49,50,51,222,223,224,225,226,227,228,229,230,387,231,232,233,234,235,236,237,238,239,240,241,242,243,244,252,52,253,53,54,54,254,255,388,55,256,195,257,258,259,260,261,262,263,196,264,197,198,265,266,267,268,269,270,271,56,272,273,274,389,275,57,199,276,277,278,58,279,59,60,280,281,63,282,64,65,65,283,284,390,66,285,200,286,287,288,289,290,291,292,201,293,202,203,294,295,296,297,298,299,300,67,301,302,303,391,304,68,204,305,306,307,69,308,70,71,309,310,311,312,73,313,314,315,74,1,2,75,178,316,317,318,319,8,320,321,205,9,10,322,80,30,392,367,6,7,11,27,28,179,180,181,182,323,12,13,183,184,29,14,15,16,17,120,121,18,19,122,123,124,31,185,125,126,127,128,129,20,186,21,22,23,130,24,324,325,81,81,82,82,326,326,83,83,84,84,85,85,86,86,87,87,88,88,327,327,89,89,90,90,91,91,92,93,93,94,94,95,95,96,96,97,393,393,98,99,100,100,101,101,394,394,328,102,103,104,105,106,107,108,109,110,111,112,113,114,115,329,330,331,332],"tindex":"24f3c34e-db57-11e4-a50b-ffea06863fee","variableMapping":{"type":"type","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:130","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"24f3c34f-db57-11e4-a50b-e944f7fd3dd8","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"24f3ea60-db57-11e4-a50b-d187fa61e028","variableMapping":{"pos":"subNetworks","mSize":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[143,151,152,156,37,160,189,191,192,395,193,194,195,197,198,270,57,199,200,202,203,299,68,204,8,205],"tindex":"24f3ea61-db57-11e4-a50b-67cd56019512","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[396],"tindex":"24f3ea62-db57-11e4-a50b-23aed8668be9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[],"tindex":"24f3ea63-db57-11e4-a50b-bd69a5b7f5ec","variableMapping":{"obtained":"uTurnSupport"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[33,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,397,53,55,56,57,58,60,398,399,400,401,402,403,404,405,63,64,66,67,68,69,71,406,407,408,409,410,411,412,413,73,74,1,2,76,77,78,79,80,30,6,22,81,82,83,84,85,87,88,90,91,93,94,95,97,98,99,100,102,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"24f3ea64-db57-11e4-a50b-412cca372754","variableMapping":{"len":"indexDivisor","start":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"24f3ea65-db57-11e4-a50b-611900eac1b6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[414,28,180,12,183,184,29,14,16,17,120,121,18,19,122,123,124,31,185,126,127,128,129,20,186,21,23,130,24,91,92,93,94,97,98,100],"tindex":"24f3ea66-db57-11e4-a50b-5df3473c2e2d","variableMapping":{"edgeTo":"int1","edgeFrom":"int0"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-1},{"failures":[15,16,31,125,24],"tindex":"24f3ea67-db57-11e4-a50b-eb7d47d89bb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"24f3ea68-db57-11e4-a50b-8dfd2d258a59","variableMapping":{"len":"initialBits","start":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[357,415,416,417,418,358,374,375,379,419,420,366,421,422,423,424],"tindex":"24f3ea69-db57-11e4-a50b-7fc9903e6332","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"24f3ea6a-db57-11e4-a50b-6988422128e7","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"24f3ea6b-db57-11e4-a50b-f1b6b72bc1f8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"24f3ea6c-db57-11e4-a50b-cd56ebc2d76b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[143,151,152,156,37,160,189,191,192,395,193,194,195,197,198,270,57,199,200,202,203,299,68,204,8,205],"tindex":"24f3ea6d-db57-11e4-a50b-d7bef71767ff","variableMapping":{"size":"i","newSize":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[25,206,26,140,207,32,187,208,33,34,209,141,35,142,143,144,145,146,147,148,149,150,188,210,151,152,211,153,154,212,155,156,157,36,213,214,158,384,159,37,160,161,215,162,38,216,39,40,163,164,385,41,42,43,44,425,45,165,166,217,167,218,46,47,48,168,219,169,170,171,172,173,174,175,386,176,177,220,221,49,50,51,222,223,224,225,226,227,228,229,230,387,231,232,233,234,235,236,426,237,238,239,240,241,242,427,243,244,342,343,189,428,344,345,346,429,347,348,190,252,191,192,430,431,349,432,350,395,433,434,435,436,351,437,52,193,194,352,438,353,354,439,440,441,355,442,253,53,54,254,255,55,256,195,257,258,259,260,261,262,263,196,264,197,198,265,266,267,268,269,270,271,56,272,273,274,389,275,57,199,276,277,278,58,279,59,60,280,281,63,443,282,64,65,283,284,66,285,200,286,287,288,289,290,291,292,201,293,202,203,294,295,296,297,298,299,300,67,301,302,303,391,304,68,204,305,306,307,69,308,70,71,309,310,311,312,73,313,314,315,74,1,2,75,178,316,317,318,319,8,320,321,205,9,10,322,80,30,392,367,6,7,11,27,28,179,180,181,182,323,12,13,183,184,29,14,15,16,17,120,121,18,19,122,123,124,31,185,125,126,127,128,129,20,186,21,22,23,130,24,324,325,81,81,82,82,326,326,83,83,84,84,85,85,86,86,87,87,88,88,327,327,89,89,90,90,91,92,93,94,95,96,97,98,99,100,101,328,102,103,104,105,106,107,108,109,110,111,112,113,114,115,329,330,331,332],"tindex":"24f4117e-db57-11e4-a50b-f9372da6f20d","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[133,136],"tindex":"24f4117f-db57-11e4-a50b-1dd2f9e1a5e8","variableMapping":{"entry":"highway","entryVal":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"24f41180-db57-11e4-a50b-8b888303d9ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:405","type":"CtLocalVariableImpl","sourcecode":"gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = new gnu.trove.map.hash.TLongObjectHashMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>()"},"status":-2},{"failures":[132,109],"tindex":"24f41181-db57-11e4-a50b-9f2b6bcc3e18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:420","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry)"},"status":-1},{"failures":[],"tindex":"24f41182-db57-11e4-a50b-99214cd0b413","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[25,206,26,140,207,32,187,208,33,34,209,141,383,35,142,143,144,145,146,147,148,149,150,188,210,151,152,211,153,154,212,155,156,157,36,213,214,158,384,159,37,160,161,215,162,38,216,39,40,163,164,41,42,43,44,425,45,165,166,217,167,218,46,47,48,168,219,169,170,171,172,173,174,175,386,176,177,220,221,49,50,51,222,223,224,225,226,227,228,229,230,387,231,232,233,234,235,236,426,237,238,239,240,241,242,427,243,244,342,343,189,428,344,345,346,429,347,348,190,252,191,192,430,431,349,432,350,395,433,434,435,436,351,437,52,193,194,352,438,353,354,439,440,441,355,442,253,53,54,254,255,388,55,256,195,257,258,259,260,261,262,263,196,264,197,198,265,266,267,268,269,270,271,56,272,273,274,389,275,57,199,276,277,278,58,279,59,60,280,281,63,443,282,64,65,283,284,390,66,285,200,286,287,288,289,290,291,292,201,293,202,203,294,295,296,297,298,299,300,67,301,302,303,391,304,68,204,305,306,307,69,308,70,71,309,310,311,312,73,313,444,314,315,74,1,2,75,178,316,317,318,319,356,445,446,447,357,133,415,448,449,134,450,451,452,453,454,416,417,455,456,457,418,458,459,460,368,358,369,370,371,372,373,374,375,376,377,378,379,380,381,382,461,8,320,321,205,9,10,462,359,463,135,464,465,466,467,419,468,469,470,420,471,472,473,474,475,360,476,477,361,478,479,480,481,482,483,362,484,485,363,322,486,364,131,487,488,365,80,30,489,366,136,421,490,491,137,492,493,494,495,496,422,423,497,498,499,424,500,501,502,503,138,132,504,505,506,507,508,392,367,6,7,509,510,11,27,511,28,179,180,181,182,323,12,13,183,184,29,14,15,16,17,120,121,18,19,122,123,124,31,185,125,126,127,128,129,20,186,21,22,23,130,24,324,325,512,513,81,82,326,83,84,85,86,87,88,327,89,90,91,92,93,94,95,96,97,393,98,99,100,101,394,328,102,103,104,105,106,107,108,109,110,139,111,112,113,114,514,115,329,330,331,332,515],"tindex":"24f41183-db57-11e4-a50b-216aea6e8e8f","variableMapping":{"edgeId":"usedBits","nextEdge":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[],"tindex":"24f43894-db57-11e4-a50b-5939bf77fc12","variableMapping":{"heap":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[11,12,13,17,18,19,20,21,23],"tindex":"24f43895-db57-11e4-a50b-2b8a142d310c","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"24f43896-db57-11e4-a50b-9514b1b88dee","variableMapping":{"nodeB":"shift","edgeId":"shift","nodeA":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"24f43897-db57-11e4-a50b-65e740a0700d","variableMapping":{"keyIndex":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[],"tindex":"24f43898-db57-11e4-a50b-9f28e022bfe7","variableMapping":{"oldValueIndex":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"24f43899-db57-11e4-a50b-e7b3db02664a","variableMapping":{"type":"com.graphhopper.storage.DAType.RAM_INT_STORE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[],"tindex":"24f4389a-db57-11e4-a50b-8d2e7a0c2096","variableMapping":{"maxLat":"minLat","bounds":"com.graphhopper.util.shapes.BBox.INVERSE","lat":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:182","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"24f4389b-db57-11e4-a50b-6dfcf70e65ea","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"24f45fac-db57-11e4-a50b-a3afdbaed391","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"24f45fad-db57-11e4-a50b-7567eb41f5dc","variableMapping":{"com.graphhopper.util.Constants.VERSION_LOCATION_IDX":"wayType","com.graphhopper.util.Constants.VERSION_GEOMETRY":"wayType","com.graphhopper.util.Constants.VERSION_EDGE":"wayType","com.graphhopper.util.Constants.VERSION_NAME_IDX":"wayType","com.graphhopper.util.Constants.VERSION_NODE":"wayType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:67","type":"CtReturnImpl","sourcecode":"return ((((((((com.graphhopper.util.Constants.int) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[336,337,338,339,340,341],"tindex":"24f45fae-db57-11e4-a50b-27d44888283f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"24f45faf-db57-11e4-a50b-470d473850f1","variableMapping":{"c":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:228","type":"CtReturnImpl","sourcecode":"return int > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[516],"tindex":"24f45fb0-db57-11e4-a50b-2d5a2e93da47","variableMapping":{"segmentSizeInBytes":"minutes","indexDivisor":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[357,134,459,358,370,381,135,464,366,137,501],"tindex":"24f45fb1-db57-11e4-a50b-07440494786b","variableMapping":{"index":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":159,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":186,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":32,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":446,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":241,"com.graphhopper.GraphHopperAPITest.testNoLoad":515,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":343,"com.graphhopper.reader.OSMReaderTest.testFerry":102,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":318,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":319,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":449,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":47,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":92,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":0,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":164,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":499,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":502,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":201,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":469,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":180,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":434,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":264,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":217,"com.graphhopper.util.AngleCalcTest.testOrientation":3,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":398,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":183,"com.graphhopper.GraphHopperTest.testPrepare":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":439,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":11,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":415,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":31,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":74,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":385,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":470,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":317,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":141,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":167,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":135,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":123,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":50,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":134,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":63,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":14,"com.graphhopper.GraphHopperTest.testLoadOSM":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":227,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":51,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":506,"com.graphhopper.reader.OSMReaderTest.testSort":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":418,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":112,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":65,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":400,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":277,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":440,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":87,"com.graphhopper.routing.DijkstraTest.initializationError":512,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":307,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":335,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":384,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":261,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":206,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":511,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":443,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":66,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":188,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":382,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":169,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":127,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":166,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":168,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":393,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":18,"com.graphhopper.coll.OSMIDMapTest.testGetLong":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":121,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":143,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":300,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":212,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":414,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":33,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":156,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":5,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":271,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":358,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":293,"com.graphhopper.GraphHopperAPITest.testLoad":331,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":383,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":246,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":485,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":197,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":195,"com.graphhopper.storage.LevelGraphStorageTest.testClone":145,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":516,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":10,"com.graphhopper.reader.OSMReaderTest.testBarriers":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":285,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":165,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":492,"com.graphhopper.util.GHUtilityTest.testCopy":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":177,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":376,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":336,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":427,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":471,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":412,"com.graphhopper.routing.PathTest.testFindInstruction":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":467,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":200,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":178,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":487,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":216,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":240,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":421,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":278,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":305,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":311,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":182,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":295,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":497,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":504,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":513,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":147,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":346,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":251,"com.graphhopper.util.InstructionListTest.testWayList2":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":501,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":228,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":289,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":70,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":133,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":356,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":80,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":340,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":149,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":450,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":202,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":19,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":256,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":107,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":399,"com.graphhopper.routing.AStarTest.initializationError":509,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":22,"com.graphhopper.coll.OSMIDMapTest.testGet":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":292,"com.graphhopper.routing.PathBidirRefTest.testExtract":324,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":488,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":453,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":173,"com.graphhopper.storage.RAMDataAccessTest.testCopy":407,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":193,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":359,"com.graphhopper.storage.RAMDataAccessTest.testSegments":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":452,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":232,"com.graphhopper.util.GHUtilityTest.testSort2":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":128,"com.graphhopper.reader.OSMReaderTest.testMain":104,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":34,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":454,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":458,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":158,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":353,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":210,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":153,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":163,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":84,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":151,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":496,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":303,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":245,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":366,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":155,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":114,"com.graphhopper.storage.StorablePropertiesTest.testStore":62,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":72,"com.graphhopper.storage.GraphHopperStorageTest.testClone":258,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":438,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":480,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":265,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":478,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":380,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":429,"com.graphhopper.routing.PathTest.testTime":367,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":375,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":39,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":146,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":484,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":425,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":230,"com.graphhopper.reader.OSMReaderTest.testRelation":139,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":433,"com.graphhopper.util.GHUtilityTest.testSortDirected":314,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":334,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":424,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":404,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":83,"com.graphhopper.GraphHopperTest.testFootOnly":100,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":341,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":463,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":42,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":477,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":219,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":505,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":489,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":349,"com.graphhopper.search.NameIndexTest.testCreate":119,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":410,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":81,"com.graphhopper.routing.QueryGraphTest.testOneWay":327,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":387,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":466,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":49,"com.graphhopper.reader.OSMReaderTest.testWithBounds":113,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":413,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":500,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":308,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":320,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":435,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":138,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":142,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":209,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":498,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":472,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":302,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":238,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":296,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":55,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":16,"com.graphhopper.util.InstructionListTest.testWayList":1,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":279,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":451,"com.graphhopper.GraphHopperAPITest.testDisconnected179":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":347,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":391,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":428,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":422,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":330,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":355,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":456,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":95,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":260,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":43,"com.graphhopper.routing.util.EncodedValueTest.testSwap":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":184,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":274,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":447,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":125,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":508,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":13,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":481,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":372,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":457,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":130,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":388,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":386,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":460,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":253,"com.graphhopper.routing.PathTest.testWayList":6,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":191,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":476,"com.graphhopper.coll.OSMIDMapTest.testGet2":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":24,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":301,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":455,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":268,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":363,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":290,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":154,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":170,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":171,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":408,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":405,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":494,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":333,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":369,"com.graphhopper.util.GHUtilityTest.testSort":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":437,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":417,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":465,"com.graphhopper.search.NameIndexTest.testPut":117,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":390,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":218,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":242,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":45,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":235,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":491,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":30,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":233,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":282,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":371,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":445,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":297,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":8,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":250,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":52,"com.graphhopper.routing.PathTest.testFound":392,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":101,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":507,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":162,"com.graphhopper.util.AngleCalcTest.testAtan2":4,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":416,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":203,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":118,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":252,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":263,"com.graphhopper.util.InstructionListTest.testEmptyList":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":124,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":126,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":362,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":474,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":420,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":473,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":129,"com.graphhopper.reader.PrinctonReaderTest.testRead":329,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":58,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":48,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":291,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":342,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":298,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":468,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":495,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":397,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":132,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":374,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":136,"com.graphhopper.reader.OSMReaderTest.testFoot":103,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":351,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":225,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":462,"com.graphhopper.reader.OSMReaderTest.testOneWay":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":226,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":198,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":199,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":306,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":419,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":403,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":272,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":493,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":350,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":181,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":339,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":29,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":479,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":179,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":236,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":337,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":402,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":322,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":430,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":326,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":254,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":514,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":248,"com.graphhopper.routing.PathBidirRefTest.testExtract2":325,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":229,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":244,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":378,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":116,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":275,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":426,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":381,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":109,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":442,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":486,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":237,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":423,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":222,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":276,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":444,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":482,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":56,"com.graphhopper.GraphHopperTest.testFootAndCar":96,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":152,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":370,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":176,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":344,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":503,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":483,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":21,"com.graphhopper.GraphHopperTest.testPrepareOnly":91,"com.graphhopper.GraphHopperTest.testVia":93,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":243,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":459,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":189,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":111,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":207,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":75,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":389,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":364,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":432,"com.graphhopper.routing.AStarBidirectionTest.initializationError":510,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":461,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":215,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":160,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":64}}]
