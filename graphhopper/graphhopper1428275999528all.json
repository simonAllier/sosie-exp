[{"failures":[],"tindex":"47d1cf37-dbea-11e4-9a05-977ae4e9a690","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:342","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"47d32ec8-dbea-11e4-9a05-bba673cd4dbc","variableMapping":{"bits":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-2},{"failures":[],"tindex":"47d32ec9-dbea-11e4-9a05-69e7613da25d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[],"tindex":"47d32eca-dbea-11e4-9a05-1f0176a8f8d1","variableMapping":{"calcMean":"blockFords","eleCalcMean":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:75","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"47d32ecb-dbea-11e4-9a05-2321eb2eb8a0","variableMapping":{"graphHopperFolder":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":0},{"failures":[0,1,2],"tindex":"47d32ecc-dbea-11e4-9a05-ddd470c3b7ba","variableMapping":{"fromNode":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"47d32ecd-dbea-11e4-9a05-cb2d85862a12","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:149","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"47d32ece-dbea-11e4-9a05-53f43e0f91a6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"47d32ecf-dbea-11e4-9a05-4df25d782685","variableMapping":{"pushingSections":"pushingSections","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"47d32ed0-dbea-11e4-9a05-afadfb395b3c","variableMapping":{"relationCodeEncoder":"wayTypeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[3,4,5,6],"tindex":"47d32ed1-dbea-11e4-9a05-e933f22f41f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"47d32ed2-dbea-11e4-9a05-cde603fb8596","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[7],"tindex":"47d32ed3-dbea-11e4-9a05-1119d90c96f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[],"tindex":"47d32ed4-dbea-11e4-9a05-57277539ede4","variableMapping":{"ghLocation":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"47d32ed5-dbea-11e4-9a05-f317d62c2314","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[],"tindex":"47d32ed6-dbea-11e4-9a05-33c78f7f1662","variableMapping":{"costs":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:612","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"47d355e7-dbea-11e4-9a05-1d84c5550f29","variableMapping":{"i":"locs","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"locs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"47d355e8-dbea-11e4-9a05-a1d9cab5ba33","variableMapping":{"res":"flags","value":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":0},{"failures":[],"tindex":"47d355e9-dbea-11e4-9a05-9becb89ce6ff","variableMapping":{"daType":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:121","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[8,9,10,11,12],"tindex":"47d3a40a-dbea-11e4-9a05-273f15c2753b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[13,14,8,15,16,17,18,19,20,9,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,10,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,11,74,75,12],"tindex":"47d3a40b-dbea-11e4-9a05-335ba2727838","variableMapping":{"index":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"47d3a40c-dbea-11e4-9a05-a196e567c1f6","variableMapping":{"radiusInMeter":"minLon","com.graphhopper.util.DistanceCalcEarth.C":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:112","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[76],"tindex":"47d3a40d-dbea-11e4-9a05-dfdd98a8bc51","variableMapping":{"algo":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"47d3cb1e-dbea-11e4-9a05-a385c7842f6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[77,78,76,79,80,81,82,83,84],"tindex":"47d3cb1f-dbea-11e4-9a05-c986607aeebb","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[33,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,72,73],"tindex":"47d3cb20-dbea-11e4-9a05-b9a7361af94f","variableMapping":{"originalEdgesCount":"key","edgeDifference":"key","contractedNeighbors":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-1},{"failures":[],"tindex":"47d3cb21-dbea-11e4-9a05-4f1d8fc731ff","variableMapping":{"key":"location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[],"tindex":"47d3cb22-dbea-11e4-9a05-5331d3386b9c","variableMapping":{"size":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[114,115,116,117,118,119,120],"tindex":"47d3cb23-dbea-11e4-9a05-55687975a41f","variableMapping":{"includeWay":"millis"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:347","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[13,14,8,15,16,17,18,19,20,9,21,121,122,123,22,23,24,25,26,27,28,29,30,31,32,124,33,125,126,127,128,129,130,131,132,133,134,135,136,137,138,36,37,139,140,141,142,143,144,145,146,147,148,149,150,151,152,38,39,40,153,41,42,154,43,44,45,46,155,47,156,48,49,50,51,52,53,54,10,55,157,56,158,57,58,59,60,159,61,160,62,63,64,65,66,67,68,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,92,177,178,179,180,181,182,183,184,185,186,93,187,94,188,189,190,95,96,191,192,193,194,195,196,97,98,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,99,213,214,215,216,217,218,219,220,221,222,100,223,101,224,225,226,102,103,227,228,229,230,231,232,104,105,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,106,250,251,252,253,254,255,256,257,258,259,107,260,108,261,262,263,109,110,264,265,266,267,268,269,111,112,270,271,272,273,274,275,276,277,278,69,70,279,113,71,72,73,280,281,282,283,284,285,286,287,114,115,288,289,290,291,116,292,293,11,294,295,296,74,75,297,298,12,299,300,117,118,301,119,302,303,304,305,306,307,308,309,310,311,312,313,314,120,315,316,317,318,319,320,321,322,323,324,325,326],"tindex":"47d3f234-dbea-11e4-9a05-4dba2a822525","variableMapping":{"start":"segmentsToCreate","delta":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"47d3f235-dbea-11e4-9a05-6736c81a1984","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"47d3f236-dbea-11e4-9a05-bdea8b719e05","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[13,15,16,18,20,9,23,25,26,27,28,29,32,327,328,329,330,331,332,333,334,136,137,335,336,140,90,337,338,339,340,341,342,343,344,43,45,57,59,161,163,345,346,347,348,349,350,351,352,353,171,175,191,97,200,207,211,227,104,236,242,244,248,264,111,273,354,286,117,316,319,320,322,323,326],"tindex":"47d41947-dbea-11e4-9a05-53c28c2742c3","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"47d41948-dbea-11e4-9a05-218e630a383d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:277","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"))"},"status":-2},{"failures":[],"tindex":"47d41949-dbea-11e4-9a05-4bbc8f2c5539","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-2},{"failures":[121,122,127,131,355,85,356,357,358,359,360,171,176,92,183,188,194,197,204,207,212,99,219,224,230,233,240,242,244,249,106,256,261,267,270,277,69,361,113,280,281,362,363,114,294,295,75,119,304,305,310,312,120,319],"tindex":"47d4194a-dbea-11e4-9a05-19d98081fb7a","variableMapping":{"high":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-1},{"failures":[],"tindex":"47d4194b-dbea-11e4-9a05-a99958e5f00f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:625","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[13,18,19,20,21,168,171,207,242,244,364,365],"tindex":"47d4194c-dbea-11e4-9a05-4135a6ea3e70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-1},{"failures":[],"tindex":"47d4194d-dbea-11e4-9a05-a382a1e5615c","variableMapping":{"dist":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[366],"tindex":"47d4194e-dbea-11e4-9a05-b30d5ab7571c","variableMapping":{"maxLeafEntries":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"47d4194f-dbea-11e4-9a05-cdeed4b3bc1d","variableMapping":{"shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[13,14,8,15,16,17,18,367,19,20,9,21,368,121,122,123,22,23,24,25,26,27,28,29,77,30,31,32,124,369,33,125,370,370,371,371,372,373,374,327,328,329,330,331,126,127,128,129,130,131,132,133,134,135,136,137,138,36,37,375,376,377,378,335,355,85,379,380,381,382,383,384,356,385,139,386,86,387,87,357,388,389,88,89,336,390,391,358,392,140,90,91,359,393,394,337,395,396,397,360,398,141,142,143,144,399,145,146,147,148,149,150,400,151,152,401,38,39,40,153,402,41,42,154,43,44,45,46,155,47,156,48,49,50,51,52,403,53,54,10,55,157,56,158,57,58,59,60,159,61,160,62,63,64,65,66,404,67,68,405,406,407,408,409,410,164,411,165,166,167,168,169,170,171,172,173,174,412,175,176,92,177,178,179,180,181,182,183,184,185,186,93,187,94,188,189,190,95,96,191,192,193,194,195,196,97,98,197,198,199,200,201,202,203,204,205,206,207,208,209,210,413,211,212,99,213,214,215,216,217,218,219,220,221,222,100,223,101,224,225,226,102,103,227,228,229,230,231,232,104,105,233,234,235,236,237,238,239,240,241,242,414,243,244,245,246,247,415,248,249,106,250,251,252,253,254,255,256,257,258,259,107,260,108,261,262,263,109,110,264,265,266,267,268,269,111,112,270,271,272,273,274,275,276,277,278,364,416,365,69,70,279,113,71,72,73,280,281,282,283,284,285,417,418,286,287,114,115,288,289,290,291,116,292,293,11,294,295,296,74,75,297,298,12,299,300,117,118,301,119,302,303,304,305,306,307,308,309,310,311,312,313,314,120,315,315,316,316,317,317,318,318,319,319,320,320,321,321,322,322,323,323,324,324,325,325,326,326],"tindex":"47d44060-dbea-11e4-9a05-51f653e31fea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[8,15,16,17,18,20,9,121,122,123,22,23,25,28,29,30,31,32,33,126,127,138,335,355,85,356,139,358,359,337,360,171,175,176,92,183,185,194,197,200,204,207,211,212,99,219,221,230,233,236,240,242,244,248,249,106,256,258,267,270,273,277,69,419,113,280,281,420,7,421,422,363,423,424,425,426,427,114,115,291,293,295,74,75,119,302,304,305,310,311,312,120,319,322],"tindex":"47d44061-dbea-11e4-9a05-cf0a0c80870c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[13,14,8,15,16,17,18,367,19,20,9,21,368,121,122,123,22,23,24,25,26,27,28,29,77,30,31,32,124,369,33,125,370,371,372,373,374,327,328,329,330,331,126,127,128,129,130,131,132,133,134,135,136,137,138,36,37,375,376,377,378,335,355,85,379,380,381,382,383,384,356,385,139,386,86,387,87,357,388,389,88,89,336,390,391,358,392,140,90,91,359,393,394,337,395,396,397,360,398,141,142,143,144,399,145,146,147,148,149,150,400,151,152,401,38,39,40,153,402,41,42,154,43,44,45,46,155,47,156,48,49,50,51,52,403,53,54,10,55,157,56,158,57,58,59,60,159,61,160,62,63,64,65,66,404,67,68,406,407,409,410,164,411,165,166,167,168,169,170,171,172,173,174,412,175,176,92,177,178,179,180,181,182,183,184,185,186,93,187,94,188,189,190,95,96,191,192,193,194,195,196,97,98,197,198,199,200,201,202,203,204,205,206,207,208,209,210,413,211,212,99,213,214,215,216,217,218,219,220,221,222,100,223,101,224,225,226,102,103,227,228,229,230,231,232,104,105,233,234,235,236,237,238,239,240,241,242,414,243,244,245,246,247,415,248,249,106,250,251,252,253,254,255,256,257,258,259,107,260,108,261,262,263,109,110,264,265,266,267,268,269,111,112,270,271,272,273,274,275,276,277,278,364,416,365,69,70,279,113,71,72,73,280,281,282,283,284,285,417,418,286,287,114,115,288,289,290,291,116,292,293,11,294,295,296,74,75,297,298,12,299,300,117,118,301,119,302,303,304,305,306,307,308,309,310,311,312,313,314,120,315,315,316,316,317,317,318,318,319,319,320,320,321,321,322,322,323,323,324,324,325,325,326,326],"tindex":"47d46772-dbea-11e4-9a05-4f6c99fb27c1","variableMapping":{"type":"defaultType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[17,335,355,85,379,380,381,382,383,384,356,385,139,386,86,387,87,357,388,389,88,89,336,390,391,358,392,140,90,91,359,393,394,337,395,396,397,360,398,146,152,54,68,164,411,165,166,167,168,169,170,171,172,173,174,412,175,176,92,177,178,179,180,181,182,183,184,185,186,93,187,94,188,189,190,95,96,191,192,193,194,195,196,97,98,197,198,199,200,201,202,203,204,205,206,207,208,209,210,413,211,212,99,213,214,215,216,217,218,219,220,221,222,100,223,101,224,225,226,102,103,227,228,229,230,231,232,104,105,233,234,235,236,237,238,239,240,241,242,414,243,244,245,246,247,415,248,249,106,250,251,252,253,254,255,256,257,258,259,107,260,108,261,262,263,109,110,264,265,266,267,268,269,111,112,270,271,272,273,274,275,276,277,278,419,428,279,429,430,431,432,433,361,434,420,435,436,7,421,437,362,438,439,422,440,441,442,363,443,3,444,445,78,4,446,447,76,448,427,449,366,114,115,288,289,290,291,116,292,293,11,294,295,296,74,75,297,298,12,299,300,117,118,301,119],"tindex":"47d46773-dbea-11e4-9a05-4fe5e23cdbc4","variableMapping":{"encoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"47d46774-dbea-11e4-9a05-cffcf60f1cf5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[436],"tindex":"47d48e85-dbea-11e4-9a05-ff2ded69aa64","variableMapping":{"graphHopperFolder":"highwayValue","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:655","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalStateException(\"graphHopperLocation is not specified. call init before\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"47d48e86-dbea-11e4-9a05-7bee9fc7cfb2","variableMapping":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"value","valueIfKeyNotFound":"length","i":"value","mValues":"mValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-2},{"failures":[],"tindex":"47d48e87-dbea-11e4-9a05-d53ea1e25b56","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"47d48e88-dbea-11e4-9a05-1b5464b9bc8b","variableMapping":{"defaultType":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"47d48e89-dbea-11e4-9a05-7d78b6e99b04","variableMapping":{"pointer":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":0},{"failures":[445,78,450,76,451,452,453,454,455],"tindex":"47d48e8a-dbea-11e4-9a05-29d892139908","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[],"tindex":"47d48e8b-dbea-11e4-9a05-5172c5a3eec9","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"47d48e8c-dbea-11e4-9a05-275c5c0859a8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[33,456,169,92,184,186,93,95,97,98,99,220,222,100,102,104,105,106,257,259,107,109,111,112,72,73],"tindex":"47d48e8d-dbea-11e4-9a05-91d758541d9f","variableMapping":{"segmentCount":"remainingSegments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:163","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[int][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[121,122,125,127,128,129,130,131,132,133,135,136,137,138,36,37,335,355,85,379,380,381,383,356,386,86,387,87,357,388,389,88,89,391,358,140,90,91,359,394,396,397,360,398,141,142,143,144,145,146,147,148,149,150,151,152,38,39,40,153,41,42,154,43,44,45,46,155,47,156,48,49,50,51,52,53,54,10,55,56,158,57,58,59,60,159,61,160,62,63,64,65,66,67,68,164,166,170,171,174,175,176,92,177,178,179,181,183,186,93,187,94,188,189,190,95,96,193,194,196,97,98,197,199,202,203,204,205,206,207,210,211,212,99,213,214,215,217,219,222,100,223,101,224,225,226,102,103,229,230,232,104,105,233,235,238,239,240,241,242,414,243,244,247,248,249,106,250,251,252,254,256,259,107,260,108,261,262,263,109,110,266,267,269,111,112,270,272,275,276,277,278,69,70,113,71,72,73,280,281,284,285,114,288,289,290,291,116,292,293,11,294,295,75,297,298,12,299,300,117,118,301,119,303,304,305,306,307,308,309,310,312,313,314,120,315,316,318,319,320,321,322,323,324,325,326],"tindex":"47d48e8e-dbea-11e4-9a05-31b761695abe","variableMapping":{"fullyLoaded":"forward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1079","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"47d48e8f-dbea-11e4-9a05-27f477b05357","variableMapping":{"str":"str","key":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-2},{"failures":[17,9,22,33,429,432,366],"tindex":"47d48e90-dbea-11e4-9a05-47dc041b0932","variableMapping":{"i":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"47d48e91-dbea-11e4-9a05-e94a473e0278","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"47d48e92-dbea-11e4-9a05-2d9c2a39816e","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[],"tindex":"47d4b5a3-dbea-11e4-9a05-31d0ced1087e","variableMapping":{"nodeB":"shift","edgeId":"shift","nodeA":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[116,300,118],"tindex":"47d4b5a4-dbea-11e4-9a05-6fe9eb6e4bf4","variableMapping":{"size":"i","hash":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"47d4b5a5-dbea-11e4-9a05-23944c39be75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[],"tindex":"47d4b5a6-dbea-11e4-9a05-17e9b7873dc2","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":0},{"failures":[],"tindex":"47d4b5a7-dbea-11e4-9a05-3db958ba0161","variableMapping":{"unpavedBit":"flags","shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-2},{"failures":[436],"tindex":"47d4b5a8-dbea-11e4-9a05-b1b2dc218638","variableMapping":{"sacScale":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"47d4b5a9-dbea-11e4-9a05-81556715703d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"47d4b5aa-dbea-11e4-9a05-5d1029433ca9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[76,457,458],"tindex":"47d4b5ab-dbea-11e4-9a05-790902d4b3a7","variableMapping":{"size":"speed","newSize":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[8,15,16,17,18,20,9,69,70,114,115,288,289,290,291,116,292,293,11,294,295,296,74,75,297,298,12,299,300,117,118,301,119,302,304,310,311,120],"tindex":"47d4b5ac-dbea-11e4-9a05-1b6a5618e85d","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"from","edgeTo":"from","edgeFrom":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[439,459,460],"tindex":"47d4b5ad-dbea-11e4-9a05-8ffc64644ba5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-1},{"failures":[],"tindex":"47d4b5ae-dbea-11e4-9a05-35baa7e1088b","variableMapping":{"silent":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"47d4b5af-dbea-11e4-9a05-614c88264683","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:48","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"initial size or increasing grow-factor too low!\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"47d4b5b0-dbea-11e4-9a05-a10e600cc7ab","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[],"tindex":"47d4b5b1-dbea-11e4-9a05-dd68f93ba535","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"47d4b5b2-dbea-11e4-9a05-b18ae89b4a3e","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[28,442,461,462,463],"tindex":"47d4b5b3-dbea-11e4-9a05-cd422c512522","variableMapping":{"factor":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[464,457,79,465,452,466,80,461,5,425,467,468,469,470,471,472,453,473,474,475,476,282,283,477,458,81,478,454,479,82,462,6,426,480,481,482,483,484,485,455,486,487,488,489,427],"tindex":"47d4b5b4-dbea-11e4-9a05-5babfd86c11d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[490,491],"tindex":"47d4dcc5-dbea-11e4-9a05-93fd960aca15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:152","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[283],"tindex":"47d4dcc6-dbea-11e4-9a05-cb483166998b","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[13,14,8,15,16,17,18,19,20,9,21,121,122,123,22,23,24,25,26,27,28,29,30,31,32,124,33,125,126,127,128,129,130,131,132,133,134,135,136,137,138,36,37,139,140,141,142,143,144,145,146,147,148,149,150,151,152,38,39,40,153,41,42,154,43,44,45,46,155,47,156,48,49,50,51,52,53,54,10,55,157,56,158,57,58,59,60,159,61,160,62,63,64,65,66,67,68,492,493,494,161,495,162,496,456,163,345,346,164,411,165,166,167,168,169,170,171,172,173,174,175,176,92,177,178,179,180,181,182,183,184,185,186,93,187,94,188,189,190,95,96,191,192,193,194,195,196,97,98,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,99,213,214,215,216,217,218,219,220,221,222,100,223,101,224,225,226,102,103,227,228,229,230,231,232,104,105,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,106,250,251,252,253,254,255,256,257,258,259,107,260,108,261,262,263,109,110,264,265,266,267,268,269,111,112,270,271,272,273,274,275,276,277,278,69,70,279,113,71,72,73,280,281,282,283,284,285,286,287,114,115,288,289,290,291,116,292,293,11,294,295,296,74,75,297,298,12,299,300,117,118,301,119,302,303,304,305,306,307,308,309,310,311,312,313,314,120,315,316,317,318,319,320,321,322,323,324,325,326],"tindex":"47d4dcc7-dbea-11e4-9a05-5964af255206","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"47d4dcc8-dbea-11e4-9a05-474367a784dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[445,78,450,76,451,452,80,453,454,82,455],"tindex":"47d4dcc9-dbea-11e4-9a05-09cdc4d17754","variableMapping":{"flags2":"unpavedBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags","flags1":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[127,128,130,132,36,37,38,39,40,41,72,73],"tindex":"47d4dcca-dbea-11e4-9a05-2363f910a234","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"47d4dccb-dbea-11e4-9a05-7db22be594a6","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"47d4dccc-dbea-11e4-9a05-afba8edddce2","variableMapping":{"pointIndex":"usedBits","index":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[283],"tindex":"47d4dccd-dbea-11e4-9a05-e7fa5c698b8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"47d4dcce-dbea-11e4-9a05-a124f4ac2ad3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[304,306,308,310,312,314],"tindex":"47d4dccf-dbea-11e4-9a05-350926d29ce7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-1},{"failures":[13,8,15,16,17,18,19,20,9,21,22,23,24,25,26,27,28,29,30,31,32,33,72],"tindex":"47d4dcd0-dbea-11e4-9a05-e7a5e0d64f44","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[497,448,475,488],"tindex":"47d503e1-dbea-11e4-9a05-5561cb490c65","variableMapping":{"importance":"speed","hash":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[498],"tindex":"47d503e2-dbea-11e4-9a05-416bb2af8798","variableMapping":{"pavementName":"valueStr","wayTypeName":"valueStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"47d503e3-dbea-11e4-9a05-156b049431c1","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[113,280,281],"tindex":"47d503e4-dbea-11e4-9a05-2db5014092bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"47d503e5-dbea-11e4-9a05-09b0c3df6fce","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:90","type":"CtLocalVariableImpl","sourcecode":"int int = (java.lang.String.length()) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[164,115,291,119,304,310,312,120],"tindex":"47d503e6-dbea-11e4-9a05-0b2bc323e4f1","variableMapping":{"time":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:136","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[8,156,160,171,207,242,244],"tindex":"47d52af7-dbea-11e4-9a05-0737b5aa386a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-1},{"failures":[283],"tindex":"47d52af8-dbea-11e4-9a05-5b275c6dabb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[13,14,8,15,16,17,18,19,20,9,21,123,22,23,24,25,26,27,28,29,30,31,32,124,33,327,328,330,331,131,135,136,137,138,375,376,377,378,140,499,38,39,40,153,41,43,44,45,57,58,59,500,168,171,172,175,191,97,200,202,203,207,208,211,227,104,236,238,239,242,244,245,248,264,111,273,275,276,364,282,283,286,287,117,315,316,318,319,320,321,322,323,325,326],"tindex":"47d52af9-dbea-11e4-9a05-bfcf2c0f7990","variableMapping":{"start":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"47d52afa-dbea-11e4-9a05-6fc39d4479f1","variableMapping":{"distance":"lat","speed":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:140","type":"CtReturnImpl","sourcecode":"return com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":299,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":316,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":168,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":460,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":355,"com.graphhopper.reader.OSMReaderTest.testFerry":123,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":127,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":466,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":448,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":58,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":14,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":205,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":455,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":489,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":257,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":371,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":239,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":336,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":312,"com.graphhopper.GraphHopperTest.testPrepare":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":395,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":302,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":465,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":294,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":401,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":451,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":37,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":174,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":56,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":280,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":457,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":493,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":288,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":44,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":80,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":242,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":175,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":120,"com.graphhopper.GraphHopperTest.testLoadOSM":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":49,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":495,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":45,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":449,"com.graphhopper.reader.OSMReaderTest.testSort":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":473,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":245,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":339,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":234,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":396,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":322,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":272,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":354,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":195,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":217,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":414,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":454,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":61,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":101,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":75,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":60,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":291,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":290,"com.graphhopper.coll.OSMIDMapTest.testGetLong":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":260,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":250,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":189,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":171,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":95,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":444,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":258,"com.graphhopper.GraphHopperAPITest.testLoad":69,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":412,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":161,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":419,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":222,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":99,"com.graphhopper.storage.LevelGraphStorageTest.testClone":178,"com.graphhopper.reader.OSMReaderTest.testBarriers":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":249,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":281,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":462,"com.graphhopper.util.GHUtilityTest.testCopy":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":68,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":400,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":352,"com.graphhopper.routing.PathTest.testFindInstruction":287,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":192,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":106,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":126,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":432,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":201,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":478,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":235,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":224,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":108,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":308,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":484,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":180,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":382,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":346,"com.graphhopper.util.InstructionListTest.testWayList2":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":488,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":359,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":50,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":452,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":365,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":275,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":282,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":182,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":499,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":461,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":87,"com.graphhopper.storage.RAMDirectoryTest.testSynched":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":259,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":116,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":212,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":26,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":117,"com.graphhopper.coll.OSMIDMapTest.testGet":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":256,"com.graphhopper.routing.PathBidirRefTest.testExtract":284,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":433,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":191,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":467,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":64,"com.graphhopper.storage.RAMDataAccessTest.testCopy":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":90,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":446,"com.graphhopper.storage.RAMDataAccessTest.testSegments":351,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":425,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":54,"com.graphhopper.util.GHUtilityTest.testSort2":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":297,"com.graphhopper.reader.OSMReaderTest.testMain":23,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":172,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":468,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":474,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":194,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":394,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":185,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":34,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":94,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":204,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":186,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":267,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":458,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":494,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":190,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":124,"com.graphhopper.storage.StorablePropertiesTest.testStore":364,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":500,"com.graphhopper.storage.GraphHopperStorageTest.testClone":214,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":393,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":422,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":409,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":223,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":438,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":164,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":383,"com.graphhopper.routing.PathTest.testTime":418,"com.graphhopper.util.BitUtilLittleTest.testToFloat":333,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":202,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":179,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":443,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":52,"com.graphhopper.reader.OSMReaderTest.testRelation":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":89,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":193,"com.graphhopper.util.GHUtilityTest.testSortDirected":133,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":491,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":486,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":343,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":318,"com.graphhopper.GraphHopperTest.testFootOnly":9,"com.graphhopper.util.BitUtilLittleTest.testToInt":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":447,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":39,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":437,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":410,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":159,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":289,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":477,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":357,"com.graphhopper.search.NameIndexTest.testCreate":378,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":350,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":315,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":496,"com.graphhopper.routing.QueryGraphTest.testOneWay":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":403,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":43,"com.graphhopper.reader.OSMReaderTest.testWithBounds":32,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":487,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":274,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":320,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":390,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":83,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":176,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":485,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":266,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":146,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":261,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":211,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":115,"com.graphhopper.util.BitUtilLittleTest.testToBitString":332,"com.graphhopper.util.InstructionListTest.testWayList":136,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":5,"com.graphhopper.GraphHopperAPITest.testDisconnected179":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":384,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":268,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":379,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":482,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":88,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":492,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":360,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":472,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":16,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":216,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":313,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":230,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":464,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":296,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":311,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":200,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":440,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":453,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":301,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":413,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":404,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":162,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":476,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":206,"com.graphhopper.routing.PathTest.testWayList":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":421,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":459,"com.graphhopper.coll.OSMIDMapTest.testGet2":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":119,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":197,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":372,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":471,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":225,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":428,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":254,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":160,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":188,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":62,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":348,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":344,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":63,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":426,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":490,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":445,"com.graphhopper.util.GHUtilityTest.testSort":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":392,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":424,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":470,"com.graphhopper.search.NameIndexTest.testPut":376,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":415,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":150,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":158,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":41,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":143,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":479,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":321,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":141,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":283,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":243,"com.graphhopper.storage.MMapDirectoryTest.testSynched":405,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":423,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":373,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":431,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":262,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":113,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":345,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":140,"com.graphhopper.routing.PathTest.testFound":417,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":21,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":366,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":199,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":498,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":165,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":469,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":107,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":377,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":139,"com.graphhopper.util.InstructionListTest.testEmptyList":134,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":11,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":363,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":435,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":420,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":298,"com.graphhopper.reader.PrinctonReaderTest.testRead":121,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":236,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":59,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":255,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":335,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":263,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":480,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":463,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":81,"com.graphhopper.reader.OSMReaderTest.testFoot":22,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":358,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":156,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":203,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":4,"com.graphhopper.reader.OSMReaderTest.testOneWay":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":48,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":100,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":105,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":271,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":342,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":6,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":389,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":314,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":439,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":305,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":341,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":279,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":387,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":317,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":209,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":369,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":407,"com.graphhopper.routing.PathBidirRefTest.testExtract2":285,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":456,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":51,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":152,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":450,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":375,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":232,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":399,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":497,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":398,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":429,"com.graphhopper.util.SimpleIntDequeTest.testPush":35,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":310,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":483,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":46,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":233,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":181,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":441,"com.graphhopper.GraphHopperTest.testFootAndCar":17,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":227,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":93,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":78,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":67,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":380,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":427,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":442,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":251,"com.graphhopper.storage.StorablePropertiesTest.testLoad":416,"com.graphhopper.GraphHopperTest.testPrepareOnly":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":300,"com.graphhopper.GraphHopperTest.testVia":8,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":85,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":30,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":167,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":138,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":231,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":430,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":388,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":434,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":198,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":98,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":244}}]
