[{"failures":[],"tindex":"972aa0df-dad5-11e4-9e34-738051567388","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[],"tindex":"972c4e90-dad5-11e4-9e34-43fdcc98bc5d","variableMapping":{"bit":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"972c4e91-dad5-11e4-9e34-99e9ba0e8184","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[],"tindex":"972c4e92-dad5-11e4-9e34-bdacfffa02d9","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[62,63,64,65,46,47,66,67,68,69,70,71,72,51],"tindex":"972c4e93-dad5-11e4-9e34-9348dea5963d","variableMapping":{"store":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"972c75a4-dad5-11e4-9e34-b12e5227a054","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:132","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"972c75a5-dad5-11e4-9e34-f7264031e044","variableMapping":{"name":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"972c75a6-dad5-11e4-9e34-7722d3566848","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"972c75a7-dad5-11e4-9e34-7f04d61e1ed5","variableMapping":{"resultOrientation":"minLat","orientation":"java.lang.Double.MAX_VALUE","java.lang.Math.PI":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"972c75a8-dad5-11e4-9e34-b749db1702ad","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":0},{"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,1,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,2,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,3,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,4,280,281,282,283,284,285,286,287,288,289,290,291,292,34,45,293,62,294,295,296,297,298,299,300,63,64,301,302,303,65,46,47,66,304,305,67,68,306,307,308,48,309,49,50,310,311,312,69,313,70,71,72,314,51,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,52,53,54,55,56,331,57,58,332,333,59,334,335,336,337,338,339,340,341,342,343,344,60,345,346,347,61,348],"tindex":"972c75a9-dad5-11e4-9e34-65ee96bc78fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[349,130,136,138,139,146,152,154,155,350,351,352,353,354,355,356,357,358,359],"tindex":"972c75aa-dad5-11e4-9e34-c12daefc519e","variableMapping":{"shift":"hash","tmpValue":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"972c75ab-dad5-11e4-9e34-8dc8ec25d7d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[360],"tindex":"972c9cbc-dad5-11e4-9e34-5fa2de598681","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"972c9cbd-dad5-11e4-9e34-637fe151fee5","variableMapping":{"this":"this","speed":"speed","encoded":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:90","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":0},{"failures":[],"tindex":"972c9cbe-dad5-11e4-9e34-4d0b04e95043","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"972c9cbf-dad5-11e4-9e34-e9e4c962b073","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[361,362,363,364,365,366,337,342],"tindex":"972c9cc0-dad5-11e4-9e34-f32005d4c646","variableMapping":{"sacScale":"res"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"972c9cc1-dad5-11e4-9e34-39ef4e95a6fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[287,288,345],"tindex":"972c9cc2-dad5-11e4-9e34-e71ed8dfa707","variableMapping":{"node":"maxCount","onStack":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[367,20,368,21,369,363,370,371,372,373,374,375,22,376,23],"tindex":"972c9cc3-dad5-11e4-9e34-176330a42344","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"972c9cc4-dad5-11e4-9e34-cff0d44bdf1e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"972c9cc5-dad5-11e4-9e34-3f324666399b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"status":-2},{"failures":[65,46,47,71,72,51],"tindex":"972c9cc6-dad5-11e4-9e34-9143afacf7fd","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[62,63,64,66,67,68,69,70,72],"tindex":"972c9cc7-dad5-11e4-9e34-e9bf593cbb9d","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"972c9cc8-dad5-11e4-9e34-7fcdaff79000","variableMapping":{"from":"del","end":"del"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[377,378,10,379,11,12,380,381,382,14,383,16,384,385,18,20,21,371,375,23,386,30,32,36,387,37,38,388,389,390,40,41,391,42,43,55,58,334,340,392],"tindex":"972cc3d9-dad5-11e4-9e34-2d7d7fcec116","variableMapping":{"size":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[73,74,75,76,77,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,0,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,181,182,183,184,1,185,186,187,190,191,192,193,194,195,196,197,198,199,200,201,2,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,3,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,4,280,281,282,283,284,285,286,287,288,289,290,291,292,34,45,293,62,294,295,296,297,298,299,300,63,64,301,302,303,65,46,47,66,304,305,67,68,306,307,308,48,309,49,50,310,311,312,69,313,70,71,72,314,51,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,52,53,54,55,56,331,57,58,332,333,59,334,335,336,337,338,339,340,341,342,343,344,60,345,346,347,61,348],"tindex":"972cc3da-dad5-11e4-9e34-6da95edb9f93","variableMapping":{"shift":"bytePos","flags":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"972cc3db-dad5-11e4-9e34-2b79aad3ae98","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"972cc3dc-dad5-11e4-9e34-173d99d14900","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-2},{"failures":[],"tindex":"972cc3dd-dad5-11e4-9e34-b3308cf9021c","variableMapping":{"orientation":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","resultOrientation":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","baseOrientation":"weight","java.lang.Math.PI":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"972cc3de-dad5-11e4-9e34-835cce03ae4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[393,394,395],"tindex":"972cc3df-dad5-11e4-9e34-77fe23fb20c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"972cc3e0-dad5-11e4-9e34-3fe2ca49b786","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"972cc3e1-dad5-11e4-9e34-9f21b30e5b11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":0},{"failures":[396],"tindex":"972cc3e2-dad5-11e4-9e34-db79d9cde128","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[397,398,376,25,399,400,401],"tindex":"972cc3e3-dad5-11e4-9e34-1916d3a989db","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"972cc3e4-dad5-11e4-9e34-27ae940eaf0a","variableMapping":{"nodesContracted":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":0},{"failures":[],"tindex":"972cc3e5-dad5-11e4-9e34-b33beedbf5b2","variableMapping":{"segmentSizeInBytes":"prevConnectedId","indexDivisor":"prevConnectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[],"tindex":"972cc3e6-dad5-11e4-9e34-b1a5c55d06d9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[285,289],"tindex":"972ceaf7-dad5-11e4-9e34-01ed07008b24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[402,403],"tindex":"972ceaf8-dad5-11e4-9e34-9d3bd7b5d79f","variableMapping":{"empty":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"972ceaf9-dad5-11e4-9e34-67e94beb07c6","variableMapping":{"type":"defaultType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":0},{"failures":[404,59],"tindex":"972ceafa-dad5-11e4-9e34-bbe73f2ac0a8","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[],"tindex":"972ceafb-dad5-11e4-9e34-ef17a67ac65c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[11,12,16,20,21,37,38],"tindex":"972ceafc-dad5-11e4-9e34-f9cf8e128938","variableMapping":{"tmpDegreeCounter":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"972ceafd-dad5-11e4-9e34-8144d74c4cc1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"972ceafe-dad5-11e4-9e34-7b3b880e0b79","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[287,329,52,53,54,55,56,331,57,58,332,334,335,336,337,338,339,340,341,342,343,344,345],"tindex":"972ceaff-dad5-11e4-9e34-0dea2644aa29","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"972ceb00-dad5-11e4-9e34-13c33d843de2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"972ceb01-dad5-11e4-9e34-8596e1786418","variableMapping":{"str":"message","d":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:276","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String.trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":0},{"failures":[],"tindex":"972ceb02-dad5-11e4-9e34-45fa82a11205","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[],"tindex":"972ceb03-dad5-11e4-9e34-197bc7aaaeb9","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[405,278,279,4,406,407,408,409,45,293],"tindex":"972ceb04-dad5-11e4-9e34-41605dc22111","variableMapping":{"r":"r","x":"r","absY":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[],"tindex":"972ceb05-dad5-11e4-9e34-0da4e272c700","variableMapping":{"tmpNode":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"972d1216-dad5-11e4-9e34-1ba3880decbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"972d1217-dad5-11e4-9e34-c305d51bad09","variableMapping":{"mGarbage":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"972d1218-dad5-11e4-9e34-63fe64db8499","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"972d1219-dad5-11e4-9e34-bf9bd60b2cc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.RacingBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"972d121a-dad5-11e4-9e34-cfc2b5034533","variableMapping":{"longSegmentSize":"flags","bufferStart":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[393,394,395],"tindex":"972d121b-dad5-11e4-9e34-33ae88359480","variableMapping":{"i":"lastElem","to":"i","lonSize":"lastElem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[34],"tindex":"972d121c-dad5-11e4-9e34-e51582ab7e19","variableMapping":{"fwdFaster":"fwdSlower","incDist2DSum":"fwdSlower","fwdSlower":"fwdSlower","fullDist2D":"fwdSlower","restDist2D":"fwdSlower","speed":"fwdSlower","decDist2DSum":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"972d121d-dad5-11e4-9e34-43b036040550","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"972d121e-dad5-11e4-9e34-d54c4337b8a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[379,383,21,387],"tindex":"972d121f-dad5-11e4-9e34-e9eec14d912d","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[75,295,63,301,303,47,68,48,50,310,70,72,51],"tindex":"972d1220-dad5-11e4-9e34-2745a8e6527f","variableMapping":{"high":"flags","highKey":"dir","key":"scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[361,362,363,364,410,365,366,52,53,54,55,58,332,59,334,335,337,338,339,341,342,343,344,345],"tindex":"972d1221-dad5-11e4-9e34-17a66c25402e","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[10,379,11,12,382,14,383,16,385,18,20,21,375,23,36,387,37,38,390,40,41,42,43,59,334,335,336,338,339,340,341,344,60,345],"tindex":"972d1222-dad5-11e4-9e34-f16c6dd1083d","variableMapping":{"val":"highway","existing":"highway","key":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"972d1223-dad5-11e4-9e34-417606065f82","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[340],"tindex":"972d1224-dad5-11e4-9e34-6d861d82bf7c","variableMapping":{"oldValueIndex":"forwardBit","lastKey":"encoded","key":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"972d1225-dad5-11e4-9e34-e79438d3398b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"972d1226-dad5-11e4-9e34-01fd8eb3d66a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.RacingBikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[87,97,103,111,112,411,412,413,414,415,193,203,209,217,218,236,246,252,260,261,285,288],"tindex":"972d1227-dad5-11e4-9e34-23ff30e8ec22","variableMapping":{"intVal":"high","degree":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"972d3938-dad5-11e4-9e34-39511397d698","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,416,144,145,271,273,280,62,294,295,296,297,298,299,300,63,64,301,302,303,65,46,47,66,304,305,67,68,306,307,308,48,309,49,50,310,311,312,69,313,70,71,72,314,51,329,52,53,56,331,58],"tindex":"972d3939-dad5-11e4-9e34-e3734831a97e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.create(long)"},"status":-1},{"failures":[],"tindex":"972d393a-dad5-11e4-9e34-4b5bb77edc97","variableMapping":{"val":"start","com.graphhopper.coll.SparseIntIntArray.DELETED":"start","keys":"nodeIndex","values":"nodeIndex","i":"start","o":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:134","type":"CtIfImpl","sourcecode":"if (int != (com.graphhopper.coll.SparseIntIntArray.int)) {\n    if (int != int) {\n        int[][int] = int[][int];\n        int[][int] = int;\n    } \n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[10,12,16,21,36,38,41,42],"tindex":"972d393b-dad5-11e4-9e34-7debc5291df2","variableMapping":{"turnCostsCount":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[],"tindex":"972d393c-dad5-11e4-9e34-291f73e8542b","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"972d393d-dad5-11e4-9e34-ad79bd3eb487","variableMapping":{"from":"i","hash":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[379,382,383,16,385,21,375,387,390],"tindex":"972d393e-dad5-11e4-9e34-758db275d61a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 3))\n    return \"\";\n"},"status":-1},{"failures":[],"tindex":"972d393f-dad5-11e4-9e34-c122b85965ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[],"tindex":"972d3940-dad5-11e4-9e34-c5e2d57fbfae","variableMapping":{"latlon":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"972d3941-dad5-11e4-9e34-df54a76ef4d8","variableMapping":{"len":"bufferIndex","dim":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:968","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[((int * int) * 4) + 4]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"972d3942-dad5-11e4-9e34-31220bdc8775","variableMapping":{"size":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[34],"tindex":"972d3943-dad5-11e4-9e34-a33f72e3bbc0","variableMapping":{"midLat":"maxSpeed","spatialKey":"flags","bits":"flags","lat":"decDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[393,417,418,394,360,395,295,296,297,298,299,300,63,301,303,65,47,66,304,305,67,68,306,308,48,309,49,50,310,311,312,69,313,70,71,72,314,51,52],"tindex":"972d3944-dad5-11e4-9e34-73069801606a","variableMapping":{"id":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[405,279,4,406,407,408,409,45,293],"tindex":"972d3945-dad5-11e4-9e34-a7ee9037e28d","variableMapping":{"towerNodeDistance":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-1},{"failures":[419,13,420,17,374,22,421,39],"tindex":"972d3946-dad5-11e4-9e34-6100a7984314","variableMapping":{"angle":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[25,59],"tindex":"972d3947-dad5-11e4-9e34-cddf24c309a3","variableMapping":{"midLat":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"972d3948-dad5-11e4-9e34-8d899536576a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-2},{"failures":[],"tindex":"972d6059-dad5-11e4-9e34-73ef58437c9b","variableMapping":{"acceptBit":"cap","internalFlags":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[73,75,294,295,63,303,66,68,69,70,71],"tindex":"972d605a-dad5-11e4-9e34-63285c4078c5","variableMapping":{"flags":"flags","scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[9,10,379,11,12,382,422,14,15,383,16,385,423,18,20,21,369,375,23,35,36,387,37,38,390,424,40,42,43,59,334,335,336,338,339,340,341,344,60,345],"tindex":"972d605b-dad5-11e4-9e34-4988612396c8","variableMapping":{"turnCostsCount":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[418,360],"tindex":"972d605c-dad5-11e4-9e34-c58cd2935868","variableMapping":{"cap":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"972d605d-dad5-11e4-9e34-9766778542f6","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[73,75,76,81,84,85,86,87,88,89,90,91,92,93,94,96,97,99,100,102,103,104,105,108,110,111,112,113,115,116,118,120,121,127,128,130,132,133,134,135,137,138,139,140,141,142,143,144,145,273,280,62,294,295,296,297,298,299,300,63,64,301,303,65,46,47,66,304,305,67,68,306,307,308,48,309,49,50,310,311,312,69,313,70,71,72,314,51,329,330,52,53,56,331,58],"tindex":"972d605e-dad5-11e4-9e34-61de3925e8b6","variableMapping":{"edgeId":"I_SKIP_EDGE1","nextEdge":"I_SKIP_EDGE1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"972d605f-dad5-11e4-9e34-8d894dcc73d3","variableMapping":{"alreadyRun":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":313,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":318,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":6,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":78,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":170,"com.graphhopper.reader.OSMReaderTest.testFerry":59,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":283,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":284,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":369,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":133,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":330,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":405,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":390,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":244,"com.graphhopper.coll.CompressedArrayTest.testCompress":351,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":374,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":225,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":297,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":2,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":129,"com.graphhopper.util.AngleCalcTest.testOrientation":406,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":301,"com.graphhopper.GraphHopperTest.testPrepare":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":62,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":208,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":48,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":277,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":375,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":282,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":84,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":130,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":289,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":9,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":66,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":307,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":149,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":268,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":228,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":357,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":85,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":394,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":65,"com.graphhopper.GraphHopperTest.testLoadOSM":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":156,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":150,"com.graphhopper.reader.OSMReaderTest.testSort":336,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":287,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":231,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":220,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":187,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":355,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":324,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":264,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":109,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":198,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":74,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":239,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":387,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":17,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":137,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":205,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":310,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":67,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":247,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":253,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":101,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":81,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":103,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":408,"com.graphhopper.coll.CompressedArrayTest.testCompress2":350,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":210,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":15,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":3,"com.graphhopper.GraphHopperAPITest.testLoad":61,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":177,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":365,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":202,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":193,"com.graphhopper.storage.LevelGraphStorageTest.testClone":89,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":235,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":290,"com.graphhopper.reader.OSMReaderTest.testBarriers":337,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":388,"com.graphhopper.util.GHUtilityTest.testCopy":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":306,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":145,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":376,"com.graphhopper.routing.PathTest.testFindInstruction":293,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":371,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":236,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":393,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":32,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":280,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":117,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":169,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":221,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":262,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":271,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":299,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":91,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":190,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":184,"com.graphhopper.util.InstructionListTest.testWayList2":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":424,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":157,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":240,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":379,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":267,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":188,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":292,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":245,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":68,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":192,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":243,"com.graphhopper.routing.PathBidirRefTest.testExtract":315,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":400,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":105,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":270,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":414,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":161,"com.graphhopper.util.GHUtilityTest.testSort2":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":311,"com.graphhopper.reader.OSMReaderTest.testMain":335,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":82,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":252,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":381,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":358,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":142,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":397,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":24,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":232,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":0,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":99,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":120,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":378,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":96,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":35,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":176,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":102,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":60,"com.graphhopper.storage.GraphHopperStorageTest.testClone":195,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":227,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":399,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":26,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":204,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":398,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":76,"com.graphhopper.routing.PathTest.testTime":44,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":118,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":90,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":159,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":107,"com.graphhopper.reader.OSMReaderTest.testRelation":392,"com.graphhopper.util.GHUtilityTest.testSortDirected":275,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":360,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":39,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":320,"com.graphhopper.GraphHopperTest.testFootOnly":58,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":368,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":25,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":123,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":136,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":294,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":160,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":317,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":180,"com.graphhopper.routing.QueryGraphTest.testOneWay":326,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":354,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":148,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":352,"com.graphhopper.reader.OSMReaderTest.testWithBounds":344,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":403,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":266,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":286,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":412,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":33,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":41,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":86,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":421,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":23,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":256,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":249,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":191,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":47,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":223,"com.graphhopper.util.InstructionListTest.testWayList":278,"com.graphhopper.GraphHopperAPITest.testDisconnected179":348,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":146,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":347,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":288,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":413,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":419,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":54,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":197,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":124,"com.graphhopper.routing.util.EncodedValueTest.testSwap":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":302,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":214,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":64,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":116,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":382,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":416,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":14,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":186,"com.graphhopper.routing.PathTest.testWayList":45,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":384,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":410,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":51,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":255,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":207,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":29,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":241,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":100,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":138,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":139,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":402,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":366,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":418,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":383,"com.graphhopper.util.GHUtilityTest.testSort":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":153,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":7,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":359,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":363,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":269,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":131,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":171,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":126,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":164,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":182,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":37,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":323,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":34,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":162,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":229,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":362,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":250,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":285,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":183,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":185,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":43,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":332,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":115,"com.graphhopper.util.AngleCalcTest.testAtan2":407,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":75,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":246,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":417,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":1,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":200,"com.graphhopper.util.InstructionListTest.testEmptyList":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":308,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":420,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":50,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":22,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":364,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":312,"com.graphhopper.reader.PrinctonReaderTest.testRead":346,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":222,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":134,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":242,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":254,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":251,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":373,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":36,"com.graphhopper.reader.OSMReaderTest.testFoot":334,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":328,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":154,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":356,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":367,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":155,"com.graphhopper.reader.OSMReaderTest.testOneWay":345,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":203,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":218,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":263,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":372,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":212,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":298,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":349,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":303,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":296,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":132,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":319,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":189,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":181,"com.graphhopper.routing.PathBidirRefTest.testExtract2":316,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":158,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":385,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":216,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":423,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":340,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":30,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":151,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":219,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":92,"com.graphhopper.GraphHopperTest.testFootAndCar":55,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":211,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":97,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":16,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":144,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":386,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":70,"com.graphhopper.GraphHopperTest.testPrepareOnly":329,"com.graphhopper.GraphHopperTest.testVia":52,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":172,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":411,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":342,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":77,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":4,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":215,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":31,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":341,"com.graphhopper.util.AngleCalcTest.testCombined":409,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":19,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":114,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":112,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":230}}]
