[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"66994df4-da4c-11e4-828a-29a154d0acd4","variableMapping":{"neighborUpdates":"level"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[18],"tindex":"66997505-da4c-11e4-828a-23d820912cda","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"decDist2DSum","com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR":"decDist2DSum","weight":"fwdDecline","weightLong":"flags","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[19,20,21],"tindex":"66997506-da4c-11e4-828a-b3d333a027c7","variableMapping":{"maxLeafEntries":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[],"tindex":"66997507-da4c-11e4-828a-cf48b0e03262","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[22,23,24,25],"tindex":"66997508-da4c-11e4-828a-2daf1e21660f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[26],"tindex":"66997509-da4c-11e4-828a-ef9585ee94ac","variableMapping":{"pos":"kmInteger","mSize":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,19,39,40,41,20,42,43,44,45,46,47,48,49,50,51,52,53,54,22,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,23,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,24,96,97,98,99,100,101,102,103,104,105,18,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,25,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,21,145,146,147,148,149,150,151,152,153,154,155,0,156,1,157,158,159,160,161,2,162,163,164,3,165,166,167,168,169,170,171,4,172,173,5,6,174,175,176,177,178,179,7,180,8,181,9,182,10,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,11,223,224,225,226,227,228,229,12,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,13,272,14,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,15,419,16,420,421,17,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465],"tindex":"66999c1a-da4c-11e4-828a-3f299ab236ac","variableMapping":{"numTiles":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":-1},{"failures":[466,467,468,255,261,263,264,273,279,281,282,469,470,471,472,473,474,475,476],"tindex":"66999c1b-da4c-11e4-828a-43a0b52c1bcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"66999c1c-da4c-11e4-828a-dd8fbfdce7c7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"66999c1d-da4c-11e4-828a-6d30c7b739ba","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[52,54,72,74,93,95,121,123],"tindex":"66999c1e-da4c-11e4-828a-9b180a478903","variableMapping":{"dX":"speed","dY":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[155,2,162,168,171,4,7,8,9],"tindex":"6699c32f-da4c-11e4-828a-879b63c5ae48","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"6699c330-da4c-11e4-828a-71e87664e77f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"6699c331-da4c-11e4-828a-b1c69c17a03f","variableMapping":{"defaultUTurnCost":"java.lang.Double.POSITIVE_INFINITY","turnCosts":"java.lang.Double.POSITIVE_INFINITY","edgeId":"maxTurnCosts","prevOrNextEdgeId":"maxTurnCosts","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"6699c332-da4c-11e4-828a-a7b9e9dfa904","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"6699c333-da4c-11e4-828a-1b9c58fe33e1","variableMapping":{"dX":"resultOrientation","dY":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"6699c334-da4c-11e4-828a-83d6f7819d99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[477,142,202],"tindex":"6699c335-da4c-11e4-828a-a72f50ad5947","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[27,28,29,30,32,33,34,36,37,38,19,39,40,41,20,43,45,47,49,53,54,22,55,56,58,59,61,62,63,65,66,68,73,74,23,76,77,78,79,80,81,82,83,84,85,86,87,89,94,95,24,97,98,99,101,102,104,105,18,107,108,110,111,112,114,115,117,122,123,25,125,126,127,128,129,130,131,132,134,135,136,137,139,140,141,142,143,144,21,145,147,149,150,152,153,155,0,1,157,158,159,160,161,2,162,163,164,3,165,166,167,168,169,170,171,4,172,173,5,6,174,175,176,177,178,179,7,180,8,181,9,182,10,183,184,186,187,188,189,190,191,192,193,194,198,199,200,202,203,204,205,206,207,208,209,210,212,213,214,215,216,217,218,219,220,221,222,11,223,224,225,226,228,229,12,230,232,233,235,236,237,238,240,241,242,243,244,245,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,13,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,296,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,321,322,324,325,326,327,328,329,330,332,333,334,335,336,337,340,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,365,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399,400,403,404,406,407,408,409,410,411,412,414,415,416,417,418,419,16,420,422,423,426,428,429,430,431,432,433,434,435,436,437,439,440,441,442,443,444,445,446,447,448,451,452,454,455,456,457,458,459,460,462,463,464,465],"tindex":"6699c336-da4c-11e4-828a-497bb0b8ad2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"6699c337-da4c-11e4-828a-290cc7668b8c","variableMapping":{"counts":"endIndexPlusOne","counter":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[142,145,202],"tindex":"6699ea48-da4c-11e4-828a-1b7fabfbfe5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"6699ea49-da4c-11e4-828a-6f2f7bb710b6","variableMapping":{"bit":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"6699ea4a-da4c-11e4-828a-ed2a33229258","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[142,145,202],"tindex":"6699ea4b-da4c-11e4-828a-8fce2bea0ba5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,22,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,23,75,76,79,83,84,85,86,87,88,89,90,91,92,93,94,95,24,96,97,98,99,101,102,104,105,18,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,25,124,125,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,21,145,146,147,148,149,150,202,203,204,205,206,207,208,210,212,213,214,215,217,309,353,391,439],"tindex":"6699ea4c-da4c-11e4-828a-95f14c4e0d08","variableMapping":{"i":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"6699ea4d-da4c-11e4-828a-891fbf5bcb01","variableMapping":{"numTiles":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":0},{"failures":[478,479,243,244,480],"tindex":"6699ea4e-da4c-11e4-828a-315f37fc3f69","variableMapping":{"pos":"segmentSizePower","mSize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"6699ea4f-da4c-11e4-828a-8f103e6b3a87","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-2},{"failures":[],"tindex":"6699ea50-da4c-11e4-828a-41fcc58f7404","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[481,36,37,38,11],"tindex":"6699ea51-da4c-11e4-828a-b9010f69a69a","variableMapping":{"costs":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"6699ea52-da4c-11e4-828a-69f20b0927f7","variableMapping":{"initLeafSize":"child","maxLeafEntries":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[],"tindex":"6699ea53-da4c-11e4-828a-e9a56ae0b118","variableMapping":{"dist":"currDistToGoal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[53,58,61,63,73,84,85,94,107,110,112,122],"tindex":"6699ea54-da4c-11e4-828a-392669f2b860","variableMapping":{"index":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"669a1165-da4c-11e4-828a-89912c2052cf","variableMapping":{"prepareFlagEncoder":"flagEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.FlagEncoder) == null)\n    throw new java.lang.IllegalStateException(\"No vehicle encoder set.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":0},{"failures":[466,467,469,470,482,471,483,472,473,476],"tindex":"669a1166-da4c-11e4-828a-939c52c8e99f","variableMapping":{"orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"669a1167-da4c-11e4-828a-9ffc8d268481","variableMapping":{"fromDist":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:112","type":"CtIfImpl","sourcecode":"if (double < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[484,485,486,487,37,38,19,488,199,200],"tindex":"669a1168-da4c-11e4-828a-0f7d5e11c4ab","variableMapping":{"this":"this","dist":"y","com.graphhopper.util.DistanceCalcEarth.R":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:70","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin(((double / 2) / (com.graphhopper.util.DistanceCalcEarth.double)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-1},{"failures":[],"tindex":"669a1169-da4c-11e4-828a-e950a2afe29c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[19,20,56,139,144,21,215,11,223,224,225,226,229],"tindex":"669a116a-da4c-11e4-828a-2ff291b4f548","variableMapping":{"i":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[],"tindex":"669a116b-da4c-11e4-828a-9fe61c5e630f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[77,81,82],"tindex":"669a116c-da4c-11e4-828a-2d3746abc565","variableMapping":{"numTiles":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[79,80,217,489,490],"tindex":"669a116d-da4c-11e4-828a-472b2e75ee4d","variableMapping":{"start":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[],"tindex":"669a116e-da4c-11e4-828a-43a8b3b5b490","variableMapping":{"ab_rb":"ele","ab_ar":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[],"tindex":"669a116f-da4c-11e4-828a-69d3702608c5","variableMapping":{"location":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":0},{"failures":[],"tindex":"669a1170-da4c-11e4-828a-efd08e425a55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:342","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"669a1171-da4c-11e4-828a-d56469b4b994","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.RacingBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"669a1172-da4c-11e4-828a-271a8dbf05dc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[19,20,43,45,53,55,56,59,61,62,63,73,76,85,86,94,97,99,102,104,108,110,111,112,122,125,131,134,139,140,144,21,145,203,215,217,11],"tindex":"669a3883-da4c-11e4-828a-7b53e2b96fba","variableMapping":{"directionBitMask":"ferryBit","shift":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[27,28,29,30,32,33,34,35,36,37,38,19,39,40,41,77,78,79,80,81,82,105,18,130,152,153,155,0,1,157,158,159,160,161,2,162,163,164,3,165,166,167,168,169,170,171,4,172,173,5,6,174,175,176,177,178,179,7,180,8,181,9,182,10,183,184,185,186,187,188,189,190,191,192,193,194,199,200,202,203,204,205,206,207,208,209,210,212,213,214,215,217,218,219,220,221,222,11,223,224,225,226,228,229,12,230,232,233,235,236,237,238,240,241,242,243,244,245,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,13,272,14,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,491,492,493,391,406,418,419,16,420,421,17,422,423,424,425,426,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465],"tindex":"669a3884-da4c-11e4-828a-fb6b3568511c","variableMapping":{"from":"segmentsToCreate","hash":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"669a3885-da4c-11e4-828a-e1c43f45629e","variableMapping":{"a":"locked","approx":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[4,8,9],"tindex":"669a3886-da4c-11e4-828a-d3fb5d28c1e4","variableMapping":{"segmentsToMap":"oldValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":-1},{"failures":[],"tindex":"669a3887-da4c-11e4-828a-871649307842","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"669a3888-da4c-11e4-828a-f525ca08e6ad","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"669a3889-da4c-11e4-828a-99ff7e91e937","variableMapping":{"originalEdgesCount":"maxTurnCosts","edgeDifference":"maxTurnCosts","contractedNeighbors":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[59,99,102,108],"tindex":"669a388a-da4c-11e4-828a-e3d2b46577b4","variableMapping":{"i":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[18],"tindex":"669a388b-da4c-11e4-828a-735f8dc8618f","variableMapping":{"r":"incEleSum","x":"eleDelta","absY":"incEleSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"669a388c-da4c-11e4-828a-8d5768f0daa1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[140],"tindex":"669a388d-da4c-11e4-828a-e72133674f19","variableMapping":{"flags":"encoded","nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"669a388e-da4c-11e4-828a-45c514a02899","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[2,3,167,168,169,4,172,5,6,176,179,7,180,8,9,182,10,494,495,496,497],"tindex":"669a388f-da4c-11e4-828a-79313222b6ff","variableMapping":{"turnCostsCount":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[29,498,499,500,36,37,38,105,18,181,183,184,186,187,188,189,190,191,193,194,199,202,204,205,206,207,208,209,210,212,213,214,215,217,221,222,11,223,224,226,228,229,12,230,501,502,503,504,505,257,258,259,275,276,277,506,290,293,298,319,325,330,333,337,342,363,369,374,377,507,491,493,508,509,380,401,406,407,412,415,510,511,512,513,514,515,516,517,423,428,449,455,460,463,518,519,520,521,522,523,524,525],"tindex":"669a5fa0-da4c-11e4-828a-0b621a425182","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[99,102],"tindex":"669a5fa1-da4c-11e4-828a-cf480884487b","variableMapping":{"edgePointer":"relBitMask","edgeEntryBytes":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[142,145,202],"tindex":"669a5fa2-da4c-11e4-828a-e30ee22fda3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"669a5fa3-da4c-11e4-828a-dff9f00781d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"669a5fa4-da4c-11e4-828a-6d887b897982","variableMapping":{"edgePointer":"flags","maxEdges":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"669a5fa5-da4c-11e4-828a-8504acd64aa9","variableMapping":{"encoded":"flags","backwardBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":0},{"failures":[],"tindex":"669a5fa6-da4c-11e4-828a-83a9a063a6e5","variableMapping":{"nodeB":"removed","edgeId":"removed","nodeA":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:229","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"669a5fa7-da4c-11e4-828a-3d2552f7437c","variableMapping":{"red":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":0},{"failures":[1,2,165,167,168,169,170,171,172,173,6,174,175,176,177,178,179,7,181,182,10,11,223,226,233],"tindex":"669a5fa8-da4c-11e4-828a-2dd2234f1c8e","variableMapping":{"alreadyRun":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[],"tindex":"669a5fa9-da4c-11e4-828a-d38653159a67","variableMapping":{"str":"osmValue","this":"osmValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:97","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Boolean.java.lang.Boolean.parseBoolean(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-2},{"failures":[],"tindex":"669a5faa-da4c-11e4-828a-17de8b9b828a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[],"tindex":"669a5fab-da4c-11e4-828a-b172ffdb5970","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"669a5fac-da4c-11e4-828a-e1bc24558560","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[104],"tindex":"669a5fad-da4c-11e4-828a-c3dd68eeb902","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[],"tindex":"669a5fae-da4c-11e4-828a-3f2398235c23","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"669a5faf-da4c-11e4-828a-6730adfca824","variableMapping":{"tmp":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[],"tindex":"669a5fb0-da4c-11e4-828a-8d4e4dffc88f","variableMapping":{"distance":"incEleSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"669a86c1-da4c-11e4-828a-fb6203d2e47c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:354","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHTBitSet(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[],"tindex":"669a86c2-da4c-11e4-828a-0318722c4421","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"669a86c3-da4c-11e4-828a-1509e3b7499c","variableMapping":{"minDistance":"maxLatTmp","rMin":"minLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":0},{"failures":[],"tindex":"669a86c4-da4c-11e4-828a-612f09bcd513","variableMapping":{"high":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"669aadd5-da4c-11e4-828a-cba03bd1df29","variableMapping":{"tmpNo":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":0},{"failures":[],"tindex":"669aadd6-da4c-11e4-828a-4fe176706eec","variableMapping":{"locs":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":0},{"failures":[104],"tindex":"669aadd7-da4c-11e4-828a-3d792500f848","variableMapping":{"lastTime":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[98],"tindex":"669aadd8-da4c-11e4-828a-6bd845cf7488","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"669aadd9-da4c-11e4-828a-e1e65e1984bd","variableMapping":{"i":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[],"tindex":"669aadda-da4c-11e4-828a-7d4c3ec57eda","variableMapping":{"dist":"minLat","com.graphhopper.util.DistanceCalcEarth.R":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[79,80],"tindex":"669aaddb-da4c-11e4-828a-b17e5ccd061e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":-1},{"failures":[526],"tindex":"669aaddc-da4c-11e4-828a-85ac5ceac17b","variableMapping":{"str":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[494,496,497],"tindex":"669aaddd-da4c-11e4-828a-5f2566bddd9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"669aadde-da4c-11e4-828a-f504d2790e19","variableMapping":{"len":"y1","i":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"669aaddf-da4c-11e4-828a-edd9de37939a","variableMapping":{"value":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"669aade0-da4c-11e4-828a-95b1fbb964f5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"669ad3f1-da4c-11e4-828a-fdee5120776f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[],"tindex":"669ad3f2-da4c-11e4-828a-1f0e69a63cb1","variableMapping":{"len":"shift","start":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[55,59,76,97,99,102,108,125,203,209,217],"tindex":"669ad3f3-da4c-11e4-828a-f71a5d2dce4f","variableMapping":{"oldValueIndex":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[19,20,43,45,53,55,56,59,61,62,63,73,76,85,86,94,97,99,102,104,108,110,111,112,122,125,131,134,139,140,144,21,145,203,215,217,11],"tindex":"669ad3f4-da4c-11e4-828a-8b327d9ad909","variableMapping":{"shift":"index","backwardBit":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"669ad3f5-da4c-11e4-828a-fddfa8332310","variableMapping":{"visitedCountFrom":"shift","visitedCountTo":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":-2},{"failures":[],"tindex":"669ad3f6-da4c-11e4-828a-a3c7b10db0db","variableMapping":{"edgeId":"key","nextEdge":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":454,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":180,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":184,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":20,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":421,"com.graphhopper.GraphHopperAPITest.testNoLoad":234,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":381,"com.graphhopper.reader.OSMReaderTest.testFerry":202,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":40,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":276,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":222,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":488,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":465,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":308,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":479,"com.graphhopper.coll.CompressedArrayTest.testCompress":467,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":52,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":377,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":401,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":353,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":14,"com.graphhopper.util.AngleCalcTest.testOrientation":484,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":510,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":163,"com.graphhopper.GraphHopperTest.testPrepare":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":413,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":155,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":360,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":497,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":6,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":36,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":53,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":34,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":426,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":273,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":81,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":45,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":58,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":489,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":173,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":258,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":63,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":290,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":474,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":428,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":496,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":165,"com.graphhopper.GraphHopperTest.testLoadOSM":226,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":265,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":259,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":103,"com.graphhopper.reader.OSMReaderTest.testSort":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":74,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":79,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":294,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":512,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":372,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":337,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":414,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":190,"com.graphhopper.routing.DijkstraTest.initializationError":151,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":329,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":506,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":453,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":349,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":291,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":298,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":438,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":97,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":95,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":280,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":177,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":278,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":389,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":170,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":430,"com.graphhopper.coll.OSMIDMapTest.testGetLong":504,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":318,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":445,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":423,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":447,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":486,"com.graphhopper.coll.CompressedArrayTest.testCompress2":466,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":362,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":84,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":309,"com.graphhopper.GraphHopperAPITest.testLoad":232,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":427,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":491,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":128,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":354,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":344,"com.graphhopper.storage.LevelGraphStorageTest.testClone":432,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":477,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":82,"com.graphhopper.reader.OSMReaderTest.testBarriers":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":113,"com.graphhopper.util.GHUtilityTest.testCopy":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":385,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":92,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":289,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":22,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":252,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":524,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":49,"com.graphhopper.routing.PathTest.testFindInstruction":200,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":300,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":494,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":39,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":134,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":461,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":109,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":249,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":373,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":358,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":327,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":313,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":120,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":101,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":154,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":434,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":386,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":509,"com.graphhopper.util.InstructionListTest.testWayList2":38,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":481,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":409,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":266,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":378,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":304,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":59,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":332,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":105,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":338,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":436,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":64,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":513,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":310,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":4,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":343,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":207,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":511,"com.graphhopper.routing.AStarTest.initializationError":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":181,"com.graphhopper.coll.OSMIDMapTest.testGet":501,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":307,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":135,"com.graphhopper.routing.PathBidirRefTest.testExtract":152,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":67,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":449,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":503,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":284,"com.graphhopper.storage.RAMDataAccessTest.testCopy":519,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":407,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":66,"com.graphhopper.storage.RAMDataAccessTest.testSegments":523,"com.graphhopper.util.GHUtilityTest.testSort2":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":178,"com.graphhopper.reader.OSMReaderTest.testMain":204,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":424,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":317,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":475,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":23,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":285,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":139,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":411,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":439,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":443,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":464,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":187,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":107,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":507,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":446,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":215,"com.graphhopper.storage.GraphHopperStorageTest.testClone":346,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":410,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":145,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":144,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":356,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":418,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":24,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":387,"com.graphhopper.routing.PathTest.testTime":198,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":91,"com.graphhopper.util.BitUtilLittleTest.testToFloat":499,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":462,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":433,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":150,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":268,"com.graphhopper.reader.OSMReaderTest.testRelation":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":400,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":451,"com.graphhopper.util.GHUtilityTest.testSortDirected":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":123,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":516,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":186,"com.graphhopper.GraphHopperTest.testFootOnly":12,"com.graphhopper.util.BitUtilLittleTest.testToInt":500,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":44,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":142,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":279,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":396,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":522,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":183,"com.graphhopper.routing.QueryGraphTest.testOneWay":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":269,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":471,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":48,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":478,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":257,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":469,"com.graphhopper.reader.OSMReaderTest.testWithBounds":214,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":525,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":25,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":518,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":78,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":393,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":402,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":99,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":429,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":425,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":121,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":55,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":321,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":143,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":314,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":342,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":167,"com.graphhopper.util.BitUtilLittleTest.testToBitString":498,"com.graphhopper.util.InstructionListTest.testWayList":37,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":375,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":65,"com.graphhopper.GraphHopperAPITest.testDisconnected179":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":388,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":483,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":323,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":383,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":118,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":219,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":399,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":416,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":224,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":348,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":325,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":164,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":57,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":366,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":175,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":162,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":146,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":460,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":88,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":296,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":448,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":182,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":341,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":287,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":492,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":76,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":336,"com.graphhopper.routing.PathTest.testWayList":199,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":415,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":392,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":26,"com.graphhopper.coll.OSMIDMapTest.testGet2":502,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":10,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":320,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":71,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":359,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":305,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":347,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":281,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":444,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":282,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":520,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":517,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":283,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":115,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":495,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":85,"com.graphhopper.util.GHUtilityTest.testSort":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":405,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":476,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":47,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":334,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":345,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":251,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":274,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":247,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":237,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":493,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":111,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":18,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":235,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":87,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":127,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":315,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":77,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":508,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":442,"com.graphhopper.routing.PathTest.testFound":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":406,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":104,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":230,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":459,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":526,"com.graphhopper.util.AngleCalcTest.testAtan2":485,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":419,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":69,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":311,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":391,"com.graphhopper.util.InstructionListTest.testEmptyList":35,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":5,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":93,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":286,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":176,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":138,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":54,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":137,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":179,"com.graphhopper.reader.PrinctonReaderTest.testRead":218,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":374,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":277,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":390,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":470,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":505,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":380,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":431,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":316,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":100,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":90,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":108,"com.graphhopper.reader.OSMReaderTest.testFoot":203,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":404,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":263,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":463,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":473,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":42,"com.graphhopper.reader.OSMReaderTest.testOneWay":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":264,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":355,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":370,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":328,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":50,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":515,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":364,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":114,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":398,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":159,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":468,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":3,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":157,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":238,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":514,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":130,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":394,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":185,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":216,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":339,"com.graphhopper.routing.PathBidirRefTest.testExtract2":153,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":490,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":166,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":94,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":267,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":368,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":239,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":96,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":209,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":417,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":260,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":371,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":31,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":435,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":147,"com.graphhopper.GraphHopperTest.testFootAndCar":225,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":363,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":441,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":288,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":521,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":384,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":480,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":8,"com.graphhopper.GraphHopperTest.testPrepareOnly":221,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":382,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":212,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":420,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":19,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":367,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":132,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":210,"com.graphhopper.routing.AStarBidirectionTest.initializationError":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":397,"com.graphhopper.util.AngleCalcTest.testCombined":487,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":56,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":458,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":456,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":293}}]
