[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"d9ab3955-daf4-11e4-a257-f75f3a88f89e","variableMapping":{"i":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[10,11,12],"tindex":"d9ace706-daf4-11e4-a257-adf8805993cb","variableMapping":{"size":"start","index":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"d9ace707-daf4-11e4-a257-7dc77c540def","variableMapping":{"nodeThis":"usedBits","nextEdgeOther":"usedBits","nodeOther":"usedBits","nextEdge":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"d9ace708-daf4-11e4-a257-0711c0389e69","variableMapping":{"da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":0},{"failures":[],"tindex":"d9ace709-daf4-11e4-a257-6717a0e7a136","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"d9ad0e1a-daf4-11e4-a257-69064293fa02","variableMapping":{"res":"com.graphhopper.util.NumHelper.DEFAULT_PRECISION"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.Circle:172","type":"CtIfImpl","sourcecode":"if (double < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-2},{"failures":[],"tindex":"d9ad0e1b-daf4-11e4-a257-7b2b5df1fd76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"d9ad0e1c-daf4-11e4-a257-abbb97c2f16c","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"d9ad0e1d-daf4-11e4-a257-898b53658cc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[13],"tindex":"d9ad0e1e-daf4-11e4-a257-c120bd34c110","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"d9ad0e1f-daf4-11e4-a257-dfbcdc69990f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"d9ad0e20-daf4-11e4-a257-9f6e48fb8572","variableMapping":{"item":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:256","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"d9ad0e21-daf4-11e4-a257-356bd4f185bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:143","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[14,15,16,17,18,19],"tindex":"d9ad0e22-daf4-11e4-a257-3707a3878c04","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[],"tindex":"d9ad0e23-daf4-11e4-a257-b9837c449883","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"d9ad0e24-daf4-11e4-a257-a120df4d0a3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[20,21,22,23,24,25,26],"tindex":"d9ad0e25-daf4-11e4-a257-dd92711d042c","variableMapping":{"dX":"resultOrientation","dY":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"d9ad0e26-daf4-11e4-a257-07c5198f93ef","variableMapping":{"cap":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"d9ad0e27-daf4-11e4-a257-570fb05c0698","variableMapping":{"initLeafSize":"frontIndex","maxLeafEntries":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"d9ad0e28-daf4-11e4-a257-4f7d12fe42e2","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"weight","java.lang.Double.POSITIVE_INFINITY":"weight","weight":"weight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"d9ad0e29-daf4-11e4-a257-c7639ea52bcb","variableMapping":{"lastKey":"mask","key":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[10,11],"tindex":"d9ad353a-daf4-11e4-a257-0dccd248332d","variableMapping":{"node":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,22,23,24,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,10,86,87,88,11,12,89,90,25,26,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,14,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,15,238,239,240,241,242,243,244,245,246,247,16,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,17,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,18,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,19,351],"tindex":"d9ad353b-daf4-11e4-a257-7d6895056a97","variableMapping":{"id":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[0,1,2,3,5,6,7,8],"tindex":"d9ad353c-daf4-11e4-a257-2b64a0f8dbf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"d9ad353d-daf4-11e4-a257-ad5a2bfa39fc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[27,30,31,33,35,36,22,23,352,353,354,62,64,65,66,67,68,69,70,72,73,74,75,77,78,79,80,81,82,25,92,96,99,102,125,144,148,168,174,179,182,192,226,355,356,238,357,358,359,241,242,243,360,246,247,16,248,250,254,274,280,285,288,361,362,363,364,301,305,325,331,336,339,344,345,346,365,349,350,19,351],"tindex":"d9ad353e-daf4-11e4-a257-3b6427b37aa5","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[366,367,368,369,370,137,141],"tindex":"d9ad5c4f-daf4-11e4-a257-1766db61c772","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[13],"tindex":"d9ad5c50-daf4-11e4-a257-eb3f7e2d1756","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[371],"tindex":"d9ad5c51-daf4-11e4-a257-8980ddbceb8d","variableMapping":{"flags":"acceptBit","tmpValue":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,38,39,238],"tindex":"d9ad5c52-daf4-11e4-a257-cb124a51249a","variableMapping":{"nodes":"maxTurnCosts","adj":"maxTurnCosts","base":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-1},{"failures":[372,373,374],"tindex":"d9ad5c53-daf4-11e4-a257-33a361644ef9","variableMapping":{"size":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"d9ad5c54-daf4-11e4-a257-39abac7a0af8","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"d9ad5c55-daf4-11e4-a257-2f5b1ce454e0","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":0},{"failures":[],"tindex":"d9ad5c56-daf4-11e4-a257-150f9de80885","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,22,23,24,44,45,46,47,48,49,50,51,56,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,77,83,84,85,10,86,87,88,11,12,89,90,25,26,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,14,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,375,202,203,204,205,206,207,376,208,209,210,211,212,213,214,377,215,216,217,218,219,378,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,379,236,237,355,380,381,382,383,384,385,386,387,388,389,15,390,391,392,393,394,395,396,397,398,356,399,400,401,402,238,357,403,404,405,406,358,407,408,359,409,410,248,411,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,17,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,18,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"d9ad8367-daf4-11e4-a257-8f29e28c9d0a","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"d9ad8368-daf4-11e4-a257-a1fdbc578a07","variableMapping":{"relationCodeEncoder":"wayTypeEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"d9ad8369-daf4-11e4-a257-b98157b692ac","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.VERY_NICE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"d9ad836a-daf4-11e4-a257-734635f56c13","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[77,10,88,150,158,159,160,166,174,175,381,389,390,391,397,357,403,256,264,265,266,272,280,281,307,315,316,317,323,331,332],"tindex":"d9ad836b-daf4-11e4-a257-e5293018ec76","variableMapping":{"originalEdgesCount":"index","edgeDifference":"index","contractedNeighbors":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"d9ad836c-daf4-11e4-a257-a5d2483c7f51","variableMapping":{"maxLatTmp":"minLon","minLatTmp":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[115,120,121,126,128],"tindex":"d9ad836d-daf4-11e4-a257-11c88da2bcae","variableMapping":{"bytesForFlags":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-2},{"failures":[412,413,414,415,416,417,418,419,420,421,422],"tindex":"d9ad836e-daf4-11e4-a257-8bb4aa4fc6e3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1063","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[32,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,85,444,445,446,447,371,448,449,373,415,416,450,451,452,418,453,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,143,144,145,146,147,454,148,149,150,151,152,153,154,155,156,157,158,14,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,203,209,221,237,355,380,381,382,383,384,385,386,387,388,389,15,390,391,392,393,394,395,396,397,398,356,399,400,401,402,238,357,403,404,405,406,358,407,408,359,409,410,248,411,249,250,251,252,253,455,254,255,256,257,258,259,260,261,262,263,264,17,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,293,294,295,296,297,298,299,300,301,302,303,304,456,305,306,307,308,309,310,311,312,313,314,315,18,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"d9ad836f-daf4-11e4-a257-0d4c59f2b778","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"d9ad8370-daf4-11e4-a257-c121fbefc094","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"d9ad8371-daf4-11e4-a257-afbcbf37e475","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[457],"tindex":"d9adaa82-daf4-11e4-a257-3b2d470546c3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:78","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum key.\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[10,88,150,158,159,160,162,166,167,174,175,381,389,390,391,393,397,398,357,403,256,264,265,266,268,272,273,280,281,299,307,315,316,317,319,323,324,331,332],"tindex":"d9adaa83-daf4-11e4-a257-ad1d2836b94e","variableMapping":{"capacity":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"d9adaa84-daf4-11e4-a257-69ee9171023e","variableMapping":{"obtained":"synched"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[13],"tindex":"d9adaa85-daf4-11e4-a257-550a9099e935","variableMapping":{"tmpDegreeCounter":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[],"tindex":"d9adaa86-daf4-11e4-a257-1775e4bf0126","variableMapping":{"logMessages":"shortTripsSpeed","logMessagesPercentage":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:158","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":0},{"failures":[88],"tindex":"d9adaa87-daf4-11e4-a257-b336f59650fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"d9adaa88-daf4-11e4-a257-510dd4480b1c","variableMapping":{"this":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:165","type":"CtTryImpl","sourcecode":"try {\n    boolean boolean = com.graphhopper.storage.NativeFSLockFactory.NativeLock.tryLock();\n    if (boolean)\n        com.graphhopper.storage.NativeFSLockFactory.NativeLock.release();\n    \n    return !boolean;\n} catch (java.lang.Exception java.lang.Exception) {\n    return false;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"d9adaa89-daf4-11e4-a257-277d1ddb7e38","variableMapping":{"java.lang.Double.MAX_VALUE":"baseOrientation","existingDirectWeight":"baseOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"d9adaa8a-daf4-11e4-a257-191b8b7e3a00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"d9adaa8b-daf4-11e4-a257-bdf3218bf761","variableMapping":{"high":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"d9adaa8c-daf4-11e4-a257-5d6e686d1739","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"d9adaa8d-daf4-11e4-a257-e1eecd0fb3d7","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"index","nodeType":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[],"tindex":"d9adaa8e-daf4-11e4-a257-3b0f5e641255","variableMapping":{"incEleSum":"orientation","eleDelta":"resultOrientation","incDist2DSum":"orientation","decEleSum":"resultOrientation","fullDist2D":"java.lang.Math.PI","decDist2DSum":"baseOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"d9adaa8f-daf4-11e4-a257-0be042dbcdca","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"d9add1a0-daf4-11e4-a257-63cd103396ad","variableMapping":{"latlon":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[458,459,460,461,462,240,463,360,246,411,464,465,466,362,467,343,468,365,349,469,470,471,472,473],"tindex":"d9add1a1-daf4-11e4-a257-adb3d34ad1b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-1},{"failures":[],"tindex":"d9add1a2-daf4-11e4-a257-e96f2c6ad455","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[27,28,29,30,31,32,33,474,34,35,36,37,475,38,39,476,40,41,42,43,22,23,24,44,45,46,47,48,477,49,50,51,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,478,479,83,84,480,372,481,482,412,483,413,484,485,486,487,488,489,490,491,492,414,493,494,495,496,439,497,498,457,499,440,441,442,443,85,444,445,446,447,371,448,449,373,415,416,500,501,502,503,504,505,506,417,507,508,509,510,450,451,452,418,453,511,512,513,514,515,516,419,517,518,519,10,86,87,88,11,12,520,374,521,522,420,523,421,524,525,526,527,528,529,530,531,532,422,533,534,535,536,537,89,90,25,26,538,539,540,91,92,93,94,95,96,97,98,99,100,101,102,103,104,541,542,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,543,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,454,148,149,150,151,152,153,154,155,156,157,158,14,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,375,202,203,204,205,206,207,376,208,209,211,212,213,214,377,215,216,217,218,219,378,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,379,236,237,355,380,381,382,383,384,385,386,387,388,389,15,390,391,392,393,394,395,396,397,398,356,399,400,401,402,238,357,403,404,405,406,358,407,408,359,409,410,248,411,249,250,251,252,253,455,254,255,256,257,258,259,260,261,262,263,264,17,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,293,294,295,296,297,298,299,300,301,302,303,304,456,305,306,307,308,309,310,311,312,313,314,315,18,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"d9add1a3-daf4-11e4-a257-d98c7c153e9c","variableMapping":{"red":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[27,28,29,30,31,32,33,474,34,35,36,37,475,38,39,476,40,41,42,43,22,23,24,44,45,46,47,48,477,49,50,51,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,478,479,83,84,480,372,481,482,412,483,413,484,485,486,487,488,489,490,491,492,414,493,494,495,496,439,440,441,442,443,85,444,445,446,447,371,448,449,373,415,416,500,501,502,503,504,505,506,417,507,508,509,510,450,451,452,418,453,511,512,513,514,515,516,419,517,518,519,10,86,87,88,11,12,520,374,521,522,420,523,421,524,525,526,527,528,529,530,531,532,422,533,534,535,536,89,90,25,26,538,539,540,91,92,93,94,95,96,97,98,99,100,101,102,103,104,541,542,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,543,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,454,148,149,150,151,152,153,154,155,156,157,158,14,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,375,202,203,204,205,206,207,376,208,209,211,212,213,214,377,215,216,217,218,219,378,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,379,236,237,355,380,381,382,383,384,385,386,387,388,389,15,390,391,392,393,394,395,396,397,398,356,399,400,401,402,238,357,403,404,405,406,358,407,408,359,409,410,248,411,249,250,251,252,253,455,254,255,256,257,258,259,260,261,262,263,264,17,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,293,294,295,296,297,298,299,300,301,302,303,304,456,305,306,307,308,309,310,311,312,313,314,315,18,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"d9adf8b4-daf4-11e4-a257-8f3acce1e5b3","variableMapping":{"versionHint":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[],"tindex":"d9adf8b5-daf4-11e4-a257-d996d814b7a4","variableMapping":{"index":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"d9adf8b6-daf4-11e4-a257-c5d5bd7b4e76","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"d9adf8b7-daf4-11e4-a257-b765e853296d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-2},{"failures":[],"tindex":"d9adf8b8-daf4-11e4-a257-ff235cf74263","variableMapping":{"intVal":"bytePos","degree":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[544,131,133,137,139,141,142],"tindex":"d9adf8b9-daf4-11e4-a257-9984f3f7d0f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-1},{"failures":[],"tindex":"d9adf8ba-daf4-11e4-a257-8bfe0788fcf0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[29,62,63,66,72,77,423,428,432,372,412,413,486,489,414,494,441,442,444,371,373,415,500,503,417,508,452,418,511,419,518,374,420,421,526,529,422,534],"tindex":"d9adf8bb-daf4-11e4-a257-ff8713678bc9","variableMapping":{"sacScale":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-1},{"failures":[],"tindex":"d9adf8bc-daf4-11e4-a257-dd417cda59d4","variableMapping":{"bits":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"d9adf8bd-daf4-11e4-a257-3b0e83ee2816","variableMapping":{"size":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[77,87,88,158,159,160,166,174,175,256,264,265,266,272,280,281,466,299,307,315,316,317,323,331,332],"tindex":"d9adf8be-daf4-11e4-a257-7752504b0321","variableMapping":{"dLat":"segmentSizeInBytes","dLon":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[62],"tindex":"d9adf8bf-daf4-11e4-a257-aff9a84fa28f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[373,415,416],"tindex":"d9adf8c0-daf4-11e4-a257-efd9b49f2a71","variableMapping":{"entry":"trackType","entryVal":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[27,28,29,30,31,32,33,474,34,35,36,37,475,38,39,476,40,41,42,43,22,23,24,44,45,46,47,48,477,49,50,51,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,478,479,83,84,480,372,481,482,412,483,413,484,485,486,487,488,489,490,491,492,414,493,494,495,496,439,440,441,442,443,85,444,445,446,447,371,448,449,373,415,416,500,501,502,503,504,505,506,417,507,508,509,510,450,451,452,418,453,511,512,513,514,515,516,419,517,518,519,10,86,87,88,11,12,520,374,521,522,420,523,421,524,525,526,527,528,529,530,531,532,422,533,534,535,536,89,90,25,26,538,539,540,91,92,93,94,95,96,97,98,99,100,101,102,103,104,541,542,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,543,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,454,148,149,150,151,152,153,154,155,156,157,158,14,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,375,202,203,204,205,206,207,376,208,209,211,212,213,214,377,215,216,217,218,219,378,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,379,236,237,355,380,381,382,383,384,385,386,387,388,389,15,390,391,392,393,394,395,396,397,398,356,399,400,401,402,238,357,403,404,405,406,358,407,408,359,409,410,248,411,249,250,251,252,253,455,254,255,256,257,258,259,260,261,262,263,264,17,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,293,294,295,296,297,298,299,300,301,302,303,304,456,305,306,307,308,309,310,311,312,313,314,315,18,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"d9ae1fd1-daf4-11e4-a257-39c0a2449716","variableMapping":{"val":"com.graphhopper.routing.util.EncodingManager.BIKE2","existing":"com.graphhopper.routing.util.EncodingManager.FOOT","key":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[],"tindex":"d9ae1fd2-daf4-11e4-a257-af550ff56fed","variableMapping":{"low":"i","guess":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[427,428,432,491,494,371,505,508,515,518,531,534],"tindex":"d9ae1fd3-daf4-11e4-a257-8b5934f48106","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-1},{"failures":[],"tindex":"d9ae1fd4-daf4-11e4-a257-251728a15e39","variableMapping":{"resultOrientation":"costs","orientation":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":0},{"failures":[71,481,413,497,418,521,421],"tindex":"d9ae1fd5-daf4-11e4-a257-ff6970ceacfb","variableMapping":{"node":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"d9ae1fd6-daf4-11e4-a257-1174fff84b2c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"d9ae1fd7-daf4-11e4-a257-ab49d5cd2367","variableMapping":{"midLat":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,43,22,23,24,47,52,53,54,55,57,58,59,62,63,64,65,66,67,68,69,70,72,73,74,75,77,78,79,80,81,82,83,84,25,26,91,92,94,95,96,97,98,99,101,102,125,144,145,148,152,168,173,174,179,181,182,190,191,192,211,212,213,214,215,224,225,226,238,239,462,240,241,242,243,244,245,360,246,247,16,248,250,251,254,258,274,279,280,285,287,288,291,292,298,301,302,305,309,325,331,336,338,339,342,467,343,344,345,346,347,348,365,349,350,19,351],"tindex":"d9ae46e8-daf4-11e4-a257-4b0745046e74","variableMapping":{"red":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-1},{"failures":[],"tindex":"d9ae46e9-daf4-11e4-a257-0fd8edc3e20a","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"d9ae46ea-daf4-11e4-a257-8d7ed55f3492","variableMapping":{"speed":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"d9ae46eb-daf4-11e4-a257-77177d62f823","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"d9ae46ec-daf4-11e4-a257-4d7f1725aaa1","variableMapping":{"c":"this","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:168","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.shapes.BBox.contains(com.graphhopper.util.shapes.Circle.getBounds())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"d9ae46ed-daf4-11e4-a257-41c6def44809","variableMapping":{"start":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[497,418],"tindex":"d9ae46ee-daf4-11e4-a257-252babbb9132","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"d9ae46ef-daf4-11e4-a257-bd30d51097a9","variableMapping":{"newName":"encoder","name":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[],"tindex":"d9ae46f0-daf4-11e4-a257-4b16cc18c681","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"d9ae46f1-daf4-11e4-a257-73d00d75cf08","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[372,451,418,374],"tindex":"d9ae46f2-daf4-11e4-a257-41e2c8872263","variableMapping":{"value":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"d9ae46f3-daf4-11e4-a257-a3e46759f891","variableMapping":{"lastIndex":"I_LEVEL","fromIndex":"nodeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[88],"tindex":"d9ae46f4-daf4-11e4-a257-e5220727e1ce","variableMapping":{"shift":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[],"tindex":"d9ae46f5-daf4-11e4-a257-ef284fad964f","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[],"tindex":"d9ae46f6-daf4-11e4-a257-2f3835df7864","variableMapping":{"high":"nextNodeBit","guess":"nextNodeBit","low":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"d9ae46f7-daf4-11e4-a257-d9d4d7f10cdd","variableMapping":{"nanoTime":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[295],"tindex":"d9ae46f8-daf4-11e4-a257-43543633f9e9","variableMapping":{"i":"lastEdgeIndex","lastIndex":"edgeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":330,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":123,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":298,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":537,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":206,"com.graphhopper.GraphHopperAPITest.testNoLoad":476,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":380,"com.graphhopper.reader.OSMReaderTest.testFerry":62,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":50,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":51,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":523,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":453,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":191,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":28,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":341,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":414,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":496,"com.graphhopper.storage.MMapDataAccessTest.testSegments":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":264,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":342,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":516,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":133,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":356,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":14,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":187,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":467,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":139,"com.graphhopper.GraphHopperTest.testPrepare":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":407,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":129,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":165,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":522,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":115,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":210,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":419,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":41,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":188,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":418,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":374,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":464,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":113,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":225,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":421,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":248,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":305,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":368,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":142,"com.graphhopper.GraphHopperTest.testLoadOSM":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":226,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":440,"com.graphhopper.reader.OSMReaderTest.testSort":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":533,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":73,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":251,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":345,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":177,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":144,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":408,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":98,"com.graphhopper.storage.RAMDataAccessTest.testHeader":245,"com.graphhopper.routing.DijkstraTest.initializationError":541,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":284,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":351,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":329,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":155,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":543,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":411,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":254,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":315,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":510,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":507,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":195,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":119,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":186,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":193,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":388,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":110,"com.graphhopper.coll.OSMIDMapTest.testGetLong":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":109,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":307,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":273,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":321,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":544,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":301,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":323,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":167,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":373,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":17,"com.graphhopper.GraphHopperAPITest.testLoad":38,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":456,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":361,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":442,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":159,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":150,"com.graphhopper.storage.LevelGraphStorageTest.testClone":309,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":12,"com.graphhopper.reader.OSMReaderTest.testBarriers":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":255,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":461,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":185,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":484,"com.graphhopper.util.GHUtilityTest.testCopy":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":384,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":505,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":518,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":247,"com.graphhopper.routing.PathTest.testFindInstruction":26,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":513,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":256,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":366,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":44,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":447,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":337,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":205,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":482,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":178,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":163,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":463,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":268,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":491,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":457,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":540,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":311,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":385,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":472,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":364,"com.graphhopper.util.InstructionListTest.testWayList2":23,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":495,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":404,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":233,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":183,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":260,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":287,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":478,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":521,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":83,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":145,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":313,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":343,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":524,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":265,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":111,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":149,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":67,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":344,"com.graphhopper.routing.AStarTest.initializationError":542,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":125,"com.graphhopper.coll.OSMIDMapTest.testGet":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":263,"com.graphhopper.routing.PathBidirRefTest.testExtract":103,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":371,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":80,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":325,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":527,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":199,"com.graphhopper.storage.RAMDataAccessTest.testCopy":241,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":357,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":451,"com.graphhopper.storage.RAMDataAccessTest.testSegments":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":526,"com.graphhopper.util.GHUtilityTest.testSort2":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":120,"com.graphhopper.reader.OSMReaderTest.testMain":64,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":302,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":426,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":272,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":528,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":200,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":534,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":328,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":406,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":18,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":319,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":340,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":95,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":488,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":372,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":322,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":75,"com.graphhopper.storage.StorablePropertiesTest.testStore":292,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":240,"com.graphhopper.storage.GraphHopperStorageTest.testClone":152,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":405,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":432,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":161,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":430,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":293,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":508,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":386,"com.graphhopper.routing.PathTest.testTime":90,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":504,"com.graphhopper.util.BitUtilLittleTest.testToFloat":353,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":338,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":310,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":437,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":377,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":235,"com.graphhopper.reader.OSMReaderTest.testRelation":71,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":398,"com.graphhopper.util.GHUtilityTest.testSortDirected":49,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":369,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":493,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":350,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":94,"com.graphhopper.GraphHopperTest.testFootOnly":36,"com.graphhopper.util.BitUtilLittleTest.testToInt":354,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":452,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":212,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":428,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":194,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":471,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":499,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":480,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":394,"com.graphhopper.search.NameIndexTest.testCreate":55,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":360,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":91,"com.graphhopper.routing.QueryGraphTest.testOneWay":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":379,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":512,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":224,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":2,"com.graphhopper.reader.OSMReaderTest.testWithBounds":74,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":16,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":459,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":494,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":86,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":399,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":448,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":497,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":306,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":303,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":492,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":519,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":276,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":221,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":269,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":148,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":106,"com.graphhopper.util.BitUtilLittleTest.testToBitString":352,"com.graphhopper.util.InstructionListTest.testWayList":22,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":180,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":525,"com.graphhopper.GraphHopperAPITest.testDisconnected179":39,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":387,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":489,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":61,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":532,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":31,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":154,"com.graphhopper.routing.util.EncodedValueTest.testSwap":13,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":140,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":171,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":520,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":117,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":538,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":138,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":336,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":433,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":501,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":253,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":127,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":454,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":375,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":465,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":536,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":143,"com.graphhopper.routing.PathTest.testWayList":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":359,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":502,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":390,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":427,"com.graphhopper.coll.OSMIDMapTest.testGet2":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":128,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":348,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":333,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":275,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":531,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":164,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":443,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":261,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":196,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":320,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":197,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":242,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":19,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":486,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":367,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":415,"com.graphhopper.util.GHUtilityTest.testSort":48,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":470,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":402,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":511,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":530,"com.graphhopper.search.NameIndexTest.testPut":53,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":455,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":189,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":207,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":215,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":218,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":483,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":84,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":216,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":249,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":500,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":58,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":479,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":446,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":270,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":10,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":363,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":318,"com.graphhopper.routing.PathTest.testFound":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":238,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":37,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":441,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":335,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":468,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":529,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":266,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":54,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":458,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":15,"com.graphhopper.util.InstructionListTest.testEmptyList":42,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":157,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":114,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":506,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":118,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":436,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":424,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":423,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":517,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":121,"com.graphhopper.reader.PrinctonReaderTest.testRead":60,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":179,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":192,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":262,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":3,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":355,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":487,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":515,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":498,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":503,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":481,"com.graphhopper.reader.OSMReaderTest.testFoot":63,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":59,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":401,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":230,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":450,"com.graphhopper.reader.OSMReaderTest.testOneWay":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":231,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":160,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":175,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":283,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":514,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":349,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":485,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":396,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":141,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":132,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":219,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":365,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":85,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":460,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":392,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":93,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":76,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":146,"com.graphhopper.routing.PathBidirRefTest.testExtract2":104,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":466,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":105,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":209,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":417,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":52,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":173,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":378,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":509,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":410,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":444,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":490,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":227,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":176,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":477,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":312,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":434,"com.graphhopper.GraphHopperTest.testFootAndCar":32,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":168,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":317,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":202,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":383,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":439,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":469,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":435,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":258,"com.graphhopper.GraphHopperTest.testPrepareOnly":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":124,"com.graphhopper.GraphHopperTest.testVia":29,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":208,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":535,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":381,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":72,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":297,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":24,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":172,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":445,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":70,"com.graphhopper.util.AngleCalcTest.testCombined":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":395,"com.graphhopper.routing.AStarBidirectionTest.initializationError":539,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":438,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":334,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":332,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":250}}]
