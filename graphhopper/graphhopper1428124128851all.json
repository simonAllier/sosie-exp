[{"failures":[],"tindex":"ad8688bc-da88-11e4-b5db-3783edbf69d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-2},{"failures":[],"tindex":"ad86afcd-da88-11e4-b5db-37116f2206c3","variableMapping":{"allIter":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:385","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIterator.fetchWayGeometry(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[],"tindex":"ad86afce-da88-11e4-b5db-fb030da147a8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[0],"tindex":"ad86afcf-da88-11e4-b5db-b3c1db2483ab","variableMapping":{"height":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:415","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = int + \": \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"ad86afd0-da88-11e4-b5db-19191d63f90b","variableMapping":{"ref":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":0},{"failures":[1],"tindex":"ad86afd1-da88-11e4-b5db-a9beeb642ba5","variableMapping":{"lazyUpdates":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"ad86afd2-da88-11e4-b5db-1d32b54e1f5b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[2],"tindex":"ad86afd3-da88-11e4-b5db-5dbd93c0a42e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"ad86afd4-da88-11e4-b5db-133bee4b3743","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:200","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"internal problem as the exception \\'ioex\\' shouldn\\'t be null\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13],"tindex":"ad86afd5-da88-11e4-b5db-bb14d571f2f9","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:200","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"ad86d6e6-da88-11e4-b5db-43ea69066008","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"ad86d6e7-da88-11e4-b5db-7dd8e62f5884","variableMapping":{"highwayValue":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":0},{"failures":[],"tindex":"ad86d6e8-da88-11e4-b5db-4bba336856e1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,2,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"ad86d6e9-da88-11e4-b5db-a3203d8a81ef","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[],"tindex":"ad86d6ea-da88-11e4-b5db-15ff5fcde749","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:111","type":"CtLocalVariableImpl","sourcecode":"byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int))"},"status":-2},{"failures":[],"tindex":"ad86d6eb-da88-11e4-b5db-6979e99032fb","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13],"tindex":"ad86d6ec-da88-11e4-b5db-cd575316fee9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"ad86d6ed-da88-11e4-b5db-5b0945d61cfa","variableMapping":{"factor":"minLat","delta_lon":"minLat","a_lon":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[114],"tindex":"ad86d6ee-da88-11e4-b5db-91eef31afbbf","variableMapping":{"resultOrientation":"maxSpeed","orientation":"maxSpeed","java.lang.Math.PI":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"ad86d6ef-da88-11e4-b5db-93ce0e80a212","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[115,116,1],"tindex":"ad86d6f0-da88-11e4-b5db-270dddd0a889","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[],"tindex":"ad86d6f1-da88-11e4-b5db-ffea919e5d61","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"ad86fe02-da88-11e4-b5db-d58bfc79d750","variableMapping":{"high":"index","len":"index","start":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"ad86fe03-da88-11e4-b5db-61d7156cf34b","variableMapping":{"intIndex":"key","len":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[],"tindex":"ad86fe04-da88-11e4-b5db-ffd129e8aa74","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"ad86fe05-da88-11e4-b5db-85b1a4fdc33a","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":0},{"failures":[117,118,119,120,14,15,16,17,18,19,20,21,22,23,24,25,26,121,122,27,28,29,30,31,32,33,34,2,44,45,46,47,48,49,50,51,53,123,124,56,60,125,126,63,69,70,71,72,127,73,74,75,128,76,77,78,79,80,81,82,83,84,85,86,87,88,89,129,90,91,92,93,94,95,130,96,97,98,99,100,101,131,102,103,104,105,106,107,108,109,110,111,112,113,132,133,134],"tindex":"ad86fe06-da88-11e4-b5db-412a5159741c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"ad86fe07-da88-11e4-b5db-0317e3660c43","variableMapping":{"y1":"allBits","y2":"allBits","x1":"allBits","x2":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-2},{"failures":[],"tindex":"ad86fe08-da88-11e4-b5db-55af15b38937","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"ad86fe09-da88-11e4-b5db-377880dbb2c1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"ad86fe0a-da88-11e4-b5db-bd466a90f5cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"ad86fe0b-da88-11e4-b5db-73eeb89963c2","variableMapping":{"turnCostIndex":"speed","NO_TURN_ENTRY":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-2},{"failures":[],"tindex":"ad86fe0c-da88-11e4-b5db-550e4869f801","variableMapping":{"longSegmentSize":"wayBitMask","bufferStart":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"ad86fe0d-da88-11e4-b5db-83d0d9f043eb","variableMapping":{"flags":"flags","tmpValue":"defaultValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[135,136,137,12,138,139,140,141,142,143,144,13,145,146,147],"tindex":"ad86fe0e-da88-11e4-b5db-6d61c983a985","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:303","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-1},{"failures":[117,118,119,120,14,15,16,17,18,19,148,149,150,151,152,153,121,27,28,29,30,31,32,33,154,2,44,45,46,47,48,49,50,155,156,157,69,70,71,73,74,75,128,76,77,78,79,80,81,82,83,84,85,87,88,129,90,91,92,93,94,95,130,96,97,98,99,100,101,131,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"ad87251f-da88-11e4-b5db-6125ae916428","variableMapping":{"splitIndex":"index","entrySize":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[158,159,160,146],"tindex":"ad872520-da88-11e4-b5db-27c9f7986b1b","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"ad872521-da88-11e4-b5db-ef76af0b0a79","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"ad872522-da88-11e4-b5db-9b1c21115009","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"ad872523-da88-11e4-b5db-775aa45d9277","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"ad872524-da88-11e4-b5db-b9c68a61af78","variableMapping":{"speed":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[161,14,15,162,163,164,16,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,17,185,186,187,188,189,18,190,191,192,193,19,194,148,20,195,196,197,198,21,22,23,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,149,150,151,152,218,153,219,220,221,222,223,224,225,226,227,228,229,230,24,25,26,231,232,233,234,235,236,237,238,239,240,241,242,27,243,244,28,29,245,246,247,30,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,31,268,269,270,271,272,32,273,274,275,276,33,277,154,34,278,279,35,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,36,300,301,302,303,2,37,304,305,306,307,38,308,309,39,310,311,312,313,314,315,316,44,317,318,45,46,319,320,321,47,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,48,342,343,344,345,346,49,347,348,349,350,50,351,155,51,352,353,354,355,356,357,358,359,360,361,69,362,363,364,365,70,71,72,127,366,367,368,369,370,115,371,372,373,116,1,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,114,390,391,392,393,394,395,396,397,73,74,398,399,400,401,3,402,4,403,404,405,406,407,408,409,410,411,5,412,158,413,414,415,416,417,418,419,420,421,422,423,6,424,7,425,426,427,428,429,430,431,432,433,8,434,159,435,436,437,438,9,10,439,440,441,442,443,444,445,11,446,160,447,448,135,136,137,12,138,139,140,141,142,143,144,13,145,146,147,449,450,451,75,128,452,76,77,453,78,79,80,81,82,83,454,84,85,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,86,490,491,492,493,494,91,92,93,94,95,130,96,495,97,98,99,100,496,101,131,102,103,104,105,106,107,108,497,109,110,111,112,113,498,499],"tindex":"ad874c35-da88-11e4-b5db-07df34435991","variableMapping":{"highwayValue":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[500],"tindex":"ad874c36-da88-11e4-b5db-69d5c289b19a","variableMapping":{"flags":"defaultValue","scDirMask":"defaultValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"ad874c37-da88-11e4-b5db-adcdec170590","variableMapping":{"max":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","tmpSize":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[],"tindex":"ad874c38-da88-11e4-b5db-87ae0580027e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:222","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"ad874c39-da88-11e4-b5db-fdacf3b82058","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[101],"tindex":"ad874c3a-da88-11e4-b5db-c58dec0de8a8","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[127,501],"tindex":"ad874c3b-da88-11e4-b5db-3198eeaa60aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[458,469,492],"tindex":"ad874c3c-da88-11e4-b5db-f960f7bd13a8","variableMapping":{"flags":"flags","tmpValue":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[312,314,320,322,323,330,344,349,50,352,455,458,459,464,465,466,469,471,483,492,93],"tindex":"ad874c3d-da88-11e4-b5db-a1f748f627c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.next()"},"status":-1},{"failures":[],"tindex":"ad874c3e-da88-11e4-b5db-61957795e975","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"ad874c3f-da88-11e4-b5db-cb73323bfaef","variableMapping":{"originalEdgesCount":"capacity","edgeDifference":"capacity","contractedNeighbors":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[226,227,229,24,25,26,231,233,234,235,236,237,238,239,241,242,312,314,315,45,320,47,322,323,324,325,326,327,328,329,330,333,334,336,337,339,340,341,48,344,346,49,347,348,350,50,155,352,353,357,69,455,456,458,459,460,461,462,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,86,490,491,492,91,92,93,94,96,97,99],"tindex":"ad874c40-da88-11e4-b5db-05d940413fcb","variableMapping":{"intVal":"I_SKIP_EDGE1","degree":"I_SKIP_EDGE1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[115,116],"tindex":"ad877351-da88-11e4-b5db-b5905b8704d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"ad877352-da88-11e4-b5db-13fcb81edbb6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"ad877353-da88-11e4-b5db-639231adc2fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:94","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"ad877354-da88-11e4-b5db-d9f281eac894","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[469,470,471,86,490,492],"tindex":"ad877355-da88-11e4-b5db-9b3d90288c92","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[391,101],"tindex":"ad877356-da88-11e4-b5db-37e4ab28c35f","variableMapping":{"str":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:274","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[464,468,502,503,504,505,506],"tindex":"ad877357-da88-11e4-b5db-0d31f2a3c718","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[312,464,468],"tindex":"ad877358-da88-11e4-b5db-a3a3859e7c88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[400,3,402,4,5,414,507,508,419,422,6,424,7,8,436,9,10,11,448,136,12,13,147],"tindex":"ad877359-da88-11e4-b5db-2198fdf8f2f6","variableMapping":{"high":"allowed","highKey":"allowed","key":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"ad87735a-da88-11e4-b5db-57b619666b69","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[462,464,468,479,504],"tindex":"ad87735b-da88-11e4-b5db-51ea06801ab7","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"i","speed":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"ad87735c-da88-11e4-b5db-cd3fe1312709","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"ad87735d-da88-11e4-b5db-1d8608882170","variableMapping":{"ss":"this","file":"this","raster":"this","this":"this","tifName":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:203","type":"CtTryImpl","sourcecode":"try {\n    java.io.InputStream java.io.InputStream = new java.io.FileInputStream(java.io.File);\n    java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n    java.util.zip.ZipEntry java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry();\n    while ((java.util.zip.ZipEntry != null) && (!(java.util.zip.ZipEntry.getName().equals(java.lang.String)))) {\n        java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry();\n    }\n    org.apache.xmlgraphics.image.codec.util.SeekableStream = org.apache.xmlgraphics.image.codec.util.SeekableStream.org.apache.xmlgraphics.image.codec.util.SeekableStream.wrapInputStream(java.util.zip.ZipInputStream, true);\n    org.apache.xmlgraphics.image.codec.tiff.TIFFImageDecoder org.apache.xmlgraphics.image.codec.tiff.TIFFImageDecoder = new org.apache.xmlgraphics.image.codec.tiff.TIFFImageDecoder(org.apache.xmlgraphics.image.codec.util.SeekableStream , new org.apache.xmlgraphics.image.codec.tiff.TIFFDecodeParam());\n    java.awt.image.Raster = org.apache.xmlgraphics.image.codec.tiff.TIFFImageDecoder.decodeAsRaster();\n} catch (java.lang.Exception java.lang.Exception) {\n    throw new java.lang.RuntimeException((\"Can\\'t decode \" + java.lang.String) , java.lang.Exception);\n} finally {\n    if (org.apache.xmlgraphics.image.codec.util.SeekableStream != null)\n        com.graphhopper.util.Helper.com.graphhopper.util.Helper.close(org.apache.xmlgraphics.image.codec.util.SeekableStream);\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[],"tindex":"ad87735e-da88-11e4-b5db-f928686db2be","variableMapping":{"entry":"entry","entryVal":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"ad87735f-da88-11e4-b5db-3d661555f463","variableMapping":{"tmpNo":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[14,17,19,21,24,27,28,31,33,36,2,38,45,48,50,58,65,66,67,68,69,72,75,87,91,93,94,95,96,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"ad877360-da88-11e4-b5db-2fa9d6188e4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[],"tindex":"ad877361-da88-11e4-b5db-6502599a17fc","variableMapping":{"intVal":"toSize","degree":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[470],"tindex":"ad877362-da88-11e4-b5db-050fdc1fdccf","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"ad877363-da88-11e4-b5db-7592733ee56f","variableMapping":{"radiusInMeter":"shortTripsSpeed","lon":"durationInHours","lat":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":0},{"failures":[74,509],"tindex":"ad877364-da88-11e4-b5db-51e252698c3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[399,421,12],"tindex":"ad879a75-da88-11e4-b5db-3f6c32f5ce3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"ad879a76-da88-11e4-b5db-9bf8e5b079cf","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":0},{"failures":[],"tindex":"ad879a77-da88-11e4-b5db-9591649782f2","variableMapping":{"nodeFlags":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":-2},{"failures":[],"tindex":"ad879a78-da88-11e4-b5db-1b0534ba7abe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[],"tindex":"ad879a79-da88-11e4-b5db-6f6eb5717f2d","variableMapping":{"high":"dir","highKey":"dir","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"ad879a7a-da88-11e4-b5db-5fdb6ed07315","variableMapping":{"lastKey":"encoded","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"ad879a7b-da88-11e4-b5db-8f4e9efaa8fa","variableMapping":{"len":"shift","start":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[14,510,27,28,44,45,91,96,97,98,100],"tindex":"ad879a7c-da88-11e4-b5db-79000dc55636","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"ad879a7d-da88-11e4-b5db-0514422deb03","variableMapping":{"newAdjIndex":"com.graphhopper.routing.util.PriorityWeighting.KEY","newBaseIndex":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[197,202,203,511,229,234,235,512,513,514,515,516,517,518,519,520],"tindex":"ad879a7e-da88-11e4-b5db-b32b356e55c2","variableMapping":{"midLat":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"ad879a7f-da88-11e4-b5db-03e751d9e508","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"ad879a80-da88-11e4-b5db-779522b1d561","variableMapping":{"factor":"minLat","delta_lon":"minLat","a_lon":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[402,404,158,424,426,159,437,160,146,107],"tindex":"ad879a81-da88-11e4-b5db-6f8360e407cc","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"ad879a82-da88-11e4-b5db-7fc903ac8065","variableMapping":{"factor":"maxLon","delta_lon":"minLon","a_lon":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[161,14,15,162,163,16,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,17,185,186,187,188,189,18,190,191,192,193,19,194,148,20,195,196,197,198,21,22,23,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,216,217,521,149,150,151,152,153,219,220,221,222,224,225,226,227,228,229,230,24,25,26,231,232,233,234,235,236,237,238,239,241,242,27,244,28,29,245,246,30,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,31,268,269,270,271,272,32,273,274,275,276,33,277,154,34,278,279,290,2,522,523,40,524,525,526,527,41,42,43,312,313,314,315,316,44,317,318,45,46,319,320,47,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,48,342,343,344,345,346,49,347,348,349,350,50,351,155,51,352,353,354,355,357,358,359,360,361,69,362,364,365,70,71,72,127,366,367,368,369,115,371,372,373,116,1,376,73,74,450,451,75,128,76,76,77,77,453,453,78,78,79,79,80,80,81,81,82,82,83,83,454,454,84,84,85,85,455,456,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,86,490,491,492,91,92,93,94,95,130,96,97,98,99,100,101,131,102,103,104,105,106,107,108,109,110,111,112,113,528,498,499],"tindex":"ad87c193-da88-11e4-b5db-f1e290249fb0","variableMapping":{"i":"segmentSizeInBytes","child":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[74],"tindex":"ad87c194-da88-11e4-b5db-af85daa671f1","variableMapping":{"allIter":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:385","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIterator.fetchWayGeometry(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-1},{"failures":[],"tindex":"ad87c195-da88-11e4-b5db-e16cd66c6d46","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[391],"tindex":"ad87c196-da88-11e4-b5db-97678be6511d","variableMapping":{"highwayValue":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[165,166,173,175,187,191,19,195,248,249,256,258,270,274,33,278,280,281,288,290,302,305,38,310,322,323,330,332,344,348,50,352,69,371,373,382,395,79,82,455,458,459,464,465,466,469,470,471,483,484,492,93,131,113,498,499],"tindex":"ad87c197-da88-11e4-b5db-df7363222bf2","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[529],"tindex":"ad87c198-da88-11e4-b5db-bd2ce1317001","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[372,91,93,94,95,130,96,97,98,99,100,131,102,103,104,105,106,107,108,109,110,111,113],"tindex":"ad87c199-da88-11e4-b5db-11af8d7fff53","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"ad87c19a-da88-11e4-b5db-413ef1534969","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"ad87c19b-da88-11e4-b5db-5fdc4088ff8d","variableMapping":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"ad87c19c-da88-11e4-b5db-b518a55a909e","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[],"tindex":"ad87c19d-da88-11e4-b5db-a531e5f2dc5a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"ad87c19e-da88-11e4-b5db-b15d7b3c0c49","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":346,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":488,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":44,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":509,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":213,"com.graphhopper.GraphHopperAPITest.testNoLoad":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":280,"com.graphhopper.reader.OSMReaderTest.testFerry":101,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":358,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":424,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":138,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":25,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":92,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":257,"com.graphhopper.coll.CompressedArrayTest.testCompress":513,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":144,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":20,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":460,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":36,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":175,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":228,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":59,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":466,"com.graphhopper.GraphHopperTest.testPrepare":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":487,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":455,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":506,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":423,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":480,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":521,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":367,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":320,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":229,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":116,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":421,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":523,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":472,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":478,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":22,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":496,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":27,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":519,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":47,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":504,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":469,"com.graphhopper.GraphHopperTest.testLoadOSM":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":204,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":525,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":23,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":418,"com.graphhopper.reader.OSMReaderTest.testSort":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":434,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":110,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":29,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":125,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":192,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":14,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":517,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":309,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":82,"com.graphhopper.routing.DijkstraTest.initializationError":449,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":528,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":276,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":345,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":171,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":243,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":30,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":331,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":448,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":446,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":233,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":179,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":484,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":231,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":495,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":475,"com.graphhopper.coll.OSMIDMapTest.testGetLong":129,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":474,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":267,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":338,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":45,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":340,"com.graphhopper.coll.CompressedArrayTest.testCompress2":512,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":184,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":438,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":258,"com.graphhopper.GraphHopperAPITest.testLoad":354,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":321,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":524,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":374,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":176,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":166,"com.graphhopper.storage.LevelGraphStorageTest.testClone":325,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":1,"com.graphhopper.reader.OSMReaderTest.testBarriers":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":226,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":403,"com.graphhopper.util.GHUtilityTest.testCopy":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":477,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":242,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":444,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":146,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":215,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":57,"com.graphhopper.routing.PathTest.testFindInstruction":128,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":141,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":249,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":502,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":357,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":380,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":351,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":401,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":193,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":274,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":262,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":410,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":452,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":327,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":285,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":43,"com.graphhopper.util.InstructionListTest.testWayList2":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":305,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":205,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":6,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":510,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":154,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":415,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":422,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":73,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":329,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":157,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":425,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":259,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":149,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":476,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":105,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":60,"com.graphhopper.routing.AStarTest.initializationError":494,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":86,"com.graphhopper.coll.OSMIDMapTest.testGet":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":256,"com.graphhopper.routing.PathBidirRefTest.testExtract":368,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":381,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":48,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":428,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":237,"com.graphhopper.storage.RAMDataAccessTest.testCopy":53,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":136,"com.graphhopper.storage.RAMDataAccessTest.testSegments":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":427,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":210,"com.graphhopper.util.GHUtilityTest.testSort2":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":485,"com.graphhopper.reader.OSMReaderTest.testMain":102,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":266,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":429,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":520,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":159,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":238,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":344,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":307,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":332,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":336,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":352,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":500,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":79,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":270,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":399,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":339,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":112,"com.graphhopper.storage.StorablePropertiesTest.testStore":121,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":156,"com.graphhopper.storage.GraphHopperStorageTest.testClone":168,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":306,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":391,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":114,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":178,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":312,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":286,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":315,"com.graphhopper.routing.PathTest.testTime":451,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":443,"com.graphhopper.util.BitUtilLittleTest.testToFloat":67,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":155,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":326,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":396,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":299,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":343,"com.graphhopper.reader.OSMReaderTest.testRelation":497,"com.graphhopper.util.GHUtilityTest.testSortDirected":364,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":505,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":412,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":64,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":78,"com.graphhopper.GraphHopperTest.testFootOnly":99,"com.graphhopper.util.BitUtilLittleTest.testToInt":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":137,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":150,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":388,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":232,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":508,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":473,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":456,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":398,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":295,"com.graphhopper.search.NameIndexTest.testCreate":120,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":55,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":76,"com.graphhopper.routing.QueryGraphTest.testOneWay":454,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":208,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":516,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":21,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":514,"com.graphhopper.reader.OSMReaderTest.testWithBounds":111,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":58,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":158,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":292,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":300,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":382,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":507,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":322,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":319,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":437,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":411,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":269,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":263,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":16,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":471,"com.graphhopper.util.BitUtilLittleTest.testToBitString":66,"com.graphhopper.util.InstructionListTest.testWayList":71,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":194,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":426,"com.graphhopper.GraphHopperAPITest.testDisconnected179":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":287,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":271,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":282,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":408,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":499,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":298,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":522,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":310,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":433,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":95,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":170,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":151,"com.graphhopper.routing.util.EncodedValueTest.testSwap":529,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":467,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":420,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":482,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":493,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":465,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":50,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":392,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":440,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":246,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":341,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":491,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":240,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":526,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":436,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":161,"com.graphhopper.routing.PathTest.testWayList":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":39,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":291,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":387,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":501,"com.graphhopper.coll.OSMIDMapTest.testGet2":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":492,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":348,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":268,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":432,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":181,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":375,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":254,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":234,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":337,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":235,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":123,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":65,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":236,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":405,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":503,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.util.GHUtilityTest.testSort":362,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":303,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":431,"com.graphhopper.search.NameIndexTest.testPut":118,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":278,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":214,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":230,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":153,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":221,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":402,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":74,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":219,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":244,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":439,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":133,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":416,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":490,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":115,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":42,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":2,"com.graphhopper.routing.PathTest.testFound":450,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":100,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":419,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":350,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":0,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":314,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":430,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":260,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":119,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":290,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":173,"com.graphhopper.util.InstructionListTest.testEmptyList":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":479,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":239,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":483,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":384,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":145,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":383,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":486,"com.graphhopper.reader.PrinctonReaderTest.testRead":498,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":19,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":26,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":255,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":289,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":515,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":35,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":324,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":406,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":442,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":400,"com.graphhopper.reader.OSMReaderTest.testFoot":131,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":85,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":302,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":202,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":518,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":135,"com.graphhopper.reader.OSMReaderTest.testOneWay":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":203,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":177,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":190,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":275,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":142,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":63,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":185,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":404,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":461,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":511,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":458,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":468,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":62,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":459,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":293,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":453,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":162,"com.graphhopper.routing.PathBidirRefTest.testExtract2":369,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":527,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":470,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":206,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":217,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":117,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":189,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":223,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":447,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":311,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":377,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":409,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":464,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":199,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":191,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":363,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":328,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":393,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":17,"com.graphhopper.GraphHopperTest.testFootAndCar":130,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":334,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":241,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":283,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":417,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":394,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":463,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":251,"com.graphhopper.GraphHopperTest.testPrepareOnly":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":489,"com.graphhopper.GraphHopperTest.testVia":93,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":216,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":435,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":281,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":109,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":316,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":127,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":188,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":378,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":296,"com.graphhopper.routing.AStarBidirectionTest.initializationError":370,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":397,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":349,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":347,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":28}}]
