[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"0e39b817-dbd8-11e4-a72c-69d6b5f0d5cc","variableMapping":{"tmp":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[],"tindex":"0e3af098-dbd8-11e4-a72c-25fce096acac","variableMapping":{"i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[41,42],"tindex":"0e3af099-dbd8-11e4-a72c-2bae97fed9ef","variableMapping":{"counter":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"0e3b17aa-dbd8-11e4-a72c-c1c0f4a4678d","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.extractPath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":0},{"failures":[],"tindex":"0e3b17ab-dbd8-11e4-a72c-a140be90775d","variableMapping":{"r":"absY","angle":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-2},{"failures":[43,0,1,4,5,9,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,29,30,31,32,33,36,37,44,45,38,46],"tindex":"0e3b17ac-dbd8-11e4-a72c-edc26565dc1f","variableMapping":{"this":"this","finishedFrom":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[47,48,49,50,51,52,53,54,55],"tindex":"0e3b17ad-dbd8-11e4-a72c-858062966f60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[56,57,58,59,60,61,62,63,64,65],"tindex":"0e3b17ae-dbd8-11e4-a72c-7b0608cb5e77","variableMapping":{"bytePos":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"0e3b17af-dbd8-11e4-a72c-13d8c02a488e","variableMapping":{"nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"0e3b17b0-dbd8-11e4-a72c-4f540c91a60a","variableMapping":{"intVal":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"0e3b17b1-dbd8-11e4-a72c-b9bf059bec7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"0e3b17b2-dbd8-11e4-a72c-47c04b32c0aa","variableMapping":{"midLat":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"0e3b17b3-dbd8-11e4-a72c-33e12d64b94f","variableMapping":{"indexWithMaxDist":"edgeId","lastIndex":"edgeId","fromIndex":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"0e3b17b4-dbd8-11e4-a72c-cfac3140f83c","variableMapping":{"java.lang.Double.MAX_VALUE":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:91","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"0e3b17b5-dbd8-11e4-a72c-795e4af1199a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"0e3b17b6-dbd8-11e4-a72c-c33d7b95672b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[9,10,11,30,31,33],"tindex":"0e3b3ec7-dbd8-11e4-a72c-037fb4ba9d87","variableMapping":{"periodicUpdates":"skippedEdge1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[66,67,68],"tindex":"0e3b3ec8-dbd8-11e4-a72c-4932b1dc6a0f","variableMapping":{"size":"start","index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"0e3b65d9-dbd8-11e4-a72c-21f473831091","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"0e3b65da-dbd8-11e4-a72c-576edf979a18","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"0e3b65db-dbd8-11e4-a72c-c9342c178b02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"0e3b65dc-dbd8-11e4-a72c-2b571547ce22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"0e3b65dd-dbd8-11e4-a72c-9f66b203ec91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:79","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[81,82,83,84,85],"tindex":"0e3b65de-dbd8-11e4-a72c-094887354e8e","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,66,80],"tindex":"0e3b65df-dbd8-11e4-a72c-b3e5844d13d1","variableMapping":{"size":"mSize","index":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"0e3b65e0-dbd8-11e4-a72c-114d471f203e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"0e3b65e1-dbd8-11e4-a72c-6b96f0753644","variableMapping":{"high":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"0e3b65e2-dbd8-11e4-a72c-613496ce3ed9","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[110,111,56,57,58,59,60,61,62,63,64,65],"tindex":"0e3b65e3-dbd8-11e4-a72c-b5fc6b0c01bb","variableMapping":{"speed":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[112,113,114,115,116,117,118,119,90,120,121,122,123,124,125,69,70,71,126,72,127,128,129,130,131,132,133,134,135,96,136,137,138,139,140,141,142,143,144,108,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,30,169,170,171,172,34,35,36,37,44,45,38,39,46,40,173,83,174,175,176,177,178,179,55,180,181,182,183,84,85],"tindex":"0e3b8cf4-dbd8-11e4-a72c-9f2cdd66fc8c","variableMapping":{"len":"index","start":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"0e3b8cf5-dbd8-11e4-a72c-b1190e65c2be","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"0e3b8cf6-dbd8-11e4-a72c-f53e3cae2312","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[4,41,42],"tindex":"0e3b8cf7-dbd8-11e4-a72c-d535c2b62abd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"0e3b8cf8-dbd8-11e4-a72c-31932d609e87","variableMapping":{"shift":"shift","preferWayEncoder":"wayTypeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[56,57,58,59,60,61,62,63,64],"tindex":"0e3b8cf9-dbd8-11e4-a72c-f739df155306","variableMapping":{"resultOrientation":"midLat","orientation":"lat","java.lang.Math.PI":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"0e3b8cfa-dbd8-11e4-a72c-5140eb4c5ae1","variableMapping":{"speed":"minEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[112,113,114,115,116,117,118,119,90,120,121,122,123,124,125,69,70,71,126,72,127,128,129,130,184,131,132,133,134,135,96,136,137,138,139,140,141,142,143,144,108,145,146,147,185,186,148,187,188,189,190,191,192,193,194,195,196,197,149,198,199,200,201,202,203,204,205,206,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,30,169,170,207,171,172,34,35,36,37,44,45,38,39,46,40,173,83,174,175,176,177,178,179,55,180,181,182,183,84,85,208,209,210],"tindex":"0e3b8cfb-dbd8-11e4-a72c-151a9b320293","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[211],"tindex":"0e3b8cfc-dbd8-11e4-a72c-61031af947f6","variableMapping":{"size":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[68],"tindex":"0e3b8cfd-dbd8-11e4-a72c-19336604635f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[212,213,49,34,45,40,173,83,174,175,176,178,179,180,183,84,85],"tindex":"0e3b8cfe-dbd8-11e4-a72c-97fed2fa3a57","variableMapping":{"wayTypeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"0e3b8cff-dbd8-11e4-a72c-d59546c791e1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"0e3b8d00-dbd8-11e4-a72c-353ae817ed61","variableMapping":{"this":"this","unknownSpeed":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"0e3bb411-dbd8-11e4-a72c-e567b847ea32","variableMapping":{"acceptBit":"ferryBit","intendedValues":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[214],"tindex":"0e3bb412-dbd8-11e4-a72c-65851c74b176","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-1},{"failures":[],"tindex":"0e3bb413-dbd8-11e4-a72c-39fce2238f58","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"0e3bb414-dbd8-11e4-a72c-b502d93ab21d","variableMapping":{"systemProperty":"com.graphhopper.routing.util.EncodingManager.BIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"0e3bb415-dbd8-11e4-a72c-450cef5ec7b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"0e3bb416-dbd8-11e4-a72c-4dcc9393a602","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:97","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":0},{"failures":[],"tindex":"0e3bb417-dbd8-11e4-a72c-99d591d5b247","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"0e3bb418-dbd8-11e4-a72c-bbfd246732a8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[116,119,90,120,123,127,131,132,135,96,136,215,139,102,216,217,218,141,144,108,145,187,192,193,194,195,198,203,204,205,206,219,220,221,150,152,157,160,166,168,30,169,207,34,37,44,38,46,83,175,176,177,178,179,55,180,181,182,183,84,85],"tindex":"0e3bb419-dbd8-11e4-a72c-df3cc19dbbe4","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"0e3bb41a-dbd8-11e4-a72c-bb120c95d103","variableMapping":{"entry":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-2},{"failures":[222,223],"tindex":"0e3bb41b-dbd8-11e4-a72c-f1547230cc76","variableMapping":{"maxSpeed":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[56,57,58,59,60,61,62,63,64,65],"tindex":"0e3bb41c-dbd8-11e4-a72c-adbc7bb26861","variableMapping":{"flags":"bits","mask":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"0e3bb41d-dbd8-11e4-a72c-b19e5a10568a","variableMapping":{"todoBytes":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"0e3bb41e-dbd8-11e4-a72c-dbc3a9895a63","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"0e3bb41f-dbd8-11e4-a72c-9d5bba6f06f4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[224,225,226,227,228,229,230,231,232,19,56,57,58,59,60,61,63,64,233,234,65],"tindex":"0e3bdb30-dbd8-11e4-a72c-9d6a9736824b","variableMapping":{"i":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"0e3bdb31-dbd8-11e4-a72c-792b61da6b0d","variableMapping":{"edgeId":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-2},{"failures":[0,1,5,9,10,11,12,13,14,16,17,19,20,22,23,24,25,26,27,29,31,32,33,36],"tindex":"0e3bdb32-dbd8-11e4-a72c-0d32932731d4","variableMapping":{"midLat":"distance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"0e3bdb33-dbd8-11e4-a72c-8159abfbf636","variableMapping":{"max":"segmentSizePower","tmpSize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":0},{"failures":[235,47,48,236,237,50,51,238,239,52,240,53,54,241],"tindex":"0e3bdb34-dbd8-11e4-a72c-e95df913ab87","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"0e3bdb35-dbd8-11e4-a72c-c7acef94132a","variableMapping":{"tmpOsmFile":"this","osmFile":"this","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:466","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String)))\n    java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[56,57,58,59,60,61,62,63,64,65],"tindex":"0e3bdb36-dbd8-11e4-a72c-fb536229b4a2","variableMapping":{"distInMeter":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"0e3bdb37-dbd8-11e4-a72c-7df0ccecb424","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"0e3bdb38-dbd8-11e4-a72c-d790adc84ec6","variableMapping":{"edgeTo":"code","edgeFrom":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-2},{"failures":[],"tindex":"0e3bdb39-dbd8-11e4-a72c-4df4c7e08bf4","variableMapping":{"size":"maxTurnCosts","newSize":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":0},{"failures":[242,243,244,245],"tindex":"0e3bdb3a-dbd8-11e4-a72c-77b655390e1c","variableMapping":{"nanoTime":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[],"tindex":"0e3bdb3b-dbd8-11e4-a72c-310176aa391f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"0e3bdb3c-dbd8-11e4-a72c-1552983d3207","variableMapping":{"shift":"shift","preferWayEncoder":"wayTypeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[56,57,58,59,60,61,62,63,64,65],"tindex":"0e3bdb3d-dbd8-11e4-a72c-c91d8917e18d","variableMapping":{"value":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"0e3bdb3e-dbd8-11e4-a72c-8b162b3c01da","variableMapping":{"maxTurnCosts":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","turnRestrictionBit":"flags","flags":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"0e3bdb3f-dbd8-11e4-a72c-ad0ce60feb9a","variableMapping":{"endIndexPlusOne":"length","frontIndex":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[246,247,248,249,250,251,252,253,254,255,256,257,154,258,259,260,261,81,262,263,82,264,265,156,235,266,267,47,48,268,269,270,271,272,273,274,49,237,275,276,50,51,277,278,279,239,280,52,281,282,283,284,53,54,285,286,287,288,157,10,11,20,22,23,36,45,83,174,84,85],"tindex":"0e3c0250-dbd8-11e4-a72c-59301bbbea2f","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[0,5,10,11,33],"tindex":"0e3c0251-dbd8-11e4-a72c-6745c476220a","variableMapping":{"initLeafSize":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[289,116,117,290,291,292,118,293,86,294,295,296,297,298,246,299,300,247,87,88,301,302,303,304,305,89,306,119,307,308,309,310,311,90,91,312,313,314,120,315,121,122,316,317,248,249,250,251,131,318,319,132,133,320,321,322,134,323,92,324,325,326,327,328,252,329,330,253,93,94,331,332,333,334,335,95,336,135,337,338,339,340,341,96,97,342,343,344,136,345,137,138,346,347,348,349,98,350,351,352,353,354,254,355,356,255,99,100,357,358,359,360,361,101,362,215,363,364,365,366,139,102,103,367,368,369,216,370,371,372,373,374,375,376,377,378,379,140,380,381,141,142,382,383,384,143,385,104,386,387,388,389,390,256,391,392,257,105,106,393,394,395,396,397,107,398,144,399,400,401,402,403,108,109,404,405,406,145,407,146,147,408,409,410,258,411,212,259,412,213,413,414,415,416,260,261,417,81,418,262,263,82,419,420,421,422,264,265,423,49,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,45,40],"tindex":"0e3c0252-dbd8-11e4-a72c-e52ffe275d73","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-1},{"failures":[266,267,47,48,268,270,273,274,49,275,276,50,51,277,279,280,52,281,283,53,54,285,287,55],"tindex":"0e3c0253-dbd8-11e4-a72c-b1f30579b66e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-1},{"failures":[66,68],"tindex":"0e3c0254-dbd8-11e4-a72c-7dbee6d5dfe6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"0e3c0255-dbd8-11e4-a72c-fbc14b854224","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[415],"tindex":"0e3c0256-dbd8-11e4-a72c-a51ce8f27322","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[421,266,267,48,424,425,268,270,273,426,274,275,276,51,427,428,277,279,280,52,429,281,283,54,430,285,287,431,55,432],"tindex":"0e3c0257-dbd8-11e4-a72c-19946bd9d8da","variableMapping":{"shift":"value","flags":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[],"tindex":"0e3c0258-dbd8-11e4-a72c-b3d3c3cb57e9","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:245","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"0e3c2969-dbd8-11e4-a72c-c7c59f99be91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"0e3c296a-dbd8-11e4-a72c-f3f197cfacdc","variableMapping":{"from":"maxTurnCosts","to":"maxTurnCosts","reverse":"restricted"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-2},{"failures":[],"tindex":"0e3c296b-dbd8-11e4-a72c-355c3d97d5c1","variableMapping":{"initialized":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:299","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call prepareIndex only once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[],"tindex":"0e3c296c-dbd8-11e4-a72c-6f6ad3042014","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[49],"tindex":"0e3c296d-dbd8-11e4-a72c-bfc40499ba2d","variableMapping":{"tmpDegreeCounter":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"0e3c296e-dbd8-11e4-a72c-796c01f19d99","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[267,268,276,277,280,52,281,54,285],"tindex":"0e3c296f-dbd8-11e4-a72c-8d742010e184","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:40","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation.setEmpty()"},"status":-1},{"failures":[156],"tindex":"0e3c2970-dbd8-11e4-a72c-bf1110a0aa0e","variableMapping":{"points":"pl"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:223","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-1},{"failures":[],"tindex":"0e3c2971-dbd8-11e4-a72c-f95a7d1e5a93","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":0},{"failures":[154,212,213,260,261,262,263,82,265,266,267,47,48,268,270,273,274,49,275,276,50,51,277,279,280,52,281,283,284,53,54,285,287,36,174,84,85],"tindex":"0e3c2972-dbd8-11e4-a72c-d73b4ccdf769","variableMapping":{"bits":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[66,68],"tindex":"0e3c2973-dbd8-11e4-a72c-e1f39f7b94e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[154,260,262,263,265,47,48,269,49,50,51,278,52,282,284,53,54,286,36,37,44,45,38,46,84],"tindex":"0e3c2974-dbd8-11e4-a72c-7307ba4bf4f4","variableMapping":{"y":"maxSpeed","angle":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[],"tindex":"0e3c2975-dbd8-11e4-a72c-8ff15f955b2a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"0e3c2976-dbd8-11e4-a72c-555ad7d49221","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[],"tindex":"0e3c2977-dbd8-11e4-a72c-7f73d45630b6","variableMapping":{"scDirMask":"ferryBit","flags":"ferryBit","dir":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[86,87,88,302,89,306,90,91,92,93,94,332,95,336,96,97,98,99,100,358,101,362,102,103,104,105,106,394,107,398,108,109,66,80],"tindex":"0e3c5088-dbd8-11e4-a72c-fd6d2dbc2951","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"mSize","sign":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[82],"tindex":"0e3c5089-dbd8-11e4-a72c-8183a1bac423","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"0e3c508a-dbd8-11e4-a72c-dd88aae36300","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":403,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":28,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":160,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":140,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":349,"com.graphhopper.reader.OSMReaderTest.testFerry":83,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":73,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":74,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":50,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":241,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":128,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":35,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":268,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":330,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":196,"com.graphhopper.coll.CompressedArrayTest.testCompress":57,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":3,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":215,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":247,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":197,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":6,"com.graphhopper.GraphHopperTest.testPrepare":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":370,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":305,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":20,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":151,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":285,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":78,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":383,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":229,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":67,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":54,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":18,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":300,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":124,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":131,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":233,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":143,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":9,"com.graphhopper.GraphHopperTest.testLoadOSM":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":125,"com.graphhopper.reader.OSMReaderTest.testSort":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":278,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":79,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":133,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":199,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":313,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":116,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":371,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":165,"com.graphhopper.storage.RAMDataAccessTest.testHeader":191,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":344,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":402,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":298,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":318,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":326,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":134,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":392,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":283,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":282,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":355,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":14,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":104,"com.graphhopper.coll.OSMIDMapTest.testGetLong":171,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":336,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":396,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":141,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":107,"com.graphhopper.coll.CompressedArrayTest.testCompress2":56,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":306,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":253,"com.graphhopper.GraphHopperAPITest.testLoad":43,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":384,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":410,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":87,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":86,"com.graphhopper.storage.LevelGraphStorageTest.testClone":387,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":68,"com.graphhopper.reader.OSMReaderTest.testBarriers":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":323,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":424,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":17,"com.graphhopper.util.GHUtilityTest.testCopy":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":352,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":251,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":245,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":194,"com.graphhopper.routing.PathTest.testFindInstruction":158,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":430,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":92,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":213,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":407,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":314,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":332,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":381,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":389,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":353,"com.graphhopper.util.InstructionListTest.testWayList2":153,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":367,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":316,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":137,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":271,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":275,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":117,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":155,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":256,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":427,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":93,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":16,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":293,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":178,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":30,"com.graphhopper.coll.OSMIDMapTest.testGet":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":329,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":413,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":144,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":207,"com.graphhopper.storage.RAMDataAccessTest.testCopy":187,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":347,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":102,"com.graphhopper.storage.RAMDataAccessTest.testSegments":193,"com.graphhopper.util.GHUtilityTest.testSort2":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":25,"com.graphhopper.reader.OSMReaderTest.testMain":175,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":142,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":428,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":243,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":260,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":369,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":257,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":394,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":408,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":431,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":105,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":235,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":397,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":84,"com.graphhopper.storage.StorablePropertiesTest.testStore":130,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":148,"com.graphhopper.storage.GraphHopperStorageTest.testClone":295,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":368,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":82,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":262,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":301,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":375,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":354,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":378,"com.graphhopper.routing.PathTest.testTime":288,"com.graphhopper.util.BitUtilLittleTest.testToFloat":220,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":146,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":388,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":362,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":400,"com.graphhopper.reader.OSMReaderTest.testRelation":432,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":222,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":269,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":205,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":161,"com.graphhopper.GraphHopperTest.testFootOnly":40,"com.graphhopper.util.BitUtilLittleTest.testToInt":221,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":81,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":230,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":359,"com.graphhopper.search.NameIndexTest.testCreate":115,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":192,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":159,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":123,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":58,"com.graphhopper.reader.OSMReaderTest.testWithBounds":183,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":195,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":100,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":363,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":414,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":273,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":385,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":382,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":338,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":250,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":333,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":118,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":11,"com.graphhopper.util.BitUtilLittleTest.testToBitString":219,"com.graphhopper.util.InstructionListTest.testWayList":152,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":315,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":254,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":340,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":350,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":373,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":44,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":297,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":7,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":309,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":5,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":145,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":419,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":321,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":32,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":292,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":279,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":289,"com.graphhopper.routing.PathTest.testWayList":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":372,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":99,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":417,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":214,"com.graphhopper.coll.OSMIDMapTest.testGet2":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":33,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":202,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":404,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":337,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":304,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":258,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":328,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":231,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":395,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":232,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":188,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":280,"com.graphhopper.util.GHUtilityTest.testSort":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":366,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":65,"com.graphhopper.search.NameIndexTest.testPut":113,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":346,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":111,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":72,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":47,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":164,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":156,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":319,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":209,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":272,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":334,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":66,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":218,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":139,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":49,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":173,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":406,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":377,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":94,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":114,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":255,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":185,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":422,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":416,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":286,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":415,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":26,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":120,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":129,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":252,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":59,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":348,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":335,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":426,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":266,"com.graphhopper.reader.OSMReaderTest.testFoot":174,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":168,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":365,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":64,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":226,"com.graphhopper.reader.OSMReaderTest.testOneWay":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":227,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":88,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":91,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":343,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":204,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":307,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":361,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":2,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":203,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":411,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":357,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":223,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":290,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":211,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":10,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":249,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":281,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":112,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":311,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":240,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":55,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":374,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":4,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":312,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":390,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":420,"com.graphhopper.GraphHopperTest.testFootAndCar":45,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":119,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":106,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":52,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":351,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":423,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":421,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":29,"com.graphhopper.GraphHopperTest.testPrepareOnly":34,"com.graphhopper.GraphHopperTest.testVia":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":98,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":181,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":379,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":154,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":310,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":259,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":360,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":265,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":405,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":109,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":132}}]
