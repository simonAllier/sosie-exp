[{"failures":[],"tindex":"6b2fe84f-dacd-11e4-ac14-abf898d04cef","variableMapping":{"closestNode":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"6b30f9c0-dacd-11e4-ac14-a7bb61947cd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"6b30f9c1-dacd-11e4-ac14-b1b7c9256c2d","variableMapping":{"obtained":"integ"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"6b30f9c2-dacd-11e4-ac14-67b7342d5456","variableMapping":{"len":"flags","start":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"6b30f9c3-dacd-11e4-ac14-ff7be1513ca7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[95,96,97,98,99,100,101,102],"tindex":"6b30f9c4-dacd-11e4-ac14-0b4cd1cc48b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"6b30f9c5-dacd-11e4-ac14-c5778569ed7b","variableMapping":{"size":"frontIndex","hash":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[103,104,105,106,107,5,108,6,7,8,109,110,111,9,112,113,114,115,116,117,118,119,120,121,10,122,123,124,125,126,127,128,129,130,11,131,132,133,134,135,12,136,137,138,139,13,140,14,15,141,142,16,143,17,18,19,144,145,146,20,147,148,149,150,151,152,153,154,155,156,21,157,158,159,160,161,162,163,164,165,22,166,167,168,169,170,23,171,172,173,174,24,175,25,26,176,177,178,179,180,181,34,35,36,182,183,184,37,185,186,187,188,189,190,191,192,193,194,38,195,196,197,198,199,200,201,202,203,39,204,205,206,207,208,40,209,210,211,212,41,213,42,43,214,215,216,217,218,219,220,221,222,223,224,225,226,44,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,55,59,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,89,285,286,287],"tindex":"6b3120d6-dacd-11e4-ac14-15dda542c2cd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-1},{"failures":[],"tindex":"6b3120d7-dacd-11e4-ac14-fbdba28e89fa","variableMapping":{"size":"maxCount","capacity":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":0},{"failures":[113,122,123,129,12,136,148,157,158,164,23,171,186,195,196,202,40,209,218,227,228,234,242,243,288,289],"tindex":"6b3120d8-dacd-11e4-ac14-e94256d1f6bb","variableMapping":{"size":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"6b3120d9-dacd-11e4-ac14-b34c6ccb86cd","variableMapping":{"flags2":"unpavedBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"unpavedBit","flags1":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[290],"tindex":"6b3120da-dacd-11e4-ac14-8fe593facc29","variableMapping":{"bytePos":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"6b3120db-dacd-11e4-ac14-bf84160f036a","variableMapping":{"nodeFlags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"6b3120dc-dacd-11e4-ac14-87fb4553fdcb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[],"tindex":"6b3120dd-dacd-11e4-ac14-131aad54b4ea","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[],"tindex":"6b3120de-dacd-11e4-ac14-13b279f2cda8","variableMapping":{"byteCount":"internalFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"6b3120df-dacd-11e4-ac14-8b46617d40f3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"6b3120e0-dacd-11e4-ac14-4b3bdf7a8bcf","variableMapping":{"maxMCSpeed":"key","speed":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[],"tindex":"6b3120e1-dacd-11e4-ac14-69431755cfee","variableMapping":{"nodeB":"shift","edgeId":"shift","nodeA":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[263],"tindex":"6b3120e2-dacd-11e4-ac14-312057655219","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"6b3120e3-dacd-11e4-ac14-abc9102d636e","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:76","type":"CtReturnImpl","sourcecode":"return java.lang.String.trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":0},{"failures":[291],"tindex":"6b3147f4-dacd-11e4-ac14-bf43fa39481a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[292,293,294,295,296,297,298,299,300,301,302,303,304],"tindex":"6b3147f5-dacd-11e4-ac14-6f6fed7899fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"6b3147f6-dacd-11e4-ac14-ddb855e80a6c","variableMapping":{"nodes":"index","adj":"index","base":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[],"tindex":"6b3147f7-dacd-11e4-ac14-cfc1f5d66d79","variableMapping":{"i":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[52,53,56,59,265,266,267,268,269,270,271,272,273,274,277,278,279,280,281,282,284,89,285,286,287,305,306,307,308,309],"tindex":"6b3147f8-dacd-11e4-ac14-dda9e633856b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"6b3147f9-dacd-11e4-ac14-65c504a3b1ae","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"6b3147fa-dacd-11e4-ac14-cd18ece67432","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:188","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[288,310,311],"tindex":"6b3147fb-dacd-11e4-ac14-53f82e7ff4c6","variableMapping":{"err":"start","tmpErr":"start","y1":"start","dLon":"start","sLat":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[312,313,314,291,315,316,317],"tindex":"6b3147fc-dacd-11e4-ac14-37810ad1043d","variableMapping":{"deltaX":"speed","maxX":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[],"tindex":"6b3147fd-dacd-11e4-ac14-89d26d83873c","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[318,112,113,119,126,133,137,141,147,148,154,161,168,172,176,178,179,180,181,185,186,192,199,206,210,214,217,218,224,231,239,244,251,52,55,62,74,78,81,260,266,278,279,287,306,307,319,309],"tindex":"6b3147fe-dacd-11e4-ac14-1b9d933c6ee2","variableMapping":{"hash":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"6b3147ff-dacd-11e4-ac14-bb281b5911f4","variableMapping":{"ghLocation":"trackType","osmFile":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":0},{"failures":[259,263],"tindex":"6b314800-dacd-11e4-ac14-954532e02657","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[4,320,321,322,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"6b314801-dacd-11e4-ac14-518862864606","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"6b314802-dacd-11e4-ac14-29a050dbb9e2","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"6b316f13-dacd-11e4-ac14-4931b10a0a9a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"6b316f14-dacd-11e4-ac14-bf3f779f6d74","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"6b316f15-dacd-11e4-ac14-63cf7e2a5cb1","variableMapping":{"high":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","highKey":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","key":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[323,324,325],"tindex":"6b316f16-dacd-11e4-ac14-1da368d51439","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[113,121,123,125,129,130,12,136,148,156,158,160,164,165,23,171,186,194,196,198,202,203,40,209,218,226,228,230,234,235,242,243,74,288,289],"tindex":"6b316f17-dacd-11e4-ac14-3365bfe0d50f","variableMapping":{"next":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:424","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[326,96,327,328,98,329,100,330,331,102],"tindex":"6b316f18-dacd-11e4-ac14-a705860b3d54","variableMapping":{"defaultUTurnCost":"prio","weight":"prio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"6b316f19-dacd-11e4-ac14-13af2087978d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[52,73,332,314,333,291,315,334,93],"tindex":"6b316f1a-dacd-11e4-ac14-d9cfca99b792","variableMapping":{"y":"maxSpeed","angle":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-1},{"failures":[318,103,107,7,112,113,116,117,10,126,128,133,135,137,139,13,141,16,18,147,148,151,152,21,161,163,168,170,172,174,24,176,35,185,186,189,190,38,199,201,206,208,210,212,41,214,217,218,221,222,44,231,233,239,241,244,246,247,251,52,53,54,55,58,62,63,68,74,78,81,85,288,335,289,310,88,336,337,338,258,260,265,267,268,271,275,277,280,282,284,89,285,287,305,339,306,340,341,342,343,307,308,319,344,309,345,90,91,92,94],"tindex":"6b316f1b-dacd-11e4-ac14-a9125c48f91b","variableMapping":{"initialBits":"backwardBit","allBits":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"6b316f1c-dacd-11e4-ac14-e713dff1518c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[346,314,315],"tindex":"6b316f1d-dacd-11e4-ac14-d729e27dcdfe","variableMapping":{"initLeafSize":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[347,348,96,327,98,100,330,102],"tindex":"6b316f1e-dacd-11e4-ac14-15fd6df7bae3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"6b31962f-dacd-11e4-ac14-879093efa1d6","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Dijkstra:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Dijkstra.extractPath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-2},{"failures":[],"tindex":"6b319630-dacd-11e4-ac14-d57a79fce85d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:413","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId())"},"status":-2},{"failures":[68,347,348,255,349,350,95,96,327,351,332,352,97,98,353,354,99,100,330,355,334,356,101,102],"tindex":"6b319631-dacd-11e4-ac14-199c26a4cf40","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[],"tindex":"6b319632-dacd-11e4-ac14-21d54d61c01c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"6b319633-dacd-11e4-ac14-2570fddc51eb","variableMapping":{"da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[357,358,359,360,361,362,5,7,115,363,364,16,18,150,170,365,366,35,188,208,220,241,50,56,57,58,60],"tindex":"6b319634-dacd-11e4-ac14-2732ea1b24ee","variableMapping":{"err":"bytePos","dLat":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"6b319635-dacd-11e4-ac14-f71933c7088b","variableMapping":{"size":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[],"tindex":"6b319636-dacd-11e4-ac14-253b8f5665f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[104,106,108,367,368,52,59,271,274,275,282,284,285,287],"tindex":"6b319637-dacd-11e4-ac14-1d6dbf9a87f4","variableMapping":{"updatedA":"I_LEVEL","nodeA":"nodeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1305","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[1,2,3,369,370,5,7,9,11,12,13,14,16,18,20,22,23,24,25,27,29,30,32,33,35,37,39,40,41,42,45,46,47,48,49,50,52,56,57,58,60,63,66,67,76,81,82,84,85,86,89,90,91,92,93,94],"tindex":"6b319638-dacd-11e4-ac14-1736a7af3ed9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"6b319639-dacd-11e4-ac14-f9056b0ec552","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[254],"tindex":"6b31963a-dacd-11e4-ac14-0f00cb02db9e","variableMapping":{"workerThreads":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[288,310,311],"tindex":"6b31bd4b-dacd-11e4-ac14-5fc3a1a22ff3","variableMapping":{"node":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[],"tindex":"6b31bd4c-dacd-11e4-ac14-0bd75b8334bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"6b31bd4d-dacd-11e4-ac14-037901243002","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"6b31bd4e-dacd-11e4-ac14-651e6c5f2d76","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"6b31bd4f-dacd-11e4-ac14-77d2f9a7a4c8","variableMapping":{"hasOther":"synched","hasRel":"synched"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"6b31bd50-dacd-11e4-ac14-9b96b77556c2","variableMapping":{"latlon":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"6b31bd51-dacd-11e4-ac14-bde1a918f283","variableMapping":{"max":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","tmpSize":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[318,371,103,104,105,106,107,5,108,6,7,8,109,110,9,112,113,114,115,116,117,118,119,120,121,10,122,123,124,125,126,127,128,129,130,11,131,132,133,134,135,12,136,137,138,139,13,140,14,15,141,142,16,17,18,19,144,145,20,147,148,149,150,151,152,153,154,155,156,21,157,158,159,160,161,162,163,164,165,22,166,167,168,169,170,23,171,172,173,174,24,175,25,26,176,177,372,373,374,365,375,376,377,366,378,379,380,381,382,383,384,385,386,178,292,387,27,28,29,388,389,390,293,294,391,392,393,394,395,396,179,367,397,368,295,398,30,31,32,399,400,401,296,297,402,403,404,405,406,407,180,408,409,410,411,412,413,414,415,416,417,418,181,34,35,36,182,183,37,185,186,187,188,189,190,191,192,193,194,38,195,196,197,198,199,200,201,202,203,39,204,205,206,207,208,40,209,210,211,212,41,213,42,43,214,215,44,241,50,51,52,53,54,55,56,57,58,59,60,419,420,421,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,75,76,76,422,422,77,77,78,78,79,79,80,80,81,81,82,82,423,423,83,83,84,84,424,425,426,427,85,86,288,335,428,289,310,311,87,88,258,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,89,285,286,287,305,339,306,340,341,342,343,429,307,308,319,430,344,309,431,432,345,433,90,91,92,93,434,435,436,437,94,438,439],"tindex":"6b31bd52-dacd-11e4-ac14-d50fd300c927","variableMapping":{"err":"segmentSizeInBytes","dLat":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[292,389,293,294,440,295,400,296,297,441,298,299,300,301,442,302,303,304],"tindex":"6b31bd53-dacd-11e4-ac14-b3b16edadbef","variableMapping":{"incEleSum":"maxLatTmp","eleDelta":"minLatTmp","incDist2DSum":"lat","decEleSum":"lat","fullDist2D":"maxLatTmp","decDist2DSum":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[290],"tindex":"6b31e464-dacd-11e4-ac14-9b02109bd904","variableMapping":{"segmentSizeInBytes":"minutes","indexDivisor":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"6b31e465-dacd-11e4-ac14-bdfd6a4001e2","variableMapping":{"name":"wayTypeName","refName":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:449","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[288,310,311],"tindex":"6b31e466-dacd-11e4-ac14-a5e7da1a9a8a","variableMapping":{"segmentSizeInBytes":"start","index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"6b31e467-dacd-11e4-ac14-d18db3793cbd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"6b32cec8-dacd-11e4-ac14-81d8d6360038","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,443,74,444,445,446,332,447,448,449,333,450,451,291,337,256,259,262,263,452,453,454,334,455,456,457],"tindex":"6b32cec9-dacd-11e4-ac14-d703fbbbfa18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-1},{"failures":[458,459],"tindex":"6b32ceca-dacd-11e4-ac14-95af60e77271","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-1},{"failures":[],"tindex":"6b32cecb-dacd-11e4-ac14-313e584bcfb3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[318,371,460,103,104,105,106,107,5,108,6,7,8,109,110,111,9,112,113,114,115,116,117,118,119,120,121,10,122,123,124,125,126,127,128,129,130,11,131,132,133,134,135,12,136,137,138,139,13,140,14,15,141,142,16,143,17,18,19,144,145,146,20,147,148,149,150,151,152,153,154,155,156,21,157,158,159,160,161,162,163,164,165,22,166,167,168,169,170,23,171,172,173,174,24,175,25,26,176,177,382,383,384,385,461,386,178,292,387,27,28,29,388,389,390,293,294,391,392,393,394,395,396,179,367,397,368,295,398,30,31,32,399,400,401,296,297,402,403,404,405,406,407,180,409,410,411,412,462,413,414,415,416,417,463,418,181,34,35,36,182,183,184,37,185,186,187,188,189,190,191,192,193,194,38,195,196,197,198,199,200,201,202,203,39,204,205,206,207,208,40,209,210,211,212,41,213,42,43,214,215,216,217,218,219,220,221,222,223,224,225,226,44,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,50,51,52,53,54,55,56,464,57,58,59,60,465,420,421,61,62,63,64,65,66,67,68,69,466,70,71,72,73,74,75,76,422,77,78,79,80,81,82,423,83,84,467,424,425,468,469,470,426,427,85,86,253,471,255,472,473,288,335,428,289,310,311,474,349,475,350,476,444,477,326,478,479,480,95,312,445,96,446,87,88,481,482,327,483,351,332,352,484,447,448,485,328,486,487,488,489,97,313,449,490,98,491,492,333,336,450,451,493,291,315,337,494,495,496,338,497,256,257,258,259,260,261,262,263,264,452,498,353,354,453,499,329,500,501,502,503,99,316,454,504,100,505,506,330,507,355,334,356,508,455,456,509,331,510,511,512,513,101,317,457,514,102,515,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,89,285,286,287,305,339,516,306,340,341,342,343,429,307,308,319,430,344,309,431,432,345,433,90,91,92,93,434,435,436,437,94,438,517,439],"tindex":"6b32f5dc-dacd-11e4-ac14-cd86e6ec08d5","variableMapping":{"high":"defaultL","len":"defaultL","start":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"6b32f5dd-dacd-11e4-ac14-3fbef0476014","variableMapping":{"this":"osmReader"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:802","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.printInfo(\"way\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[346,93],"tindex":"6b32f5de-dacd-11e4-ac14-55198963fcd9","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:200","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"6b32f5df-dacd-11e4-ac14-11d4ee810d59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"6b32f5e0-dacd-11e4-ac14-59916d524965","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[318,7,9,112,113,120,10,133,137,13,141,16,18,20,147,148,155,21,168,172,24,176,35,37,185,186,193,38,206,210,41,214,216,217,218,225,44,239,244,247,251,420,421,62,74,78,81,288,310,311,265,266,270,273,276,278,279,287,305,306,340,307,308,319,309,345,434],"tindex":"6b32f5e1-dacd-11e4-ac14-7d76caae97f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-1},{"failures":[],"tindex":"6b32f5e2-dacd-11e4-ac14-2b1f6bf8812a","variableMapping":{"edgeCount":"start","this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:376","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureEdgeIndex(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-2},{"failures":[],"tindex":"6b32f5e3-dacd-11e4-ac14-07dd02500c69","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[267,270,271,282,284,285,305,307,308],"tindex":"6b32f5e4-dacd-11e4-ac14-7de3ec2b3f1a","variableMapping":{"edgeId":"from","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"from","nodeA":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"6b32f5e5-dacd-11e4-ac14-f1efd82dd7f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[318,371,518,519,520,103,104,105,106,107,5,108,6,7,8,109,110,9,112,113,114,115,116,117,118,119,120,121,10,122,123,124,125,126,127,128,129,130,11,131,132,133,134,135,12,136,137,138,139,13,140,14,15,141,142,16,17,18,19,144,145,20,147,148,149,150,151,152,153,154,155,156,21,157,158,159,160,161,162,163,164,165,22,166,167,168,169,170,23,171,172,173,174,24,175,25,26,176,177,382,383,384,385,386,178,292,387,27,28,29,388,389,390,293,294,391,392,393,394,396,179,367,397,368,295,398,30,31,32,399,400,401,296,297,402,403,404,405,407,180,408,409,410,411,412,413,414,415,416,417,418,181,33,34,35,36,182,183,37,185,186,187,188,189,190,191,192,193,194,38,195,196,197,198,199,200,201,202,203,39,204,205,206,207,208,40,209,210,211,212,41,213,42,43,214,215],"tindex":"6b331cf6-dacd-11e4-ac14-dda7f9943e58","variableMapping":{"i":"segmentSizePower","child":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[350,95,351,352,97,353,99,355,356,101],"tindex":"6b331cf7-dacd-11e4-ac14-873b69f0a413","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[318,52,53,54,55,56,58,59,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,284,89,285,286,287,305,306,307,308,309],"tindex":"6b331cf8-dacd-11e4-ac14-9d2289f7e3c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"status":-1},{"failures":[452,498,353,354,453,499,329,500,501,502,503,99,316,454,504,100],"tindex":"6b331cf9-dacd-11e4-ac14-45b3d1af21d5","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"6b331cfa-dacd-11e4-ac14-6b7e840993ab","variableMapping":{"cap":"otherValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"6b34075b-dacd-11e4-ac14-6948039912be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[61,451],"tindex":"6b34075c-dacd-11e4-ac14-0b440914cb17","variableMapping":{"orientation":"shortTripsSpeed","resultOrientation":"longTripsSpeed","baseOrientation":"longTripsSpeed","java.lang.Math.PI":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[474,349,475,350,476,444,477,326,478,479,480,95,312,445,96],"tindex":"6b34075d-dacd-11e4-ac14-0b607f10a7e3","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"6b34075e-dacd-11e4-ac14-a35085a50cbd","variableMapping":{"size":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":0},{"failures":[],"tindex":"6b34075f-dacd-11e4-ac14-a3e247d8a955","variableMapping":{"wayIndex":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:263","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"6b340760-dacd-11e4-ac14-e99923fc9fd5","variableMapping":{"i":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"6b340761-dacd-11e4-ac14-51673625af24","variableMapping":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"i","i":"i","mValues":"elem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:118","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.coll.SparseIntIntArray.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[62,68,347,348,349,350,95,96,327,351,332,352,97,98,353,354,99,100,330,355,334,356,101,102],"tindex":"6b340762-dacd-11e4-ac14-adc26e69cadd","variableMapping":{"lastTime":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":135,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":283,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":5,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":314,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":384,"com.graphhopper.GraphHopperAPITest.testNoLoad":460,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":217,"com.graphhopper.reader.OSMReaderTest.testFerry":61,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":434,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":435,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":476,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":31,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":51,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":156,"com.graphhopper.coll.CompressedArrayTest.testCompress":304,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":480,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":43,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":236,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":38,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":368,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":519,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":319,"com.graphhopper.GraphHopperTest.testPrepare":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":282,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":305,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":325,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":507,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":275,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":408,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":95,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":432,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":110,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":295,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":310,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":350,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":506,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":373,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":267,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":273,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":28,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":356,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":465,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":16,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":442,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":9,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":309,"com.graphhopper.GraphHopperTest.testLoadOSM":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":391,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":376,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":29,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":471,"com.graphhopper.reader.OSMReaderTest.testSort":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":317,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":19,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":211,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":35,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":249,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":81,"com.graphhopper.storage.RAMDataAccessTest.testHeader":358,"com.graphhopper.routing.DijkstraTest.initializationError":467,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":419,"com.graphhopper.storage.MMapDataAccessTest.testHeader":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":174,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":134,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":364,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":191,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":516,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":143,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":151,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":20,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":121,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":100,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":401,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":279,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":397,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":399,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":464,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":270,"com.graphhopper.coll.OSMIDMapTest.testGetLong":48,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":269,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":165,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":127,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":7,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":129,"com.graphhopper.coll.CompressedArrayTest.testCompress2":303,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":498,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":21,"com.graphhopper.GraphHopperAPITest.testLoad":318,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":111,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":375,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":256,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":195,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":186,"com.graphhopper.storage.LevelGraphStorageTest.testClone":115,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":290,"com.graphhopper.reader.OSMReaderTest.testBarriers":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":147,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":311,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":484,"com.graphhopper.util.GHUtilityTest.testCopy":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":180,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":502,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":445,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":461,"com.graphhopper.routing.PathTest.testFindInstruction":86,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":326,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":148,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":323,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":262,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":345,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":140,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":383,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":483,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":212,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":172,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":436,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":488,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":254,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":470,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":117,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":222,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":381,"com.graphhopper.util.InstructionListTest.testWayList2":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":490,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":392,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":152,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":330,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":472,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":87,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":119,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":508,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":230,"com.graphhopper.storage.RAMDirectoryTest.testSynched":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":157,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":409,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":271,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":66,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":359,"com.graphhopper.routing.AStarTest.initializationError":515,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":89,"com.graphhopper.coll.OSMIDMapTest.testGet":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":155,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":363,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":263,"com.graphhopper.routing.PathBidirRefTest.testExtract":424,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":11,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":47,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":509,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":403,"com.graphhopper.storage.RAMDataAccessTest.testCopy":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":242,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":456,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":179,"com.graphhopper.util.GHUtilityTest.testSort2":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":280,"com.graphhopper.reader.OSMReaderTest.testMain":63,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":164,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":331,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":302,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":457,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":133,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":246,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":10,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":125,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":141,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":78,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":168,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":365,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":482,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":128,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":73,"com.graphhopper.storage.StorablePropertiesTest.testStore":33,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":369,"com.graphhopper.storage.GraphHopperStorageTest.testClone":188,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":245,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":337,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":4,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":197,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":291,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":454,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":223,"com.graphhopper.routing.PathTest.testTime":427,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":501,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":14,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":116,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":497,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":462,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":394,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":235,"com.graphhopper.reader.OSMReaderTest.testRelation":466,"com.graphhopper.util.GHUtilityTest.testSortDirected":439,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":313,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":321,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":77,"com.graphhopper.GraphHopperTest.testFootOnly":59,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":475,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":410,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":451,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":400,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":481,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":231,"com.graphhopper.search.NameIndexTest.testCreate":3,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":75,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":366,"com.graphhopper.routing.QueryGraphTest.testOneWay":423,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":395,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":299,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":477,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":27,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":441,"com.graphhopper.reader.OSMReaderTest.testWithBounds":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":449,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":518,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":228,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":237,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":264,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":347,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":112,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":109,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":452,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":489,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":167,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":181,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":493,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":161,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":37,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":266,"com.graphhopper.util.InstructionListTest.testWayList":91,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":455,"com.graphhopper.GraphHopperAPITest.testDisconnected179":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":224,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":219,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":486,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":421,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":234,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":251,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":513,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":54,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":190,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":430,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":505,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":277,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":469,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":308,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":13,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":494,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":499,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":101,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":145,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":406,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":374,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":102,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":34,"com.graphhopper.routing.PathTest.testWayList":85,"com.graphhopper.storage.MMapDataAccessTest.testCopy":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":250,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":227,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":450,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":346,"com.graphhopper.coll.OSMIDMapTest.testGet2":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":287,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":360,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":166,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":512,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":200,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":153,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":189,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":126,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":296,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":297,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":402,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":448,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":353,"com.graphhopper.util.GHUtilityTest.testSort":438,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":390,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":444,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":511,"com.graphhopper.search.NameIndexTest.testPut":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":176,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":187,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":385,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":398,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":413,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":416,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":379,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":332,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":88,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":17,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":58,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":453,"com.graphhopper.storage.MMapDirectoryTest.testSynched":459,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":473,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":285,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":288,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":380,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":241,"com.graphhopper.routing.PathTest.testFound":426,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":60,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":255,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":139,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":510,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":158,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":2,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":44,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":193,"com.graphhopper.util.InstructionListTest.testEmptyList":433,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":274,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":503,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":278,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":492,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":312,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":491,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":281,"com.graphhopper.reader.PrinctonReaderTest.testRead":420,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":41,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":32,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":154,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":226,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":216,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":163,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":479,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":485,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":320,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":500,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":327,"com.graphhopper.reader.OSMReaderTest.testFoot":62,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":239,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":293,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":301,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":474,"com.graphhopper.reader.OSMReaderTest.testOneWay":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":294,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":196,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":209,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":173,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":478,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":447,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":233,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":342,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":440,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":306,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":315,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":344,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":340,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":417,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":229,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":422,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":182,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":443,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":378,"com.graphhopper.routing.PathBidirRefTest.testExtract2":425,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":265,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":99,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":393,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":0,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":208,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":463,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":504,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":252,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":259,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":418,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":487,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":388,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":210,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":517,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":118,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":495,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":39,"com.graphhopper.GraphHopperTest.testFootAndCar":55,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":123,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":354,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":220,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":253,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":520,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":496,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":429,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":150,"com.graphhopper.GraphHopperTest.testPrepareOnly":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":284,"com.graphhopper.GraphHopperTest.testVia":52,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":386,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":514,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":218,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":70,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":107,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":93,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":207,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":260,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":232,"com.graphhopper.routing.AStarBidirectionTest.initializationError":468,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":446,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":138,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":136,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":18}}]
