[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"b437c4cc-da50-11e4-a01b-3fd6c09cfe60","variableMapping":{"scDirMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"b441d6ed-da50-11e4-a01b-adc953a39988","variableMapping":{"entry":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.split(\"\\\\|\")[0]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"b441d6ee-da50-11e4-a01b-e352aef3b715","variableMapping":{"length":"com.graphhopper.coll.SparseIntIntArray.DELETED","factor":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-1},{"failures":[0,2,5,6,9,11,12,15,17,18],"tindex":"b441fdff-da50-11e4-a01b-f55cfc292e0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:397","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"b441fe00-da50-11e4-a01b-7b3c255a7763","variableMapping":{"arg":"s","index":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:109","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"b441fe01-da50-11e4-a01b-2549967ca853","variableMapping":{"index":"dLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,23,90,91,92,93,94,95,96,97,98,99,24,100,101,102,103,104,25,105,106,107,108,109,110,111,26,27,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,28,193,194,195,196,197,198,199,200,201,202,29,203,204,205,206,207,30,208,209,210,211,212,213,214,31,32,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,33,231,232,233,234,235,236,237,238,239,240,34,241,242,243,244,245,35,246,247,248,249,250,251,252,36,37,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,38,271,272,273,274,275,276,277,278,279,280,39,281,282,283,284,285,40,286,287,288,289,290,291,292,41,42,293,294,295,296,297,298,299,300,301,302,303,304,305,43,306,307,44,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,356,357,357,358,358,359,359,360,360,361,361,362,362,363,363,364,364,365,365,366,366,367,367],"tindex":"b441fe02-da50-11e4-a01b-bb3b154cd160","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"b441fe03-da50-11e4-a01b-c1f957951bec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"b441fe04-da50-11e4-a01b-1bf82ddeea62","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"b441fe05-da50-11e4-a01b-0f2eb036e463","variableMapping":{"relationCodeEncoder":"wayTypeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"b4422516-da50-11e4-a01b-d9a2fea28daf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:747","type":"CtContinueImpl","sourcecode":"continue"},"status":-2},{"failures":[],"tindex":"b4422517-da50-11e4-a01b-49c918d8ee77","variableMapping":{"intIndex":"key","len":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[50,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,88,89,23,90,91,92,93,94,95,96,97,98,99,24,100,101,102,103,104,25,105,106,107,108,109,110,111,26,27,112,113,114,115,116,117,118,119,120,127,134,158,178,179,180,181,182,183,184,185,186,187,188,189,190,368,191,192,28,193,194,195,196,197,198,199,200,201,202,29,203,204,205,206,207,30,208,209,210,211,212,213,214,31,32,215,216,217,218,219,220,221,222,223,224,225,226,227,228,369,229,230,33,231,232,233,234,235,236,237,238,239,240,34,241,242,243,244,245,35,246,247,248,249,250,251,252,36,37,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,370,269,270,38,271,272,273,274,275,276,277,278,279,280,39,281,282,283,284,285,40,286,287,288,289,290,291,292,41,42,293,294,295,296,297,298,299,300,301,371,372,373,305,374,375,376,377,378,379,307,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,0,1,398,399,400,401,402,403,404,2,405,406,407,3,408,4,409,5,410,411,412,413,414,415,416,6,417,418,7,419,420,8,421,9,10,11,422,423,424,425,426,427,428,429,430,12,431,432,433,13,310,311,434,435,14,436,15,16,17,437,438,439,440,441,442,443,444,445,18,446,447,448,19,449,20,450,21,22,451,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,452,356,453,454],"tindex":"b4422518-da50-11e4-a01b-f97df0d08943","variableMapping":{"red":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"b4422519-da50-11e4-a01b-89624ebbc007","variableMapping":{"min":"length","tmpSize":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":0},{"failures":[],"tindex":"b442251a-da50-11e4-a01b-4540d70dad11","variableMapping":{"length":"i","factor":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[455,20,21],"tindex":"b442251b-da50-11e4-a01b-6daf6f4b5de6","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[],"tindex":"b442251c-da50-11e4-a01b-939a482407ff","variableMapping":{"size":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"b442251d-da50-11e4-a01b-553994011e6f","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"start","sign":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"b442251e-da50-11e4-a01b-6d96d6aa92eb","variableMapping":{"compressor":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:185","type":"CtInvocationImpl","sourcecode":"java.util.zip.Deflater.end()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[],"tindex":"b442251f-da50-11e4-a01b-172bf7514059","variableMapping":{"time":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"b4424c30-da50-11e4-a01b-7b07a4b97f5a","variableMapping":{"y":"maxSpeed","angle":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[324,328,337,339,341,344,350,354],"tindex":"b4424c31-da50-11e4-a01b-d1d80fc41657","variableMapping":{"id":"value","rowSizeInBytes":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PillarInfo:78","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-1},{"failures":[85,389,456],"tindex":"b4424c32-da50-11e4-a01b-05d586c52a86","variableMapping":{"arrayLength":"index","maxGeoRef":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[58,59,60,61,63,64,65,66,69,70,71,397,0,1,399,401,402,2,405,407,3,4,409,5,410,412,414,6,417,7,420,8,421,9,10,11,425,427,428,12,431,433,13,435,14,436,15,16,17,440,442,443,18,446,448,19,20,21,22],"tindex":"b4424c33-da50-11e4-a01b-6f5f3efd3fda","variableMapping":{"versionHint":"service"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"b4424c34-da50-11e4-a01b-616498035f05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[],"tindex":"b4424c35-da50-11e4-a01b-e75190f7cba1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"b4424c36-da50-11e4-a01b-5dee9ea80ccd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[307,44],"tindex":"b4424c37-da50-11e4-a01b-7fbc894f8596","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[],"tindex":"b4424c38-da50-11e4-a01b-774cc9a13a9d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":-2},{"failures":[],"tindex":"b4424c39-da50-11e4-a01b-7d5083dbe003","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"b4424c3a-da50-11e4-a01b-49317c9d143c","variableMapping":{"bytePos":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":0},{"failures":[],"tindex":"b4424c3b-da50-11e4-a01b-85f718321f52","variableMapping":{"delta_lat":"maxLat","r_lat":"maxLat","a_lat":"maxLat","delta_lon":"maxLat","r_lon":"maxLat","a_lon":"maxLat","norm":"maxLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[396,397,0,1,398,399,400,401,402,403,404,2,405,406,407,3],"tindex":"b4424c3c-da50-11e4-a01b-1f1a2db1ab5d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-1},{"failures":[45,46,47,48,51,52,54,73,78,159,160,162,164,165,166,167,169,170,171,172,173,174,175,177,178,179,181,182,187,190,191,192,28,193,194,195,196,197,198,199,202,29,204,205,207,30,208,209,212,214,31,32,215,217,218,220,222,223,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355],"tindex":"b442734d-da50-11e4-a01b-6de37623a252","variableMapping":{"i":"I_SKIP_EDGE2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[45,51,53,55,88,89,23,90,91,92,93,94,95,96,97,99,24,100,101,102,103,104,25,105,106,107,108,109,110,111,26,27,112,113,114,115,116,117,118,119,120,125,132,136,137,138,139,140,141,156,176,457,458,184,187,188,225,226,262,263,265,266,459],"tindex":"b442734e-da50-11e4-a01b-dd987a4b7231","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-1},{"failures":[],"tindex":"b442734f-da50-11e4-a01b-9f28cf3b4c98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"b4427350-da50-11e4-a01b-c7ec08ac1f6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[],"tindex":"b4427351-da50-11e4-a01b-7369d92bd7c1","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"b4427352-da50-11e4-a01b-41bea405e73a","variableMapping":{"latSize":"a","lonSize":"a"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"b4427353-da50-11e4-a01b-eb17066eb594","variableMapping":{"c":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:228","type":"CtReturnImpl","sourcecode":"return int > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":0},{"failures":[45,46,47,48,49,50,51,460,52,53,54,55,461,56,57,58,59,60,61,62,63,64,65,66,455,67,68,69,70,71,73,74,75,76,77,78,79,462,80,81,82,83,84,85,86,87,88,89,23,90,91,92,93,94,95,96,97,98,99,24,100,101,102,103,104,25,105,106,107,108,109,110,111,26,27,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,368,191,192,28,193,194,195,196,197,198,199,200,201,202,29,203,204,205,206,207,30,208,209,210,211,212,213,214,31,32,215,216,217,218,219,220,221,222,223,224,225,226,227,228,369,229,230,33,231,232,233,234,235,236,237,238,239,240,34,241,242,243,244,245,35,246,247,248,249,250,251,252,36,37,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,370,269,270,38,271,272,273,274,275,276,277,278,279,280,39,281,282,283,284,285,40,286,287,288,289,290,291,292,41,42,293,294,295,296,297,298,299,300,301,303,304,463,371,372,373,305,374,375,376,377,378,379,43,306,307,44,308,309,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,0,1,398,399,400,401,402,403,404,2,405,406,407,3,464,465,408,4,409,5,410,411,412,413,414,415,416,6,417,418,7,419,420,8,421,9,10,11,422,423,424,425,426,427,428,429,430,12,431,432,433,13,310,311,434,435,14,436,15,16,17,437,438,439,440,441,442,443,444,445,18,446,447,448,19,449,466,22,312,313,314,315,316,317,451,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,467,344,345,346,347,348,349,350,351,352,353,354,355,452,356,357,358,359,360,361,362,363,364,365,366,367,453,454],"tindex":"b4429a64-da50-11e4-a01b-7989420c758d","variableMapping":{"name":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[58,85,373,375,377,379,380,383,384,388,389,390,456,464,465,4,5,11,17,315,316,318,319,331,341],"tindex":"b4429a65-da50-11e4-a01b-69fdf3041b69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"b4429a66-da50-11e4-a01b-97a1aa772f19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"b4429a67-da50-11e4-a01b-1961a72b864e","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[111],"tindex":"b4429a68-da50-11e4-a01b-199f7a4435dc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[468],"tindex":"b4429a69-da50-11e4-a01b-cb14d912e68c","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:157","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_SYNC\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[],"tindex":"b4429a6a-da50-11e4-a01b-191237d7c306","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[],"tindex":"b4429a6b-da50-11e4-a01b-27c7174d3778","variableMapping":{"high":"oldRelationFlags","guess":"oldRelationFlags","low":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[320,323,324,335,337,339,342,350,351],"tindex":"b4429a6c-da50-11e4-a01b-afca198dd318","variableMapping":{"contractedNeighbors":"to","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:553","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterator.isShortcut())\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"b4429a6d-da50-11e4-a01b-f39f7a99b753","variableMapping":{"res":"directionBitMask","value":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"b4429a6e-da50-11e4-a01b-2501d4bcd5b5","variableMapping":{"intVal":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:85","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,66,67,69,469,470,471,472,78,82,83,84,85,473,474,475,476,137,138,144,145,146,164,165,166,477,187,31,218,220,221,225,36,256,258,259,262,265,41,296,298,299,310,311,316,317,338,356,357,359,360,361,362,363,364,366,367],"tindex":"b442c17f-da50-11e4-a01b-91914dc68029","variableMapping":{"bytePos":"bytePos","indexDivisor":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:311","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[328],"tindex":"b442c180-da50-11e4-a01b-111a92c34bab","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":-1},{"failures":[],"tindex":"b442c181-da50-11e4-a01b-57cfed73a083","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53,54,56,57,59,60,62,65,66,67,68,69,71,73,74,75,78,82,83,84,85,88,89,23,91,92,95,96,98,102,104,109,111,112,114,115,119,179,183,187,191,192,28,194,195,198,199,201,205,207,212,214,215,217,218,222,225,229,230,33,232,233,236,237,239,243,245,250,252,253,255,256,260,262,265,269,270,38,272,273,276,277,279,283,285,290,292,293,295,296,300,303,305,375,43,306,44,308,384,387,390,392,394,311,478,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,360,363],"tindex":"b442c182-da50-11e4-a01b-19cb09f477da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[479],"tindex":"b442c183-da50-11e4-a01b-d5b30c13a780","variableMapping":{"versionHint":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":-1},{"failures":[480],"tindex":"b442c184-da50-11e4-a01b-61fe0c3628e2","variableMapping":{"res":"hash","value":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[481,85,482,483,484,485,316],"tindex":"b442c185-da50-11e4-a01b-5f688bea3782","variableMapping":{"val":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"b442c186-da50-11e4-a01b-dd42667307f7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[486,487],"tindex":"b442c187-da50-11e4-a01b-e717ac160efe","variableMapping":{"latSimilar":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"b442c188-da50-11e4-a01b-e588c9f9fc12","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"b442c189-da50-11e4-a01b-bf2398ca154c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,98,111,121,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,488,489,490,491,492,493,494,495,496,497,498,179,180,181,182,183,184,185,186,187,188,189,190,191,192,28,193,194,195,196,197,198,199,200,201,202,29,203,204,205,206,207,30,208,209,210,211,212,213,214,31,32,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,33,231,232,233,234,235,236,237,238,239,240,34,241,242,243,244,245,35,246,247,248,249,250,251,252,36,37,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,38,271,272,273,274,275,276,277,278,279,280,39,281,282,283,284,285,40,286,287,288,289,290,291,292,41,42,293,294,295,296,297,298,299,300,301,303,304,305,43,306,307,44,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,356,357,357,358,358,359,359,360,360,361,361,362,362,363,363,364,364,365,365,366,366,367,367],"tindex":"b442e89a-da50-11e4-a01b-b738ad21113b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[499,500,142,148,150,151,501,162,168,170,171,327,480,502,503,504,505,506,507,508,509],"tindex":"b442e89b-da50-11e4-a01b-a56fe2fc4967","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"b442e89c-da50-11e4-a01b-79678f8052ca","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"b442e89d-da50-11e4-a01b-ff17a9639fd5","variableMapping":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[468],"tindex":"b442e89e-da50-11e4-a01b-2b1d216812f1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"b442e89f-da50-11e4-a01b-1f2b03e97ea2","variableMapping":{"entry":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"b442e8a0-da50-11e4-a01b-a5f9e8535fee","variableMapping":{"resultOrientation":"restDist2D","orientation":"decDist2DSum","java.lang.Math.PI":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[83,84,85,485,510],"tindex":"b442e8a1-da50-11e4-a01b-fb345a6c0776","variableMapping":{"distInMeter":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"b442e8a2-da50-11e4-a01b-43edb6b6fcb5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"b442e8a3-da50-11e4-a01b-2b4a5158ae33","variableMapping":{"deltaX":"com.graphhopper.util.AngleCalc.PI3_4","maxX":"com.graphhopper.util.AngleCalc.PI3_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"b442e8a4-da50-11e4-a01b-b31a24164887","variableMapping":{"start":"toSize","delta":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[374,378],"tindex":"b442e8a5-da50-11e4-a01b-81b48875d8ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[511],"tindex":"b442e8a6-da50-11e4-a01b-3b2dc653a596","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[499,500,480,502,504,512,505,506,509],"tindex":"b4430fb7-da50-11e4-a01b-9568faaa7fa7","variableMapping":{"orientation":"midLon","java.lang.Math.PI":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:97","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"b4430fb8-da50-11e4-a01b-b3ddc544c530","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:430","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"b4430fb9-da50-11e4-a01b-6b12d12a7051","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[499,500,480,502,503,504,512,505,506,509],"tindex":"b4430fba-da50-11e4-a01b-8b6e8edfb9e1","variableMapping":{"maxMCSpeed":"midLat","speed":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"b4430fbb-da50-11e4-a01b-e9f9cbac6199","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"b4430fbc-da50-11e4-a01b-e3cb977c6fce","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[],"tindex":"b4430fbd-da50-11e4-a01b-95688d60c00f","variableMapping":{"scDirMask":"encoded","flags":"encoded","dir":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"b4430fbe-da50-11e4-a01b-8f09ab889f26","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"i","speed":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":0},{"failures":[],"tindex":"b4430fbf-da50-11e4-a01b-bd1bc80ed961","variableMapping":{"val":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[65],"tindex":"b4430fc0-da50-11e4-a01b-9dbb1e8bb287","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"b4430fc1-da50-11e4-a01b-9519d1c5ff7e","variableMapping":{"iter":"edge","counter":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:93","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[],"tindex":"b4430fc2-da50-11e4-a01b-07a0cd6abc94","variableMapping":{"res":"encoded","maxBit":"forwardBit","value":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":0},{"failures":[],"tindex":"b4430fc3-da50-11e4-a01b-4d9235e34fe6","variableMapping":{"edge":"tmpPrevEdge","updatedB":"edgeEntryBytes","updatedA":"edgeEntryBytes","linkA":"tmpPrevEdge","this":"this","linkB":"edgeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.writeEdge(int, int, int, int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[],"tindex":"b4430fc4-da50-11e4-a01b-4bf50ca68847","variableMapping":{"mGarbage":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"b4430fc5-da50-11e4-a01b-659459ffd12c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,98,111,121,122,123,124,126,127,128,129,130,131,133,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,489,490,491,513,492,495,496,497,498,179,180,181,182,183,185,186,187,190,191,192,28,193,194,195,196,197,198,199,200,201,202,29,203,204,205,206,207,30,208,209,210,211,212,214,31,32,215,216,217,218,219,220,221,222,223,224,225,228,229,230,33,231,232,233,234,235,236,237,238,239,240,34,241,242,243,244,245,35,246,247,248,249,250,252,36,37,253,254,255,256,257,258,259,260,261,262,264,265,268,269,270,38,271,272,273,274,275,276,277,278,279,280,39,281,282,283,284,285,40,286,287,288,289,290,292,41,42,293,294,295,296,297,298,299,300,301,303,304,305,43,306,307,44,308,309,310,311,312,313,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367],"tindex":"b44336d6-da50-11e4-a01b-bd7036d9ac14","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"bufferIndex","speed":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[],"tindex":"b4442137-da50-11e4-a01b-7398b2282189","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"b4442138-da50-11e4-a01b-bbeee4ccb5b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"b4442139-da50-11e4-a01b-5f7f598b98ee","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"b444213a-da50-11e4-a01b-fd26f97cff21","variableMapping":{"endIndexPlusOne":"index","frontIndex":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"b444213b-da50-11e4-a01b-d9342dc5191c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[409,410,412,414,6,417,7],"tindex":"b444213c-da50-11e4-a01b-01b898106f67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[397,0,2,5,6,420,9,11,12,435,15,17,18,22],"tindex":"b444213d-da50-11e4-a01b-033805702cde","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[],"tindex":"b444213e-da50-11e4-a01b-2b58d74e4fff","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"b444213f-da50-11e4-a01b-1f713994ceaa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":336,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":357,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":184,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":456,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":130,"com.graphhopper.GraphHopperAPITest.testNoLoad":463,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":89,"com.graphhopper.reader.OSMReaderTest.testFerry":58,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":74,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":75,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":10,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":410,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":165,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":46,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":481,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":223,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":278,"com.graphhopper.coll.CompressedArrayTest.testCompress":500,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":416,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":259,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":106,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":239,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":161,"com.graphhopper.util.AngleCalcTest.testOrientation":482,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":352,"com.graphhopper.GraphHopperTest.testPrepare":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":335,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":342,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":421,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":135,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":6,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":87,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":190,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":162,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":308,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":420,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":489,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":320,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":326,"com.graphhopper.coll.BitSetImplTest.testCopy":511,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":145,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":11,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":262,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":507,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":355,"com.graphhopper.GraphHopperTest.testLoadOSM":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":152,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":492,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":146,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":466,"com.graphhopper.reader.OSMReaderTest.testSort":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":431,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":68,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":266,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":254,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":225,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":505,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":117,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":363,"com.graphhopper.routing.DijkstraTest.initializationError":453,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":295,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":213,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":513,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":235,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":263,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":15,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":269,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":3,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":405,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":169,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":242,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":332,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":167,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":460,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":323,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":322,"com.graphhopper.coll.OSMIDMapTest.testGetLong":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":281,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":286,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":206,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":187,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":30,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":484,"com.graphhopper.coll.CompressedArrayTest.testCompress2":499,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":246,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":397,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":279,"com.graphhopper.GraphHopperAPITest.testLoad":303,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":368,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":491,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":372,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":240,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":33,"com.graphhopper.storage.LevelGraphStorageTest.testClone":194,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":479,"com.graphhopper.reader.OSMReaderTest.testBarriers":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":270,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":309,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":159,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":437,"com.graphhopper.util.GHUtilityTest.testCopy":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":325,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":178,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":403,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":132,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":418,"com.graphhopper.routing.PathTest.testFindInstruction":317,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":413,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":38,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":73,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":377,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":219,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":436,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":255,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":243,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":293,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":444,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":478,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":452,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":93,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":228,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":498,"com.graphhopper.util.InstructionListTest.testWayList2":84,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":510,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":448,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":153,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":260,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":503,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":274,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":302,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":298,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":464,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":226,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":310,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":198,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":476,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":280,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":136,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":324,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":63,"com.graphhopper.routing.AStarTest.initializationError":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":338,"com.graphhopper.coll.OSMIDMapTest.testGet":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":277,"com.graphhopper.routing.PathBidirRefTest.testExtract":312,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":378,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":209,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":425,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":301,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":424,"com.graphhopper.util.GHUtilityTest.testSort2":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":333,"com.graphhopper.reader.OSMReaderTest.testMain":60,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":188,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":40,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":426,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":508,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":432,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":212,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":267,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":201,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":204,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":222,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":202,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":360,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":435,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":490,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":207,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":70,"com.graphhopper.storage.StorablePropertiesTest.testStore":459,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":477,"com.graphhopper.storage.GraphHopperStorageTest.testClone":232,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":390,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":241,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":388,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":179,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":94,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":182,"com.graphhopper.routing.PathTest.testTime":315,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":402,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":220,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":395,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":105,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":211,"com.graphhopper.reader.OSMReaderTest.testRelation":455,"com.graphhopper.util.GHUtilityTest.testSortDirected":80,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":487,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":446,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":359,"com.graphhopper.GraphHopperTest.testFootOnly":54,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":409,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":137,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":386,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":458,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":168,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":321,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":434,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":102,"com.graphhopper.search.NameIndexTest.testCreate":475,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":356,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":494,"com.graphhopper.routing.QueryGraphTest.testOneWay":365,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":156,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":504,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":412,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":144,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":480,"com.graphhopper.reader.OSMReaderTest.testWithBounds":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":297,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":306,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":107,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":379,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":20,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":192,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":189,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":445,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":7,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":289,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":127,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":283,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":229,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":319,"com.graphhopper.util.InstructionListTest.testWayList":83,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":423,"com.graphhopper.GraphHopperAPITest.testDisconnected179":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":95,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":512,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":90,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":442,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":25,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":488,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":119,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":430,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":49,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":234,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":353,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":250,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":419,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":330,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":454,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":351,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":218,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":391,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":399,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":12,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":340,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":369,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":176,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":493,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":13,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":224,"com.graphhopper.routing.PathTest.testWayList":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":118,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":99,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":385,"com.graphhopper.coll.OSMIDMapTest.testGet2":470,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":341,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":215,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":429,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":244,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":373,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":275,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":170,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":205,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":171,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":439,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":486,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.util.GHUtilityTest.testSort":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":149,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":509,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":428,"com.graphhopper.search.NameIndexTest.testPut":474,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":370,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":131,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":163,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":141,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":123,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":496,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":16,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":362,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":311,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":264,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":398,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":465,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":339,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":43,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":497,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":111,"com.graphhopper.routing.PathTest.testFound":314,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":22,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":55,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":217,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":468,"com.graphhopper.util.AngleCalcTest.testAtan2":483,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":181,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":427,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":39,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":98,"com.graphhopper.util.InstructionListTest.testEmptyList":81,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":327,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":331,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":394,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":382,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":381,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":417,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":334,"com.graphhopper.reader.PrinctonReaderTest.testRead":56,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":166,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":97,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":472,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":88,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":285,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":440,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":450,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":14,"com.graphhopper.reader.OSMReaderTest.testFoot":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":109,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":367,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":150,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":221,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":506,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":408,"com.graphhopper.reader.OSMReaderTest.testOneWay":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":151,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":34,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":37,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":294,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":414,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":248,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":438,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":104,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":347,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":501,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":344,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":389,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":345,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":305,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":100,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":358,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":227,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":457,"com.graphhopper.routing.PathBidirRefTest.testExtract2":313,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":495,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":318,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":154,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":473,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":252,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":407,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":120,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":374,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":443,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":147,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":253,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":462,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":197,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":392,"com.graphhopper.GraphHopperTest.testFootAndCar":50,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":247,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":29,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":91,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":449,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":393,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":272,"com.graphhopper.GraphHopperTest.testPrepareOnly":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":337,"com.graphhopper.GraphHopperTest.testVia":47,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":133,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":433,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":23,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":67,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":183,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":85,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":251,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":375,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":103,"com.graphhopper.routing.AStarBidirectionTest.initializationError":451,"com.graphhopper.util.AngleCalcTest.testCombined":485,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":380,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":216,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":32,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":265}}]
