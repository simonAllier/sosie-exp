[{"failures":[0,1,2,3,4],"tindex":"7ed578e7-dbcf-11e4-941e-81f67a5ccc40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"7ed59ff8-dbcf-11e4-941e-e92f08b1497e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[5,6,7,8],"tindex":"7ed59ff9-dbcf-11e4-941e-e50cebd4a608","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[9,10,11,2,4,12],"tindex":"7ed59ffa-dbcf-11e4-941e-ab75859d97e0","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[5,13,14,15,16,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,2,3,45,4],"tindex":"7ed59ffb-dbcf-11e4-941e-dbbc6d425ea5","variableMapping":{"bitsForEdgeFlags":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[21,23,24,30,32,33,34,35,36,38,39],"tindex":"7ed59ffc-dbcf-11e4-941e-ef282966fe36","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"7ed5c70d-dbcf-11e4-941e-5561d022ba1a","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"7ed5c70e-dbcf-11e4-941e-ddcb7faf010c","variableMapping":{"tmpNo":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2},{"failures":[],"tindex":"7ed5c70f-dbcf-11e4-941e-89cbebcd8357","variableMapping":{"cap":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[],"tindex":"7ed5c710-dbcf-11e4-941e-4b19acf79691","variableMapping":{"costs":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[28],"tindex":"7ed5c711-dbcf-11e4-941e-83de09968233","variableMapping":{"lastKey":"encoded","key":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[46,45],"tindex":"7ed5c712-dbcf-11e4-941e-716cb4a84ed8","variableMapping":{"segmentSizeInBytes":"minutes","indexDivisor":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,13,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,16,78,79,80,81,82,83,84,85,86,87,88,89,90,91,11,92,93,2,94,95,96,3,97,4,98,99,100,101,102,103,104,105,106,107,12],"tindex":"7ed6b173-dbcf-11e4-941e-77f62cc82cb9","variableMapping":{"size":"frontIndex","i":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:228","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[20,108,109,29,110,111,112,113,114,115],"tindex":"7ed6b174-dbcf-11e4-941e-b904f94e5d03","variableMapping":{"max":"prio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"7ed6b175-dbcf-11e4-941e-7b15ff32d5b3","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"7ed6b176-dbcf-11e4-941e-b73bc30848b8","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":0},{"failures":[116,117,9,118,119,10,120,121,11,92,93,2,94,96,4,98,100,103,104,105,106,107,122],"tindex":"7ed6b177-dbcf-11e4-941e-33ffa8414885","variableMapping":{"bytePos":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"7ed6b178-dbcf-11e4-941e-030e9ba50f6a","variableMapping":{"index":"bytePos","entriesPerSegment":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:100","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long % (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"7ed79bd9-dbcf-11e4-941e-f70b4fe17439","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"7ed79bda-dbcf-11e4-941e-f56682bbf585","variableMapping":{"a_lon_deg":"minLon","factor":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[123,124,125,126,127,128,129,130,131,132,133,48,49,50,67,68,69,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,116,165,19,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,90,91,11,92,93,2,94,95,96,3,97,45,4,98,99,100,101,102,103,104,105,106,107,122,12,184,185,186],"tindex":"7ed7c2eb-dbcf-11e4-941e-b3d1afa6bff3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[187,188,189,190,24,191,192,109,193,194,195,196,33,197,198,111,199,35,200,201,36,202,203,113,204,39,205,115],"tindex":"7ed7c2ec-dbcf-11e4-941e-b9afab51624c","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[1],"tindex":"7ed7c2ed-dbcf-11e4-941e-e92e6f3d856c","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[206,207,208],"tindex":"7ed7c2ee-dbcf-11e4-941e-e9b095ef9e34","variableMapping":{"numTiles":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[90,97],"tindex":"7ed7c2ef-dbcf-11e4-941e-89394b7b4b4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[],"tindex":"7ed7ea00-dbcf-11e4-941e-bb51b617a0d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[117,209,10],"tindex":"7ed7ea01-dbcf-11e4-941e-0b39f2c72c65","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[210,211,212,213,214,215,89,216,217],"tindex":"7ed83822-dbcf-11e4-941e-d1dd054b06e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:89","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[],"tindex":"7ed83823-dbcf-11e4-941e-9f13d905616e","variableMapping":{"d":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[218,127,128,219,220,129,221,222,223,224,225,226,227,228,229,230,5,231,232,233,234,235,236,237,238,239,130,240,241,242,243,244,131,245,246,247,248,132,249,250,133,251,252,47,253,48,49,50,51,254,52,255,53,54,55,56,57,256,58,13,257,258,259,260,261,262,14,263,59,60,61,62,264,63,265,266,267,268,269,270,15,64,65,271,66,272,67,68,69,70,273,71,274,72,73,74,75,76,275,77,16,276,136,277,278,137,138,279,280,139,281,282,283,284,285,286,287,288,289,290,6,291,292,293,294,295,296,297,298,299,140,300,301,302,303,304,141,305,306,307,308,142,309,310,143,311,312,313,314,315,316,317,318,319,320,321,322,323,7,324,325,326,327,328,329,330,331,332,333,334,335,336,337,144,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,145,354,355,146,147,356,357,148,358,359,360,361,362,363,364,365,366,367,8,368,369,370,371,372,373,374,375,376,149,377,378,379,380,381,150,382,383,384,385,151,386,387,152,388,389,78,79,390,391,392,393,394,161,395,396,397,162,163,164,116,81,82,398,399,206,83,84,85,207,208,400,165,19,401,40,166,167,168,168,169,169,402,402,170,170,171,171,172,172,173,173,174,174,175,175,403,403,176,176,177,177,210,404,405,406,407,408,409,410,211,212,411,412,413,414,41,415,213,416,417,214,215,418,419,86,42,420,43,87,88,421,422,89,423,216,178,217,424,44,90,91,11,92,93,2,94,95,96,3,97,45,4,98,99,100,101,102,103,104,105,106,107,122,12,425,426,427],"tindex":"7ed83824-dbcf-11e4-941e-b9c24119c9e4","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"7ed85f35-dbcf-11e4-941e-1993869ecfba","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[20,25,27,29],"tindex":"7ed85f36-dbcf-11e4-941e-8ff020dc9e3d","variableMapping":{"fromNode":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[],"tindex":"7ed85f37-dbcf-11e4-941e-57e9cafff58d","variableMapping":{"size":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[428,429],"tindex":"7eda33f8-dbcf-11e4-941e-6f09490ccbf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"7eda33f9-dbcf-11e4-941e-2f34d0742432","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[],"tindex":"7eda33fa-dbcf-11e4-941e-f312273a2176","variableMapping":{"res":"nodeBitMask","value":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"7eda33fb-dbcf-11e4-941e-7357d600b4c4","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[1],"tindex":"7eda33fc-dbcf-11e4-941e-75a8a8b92d1f","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"7eda33fd-dbcf-11e4-941e-0de65e871066","variableMapping":{"intIndex":"com.graphhopper.coll.SparseIntIntArray.DELETED","len":"valueIfKeyNotFound"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"7eda33fe-dbcf-11e4-941e-6b2c260c83f5","variableMapping":{"high":"acceptBit","highKey":"ferryBit","key":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"7eda33ff-dbcf-11e4-941e-5bc70ef3cdee","variableMapping":{"need":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"7eda3400-dbcf-11e4-941e-c9cf0484ceb4","variableMapping":{"values":"mKeys","n":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:321","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int[][int] = -1;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-2},{"failures":[10,45,122,12],"tindex":"7eda3401-dbcf-11e4-941e-0d6fb29320b3","variableMapping":{"k":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:80","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(\"graphhopper.\".length())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[409,211,413,86,430],"tindex":"7eda3402-dbcf-11e4-941e-49916aab0d1e","variableMapping":{"edgeId":"i","nextEdge":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"7eda3403-dbcf-11e4-941e-53375a711234","variableMapping":{"store":"store"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"7eda3404-dbcf-11e4-941e-3f9e7f2e3a4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"7eda5b15-dbcf-11e4-941e-c1f1034315bd","variableMapping":{"bitsForEdgeFlags":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"7eda5b16-dbcf-11e4-941e-71d795a60ea9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"7eda5b17-dbcf-11e4-941e-f10397028851","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[],"tindex":"7eda5b18-dbcf-11e4-941e-4500790ac1ec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[1],"tindex":"7eda5b19-dbcf-11e4-941e-0b1269cce75b","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"7eda5b1a-dbcf-11e4-941e-99128f66d09c","variableMapping":{"i":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[117],"tindex":"7eda5b1b-dbcf-11e4-941e-c5003387e4a3","variableMapping":{"newName":"tt","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:229","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"newName mustn\\'t be empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"7eda5b1c-dbcf-11e4-941e-11e59b5fbfd9","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[47,50,52,255,53,55,56,431,432,64,66,70,71,274,72,74,75,77,87,88,89],"tindex":"7eda5b1d-dbcf-11e4-941e-098ce5c38d89","variableMapping":{"turnCostIndex":"x2","nextTurnCostIndex":"y2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-1},{"failures":[],"tindex":"7eda5b1e-dbcf-11e4-941e-177aa0b019d8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"7eda5b1f-dbcf-11e4-941e-1d822b9355ba","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"shift","id":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"7eda5b20-dbcf-11e4-941e-83ee378dae53","variableMapping":{"bestPath":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:166","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-1},{"failures":[42],"tindex":"7eda5b21-dbcf-11e4-941e-85066b59784b","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-1},{"failures":[],"tindex":"7eda5b22-dbcf-11e4-941e-d12c677bf61c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[12],"tindex":"7eda5b23-dbcf-11e4-941e-6d410ff0e5e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:165","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[19],"tindex":"7eda5b24-dbcf-11e4-941e-c9d4c500a3ea","variableMapping":{"eleDelta":"incEleSum","decEleSum":"incEleSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"7eda5b25-dbcf-11e4-941e-7d8b83ed98dc","variableMapping":{"distance":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"7eda5b26-dbcf-11e4-941e-370a233349b2","variableMapping":{"index":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-2},{"failures":[123,124,125,126,218,127,128,219,220,433,129,221,222,223,224,225,226,227,228,229,230,5,231,232,233,234,235,236,237,238,239,130,240,241,242,243,244,131,245,246,247,248,132,249,250,133,251,252,47,253,48,49,50,51,254,52,255,53,54,55,56,57,256,58,13,257,258,259,260,262,14,263,59,60,61,62,264,63,265,266,267,268,270,15,64,65,271,66,272,67,68,69,70,273,71,274,72,73,74,75,76,275,77,16,134,434,276,136,278,137,138,279,280,435,139,281,282,283,284,285,286,287,288,289,290,6,291,292,293,294,295,296,297,298,299,140,300,301,302,303,304,141,305,306,307,308,142,309,310,143,311,312,7,144,349,350,351,352,353,145,354,355,146,147,356,357,436,148,358,359,360,361,362,363,364,365,366,367,8,368,369,370,371,372,373,374,375,376,149,377,378,379,380,381,150,382,383,384,385,151,386,387,152,388,389,437,438,439,440,78,79,390,391,392,393,394,161,395,396,397,162,163,164,116,81,82,398,399,206,83,84,85,207,208,400,165,19,401,40,166,167,168,168,169,169,402,402,170,170,171,171,172,172,173,173,174,174,175,175,403,403,176,176,177,177,210,404,405,406,407,408,409,410,211,212,411,412,413,414,41,415,213,416,417,214,215,418,419,86,42,420,43,87,88,421,422,89,423,216,178,217,424,44,179,180,181,182,183,90,91,11,92,93,2,94,441,95,96,3,97,442,45,4,98,99,100,101,102,103,104,443,105,106,107,122,444,12,425,184,185,186,426,427],"tindex":"7eda8237-dbcf-11e4-941e-6dd27d15c513","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[405,211,413,215,42,216,217,44],"tindex":"7eda8238-dbcf-11e4-941e-41e671b1306f","variableMapping":{"map":"map"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":-1},{"failures":[],"tindex":"7eda8239-dbcf-11e4-941e-cf2f9508fdb5","variableMapping":{"factor":"factor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:207","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":-2},{"failures":[],"tindex":"7eda823a-dbcf-11e4-941e-fd4baa237a03","variableMapping":{"size":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"7eda823b-dbcf-11e4-941e-fd1490cb45c4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"7eda823c-dbcf-11e4-941e-9f9ca1f83575","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":0},{"failures":[116,117,118,119,22,31,121,11,122],"tindex":"7eda823d-dbcf-11e4-941e-2747153f2bfb","variableMapping":{"y":"speed","angle":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[218,127,128,219,220,129,221,222,223,224,225,226,227,228,229,230,5,231,232,233,234,235,236,237,238,239,130,240,241,242,243,244,131,245,246,247,248,132,249,250,133,251,252,47,253,48,49,50,51,254,52,255,53,54,55,56,57,256,58,13,257,258,259,260,261,262,14,263,59,60,61,62,264,63,265,266,267,268,269,270,15,64,65,271,66,272,67,68,69,70,273,71,274,72,73,74,75,76,275,77,16,276,136,277,278,137,138,279,280,139,281,282,283,284,285,286,287,288,289,290,6,291,292,293,294,295,296,297,298,299,140,300,301,302,303,304,141,305,306,307,308,142,309,310,143,311,312,313,314,315,316,317,318,319,320,321,322,323,7,324,325,326,327,328,329,330,331,332,333,334,335,336,337,144,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,145,354,355,146,147,356,357,148,358,359,360,361,362,363,364,365,366,367,8,368,369,370,371,372,373,374,375,376,149,377,378,379,380,381,150,382,383,384,385,151,386,387,152,388,389,78,79,390,391,392,393,394,161,395,396,397,162,163,164,116,81,82,398,399,206,83,84,85,207,208,400,165,19,401,40,166,167,168,168,169,169,402,402,170,170,171,171,172,172,173,173,174,174,175,175,403,403,176,176,177,177,210,404,405,406,407,408,409,410,211,212,411,412,413,414,41,415,213,416,417,214,215,418,419,86,42,420,43,87,88,421,422,89,423,216,178,217,424,44,90,91,11,92,93,2,94,95,96,3,97,45,4,98,99,100,101,102,103,104,105,106,107,122,12,425,426,427],"tindex":"7edaa94e-dbcf-11e4-941e-ed59fd5c829e","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"7edaa94f-dbcf-11e4-941e-c95f7c1c2b22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"7edaa950-dbcf-11e4-941e-4d7acd12a957","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"7edaa951-dbcf-11e4-941e-1d5fc83ec969","variableMapping":{"allSegments":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"7edaa952-dbcf-11e4-941e-91bacda72c1b","variableMapping":{"instruction":"obj"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[79,405,211,414,415,213,416,417,214,418,419,42,420,43,87,88,421,422,89,178,424,44,11,92,94],"tindex":"7edaa953-dbcf-11e4-941e-9f3f6b6cf542","variableMapping":{"eof":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:162","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"EOF reached\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[],"tindex":"7edaa954-dbcf-11e4-941e-2b63113069a7","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"code","edge":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-2},{"failures":[],"tindex":"7edaa955-dbcf-11e4-941e-2ff883e6cd7b","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"7edaa956-dbcf-11e4-941e-6b94b9e6ae0a","variableMapping":{"resultOrientation":"lat","orientation":"lat","java.lang.Math.PI":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-2},{"failures":[],"tindex":"7edaa957-dbcf-11e4-941e-978936d9388b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[218,127,128,219,220,129,221,222,223,224,225,226,227,228,229,230,5,231,232,233,234,235,236,237,238,239,130,240,241,242,243,244,131,245,246,247,248,132,249,250,133,251,252,47,253,48,49,50,51,254,52,255,53,54,55,56,57,58,13,257,258,259,260,262,14,59,60,61,62,63,265,266,267,268,270,15,64,65,271,66,272,67,68,69,70,273,71,274,72,73,74,75,76,77,16,136,278,137,138,279,280,139,281,282,283,284,285,286,287,288,289,290,6,291,292,293,294,295,296,297,298,299,140,300,301,302,303,304,141,305,306,307,308,142,309,310,143,311,312,7,144,445,446,447,448,449,450,451,452,453,454,455,349,350,351,352,353,145,354,355,146,147,356,357,148,358,359,360,361,362,363,364,365,366,367,8,368,369,370,371,372,373,374,375,376,149,377,378,379,380,381,150,382,383,384,385,151,386,387,152,388,389,78,79,390,391,392,393,394,161,395,396,397,162,163,164,116,81,82,398,399,206,83,84,85,207,208,400,165,19,166,167,168,169,402,170,171,172,173,174,175,403,176,177,210,404,405,406,407,408,409,410,211,212,411,412,413,414,41,415,213,416,417,214,215,418,419,86,42,420,43,87,88,421,422,89,423,216,178,217,424,44,90,91,11,92,93,2,94,95,96,3,97,45,4,98,99,100,101,102,103,104,105,106,107,122,12,425,426,427],"tindex":"7edad068-dbcf-11e4-941e-c9b34ceb280b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"7edad069-dbcf-11e4-941e-a579609732fe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[210,212,41,415,44],"tindex":"7edad06a-dbcf-11e4-941e-1d364cb1206f","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"tmp","speed":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[456,457],"tindex":"7edad06b-dbcf-11e4-941e-f952724f841f","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[0,18,28,90,2,3,97,45,4,98,99,101,102,104,107,122,12],"tindex":"7edad06c-dbcf-11e4-941e-b7fe526a7d7c","variableMapping":{"wayTypeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"7edad06d-dbcf-11e4-941e-497957f42e05","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"7edad06e-dbcf-11e4-941e-79bdc57e73ed","variableMapping":{"factor":"decDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[19],"tindex":"7edad06f-dbcf-11e4-941e-a14db126585f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[349,211,413],"tindex":"7edad070-dbcf-11e4-941e-2923b7e2cad6","variableMapping":{"updatedA":"tmpPrevEdge","nodeA":"edgeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1305","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[458,459,460,461,462,463,100,105],"tindex":"7edad071-dbcf-11e4-941e-5326e000c3eb","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[],"tindex":"7edad072-dbcf-11e4-941e-8132db13ecc1","variableMapping":{"empty":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[],"tindex":"7edad073-dbcf-11e4-941e-2d81cf665825","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":-2},{"failures":[78,405,211,414,415,213,416,417,214,215,418,419,42,87,88,421,422,89,216,178,217,424,44,92,93,2,94,96],"tindex":"7edad074-dbcf-11e4-941e-93e3d762ced7","variableMapping":{"empty":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-1},{"failures":[],"tindex":"7edad075-dbcf-11e4-941e-91a53c81333d","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"7edad076-dbcf-11e4-941e-05154766d29c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"7edad077-dbcf-11e4-941e-45b05ae72973","variableMapping":{"allBits":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":0},{"failures":[21,23,24,30,32,33,34,35,36,38,39],"tindex":"7edad078-dbcf-11e4-941e-3392679e92e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[],"tindex":"7edaf789-dbcf-11e4-941e-cb1ea8a75dc7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":381,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":423,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":121,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":145,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":314,"com.graphhopper.reader.OSMReaderTest.testFerry":45,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":391,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":392,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":31,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":68,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":91,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":290,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":133,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":354,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":333,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":5,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":271,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":155,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":411,"com.graphhopper.GraphHopperTest.testPrepare":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":344,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":210,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":42,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":162,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":263,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":39,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":82,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":357,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":207,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":38,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":193,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":446,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":213,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":49,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":32,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":136,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":148,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":430,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":414,"com.graphhopper.GraphHopperTest.testLoadOSM":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":54,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":50,"com.graphhopper.reader.OSMReaderTest.testSort":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":197,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":84,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":138,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":158,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":247,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":345,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":174,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":425,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":308,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":380,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":227,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":277,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":139,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":367,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":113,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":202,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":71,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":88,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":70,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":214,"com.graphhopper.coll.OSMIDMapTest.testGetLong":182,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":417,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":299,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":373,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":146,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":375,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":239,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":199,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":6,"com.graphhopper.GraphHopperAPITest.testLoad":78,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":436,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":448,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":458,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":231,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":222,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":46,"com.graphhopper.storage.LevelGraphStorageTest.testClone":361,"com.graphhopper.reader.OSMReaderTest.testBarriers":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":281,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":64,"com.graphhopper.util.GHUtilityTest.testCopy":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":16,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":261,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":114,"com.graphhopper.routing.PathTest.testFindInstruction":167,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":282,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":18,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":390,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":188,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":258,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":248,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":306,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":294,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":355,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":409,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":26,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":363,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":319,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":455,"com.graphhopper.util.InstructionListTest.testWayList2":164,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":340,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":55,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":286,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":30,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":310,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":165,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":327,"com.graphhopper.storage.RAMDirectoryTest.testSynched":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":291,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":215,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":221,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":101,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":178,"com.graphhopper.coll.OSMIDMapTest.testGet":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":289,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":1,"com.graphhopper.routing.PathBidirRefTest.testExtract":398,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":149,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":181,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":74,"com.graphhopper.storage.RAMDataAccessTest.testCopy":153,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":312,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":338,"com.graphhopper.storage.RAMDataAccessTest.testSegments":156,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":461,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":13,"com.graphhopper.util.GHUtilityTest.testSort2":394,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":421,"com.graphhopper.reader.OSMReaderTest.testMain":98,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":147,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":75,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":117,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":342,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":8,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":371,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":388,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":171,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":187,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":447,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":374,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":122,"com.graphhopper.storage.StorablePropertiesTest.testStore":134,"com.graphhopper.storage.GraphHopperStorageTest.testClone":224,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":341,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":10,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":438,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":118,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":233,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":320,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":352,"com.graphhopper.routing.PathTest.testTime":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":201,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":387,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":362,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":332,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":378,"com.graphhopper.reader.OSMReaderTest.testRelation":443,"com.graphhopper.util.GHUtilityTest.testSortDirected":396,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":457,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":191,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":170,"com.graphhopper.GraphHopperTest.testFootOnly":3,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":60,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":209,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":439,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":273,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":416,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":404,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":328,"com.graphhopper.search.NameIndexTest.testCreate":126,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":168,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":451,"com.graphhopper.routing.QueryGraphTest.testOneWay":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":48,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":428,"com.graphhopper.reader.OSMReaderTest.testWithBounds":107,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":83,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":334,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":25,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":358,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":356,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":115,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":301,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":295,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":129,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":415,"com.graphhopper.util.InstructionListTest.testWayList":163,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":249,"com.graphhopper.GraphHopperAPITest.testDisconnected179":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":321,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":429,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":303,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":189,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":427,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":331,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":347,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":93,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":226,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":412,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":242,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":212,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":280,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":424,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":275,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":450,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":111,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":218,"com.graphhopper.routing.PathTest.testWayList":166,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":324,"com.graphhopper.coll.OSMIDMapTest.testGet2":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":44,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":383,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":300,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":236,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":274,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":372,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":72,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":154,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":73,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":460,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":456,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":34,"com.graphhopper.util.GHUtilityTest.testSort":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":337,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":196,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":463,"com.graphhopper.search.NameIndexTest.testPut":124,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":435,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":260,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":272,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":63,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":267,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":453,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":22,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":173,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":19,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":265,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":278,"com.graphhopper.storage.MMapDirectoryTest.testSynched":440,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":462,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":296,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":206,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":454,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":144,"com.graphhopper.routing.PathTest.testFound":401,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":28,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":97,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":385,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":351,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":195,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":292,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":125,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":7,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":229,"com.graphhopper.util.InstructionListTest.testEmptyList":397,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":87,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":205,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":459,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":422,"com.graphhopper.reader.PrinctonReaderTest.testRead":426,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":132,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":69,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":288,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":313,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":297,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":20,"com.graphhopper.reader.OSMReaderTest.testFoot":4,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":177,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":336,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":255,"com.graphhopper.reader.OSMReaderTest.testOneWay":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":53,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":232,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":245,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":307,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":204,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":160,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":240,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":330,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":408,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":432,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":405,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":413,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":406,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":431,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":400,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":326,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":402,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":219,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":444,"com.graphhopper.routing.PathBidirRefTest.testExtract2":399,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":452,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":41,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":14,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":56,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":123,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":244,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":269,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":203,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":103,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":348,"com.graphhopper.util.SimpleIntDequeTest.testPush":80,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":211,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":51,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":246,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":364,"com.graphhopper.GraphHopperTest.testFootAndCar":2,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":130,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":369,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":35,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":410,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":284,"com.graphhopper.storage.StorablePropertiesTest.testLoad":434,"com.graphhopper.GraphHopperTest.testPrepareOnly":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":216,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":315,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":105,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":353,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":116,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":243,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":17,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":329,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":120,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":384,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":382,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":137}}]
