[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"f68aa98e-dc0f-11e4-b29b-3bd42471ed41","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-1},{"failures":[37],"tindex":"f68ad09f-dc0f-11e4-b29b-6525fe4dc5a8","variableMapping":{"logSize":"relBitMask","java.lang.Integer.MAX_VALUE":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:259","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"f68ad0a0-dc0f-11e4-b29b-0990199fd8bb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"f68ad0a1-dc0f-11e4-b29b-d9b3187beebf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[38,39,40,41],"tindex":"f68ad0a2-dc0f-11e4-b29b-f9482ae0b404","variableMapping":{"acceptedRailways":"intendedValues","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"f68ad0a3-dc0f-11e4-b29b-cbb0dbdf0262","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"f68ad0a4-dc0f-11e4-b29b-d371602712df","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[42,43],"tindex":"f68ad0a5-dc0f-11e4-b29b-f7c040b33b81","variableMapping":{"visitedCountFrom":"minutes","visitedCountTo":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"f68ad0a6-dc0f-11e4-b29b-f752f548d295","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"f68ad0a7-dc0f-11e4-b29b-8d470407257d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,0,1,246,247,248,249,250,251,252,253,254,2,3,4,5,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,6,284,285,286,7,287,8,288,289,290,291,292,9,10,11,12,13,293,14,15,294,16,17,18,19,20,21,22,23,24,295,25,26,27,28,29,296,297,30,31,32,33,34,298,35,36,299,43,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"f68af7b8-dc0f-11e4-b29b-87a356dafef2","variableMapping":{"segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"f68af7b9-dc0f-11e4-b29b-af5a39a865bd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"f68af7ba-dc0f-11e4-b29b-615bb429f1ab","variableMapping":{"orientation":"maxEle","java.lang.Math.PI":"maxEle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"f68af7bb-dc0f-11e4-b29b-7d62a00c17c5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"f68af7bc-dc0f-11e4-b29b-5921a3086770","variableMapping":{"intVal":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[87,96,316,123,132,317,318],"tindex":"f68af7bd-dc0f-11e4-b29b-57a7224379db","variableMapping":{"radiusInMeter":"maxLonTmp","lon":"midLon","lat":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"f68af7be-dc0f-11e4-b29b-5579f93aec65","variableMapping":{"storedKey":"bits","key":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":0},{"failures":[],"tindex":"f68af7bf-dc0f-11e4-b29b-6d7042a04b20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[296,299],"tindex":"f68b1ed0-dc0f-11e4-b29b-0dc5bc1ad091","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[],"tindex":"f68b1ed1-dc0f-11e4-b29b-bd514e972a3a","variableMapping":{"gradient":"maxLatTmp","yend":"minLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"f68b1ed2-dc0f-11e4-b29b-678ce8dd1063","variableMapping":{"byteCount":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[],"tindex":"f68b1ed3-dc0f-11e4-b29b-8daf7b291f9f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[45,49,50,51,58,60,73,78,81,85,139,141,145,146,147,154,156,169,174,177,181,319,320,321,322,183,323,324,325,326,204,208,209,210,217,219,232,237,240,244,0,246,247,259,263,264,274,277,282,6,284,8,288,289,292,9,10,293,294,18,20,21,29,300,312,314,315],"tindex":"f68b1ed4-dc0f-11e4-b29b-99fc3cd14ea1","variableMapping":{"shiftSum":"len"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-1},{"failures":[],"tindex":"f68b1ed5-dc0f-11e4-b29b-7500b16839cd","variableMapping":{"str":"str","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:80","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":0},{"failures":[],"tindex":"f68b1ed6-dc0f-11e4-b29b-771d86a19bae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"f68b1ed7-dc0f-11e4-b29b-a11b25c4c369","variableMapping":{"tmpDegreeCounter":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":0},{"failures":[247,248,250,252,255,256,261,262],"tindex":"f68b1ed8-dc0f-11e4-b29b-f502deb2e350","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[327,328,329,330,306],"tindex":"f68b1ed9-dc0f-11e4-b29b-2f5b1fd1fa78","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"maxTurnCosts","nodeType":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"f68b1eda-dc0f-11e4-b29b-814d1477772d","variableMapping":{"id":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-2},{"failures":[331,37],"tindex":"f68b1edb-dc0f-11e4-b29b-fd25fff76048","variableMapping":{"res":"relBitMask","value":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"f68b1edc-dc0f-11e4-b29b-5b427279af00","variableMapping":{"index":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[],"tindex":"f68b1edd-dc0f-11e4-b29b-033b66d66807","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[5,331,37,332,296,297,30,31,32,33,34,298,35,36,299,43,300,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"f68b1ede-dc0f-11e4-b29b-cd8c5789ff24","variableMapping":{"bytePos":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[285,8,291,10,11,12,14,15,16,17,20,22,23,24,295,25,27,28,29,333,334],"tindex":"f68b45ef-dc0f-11e4-b29b-637c7eaa54ee","variableMapping":{"size":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"f68b45f0-dc0f-11e4-b29b-07f5f3f59f3b","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"from","nextEdge":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-2},{"failures":[],"tindex":"f68b45f1-dc0f-11e4-b29b-bbd54b775a2c","variableMapping":{"retBucket":"shift","bucketSize":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[44,45,46,47,48,335,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,336,101,102,103,104,105,106,337,107,108,109,110,111,112,338,113,114,115,116,117,339,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,340,137,138,139,341,140,141,142,143,144,342,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,319,320,321,343,344,345,346,347,348,322,349,183,350,351,352,353,354,355,356,357,358,359,360,361,323,362,184,363,364,324,365,366,325,367,368,369,326,370,196,197,198,199,200,201,202,203,204,205,206,207,371,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,0,1,372,246,247,248,249,250,251,252,373,253,254,2,3,4,5,255,256,257,258,374,259,260,261,262,263,264,375,376,265,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,327,395,396,397,266,267,398,399,400,401,402,403,404,328,405,406,407,408,409,410,411,412,413,414,38,415,416,417,418,419,420,421,422,423,424,425,426,427,330,428,429,430,431,432,433,434,435,436,437,39,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,40,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,41,468,469,470,471,268,269,472,270,271,272,273,274,275,276,277,278,279,280,281,282,283,473,6,284,285,286,7,287,8,288,289,290,291,292,9,10,11,12,13,293,14,15,294,16,17,18,19,20,21,22,23,24,295,25,26,27,28,29,474,475,296,297,30,31,32,33,34,476,298,35,36,299,477,43,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315],"tindex":"f68b45f2-dc0f-11e4-b29b-7bed27ed5e23","variableMapping":{"location":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:55","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"f68b45f3-dc0f-11e4-b29b-2b366855bb3d","variableMapping":{"val":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:109","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[45,49,70,76,81,84,89,90,91,125,126,127,478,139,141,145,166,172,177,180,319,359,184,363,325,369,187,188,193,194,195,204,208,229,235,240,243,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,251,2,3,4,266,267,268,270,271,273,274,275,276,277,278,280,281,26,498,499,500,501,502,296,297,30,31,32,34,298,35,36,299,43,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"f68b45f4-dc0f-11e4-b29b-657eefef3af1","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[],"tindex":"f68b6d05-dc0f-11e4-b29b-03f665adadd5","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[503,504,505,506,507,508,509,317,510,511],"tindex":"f68b6d06-dc0f-11e4-b29b-fb256c0b879b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"f68b6d07-dc0f-11e4-b29b-7f6c6a768214","variableMapping":{"this":"graph","toNodeId":"skippedEdge2","newEdgeId":"skippedEdge2","fromNodeId":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:352","type":"CtIfImpl","sourcecode":"if (int != int)\n    com.graphhopper.storage.GraphHopperStorage.connectNewEdge(int, int);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"f68b6d08-dc0f-11e4-b29b-b3bf62ac4d47","variableMapping":{"high":"I_SKIP_EDGE1","guess":"I_SKIP_EDGE1","low":"I_SKIP_EDGE1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":0},{"failures":[],"tindex":"f68b6d09-dc0f-11e4-b29b-8bbf25bbb064","variableMapping":{"res":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":0},{"failures":[],"tindex":"f68b6d0a-dc0f-11e4-b29b-f3e813b76597","variableMapping":{"dLat":"com.graphhopper.util.EdgeIterator.NO_EDGE","dLon":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[385,387,388,390,392,397,297,30,31,32,33,34,298,35,299,300,301,302,303,305,306,307,308,309,310,311,512,312],"tindex":"f68b6d0b-dc0f-11e4-b29b-7d150c9e8172","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"f68b6d0c-dc0f-11e4-b29b-136845946242","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[400,404,331,423,427,458,513],"tindex":"f68b6d0d-dc0f-11e4-b29b-2ff14cf1c4a1","variableMapping":{"index":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"f68b6d0e-dc0f-11e4-b29b-475b7c2278d0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":-2},{"failures":[],"tindex":"f68b6d0f-dc0f-11e4-b29b-6f7e4b6dbbbe","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[55,151,346,214,5,377,378,380,382,385,386,388,390,396,397,399,403,404,414,417,332,422,426,427,437,441,443,452,456,458,467,268,10,19,20,29,30,33,299],"tindex":"f68b6d10-dc0f-11e4-b29b-3d2280ecc549","variableMapping":{"val":"defaultD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"f68b6d11-dc0f-11e4-b29b-e3ceebac9f7e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[60,156,183,219,486,494],"tindex":"f68b6d12-dc0f-11e4-b29b-514a074df76d","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[],"tindex":"f68b6d13-dc0f-11e4-b29b-4b3cb6104e98","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-2},{"failures":[392,43],"tindex":"f68b6d14-dc0f-11e4-b29b-313c7b5d311a","variableMapping":{"name":"motorcarTag","refName":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:449","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[109,110,111,113,247,248,250,252,255,256,261,262],"tindex":"f68b9425-dc0f-11e4-b29b-11d31a53e4cb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[503,504,505,506,507,508,509,317,510],"tindex":"f68b9426-dc0f-11e4-b29b-fd47d5d809ae","variableMapping":{"maxMCSpeed":"midLat","speed":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[478,139,479,480,481,514,482,483,484,485,486,487,488,489,515,490,491,492,493,494,498,499,500,501,502,30,31,32,34,35,36,43,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"f68b9427-dc0f-11e4-b29b-29bbffca05d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:218","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-1},{"failures":[],"tindex":"f68b9428-dc0f-11e4-b29b-db1348d36e04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[267],"tindex":"f68b9429-dc0f-11e4-b29b-ed1efb9e49d7","variableMapping":{"speed":"fwdSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[267],"tindex":"f68b942a-dc0f-11e4-b29b-277d47c49ad8","variableMapping":{"distInMeter":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"f68b942b-dc0f-11e4-b29b-2d683b06fa6c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[440,441,442,443,444,445,446,447,448,449,450,451,452,40,453,454],"tindex":"f68b942c-dc0f-11e4-b29b-a330ec17d330","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-1},{"failures":[],"tindex":"f68b942d-dc0f-11e4-b29b-490e8211e543","variableMapping":{"size":"encoderCount","hash":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":0},{"failures":[267],"tindex":"f68b942e-dc0f-11e4-b29b-65809598aa60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[51,62,68,76,77,147,158,164,172,173,321,351,357,363,364,210,221,227,235,236,259,262],"tindex":"f68b942f-dc0f-11e4-b29b-a7cc8b39eeb3","variableMapping":{"length":"high","factor":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"f68b9430-dc0f-11e4-b29b-931078f74ea7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[399,400,402,403,404,413,415,416,331,37,332,422,423,425,426,427,436,438,439,441,442,443,451,453,454,456,458,459,466,468,43,300,301,302,304,305,306,307,310,311,312],"tindex":"f68b9431-dc0f-11e4-b29b-25aefdcaa076","variableMapping":{"len":"speed","start":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[45,49,70,76,81,84,91,127,478,139,141,145,166,172,177,180,319,359,184,363,325,369,188,193,194,195,204,208,229,235,240,243,480,481,482,483,484,485,486,488,489,490,491,492,493,494,495,496,497,3,4,268,271,275,278,281,26,498,499,500,501,502,296,31,32,34,35,36,43,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"f68b9432-dc0f-11e4-b29b-47351304bd03","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[455,456,457,458,459,460,461,462,463,464,465,466,467,41,468],"tindex":"f68b9433-dc0f-11e4-b29b-cdf1aebbce2a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-1},{"failures":[377,380,33,36,43,300,301,307,310,312],"tindex":"f68bbb44-dc0f-11e4-b29b-452d48c48b7b","variableMapping":{"lastTime":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[259,264],"tindex":"f68bbb45-dc0f-11e4-b29b-39e56a782441","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[503,504,505,506,508,509,317,510],"tindex":"f68bbb46-dc0f-11e4-b29b-c91e530cb6c4","variableMapping":{"towerNodeDistance":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[60,156,183,219,0,5,376,377,378,380,382,385,388,390,391,396,397,267,399,403,404,414,417,332,422,426,427,437,441,443,452,516,517,518,456,458,467,471,268,9,10,17,19,20,29,30,31,32,33,34,35,36,43,311],"tindex":"f68bbb47-dc0f-11e4-b29b-9de636555344","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[],"tindex":"f68bbb48-dc0f-11e4-b29b-dda47d7040c0","variableMapping":{"tmpDegreeCounter":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[51,76,77,147,172,173,321,363,364,210,235,236,261,262,312],"tindex":"f68bbb49-dc0f-11e4-b29b-a554593d6ad7","variableMapping":{"len":"valueIfKeyNotFound","start":"valueIfKeyNotFound"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"f68bbb4a-dc0f-11e4-b29b-41c96802d581","variableMapping":{"resultOrientation":"angle","orientation":"com.graphhopper.util.AngleCalc.PI_4","java.lang.Math.PI":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,519,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,0,1,246,247,248,249,250,251,252,253,254,2,3,4,5,255,256,257,258,259,260,261,262,263,264,265,266,267,470,471,268,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,280,281,281,282,283,6,284,285,286,7,287,8,288,289,290,291,292,9,10,11,12,13,293,14,15,294,16,17,18,19,20,21,22,23,24,295,25,26,27,28,29,296,297,30,31,32,33,34,298,35,36,299,43,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"f68bbb4b-dc0f-11e4-b29b-f9dc42a950d5","variableMapping":{"segNumber":"i","segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"f68bbb4c-dc0f-11e4-b29b-c91830d01bb4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[413,436,443,451,466],"tindex":"f68bbb4d-dc0f-11e4-b29b-ebe1cbb8c93d","variableMapping":{"initializedCounter":"wayType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[331,37,513],"tindex":"f68bbb4e-dc0f-11e4-b29b-9f52fc0f8344","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[],"tindex":"f68bbb4f-dc0f-11e4-b29b-f5862ba29f00","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"f68bbb50-dc0f-11e4-b29b-250160e1f9b6","variableMapping":{"str":"str","edgeEncoders":"edgeEncoders"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:291","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[386],"tindex":"f68be161-dc0f-11e4-b29b-010b2f7af62b","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"f68be162-dc0f-11e4-b29b-f99d82147a0c","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"f68be163-dc0f-11e4-b29b-a3b85bb6f411","variableMapping":{"keyIndex":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-2},{"failures":[],"tindex":"f68be164-dc0f-11e4-b29b-4f4f57b61800","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"f68be165-dc0f-11e4-b29b-4ffd523af37b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"f68be166-dc0f-11e4-b29b-77c562ba891f","variableMapping":{"fromNode":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":0},{"failures":[],"tindex":"f68be167-dc0f-11e4-b29b-d37e047c5ac8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"f68be168-dc0f-11e4-b29b-bd327569908c","variableMapping":{"r":"lastPrio","com.graphhopper.util.AngleCalc.PI_4":"lastPrio","x":"lastPrio","angle":"lastPrio","absY":"lastPrio","com.graphhopper.util.AngleCalc.PI3_4":"lastPrio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f68be169-dc0f-11e4-b29b-ddd3176d34b2","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-2},{"failures":[],"tindex":"f68be16a-dc0f-11e4-b29b-2d226071e654","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[402,404,413,425,427,436,442,443,451,458,466],"tindex":"f68be16b-dc0f-11e4-b29b-bd2ab2fa7131","variableMapping":{"shift":"unpavedBit","tmpValue":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[],"tindex":"f68be16c-dc0f-11e4-b29b-bd3fffe7d00c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[],"tindex":"f68be16d-dc0f-11e4-b29b-1f1d89b80a7e","variableMapping":{"x1":"fwdDecline","x2":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:150","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[],"tindex":"f68be16e-dc0f-11e4-b29b-552cba10c68f","variableMapping":{"i":"size","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":234,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":295,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":201,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":516,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":105,"com.graphhopper.GraphHopperAPITest.testNoLoad":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":320,"com.graphhopper.reader.OSMReaderTest.testFerry":43,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":247,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":426,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":459,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":126,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":297,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":245,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":413,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":155,"com.graphhopper.coll.CompressedArrayTest.testCompress":504,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":465,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":84,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":359,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":60,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":122,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":487,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":289,"com.graphhopper.GraphHopperTest.testPrepare":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":367,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":282,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":334,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":424,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":17,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":519,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":466,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":256,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":207,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":123,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":263,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":458,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":422,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":11,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":294,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":90,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":180,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":427,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":139,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":318,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":208,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":333,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":292,"com.graphhopper.GraphHopperTest.testLoadOSM":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":97,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":91,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":420,"com.graphhopper.reader.OSMReaderTest.testSort":302,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":437,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":261,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":142,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":489,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":79,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":45,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":368,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":277,"com.graphhopper.routing.DijkstraTest.initializationError":469,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":176,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":478,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":233,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":56,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":341,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":150,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":518,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":145,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":218,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":454,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":452,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":130,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":21,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":128,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":476,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":13,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":210,"com.graphhopper.coll.OSMIDMapTest.testGetLong":501,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":159,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":165,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":225,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":204,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":227,"com.graphhopper.coll.CompressedArrayTest.testCompress2":503,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":69,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":441,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":156,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":371,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":188,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":375,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":61,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":51,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":42,"com.graphhopper.storage.LevelGraphStorageTest.testClone":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":146,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":264,"com.graphhopper.reader.OSMReaderTest.testBarriers":303,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":15,"com.graphhopper.util.GHUtilityTest.testCopy":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":345,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":515,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":138,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":449,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":41,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":337,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":485,"com.graphhopper.routing.PathTest.testFindInstruction":269,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":462,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":147,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":246,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":380,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":241,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":104,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":401,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":80,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":174,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":160,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":411,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":472,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":214,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":346,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":195,"com.graphhopper.util.InstructionListTest.testWayList2":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":98,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":85,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":507,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":179,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":423,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":266,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":216,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":514,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":330,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":490,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":157,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":14,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":50,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":304,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":488,"com.graphhopper.routing.AStarTest.initializationError":475,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":26,"com.graphhopper.coll.OSMIDMapTest.testGet":498,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":154,"com.graphhopper.routing.PathBidirRefTest.testExtract":257,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":381,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":229,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":430,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":500,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":134,"com.graphhopper.storage.RAMDataAccessTest.testCopy":480,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":363,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":456,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":429,"com.graphhopper.storage.RAMDataAccessTest.testSegments":484,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":102,"com.graphhopper.util.GHUtilityTest.testSort2":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":22,"com.graphhopper.reader.OSMReaderTest.testMain":301,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":205,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":164,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":431,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":39,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":135,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":232,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":366,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":219,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":223,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":244,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":220,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":169,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":187,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":399,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":226,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":311,"com.graphhopper.storage.GraphHopperStorageTest.testClone":53,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":365,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":392,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":63,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":390,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":196,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":40,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":347,"com.graphhopper.routing.PathTest.testTime":471,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":448,"com.graphhopper.util.BitUtilLittleTest.testToFloat":496,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":242,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":213,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":396,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":338,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":100,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":358,"com.graphhopper.reader.OSMReaderTest.testRelation":513,"com.graphhopper.util.GHUtilityTest.testSortDirected":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":414,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":493,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":273,"com.graphhopper.GraphHopperTest.testFootOnly":36,"com.graphhopper.util.BitUtilLittleTest.testToInt":497,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":457,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":110,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":388,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":129,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":283,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":398,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":354,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":483,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":270,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":191,"com.graphhopper.routing.QueryGraphTest.testOneWay":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":336,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":508,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":461,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":89,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":505,"com.graphhopper.reader.OSMReaderTest.testWithBounds":310,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":486,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":38,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":479,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":178,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":260,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":360,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":382,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":331,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":209,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":412,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":468,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":168,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":161,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":49,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":10,"com.graphhopper.util.BitUtilLittleTest.testToBitString":495,"com.graphhopper.util.InstructionListTest.testWayList":3,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":428,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":348,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":509,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":409,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":315,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":262,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":435,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":32,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":55,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":290,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":421,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":19,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":474,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":288,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":240,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":393,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":445,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":144,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":28,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":335,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":340,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":190,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":439,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":44,"com.graphhopper.routing.PathTest.testWayList":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":369,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":350,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":387,"com.graphhopper.coll.OSMIDMapTest.testGet2":499,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":29,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":167,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":434,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":66,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":376,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":152,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":131,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":224,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":132,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":481,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":494,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":133,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":406,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":442,"com.graphhopper.util.GHUtilityTest.testSort":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":362,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":517,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":511,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":433,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":460,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":342,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":106,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":124,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":113,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":116,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":403,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":276,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":267,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":140,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":444,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":418,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":162,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":259,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":194,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":184,"com.graphhopper.routing.PathTest.testFound":470,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":299,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":332,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":239,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":198,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":432,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":158,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":183,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":58,"com.graphhopper.util.InstructionListTest.testEmptyList":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":16,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":450,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":20,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":384,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":383,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":467,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":23,"com.graphhopper.reader.PrinctonReaderTest.testRead":314,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":81,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":127,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":349,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":502,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":506,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":319,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":407,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":464,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":329,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":447,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":400,"com.graphhopper.reader.OSMReaderTest.testFoot":300,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":323,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":95,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":243,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":510,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":455,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":96,"com.graphhopper.reader.OSMReaderTest.testOneWay":312,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":62,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":77,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":175,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":463,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":492,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":405,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":356,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":286,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":291,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":391,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":284,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":491,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":265,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":352,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":272,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":47,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":512,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":192,"com.graphhopper.routing.PathBidirRefTest.testExtract2":258,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":99,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":108,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":451,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":75,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":339,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":453,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":370,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":377,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":410,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":92,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":78,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":373,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":215,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":394,"com.graphhopper.GraphHopperTest.testFootAndCar":33,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":70,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":221,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":137,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":482,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":344,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":419,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":327,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":25,"com.graphhopper.GraphHopperTest.testPrepareOnly":296,"com.graphhopper.GraphHopperTest.testVia":30,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":107,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":438,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":321,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":308,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":200,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":5,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":74,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":378,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":355,"com.graphhopper.routing.AStarBidirectionTest.initializationError":374,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":397,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":238,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":236,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":141}}]
