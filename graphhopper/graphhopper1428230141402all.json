[{"failures":[],"tindex":"8278ecd3-db7f-11e4-870c-7fc7816edf89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:504","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"827913e4-db7f-11e4-870c-b708f0542bba","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[26,49],"tindex":"827913e5-db7f-11e4-870c-2daac0be0a3d","variableMapping":{"from":"maxCount","hash":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[179,213,229,258,274,301,317],"tindex":"827913e6-db7f-11e4-870c-159131558c45","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,344,345,27,346,347,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,348,349,350,169,170,178,179,181,192,194,195,196,198,200,202,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,351,352,353,354,355,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"82793af7-db7f-11e4-870c-b5d274717a2f","variableMapping":{"retBucket":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[2,3,5,6,10,14,17,19,20,22,48,49,50,82,83,86,377,378,93,94,108,109,126,128,131,134,135,136,137,139,143,144,147,148,149,153,155,158,161,162,163,164,166],"tindex":"82793af8-db7f-11e4-870c-89a3fe8c004e","variableMapping":{"cap":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"82793af9-db7f-11e4-870c-c11f8b07e963","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,379,380,381,382],"tindex":"82793afa-db7f-11e4-870c-7b686acbd6e8","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"82793afb-db7f-11e4-870c-cb95f43a9d3e","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"82793afc-db7f-11e4-870c-bb6cc1b449fb","variableMapping":{"name":"name","location":"name"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:66","type":"CtReturnImpl","sourcecode":"return (java.lang.String) + (java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[],"tindex":"82793afd-db7f-11e4-870c-89139f0ca933","variableMapping":{"newName":"val","name":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"82793afe-db7f-11e4-870c-9bd199d7f0b4","variableMapping":{"turnCosts":"distance","weight":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[],"tindex":"82793aff-db7f-11e4-870c-d1eac754c7c5","variableMapping":{"bitsForEdgeFlags":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[2,25,383,384,385,386,387,388,389,390,391,392,393,99],"tindex":"82793b00-db7f-11e4-870c-9784e04a5575","variableMapping":{"dX":"speed","dY":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"82793b01-db7f-11e4-870c-6d52c5c5d222","variableMapping":{"len":"lastEdgeIndex","i":"lastEdgeIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[],"tindex":"82793b02-db7f-11e4-870c-6703f7ec4d37","variableMapping":{"index":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[],"tindex":"82796213-db7f-11e4-870c-2b0c53e2a920","variableMapping":{"directionBitMask":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","flags":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[394],"tindex":"82796214-db7f-11e4-870c-35bfc6fa5cd8","variableMapping":{"flags":"hash","mask":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"82796215-db7f-11e4-870c-e3c038903553","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[13,395],"tindex":"82796216-db7f-11e4-870c-690dbfe49a5e","variableMapping":{"visitedCountFrom":"minutes","visitedCountTo":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"82796217-db7f-11e4-870c-7fc7f237c1cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:454","type":"CtLocalVariableImpl","sourcecode":"java.lang.Exception java.lang.Exception"},"status":0},{"failures":[396],"tindex":"82796218-db7f-11e4-870c-73d89beb8ce0","variableMapping":{"byteCount":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"82796219-db7f-11e4-870c-1bab5af91cce","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"8279621a-db7f-11e4-870c-9f2d2bed73a0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:940","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[397,398,399,400,401,402,403,404,405,406,407,388,408,409,410,411,412,391,413,414,415],"tindex":"8279621b-db7f-11e4-870c-0fdd3b472e9e","variableMapping":{"bits":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[416],"tindex":"8279621c-db7f-11e4-870c-21da3697890a","variableMapping":{"name":"s","refName":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:449","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"8279621d-db7f-11e4-870c-07e43fd7bfd2","variableMapping":{"str":"pavementName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:463","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return \"\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,417,26,32,35,42,43,44,45,418,419,420,421,422,423,424,385,425,426,427,428,429,47,48,49,50,51,430,55,56,57,58,59,60,61,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,96,97,98,99,102,105,106,107,108,109,168,169,170,172,173,176,177,179,184,186,192,194,197,199,200,204,206,210,214,218,219,220,222,223,226,227,229,234,236,242,244,247,249,250,254,256,259,263,264,265,267,268,271,272,274,279,281,287,289,292,294,295,299,302,306,307,308,310,311,314,315,317,322,324,330,332,335,337,338,342],"tindex":"8279892e-db7f-11e4-870c-e3454e6853e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:137","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"8279892f-db7f-11e4-870c-7dd4bbab02bf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[394,431,432,433,434,435,436,437,438,439,440,124,130,132,133,441,151,157,159,160],"tindex":"82798930-db7f-11e4-870c-231eb8719552","variableMapping":{"size":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[61,63,67,78,442],"tindex":"82798931-db7f-11e4-870c-1f783f40632d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"82798932-db7f-11e4-870c-07c8aba1f645","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"82798933-db7f-11e4-870c-fb55b014ae42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[0,6,7,8,10,211,214,256,259,302,368,443],"tindex":"82798934-db7f-11e4-870c-a5d2902da092","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-1},{"failures":[398,399,400,403,404,407,408,409,412,413,414],"tindex":"82798935-db7f-11e4-870c-3ba54ecd4414","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"82798936-db7f-11e4-870c-9d00ee8fb0d0","variableMapping":{"shift":"maxValue","preferWayEncoder":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"82798937-db7f-11e4-870c-2371cbe120a1","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[47,51,52],"tindex":"82798938-db7f-11e4-870c-79bf26298613","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"82798939-db7f-11e4-870c-2fd7e3aef127","variableMapping":{"lastTime":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":0},{"failures":[444],"tindex":"8279893a-db7f-11e4-870c-bd91be9b0a79","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[],"tindex":"8279893b-db7f-11e4-870c-afc14c5f1c30","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[445,446,447],"tindex":"827a9aac-db7f-11e4-870c-0110f39fe37b","variableMapping":{"shift":"oldRelationFlags","flags":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,78,82,83,86,108,109,124,126,127,128,129,131,132,133,134,135,136,137,139,140,448,449,450,451,452,441,453,454,148,149,151,153,154,155,156,158,159,160,161,162,163,164,166,167],"tindex":"827a9aad-db7f-11e4-870c-71093dbbacec","variableMapping":{"segmentSizeInBytes":"sLat","index":"sLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-1},{"failures":[],"tindex":"827a9aae-db7f-11e4-870c-836965fc1a7a","variableMapping":{"preferWayEncoder":"preferWayEncoder","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.getValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"827a9aaf-db7f-11e4-870c-bf87eadebd1d","variableMapping":{"nodes":"length","adj":"length","base":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[2,3,6,57,63,68,70,71,72,73,74,76,77,79,80,81,82,83,84,85,86,89,91,92,109],"tindex":"827a9ab0-db7f-11e4-870c-735e11ec55c6","variableMapping":{"reverse":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:618","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Not yet supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[],"tindex":"827ac1c1-db7f-11e4-870c-410202f1d7be","variableMapping":{"java.lang.Integer.MAX_VALUE":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"827ac1c2-db7f-11e4-870c-3b9436d34c5e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"827ac1c3-db7f-11e4-870c-e52d84b15eb8","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"827ac1c4-db7f-11e4-870c-29a8610b6474","variableMapping":{"silent":"uTurnSupport"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"827ac1c5-db7f-11e4-870c-2139afc455d4","variableMapping":{"start":"guess","delta":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[398,400,403,404,407,408,409,412,413,414],"tindex":"827ac1c6-db7f-11e4-870c-217350a370b7","variableMapping":{"pavementName":"wayTypeName","pavementType":"wayType","tr":"tr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[],"tindex":"827ac1c7-db7f-11e4-870c-03a7d14f283f","variableMapping":{"latSize":"i","size":"i","lonSize":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":0},{"failures":[47,50,170,178,180,181,183,187,188,195,196,220,228,230,231,233,237,238,245,246,265,273,275,276,278,282,283,290,291,308,316,318,319,321,325,326,333,334],"tindex":"827ac1c8-db7f-11e4-870c-835f3534ac6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"827ac1c9-db7f-11e4-870c-e13215443b47","variableMapping":{"factor":"fwdDecline","delta_lon":"fwdDecline","a_lon":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"827ac1ca-db7f-11e4-870c-a10979f17d03","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"angle","speed":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[],"tindex":"827ac1cb-db7f-11e4-870c-63895a983f96","variableMapping":{"turnCostIndex":"biggestStart","NO_TURN_ENTRY":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-2},{"failures":[49,50,93,94,101,103,105,106],"tindex":"827ac1cc-db7f-11e4-870c-f1c63c7c96d9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[17,22,455,456,419,457,458,459],"tindex":"827ac1cd-db7f-11e4-870c-910d415db67d","variableMapping":{"allowWrites":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1085","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Writes are not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"827ac1ce-db7f-11e4-870c-a9a4f8c5a6da","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,443],"tindex":"827ae8df-db7f-11e4-870c-85ace148d8b6","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[13,423,395],"tindex":"827ae8e0-db7f-11e4-870c-f1c292b9813f","variableMapping":{"visitedCountFrom":"index","visitedCountTo":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[460,427],"tindex":"827ae8e1-db7f-11e4-870c-954b4fd42f0e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:952","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"This graph does not support an additional edge field.\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-1},{"failures":[],"tindex":"827ae8e2-db7f-11e4-870c-cf0c7697649f","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[395],"tindex":"827ae8e3-db7f-11e4-870c-4d32e1ca4ad3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[13,25,26,426],"tindex":"827ae8e4-db7f-11e4-870c-83bf87b5283f","variableMapping":{"ghLocation":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-1},{"failures":[461,399,462,402,403,463,464,388,408,465,466,391,413,467],"tindex":"827ae8e5-db7f-11e4-870c-ed2e24720f10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[42,98,468,469,470,471,472],"tindex":"827ae8e6-db7f-11e4-870c-59ac31155e0e","variableMapping":{"incDist2DSum":"y","fullDist2D":"y","decDist2DSum":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-1},{"failures":[],"tindex":"827ae8e7-db7f-11e4-870c-ff443d3f3562","variableMapping":{"newName":"val","name":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"827ae8e8-db7f-11e4-870c-a738d302745e","variableMapping":{"cap":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"827ae8e9-db7f-11e4-870c-b3b7e1eb5fbf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[473,474,400,401,475,476,404,405,477,478,409,410,479,480,414,415],"tindex":"827ae8ea-db7f-11e4-870c-b5c4197e07af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:449","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"827ae8eb-db7f-11e4-870c-b15cb1a358af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"827ae8ec-db7f-11e4-870c-b5d1626eb428","variableMapping":{"incomingEdges":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:585","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIterator.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"827ae8ed-db7f-11e4-870c-15c3b3dcc08f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"827ae8ee-db7f-11e4-870c-57b7c1ccc3ec","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[],"tindex":"827ae8ef-db7f-11e4-870c-bb99e2520c5f","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"finishedFrom","v":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[394,431,433,434,435,436,437,438,439,440,124,130,132,133,441,151,157,159,160],"tindex":"827b1000-db7f-11e4-870c-a31be67d312f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"827b1001-db7f-11e4-870c-d93bd307e16c","variableMapping":{"nanoTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,10,14,15,16,17,19,20,21,22,23,24,25,417,26,420,422,423,385,426,429],"tindex":"827b1002-db7f-11e4-870c-4768c2073c52","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"827b1003-db7f-11e4-870c-5f930429eae5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"827b1004-db7f-11e4-870c-57540488293c","variableMapping":{"acceptBit":"flags","ferryBit":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"827b1005-db7f-11e4-870c-ff99162b0bd1","variableMapping":{"segmentSizePower":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"827b1006-db7f-11e4-870c-c79194b1462e","variableMapping":{"flags":"defaultL","tmpValue":"defaultL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"827b1007-db7f-11e4-870c-6fcf0f17a9b6","variableMapping":{"str":"wayTypeName","tr":"tr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:244","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"stopover\", ((com.graphhopper.util.FinishInstruction)(this)).getViaPosition())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-2},{"failures":[26,47,49,50,170,178,180,181,183,187,188,195,196,212,220,228,230,231,233,237,238,245,246,265,273,275,276,278,282,283,290,291,308,316,318,319,321,325,326,333,334],"tindex":"827b1008-db7f-11e4-870c-05e1a033f824","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-1},{"failures":[420],"tindex":"827b1009-db7f-11e4-870c-738e1812d2d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-1},{"failures":[],"tindex":"827b100a-db7f-11e4-870c-b1f52d8b1ad9","variableMapping":{"delta_lat":"minLon","r_lat":"maxLon","a_lat":"minLon","delta_lon":"minLon","r_lon":"minLon","a_lon":"maxLon","norm":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"827b100b-db7f-11e4-870c-59d7d8b62ace","variableMapping":{"instruction":"obj"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"827b100c-db7f-11e4-870c-5b19f85cc7e0","variableMapping":{"version":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:82","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"-\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"827b100d-db7f-11e4-870c-f19874c13f7b","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[0,1,2,3,4,5,6,481,7,8,9,10,482,11,12,13,14,15,16,17,18,19,20,21,445,22,23,24,25,26,483,28,29,30,31,32,33,34,35,36,37,38,39,484,485,486,40,41,42,43,487,44,45,396,488,397,489,461,398,399,455,473,490,474,491,492,383,400,384,493,462,401,456,494,46,495,418,496,497,498,499,419,500,420,421,422,423,424,385,425,426,501,427,502,428,503,429,416,504,505,47,48,49,50,51,52,506,402,475,403,463,457,476,507,508,509,386,404,387,510,405,511,464,406,512,407,388,408,513,514,458,477,515,478,516,517,389,409,390,518,465,410,53,54,519,466,411,520,412,391,413,521,522,459,479,523,480,524,525,392,414,393,526,467,415,55,56,527,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,528,104,105,106,107,108,109,529,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,530,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,531,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,532,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"827b371e-db7f-11e4-870c-d3d8b13674fc","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"defaultD","speed":"defaultD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":-1},{"failures":[],"tindex":"827b371f-db7f-11e4-870c-3d1df70e3347","variableMapping":{"high":"acceptBit","len":"ferryBit","start":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"827b3720-db7f-11e4-870c-91f06200df39","variableMapping":{"this":"this","unknownSpeed":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[50,170,180,181,187,195,196,220,230,231,237,245,246,265,275,276,282,290,291,308,318,319,325,333,334],"tindex":"827b3721-db7f-11e4-870c-2fc841d3ef54","variableMapping":{"lat":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"827b3722-db7f-11e4-870c-9dcd43b03cc7","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"827b3723-db7f-11e4-870c-d77ccfb3b37a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:625","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"827b3724-db7f-11e4-870c-fd228403128e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"827b3725-db7f-11e4-870c-8f6dc1f4ec72","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"827b3726-db7f-11e4-870c-df50ecd51093","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":244,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":87,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":211,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":430,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":112,"com.graphhopper.GraphHopperAPITest.testNoLoad":529,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":105,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":106,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":388,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":448,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":463,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":154,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":472,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":414,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":273,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":345,"com.graphhopper.coll.CompressedArrayTest.testCompress":440,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":386,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":59,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":189,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":150,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":356,"com.graphhopper.util.AngleCalcTest.testOrientation":468,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":65,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":55,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":324,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":512,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":79,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":96,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":141,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":404,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":94,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":217,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":151,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":403,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":464,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":77,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":316,"com.graphhopper.coll.BitSetImplTest.testCopy":444,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":127,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":408,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":256,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":354,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":436,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":218,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":442,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":68,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":134,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":128,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":488,"com.graphhopper.reader.OSMReaderTest.testSort":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":390,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":260,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":336,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":302,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":434,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":202,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":35,"com.graphhopper.routing.DijkstraTest.initializationError":484,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":294,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":243,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":449,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":313,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":527,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":257,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":268,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":412,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":263,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":401,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":384,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":158,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":83,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":149,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":156,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":481,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":73,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":220,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":283,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":235,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":214,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":237,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":470,"com.graphhopper.coll.CompressedArrayTest.testCompress2":439,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":326,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":461,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":274,"com.graphhopper.GraphHopperAPITest.testLoad":108,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":530,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":372,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":456,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":318,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":308,"com.graphhopper.storage.LevelGraphStorageTest.testClone":222,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":395,"com.graphhopper.reader.OSMReaderTest.testBarriers":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":264,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":521,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":76,"com.graphhopper.util.GHUtilityTest.testCopy":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":173,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":167,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":492,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":114,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":450,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":510,"com.graphhopper.routing.PathTest.testFindInstruction":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":507,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":265,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":107,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":497,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":251,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":520,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":337,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":322,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":364,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":61,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":525,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":460,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":487,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":174,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":305,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":355,"com.graphhopper.util.InstructionListTest.testWayList2":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":467,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":135,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":342,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":407,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":297,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":406,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":504,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":53,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":303,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":453,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":226,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":357,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":513,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":183,"com.graphhopper.storage.RAMDirectoryTest.testSynched":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":275,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":75,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":307,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":18,"com.graphhopper.routing.AStarTest.initializationError":485,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":272,"com.graphhopper.routing.PathBidirRefTest.testExtract":44,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":498,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":239,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":477,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":195,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":402,"com.graphhopper.storage.RAMDataAccessTest.testSegments":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":458,"com.graphhopper.util.GHUtilityTest.testSort2":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":84,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":215,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":515,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":437,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":518,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":242,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":261,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":229,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":233,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":377,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":254,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":32,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":523,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":287,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":466,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":236,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":25,"com.graphhopper.storage.StorablePropertiesTest.testStore":368,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":363,"com.graphhopper.storage.GraphHopperStorageTest.testClone":310,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":426,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":382,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":320,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":385,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":493,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":175,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":209,"com.graphhopper.routing.PathTest.testTime":41,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":491,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":252,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":223,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":503,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":188,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":241,"com.graphhopper.reader.OSMReaderTest.testRelation":445,"com.graphhopper.util.GHUtilityTest.testSortDirected":104,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":393,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":31,"com.graphhopper.GraphHopperTest.testFootOnly":9,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":454,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":475,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":143,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":157,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":353,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":447,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":519,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":184,"com.graphhopper.search.NameIndexTest.testCreate":347,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":366,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":28,"com.graphhopper.routing.QueryGraphTest.testOneWay":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":138,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":433,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":476,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":126,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":394,"com.graphhopper.reader.OSMReaderTest.testWithBounds":24,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":349,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":526,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":190,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":499,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":446,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":219,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":216,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":489,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":392,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":405,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":286,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":279,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":306,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":70,"com.graphhopper.util.InstructionListTest.testWayList":97,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":339,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":514,"com.graphhopper.GraphHopperAPITest.testDisconnected179":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":176,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":288,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":171,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":480,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":204,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":389,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":312,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":66,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":511,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":81,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":483,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":64,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":250,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":501,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":473,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":409,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":91,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":532,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":165,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":370,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":374,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":410,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":301,"com.graphhopper.routing.PathTest.testWayList":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":490,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":180,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":422,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":92,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":517,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":323,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":494,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":270,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":311,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":159,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":160,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":161,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":459,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":398,"com.graphhopper.util.GHUtilityTest.testSort":103,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":193,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":438,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":457,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":516,"com.graphhopper.search.NameIndexTest.testPut":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":299,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":531,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":113,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":152,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":119,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":391,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":54,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":117,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":258,"com.graphhopper.storage.MMapDirectoryTest.testSynched":379,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":455,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":505,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":496,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":280,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":47,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":232,"com.graphhopper.routing.PathTest.testFound":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":194,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":10,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":397,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":249,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":358,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":416,"com.graphhopper.util.AngleCalcTest.testAtan2":469,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":208,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":478,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":276,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":348,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":179,"com.graphhopper.util.InstructionListTest.testEmptyList":95,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":383,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":82,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":428,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":500,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":387,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":419,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":85,"com.graphhopper.reader.PrinctonReaderTest.testRead":11,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":155,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":178,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":168,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":479,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":509,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":411,"com.graphhopper.reader.OSMReaderTest.testFoot":14,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":132,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":253,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":435,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":506,"com.graphhopper.reader.OSMReaderTest.testOneWay":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":133,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":319,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":334,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":293,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":508,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":361,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":328,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":522,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":186,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":314,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":60,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":441,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":67,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":425,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":58,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":120,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":360,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":451,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":46,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":350,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":182,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":30,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":304,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":417,"com.graphhopper.routing.PathBidirRefTest.testExtract2":45,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":375,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":69,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":136,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":400,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":332,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":121,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":462,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":20,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":205,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":495,"com.graphhopper.util.SimpleIntDequeTest.testPush":378,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":63,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":524,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":129,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":335,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":528,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":427,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":327,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":399,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":166,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":172,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":396,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":351,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":502,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":267,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":88,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":170,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":22,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":210,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":99,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":331,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":418,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":185,"com.graphhopper.util.AngleCalcTest.testCombined":471,"com.graphhopper.routing.AStarBidirectionTest.initializationError":486,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":429,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":248,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":246,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":259}}]
