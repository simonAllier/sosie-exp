[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"19feb1ce-da78-11e4-a660-6109dabc119e","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"19fed8df-da78-11e4-a660-f99e81ce37f1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[95,149],"tindex":"19fed8e0-da78-11e4-a660-4fad13d3182d","variableMapping":{"tmpNo":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[150,151,152,153,154,155,156,157,158,159,160],"tindex":"19fed8e1-da78-11e4-a660-a119eaa0dcad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[79,80,83,84,161,162,85,163,87,112,114,119,120,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"19fed8e2-da78-11e4-a660-ada3936ea892","variableMapping":{"edgeId":"from","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"from","nodeA":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[],"tindex":"19fed8e3-da78-11e4-a660-6d0cfeaa67db","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"high","id":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-2},{"failures":[],"tindex":"19fed8e4-da78-11e4-a660-6f00ce486fc7","variableMapping":{"scDirMask":"oldRelationFlags","flags":"oldRelationFlags","dir":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[164,83,165,166,167,168,169,170,171,172,173,174],"tindex":"19fed8e5-da78-11e4-a660-11415d0cc8d8","variableMapping":{"initLeafSize":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[175,176,177,178,179,180,181,182,183,184,185,186,81,82,83,84,161,162,85,86,163,87,187,97],"tindex":"19fed8e6-da78-11e4-a660-d5cb02cba891","variableMapping":{"defaultSegmentSize":"locs","graph":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:703","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-1},{"failures":[188,189,11,28,29,62,81,85,86,163,187],"tindex":"19ff2607-da78-11e4-a660-c16e3ae5fc1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"19ff2608-da78-11e4-a660-3bf8142ac4f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[],"tindex":"19ff2609-da78-11e4-a660-f35be84541ac","variableMapping":{"factor":"com.graphhopper.coll.SparseIntIntArray.DELETED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[190,191,192,193,194,83,87],"tindex":"19ff260a-da78-11e4-a660-9d548cd67573","variableMapping":{"size":"level"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"19ff260b-da78-11e4-a660-b7c976de4fbc","variableMapping":{"len":"bufferIndex","dim":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:968","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[((int * int) * 4) + 4]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"19ff260c-da78-11e4-a660-9170f04376e1","variableMapping":{"empty":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[195,196,197,198,0,199,200,201,1,2,3,202,4,5,6,7,8,203,204,175,176,177,178,179,180,181,182,183,184,185,164,186,205,206,207,208,209,210,211,9,190,212,191,10,192,213,11,214,215,12,13,14,216,15,16,217,218,17,18,219,19,220,221,222,223,20,224,21,225,226,227,228,229,22,23,230,231,24,232,25,26,233,234,235,27,236,28,237,29,238,239,30,31,32,240,33,34,241,242,35,36,243,37,244,245,246,247,38,248,39,249,250,251,252,253,40,41,254,255,42,256,43,44,257,258,259,45,260,261,262,263,264,265,266,193,267,194,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,53,57,311,62,312,313,63,64,65,314,66,67,315,316,68,69,317,70,318,319,320,321,71,322,72,323,324,325,326,327,73,74,328,329,75,330,76,77,331,332,333,78,334,79,80,81,82,83,84,161,162,85,86,163,87,187,89,95,96,97,98,99,149,335,336,106,107,108,109,337,338,339,340,110,341,342,111,343,344,345,346,112,113,114,115,116,117,118,347,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"19ff4d1d-da78-11e4-a660-8d3298f9435c","variableMapping":{"freeIndex":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"19ff4d1e-da78-11e4-a660-151b75bb3a40","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[195,196,197,198,0,199,200,201,1,2,3,202,4,5,6,7,8,203,348,349,350,351,352,204,175,176,177,178,179,180,181,182,353,183,184,185,164,354,186,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,188,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,205,206,422,207,423,424,208,209,210,211,9,190,212,191,10,189,192,213,11,425,214,215,426,12,13,14,216,15,16,217,218,17,18,219,19,220,221,222,223,20,224,21,225,226,227,228,229,22,427,23,230,231,24,232,25,26,233,234,235,27,236,28,428,237,29,429,238,239,430,30,31,32,240,33,34,241,242,35,36,243,37,244,245,246,247,38,248,39,249,250,251,252,253,40,431,41,254,255,42,256,43,44,257,258,259,45,260,261,262,263,264,432,265,266,193,267,194,268,269,270,271,272,273,274,275,276,277,278,279,280,281,433,282,283,434,284,285,286,287,435,288,289,290,291,292,436,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,437,309,310,46,47,48,438,49,50,439,440,51,52,441,53,442,443,444,445,54,446,55,447,448,449,450,451,56,452,57,453,454,58,455,59,60,456,457,458,61,459,311,62,460,312,313,461,63,64,65,314,66,67,315,316,68,69,317,70,318,319,320,321,71,322,72,323,324,325,326,327,73,462,74,328,329,75,330,76,77,331,332,333,78,334,463,464,465,466,467,79,80,81,82,83,84,161,162,85,468,86,163,87,187,469,89,95,96,97,98,99,149,335,336,470,105,106,107,108,109,337,337,338,338,339,339,340,340,110,110,341,341,342,342,111,111,343,343,344,344,345,345,346,346,112,113,114,115,116,117,118,347,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"19ff4d1f-da78-11e4-a660-a1408cb46240","variableMapping":{"size":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN","index":"bytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-1},{"failures":[],"tindex":"19ff7430-da78-11e4-a660-c7d9912c1c17","variableMapping":{"a":"elem","high":"i","low":"i","guess":"i","key":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:374","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[],"tindex":"19ff7431-da78-11e4-a660-9f133f77cda7","variableMapping":{"workerThreads":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[175,186],"tindex":"19ff7432-da78-11e4-a660-05bbd2d114ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"19ff9b43-da78-11e4-a660-733ee8c5eb38","variableMapping":{"encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:138","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"Encoding manager was not set.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":0},{"failures":[],"tindex":"19ff9b44-da78-11e4-a660-b7bc53fb4d49","variableMapping":{"nanoTime":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-2},{"failures":[],"tindex":"19ff9b45-da78-11e4-a660-b529ccd87454","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"19ff9b46-da78-11e4-a660-7d8c83809a84","variableMapping":{"id":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[178,183,471,472,473,474,475],"tindex":"19ffc257-da78-11e4-a660-73801390959f","variableMapping":{"high":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":-1},{"failures":[],"tindex":"19ffc258-da78-11e4-a660-cd0b4c6d4272","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"19ffc259-da78-11e4-a660-eb895d84d781","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"19ffe96a-da78-11e4-a660-750d82caf74d","variableMapping":{"pushingSections":"pushingSections","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":0},{"failures":[204,175,176,178,179,180,182,183,184,185,186,83,84,161,162,87,187,471,472,473,474,475],"tindex":"19ffe96b-da78-11e4-a660-f5a5cd18ee24","variableMapping":{"directionBitMask":"directionBitMask","blockByDefault":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"19ffe96c-da78-11e4-a660-0dcc21e667cf","variableMapping":{"maxSpeed":"delta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[100,102,103],"tindex":"19ffe96d-da78-11e4-a660-bd2bceb26a6c","variableMapping":{"bytesForFlags":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"19ffe96e-da78-11e4-a660-c1fb186c89f8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[204,476,477,478,479],"tindex":"1a00107f-da78-11e4-a660-cf1589e4b37c","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"1a001080-da78-11e4-a660-d39390c3437a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"1a001081-da78-11e4-a660-43165b4e79b0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[79,83,84,161,162,85,163,87,112,114,119,120,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,144,145,146,147,148],"tindex":"1a001082-da78-11e4-a660-ebfca2478056","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"1a001083-da78-11e4-a660-efe02c259d8d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"1a001084-da78-11e4-a660-ad97f983355b","variableMapping":{"value":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[],"tindex":"1a001085-da78-11e4-a660-e38188803c57","variableMapping":{"this":"this","allBits":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:113","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.pow(2, int)) / 360))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[336],"tindex":"1a001086-da78-11e4-a660-692f1dc57ea3","variableMapping":{"fwdIncline":"fwdIncline","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-1},{"failures":[],"tindex":"1a003797-da78-11e4-a660-7f739ee5a2f1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"1a003798-da78-11e4-a660-6570c5f4b128","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"1a003799-da78-11e4-a660-65b5b7144811","variableMapping":{"mask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-2},{"failures":[204,175,176,177,179,180,182,185,164,186,81,162,87,187,480,481],"tindex":"1a00379a-da78-11e4-a660-b9ad7249036b","variableMapping":{"key":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-1},{"failures":[482,483,484,485,486,487,488,489,490,268,274,276,277,491,295,301,303,304],"tindex":"1a00379b-da78-11e4-a660-075b6c874dfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[112,119,120,124,125,126,127,130,131,142,144,145,146,148],"tindex":"1a00379c-da78-11e4-a660-8727587efb1a","variableMapping":{"retBucket":"I_SKIP_EDGE2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[202,204,175,176,177,178,179,180,181,182,183,184,185,164,354,186,82,83,84,161,162,85,86,163,187,166,92,167,492,493,494,495],"tindex":"1a00379d-da78-11e4-a660-e7ae4462c2f9","variableMapping":{"resultOrientation":"speed","orientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"1a00379e-da78-11e4-a660-e36ea2ab9c51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"1a00379f-da78-11e4-a660-6960c93024b1","variableMapping":{"val":"factor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-2},{"failures":[97,98],"tindex":"1a0037a0-da78-11e4-a660-b3531c940faf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"1a0037a1-da78-11e4-a660-29b358aab192","variableMapping":{"red":"element","green":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"1a0037a2-da78-11e4-a660-79f2a51b98d7","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"code","speed":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":0},{"failures":[],"tindex":"1a0037a3-da78-11e4-a660-69279861edae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-2},{"failures":[],"tindex":"1a0037a4-da78-11e4-a660-119d6683e154","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-2},{"failures":[493],"tindex":"1a0037a5-da78-11e4-a660-917437e58764","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-1},{"failures":[],"tindex":"1a0037a6-da78-11e4-a660-5d80497feb88","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[103],"tindex":"1a005eb7-da78-11e4-a660-5f21acd56d5f","variableMapping":{"line":"highway","key":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"1a005eb8-da78-11e4-a660-ad61685d65cf","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[496,497],"tindex":"1a005eb9-da78-11e4-a660-eb124c5a6066","variableMapping":{"size":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-2},{"failures":[],"tindex":"1a005eba-da78-11e4-a660-e9bb75e07111","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"1a005ebb-da78-11e4-a660-030ef222a03d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"1a005ebc-da78-11e4-a660-8d4352a2a966","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"1a00d3ed-da78-11e4-a660-e990069ac3b7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:149","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[195,196,197,198,0,199,498,200,201,1,2,3,202,4,5,6,7,8,204,175,176,177,178,179,180,181,182,353,183,184,185,164,186,9,190,212,191,10,189,192,213,11,425,214,215,426,12,13,14,216,15,16,217,218,17,18,219,19,220,221,222,223,20,224,21,225,226,227,228,229,22,427,23,230,231,24,232,25,26,233,234,235,27,236,28,428,237,29,429,238,239,430,30,31,32,240,33,34,241,242,35,36,243,37,244,245,246,247,38,248,39,249,250,251,252,253,40,431,41,254,255,42,256,43,44,257,258,259,45,260,261,262,263,264,432,265,266,193,267,194,268,269,270,271,272,273,274,275,276,277,278,279,280,281,433,282,283,284,285,286,287,435,288,289,290,291,292,436,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,437,309,310,46,47,48,438,49,50,439,440,51,52,441,53,442,443,444,445,54,446,55,447,448,449,450,451,56,452,57,453,454,58,455,59,60,456,457,458,61,459,311,62,460,312,313,461,63,64,65,314,66,67,315,316,68,69,317,70,318,319,320,321,71,322,72,323,324,325,326,327,73,462,74,328,329,75,330,76,77,331,332,333,78,334,79,80,499,81,82,83,84,161,162,85,468,86,163,87,187,469,471,88,89,480,90,500,501,502,91,503,165,166,92,504,505,93,167,492,493,506,507,508,94,509,510,511,481,95,96,97,98,99,149,494,512,100,513,514,150,168,151,515,516,472,517,518,519,520,521,522,152,169,476,523,524,525,101,526,153,527,473,528,529,530,531,532,154,170,477,533,335,336,534,102,535,536,155,171,156,537,538,474,539,540,541,542,543,544,157,172,478,545,546,547,548,103,158,159,475,549,550,551,552,553,554,160,174,479,555,556,104,557,558,559,560,561,470,105,106,107,108,109,337,338,339,340,110,341,342,111,343,344,345,346,562,112,113,563,114,115,116,117,118,347,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"1a00fafe-da78-11e4-a660-7b873315b23b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[],"tindex":"1a00faff-da78-11e4-a660-ddefcd8e2836","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"1a00fb00-da78-11e4-a660-f15afe94c3b3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[202,175,180,181,162,187,492,495],"tindex":"1a00fb01-da78-11e4-a660-fb71cc7fa7da","variableMapping":{"initLeafSize":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[],"tindex":"1a00fb02-da78-11e4-a660-69048fa680cf","variableMapping":{"resultOrientation":"midLon","orientation":"lon","java.lang.Math.PI":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":0},{"failures":[476,477,478,479],"tindex":"1a00fb03-da78-11e4-a660-3389dfd3785d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"1a00fb04-da78-11e4-a660-4ba3e3a91f0e","variableMapping":{"name":"hourStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[483,484,485,486,488,489,490,268,276,277,295,303,304],"tindex":"1a00fb05-da78-11e4-a660-3b5e9d6baa93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[9,190,212,191,10,189,192,213,11,425,214,215,426,12,13,14,216,15,16,217,218,17,18,219,19,220,221,222,223,20,224,21,225,226,227,228,229,22,427,23,230,231,24,232,25,26,233,234,235,27,236,28,428,237,29,429,238,239,430,30,31,32,240,33,34,241,242,35,36,243,37,244,245,246,247,38,248,39,249,250,251,252,253,40,431,41,254,255,42,256,43,44,257,258,259,45,260,266,283,294,310,46,47,48,438,49,50,439,440,51,52,441,53,442,443,444,445,54,446,55,447,448,449,450,451,56,452,57,453,454,58,455,59,60,456,457,458,61,459,311,62,460,312,313,461,63,64,65,314,66,67,315,316,68,69,317,70,318,319,320,321,71,322,72,323,324,325,326,327,73,462,74,328,329,75,330,76,77,331,332,333,78,334,162,471,88,89,480,90,500,501,502,91,503,165,166,92,504,505,93,167,492,493,506,507,508,94,509,510,511,481,494,525,101,526,153,527,548,103,158,159,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"1a012216-da78-11e4-a660-81e53dbc5813","variableMapping":{"encoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[125,135],"tindex":"1a012217-da78-11e4-a660-89710ad5a45d","variableMapping":{"flags":"flags","nodeFlags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"1a012218-da78-11e4-a660-e9ec49cd26bf","variableMapping":{"ar_y":"minLon","ab_y":"minLon","ar_x":"minLon","ab_x":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[167,492,169,170,172,174,495],"tindex":"1a012219-da78-11e4-a660-b74b1ad0e2d2","variableMapping":{"factor":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[482,483,484,485,486,487,488,564,489,490,268,274,276,277,491,295,301,303,304],"tindex":"1a01221a-da78-11e4-a660-cd6e382fb6ab","variableMapping":{"shift":"hash","flags":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[9,119,123],"tindex":"1a01221b-da78-11e4-a660-e92f642a6c70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[565,566],"tindex":"1a01221c-da78-11e4-a660-c73aed50a93f","variableMapping":{"segmentSizeInBytes":"usedBits","length":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[103,158,159],"tindex":"1a01221d-da78-11e4-a660-d9fe576793c9","variableMapping":{"str":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"1a01221e-da78-11e4-a660-17ef2cd8704a","variableMapping":{"y1":"factor","x1":"factor","y2":"factor","x2":"factor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":-2},{"failures":[],"tindex":"1a01221f-da78-11e4-a660-edfbf8e271c3","variableMapping":{"mGarbage":"blockByDefault"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"1a012220-da78-11e4-a660-69d0fc142630","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[83,84,85,87,112,114,119,120,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,144,145,146,147,148],"tindex":"1a012221-da78-11e4-a660-bdbec6002244","variableMapping":{"includeWay":"millis"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:347","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"1a012222-da78-11e4-a660-a7f8bb43b6e3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"1a012223-da78-11e4-a660-a50ccc35d88e","variableMapping":{"java.lang.Double.MAX_VALUE":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","java.lang.Integer.MAX_VALUE":"val","storedInt":"mpInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:371","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[],"tindex":"1a012224-da78-11e4-a660-4f21a6040cb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"1a012225-da78-11e4-a660-ddcc004b1608","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"1a012226-da78-11e4-a660-93b731c3f7af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"1a012227-da78-11e4-a660-337070951ef7","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"1a014938-da78-11e4-a660-a1fe06c9b74c","variableMapping":{"start":"v","delta":"v"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[166],"tindex":"1a025aa9-da78-11e4-a660-65f251c9b233","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"1a025aaa-da78-11e4-a660-03017603d4c5","variableMapping":{"resultOrientation":"angle","orientation":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":0},{"failures":[482,483,567,484,568,485,486,489,490],"tindex":"1a025aab-da78-11e4-a660-338a26a903e9","variableMapping":{"r":"lat","x":"lat","absY":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"1a025aac-da78-11e4-a660-55fbe391e274","variableMapping":{"i":"nanoTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[569],"tindex":"1a025aad-da78-11e4-a660-fd7a89a8799b","variableMapping":{"str":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"1a025aae-da78-11e4-a660-119185b33696","variableMapping":{"tmp":"fwdFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[131,144,146],"tindex":"1a025aaf-da78-11e4-a660-4bc96f5d85cf","variableMapping":{"ret":"i","retBucket":"i","i":"i","bucketSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-1},{"failures":[],"tindex":"1a025ab0-da78-11e4-a660-1f785b11e0d2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"1a025ab1-da78-11e4-a660-cd76b5fa307e","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"segmentSizeInBytes","nodeId":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":143,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":338,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":189,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":495,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":263,"com.graphhopper.GraphHopperAPITest.testNoLoad":499,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":47,"com.graphhopper.reader.OSMReaderTest.testFerry":204,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":4,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":168,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":527,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":271,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":82,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":236,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":546,"com.graphhopper.storage.MMapDataAccessTest.testSegments":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":243,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":352,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":391,"com.graphhopper.coll.CompressedArrayTest.testCompress":490,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":532,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":333,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":116,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":449,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":70,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":194,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":392,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":413,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":121,"com.graphhopper.GraphHopperTest.testPrepare":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":456,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":112,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":497,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":514,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":135,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":434,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":154,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":196,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":215,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":268,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":99,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":153,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":100,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":133,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":317,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":368,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":298,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":259,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":151,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":28,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":370,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":487,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":12,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":496,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":124,"com.graphhopper.GraphHopperTest.testLoadOSM":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":305,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":299,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":511,"com.graphhopper.reader.OSMReaderTest.testSort":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":169,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":97,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":184,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":429,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":330,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":62,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":485,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":457,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":111,"com.graphhopper.storage.RAMDataAccessTest.testHeader":414,"com.graphhopper.routing.DijkstraTest.initializationError":561,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":203,"com.graphhopper.storage.MMapDataAccessTest.testHeader":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":43,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":361,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":371,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":427,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":384,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":422,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":316,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":563,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":428,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":30,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":219,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":556,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":174,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":275,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":139,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":267,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":273,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":468,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":130,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":129,"com.graphhopper.coll.OSMIDMapTest.testGetLong":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":246,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":250,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":224,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":11,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":225,"com.graphhopper.coll.CompressedArrayTest.testCompress2":489,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":103,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":37,"com.graphhopper.GraphHopperAPITest.testLoad":79,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":426,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":206,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":471,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":318,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":65,"com.graphhopper.storage.LevelGraphStorageTest.testClone":15,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":569,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":149,"com.graphhopper.reader.OSMReaderTest.testBarriers":178,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":386,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":537,"com.graphhopper.util.GHUtilityTest.testCopy":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":132,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":397,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":283,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":553,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":432,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":477,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":417,"com.graphhopper.routing.PathTest.testFindInstruction":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":529,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":32,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":6,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":501,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":233,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":262,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":536,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":76,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":71,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":42,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":118,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":543,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":560,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":217,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":439,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":373,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":211,"com.graphhopper.util.InstructionListTest.testWayList2":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":545,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":306,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":78,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":567,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":150,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":188,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":258,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":513,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":335,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":460,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":17,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":411,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":393,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":515,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":284,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":131,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":179,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":395,"com.graphhopper.routing.AStarTest.initializationError":559,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":145,"com.graphhopper.coll.OSMIDMapTest.testGet":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":36,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":380,"com.graphhopper.routing.PathBidirRefTest.testExtract":108,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":502,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":227,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":357,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":517,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":279,"com.graphhopper.storage.RAMDataAccessTest.testCopy":409,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":399,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":454,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":260,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":453,"com.graphhopper.storage.RAMDataAccessTest.testSegments":416,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":472,"com.graphhopper.util.GHUtilityTest.testSort2":198,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":140,"com.graphhopper.reader.OSMReaderTest.testMain":176,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":518,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":488,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":280,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":476,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":22,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":238,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":19,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":223,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":27,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":110,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":220,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":540,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":102,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":205,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":21,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":164,"com.graphhopper.storage.StorablePropertiesTest.testStore":389,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":407,"com.graphhopper.storage.GraphHopperStorageTest.testClone":66,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":455,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":493,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":167,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":320,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":9,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":479,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":440,"com.graphhopper.routing.PathTest.testTime":105,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":552,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":234,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":16,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":509,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":435,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":308,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":229,"com.graphhopper.reader.OSMReaderTest.testRelation":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":448,"com.graphhopper.util.GHUtilityTest.testSortDirected":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":172,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":403,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":340,"com.graphhopper.GraphHopperTest.testFootOnly":87,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":526,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":285,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":505,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":360,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":274,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":366,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":566,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":113,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":534,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":54,"com.graphhopper.search.NameIndexTest.testCreate":467,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":415,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":337,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":424,"com.graphhopper.routing.QueryGraphTest.testOneWay":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":437,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":484,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":528,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":351,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":297,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":482,"com.graphhopper.reader.OSMReaderTest.testWithBounds":185,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":418,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":379,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":478,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":257,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":443,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":450,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":565,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":13,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":214,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":548,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":544,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":533,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":253,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":93,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":60,"com.graphhopper.storage.MMapDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":38,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":63,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":126,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":388,"com.graphhopper.util.InstructionListTest.testWayList":2,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":331,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":516,"com.graphhopper.GraphHopperAPITest.testDisconnected179":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":51,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":568,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":431,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":295,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":438,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":541,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":8,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":98,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":522,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":161,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":315,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":122,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":512,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":137,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":558,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":120,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":26,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":506,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":549,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":152,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":147,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":461,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":433,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":421,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":423,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":524,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":311,"com.graphhopper.routing.PathTest.testWayList":106,"com.graphhopper.storage.MMapDataAccessTest.testCopy":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":458,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":550,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":442,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":504,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":173,"com.graphhopper.coll.OSMIDMapTest.testGet2":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":148,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":400,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":24,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":348,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":252,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":521,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":322,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":88,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":242,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":20,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":277,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":410,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":474,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":158,"com.graphhopper.util.GHUtilityTest.testSort":199,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":365,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":452,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":564,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":473,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":520,"com.graphhopper.search.NameIndexTest.testPut":465,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":45,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":430,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":264,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":269,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":288,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":291,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":171,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":342,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":289,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":336,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":237,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":475,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":349,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":557,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":500,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":248,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":383,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":95,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":210,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":57,"com.graphhopper.routing.PathTest.testFound":470,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":187,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":481,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":25,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":394,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":547,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":212,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":519,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":245,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":378,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":466,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":53,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":69,"com.graphhopper.util.InstructionListTest.testEmptyList":201,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":134,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":554,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":281,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":165,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":170,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":503,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":141,"com.graphhopper.reader.PrinctonReaderTest.testRead":7,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":77,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":272,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":35,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":441,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":46,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":531,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":539,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":362,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":551,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":535,"com.graphhopper.reader.OSMReaderTest.testFoot":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":56,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":346,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":350,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":303,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":486,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":525,"com.graphhopper.reader.OSMReaderTest.testOneWay":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":304,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":319,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":329,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":256,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":530,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":402,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":326,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":538,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":55,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":117,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":491,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":387,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":492,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":115,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":292,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":401,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":89,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":385,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":444,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":339,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":312,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":354,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":463,"com.graphhopper.routing.PathBidirRefTest.testExtract2":109,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":208,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":160,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":307,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_Get_Short_Long":377,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":464,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":74,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":436,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":555,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":459,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":480,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":542,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":300,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":75,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":498,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":218,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":507,"com.graphhopper.GraphHopperTest.testFootAndCar":162,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":325,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":221,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":159,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":282,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":49,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":510,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":364,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":508,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":136,"com.graphhopper.storage.UnsafeDataAccessTest.testEnsureCapacity":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":33,"com.graphhopper.storage.StorablePropertiesTest.testLoad":390,"com.graphhopper.GraphHopperTest.testPrepareOnly":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":144,"com.graphhopper.GraphHopperTest.testVia":83,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":523,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":48,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":183,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":10,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":202,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":462,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":90,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":446,"com.graphhopper.routing.AStarBidirectionTest.initializationError":562,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":494,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":232,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":231,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":29}}]
