[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"e1d29494-dbc2-11e4-887f-5fe99372c07f","variableMapping":{"strLen":"shift","res":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:192","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[23,16],"tindex":"e1d29495-dbc2-11e4-887f-71fb30bd3e2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32],"tindex":"e1d29496-dbc2-11e4-887f-65b13ef43291","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[33,34,35,36,37],"tindex":"e1d2bba7-dbc2-11e4-887f-11464a52a3db","variableMapping":{"orientation":"dist","java.lang.Math.PI":"distance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[38,39,40,0,41,42,43,24,44,25,26,45,33,34,27,46,47,28,29,48,49,50,35,36,51,52,53,54,30,55,31,56,32,57,37,58,59],"tindex":"e1d2bba8-dbc2-11e4-887f-855b17710d48","variableMapping":{"locs":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-1},{"failures":[],"tindex":"e1d2bba9-dbc2-11e4-887f-0f1897f75f4b","variableMapping":{"angle":"midLat","com.graphhopper.util.AngleCalc.PI3_4":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":0},{"failures":[5],"tindex":"e1d2bbaa-dbc2-11e4-887f-5b86da119006","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"e1d2bbab-dbc2-11e4-887f-8d51d1f9e35b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[],"tindex":"e1d2bbac-dbc2-11e4-887f-a338f7dd1873","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[60,61,62,63],"tindex":"e1d2bbad-dbc2-11e4-887f-f30b99917d80","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-1},{"failures":[],"tindex":"e1d2bbae-dbc2-11e4-887f-7bb628cd0ad9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[64],"tindex":"e1d2bbaf-dbc2-11e4-887f-6fae79d19338","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[1,2,3,65,66,67,5,6,9,68,10,69,70,71,72,73,74,75,76,77,78,79,60,80,81,82,83,61,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,62,100,101,102,103,104,105,106,107,108,109,110,111,63,112],"tindex":"e1d2bbb0-dbc2-11e4-887f-6fdc06ab78fd","variableMapping":{"size":"priorityFromRelation","index":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[16],"tindex":"e1d2bbb1-dbc2-11e4-887f-a9fbe91cf429","variableMapping":{"highwayValue":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[60,61,62,63],"tindex":"e1d2bbb2-dbc2-11e4-887f-91e68c740772","variableMapping":{"i":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[],"tindex":"e1d2e2c3-dbc2-11e4-887f-19b18d818966","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:99","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"Africa\" , \"Australia\" , \"Eurasia\" , \"Islands\" , \"North_America\" , \"South_America\" }"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[38,39,41,24,44,113,114,25,26,45,33,34,27,46,47,28,29,48,49,35,36,51,52,53,54,30,31,56,32,57,37,115,116,117,118,119],"tindex":"e1d2e2c4-dbc2-11e4-887f-852c333dc4ae","variableMapping":{"edgeId":"edge","nodeId":"nodeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-1},{"failures":[120,38,39,40,0,41,121,42,43,58,59,64],"tindex":"e1d2e2c5-dbc2-11e4-887f-2386c2983bf9","variableMapping":{"nodes":"maxTurnCosts","adj":"maxTurnCosts","base":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-1},{"failures":[83],"tindex":"e1d2e2c6-dbc2-11e4-887f-2b8e0f506085","variableMapping":{"key":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"e1d2e2c7-dbc2-11e4-887f-1dbb04af1e72","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"e1d3a618-dbc2-11e4-887f-27ec8585af5e","variableMapping":{"index":"wayType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-2},{"failures":[],"tindex":"e1d3a619-dbc2-11e4-887f-1b1f7dcd8ea6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-2},{"failures":[122,120,38,39,40,0,41,121,42,43,123,1,2,3,65,4,66,67,5,6,7,8,9,68,10,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,56,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,64,166,116,167,168,169,170,171,119,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215],"tindex":"e1d3cd2a-dbc2-11e4-887f-9defffc509ad","variableMapping":{"size":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:80","type":"CtLocalVariableImpl","sourcecode":"long long = (long) * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-1},{"failures":[],"tindex":"e1d3cd2b-dbc2-11e4-887f-6707468f3b2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"e1d3cd2c-dbc2-11e4-887f-e5ceb89b279b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[144],"tindex":"e1d3cd2d-dbc2-11e4-887f-2ffee96527c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"e1d3cd2e-dbc2-11e4-887f-89f39fffb45a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[],"tindex":"e1d3cd2f-dbc2-11e4-887f-a35795478cd8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"e1d3cd30-dbc2-11e4-887f-774d6edbddab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:158","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl com.graphhopper.coll.GHBitSetImpl = new com.graphhopper.coll.GHBitSetImpl(com.graphhopper.storage.GraphStorage.getNodes())"},"status":-2},{"failures":[122,120,38,39,40,0,41,121,42,43,123,216,217,1,2,3,65,4,66,67,5,6,7,8,9,68,10,218,131,131,132,132,219,219,133,133,134,134,135,135,136,136,137,137,138,138,220,220,139,139,140,140,221,222,141,142,223,224,225,226,227,228,229,230,231,143,144,24,232,44,233,234,113,114,235,25,26,236,237,238,45,33,34,27,46,47,28,29,48,49,50,35,239,36,51,52,53,54,30,55,31,56,32,57,37,240,241,242,145,146,147,148,243,244,149,245,246,247,248,249,58,59,250,251,252,253,254,255,256,257,258,259,260,261,262,263,155,156,157,264,265,266,267,268,269,270,271,272,273,274,275,158,159,160,161,162,276,277,278,279,280,163,164,165,281,282,283,284,285,286,287,288,289,290,291,19,64,292,293,115,294,295,166,296,297,116,167,298,299,168,300,301,302,303,304,305,306,307,308,309,20,310,311,312,313,314,315,316,317,117,169,318,319,320,321,322,170,323,118,324,325,171,326,119,172,327,328,174,329,175,176,330,331,177,332,333,334,335,336,337,338,339,340,341,21,342,343,344,345,346,347,348,349,350,178,351,352,353,354,355,179,356,357,358,359,180,360,181,182,361,362,363,183,184,364,365,185,366,367,368,369,370,371,372,373,374,375,22,376,377,378,379,380,381,382,383,384,186,385,386,387,388,389,187,390,391,392,393,188,394,189,190,395,396,397,398,399,400,401,402,403],"tindex":"e1d3cd31-dbc2-11e4-887f-5758fb4287dd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-1},{"failures":[],"tindex":"e1d3f442-dbc2-11e4-887f-f52e4fbc5212","variableMapping":{"bitsForEdgeFlags":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[144],"tindex":"e1d3f443-dbc2-11e4-887f-e19a7a0391fe","variableMapping":{"shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","backwardBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"e1d3f444-dbc2-11e4-887f-2d2d36f9e1aa","variableMapping":{"size":"index","i":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[],"tindex":"e1d3f445-dbc2-11e4-887f-d145071d8a6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"e1d3f446-dbc2-11e4-887f-0b8482e26b76","variableMapping":{"weightApproximation":"java.lang.Math.PI"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[226,231],"tindex":"e1d3f447-dbc2-11e4-887f-83c9fa0b02bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[404,405,406],"tindex":"e1d3f448-dbc2-11e4-887f-7324f14fba13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"e1d3f449-dbc2-11e4-887f-6939659b5724","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[407,408,23,16,409,410,411],"tindex":"e1d3f44a-dbc2-11e4-887f-c5f50fb7b7f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[1,412],"tindex":"e1d3f44b-dbc2-11e4-887f-6d754f6d3e3b","variableMapping":{"red":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"e1d3f44c-dbc2-11e4-887f-15ccd3dc1f23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:154","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"e1d3f44d-dbc2-11e4-887f-617f5ea6f05e","variableMapping":{"fromX":"fwdIncline","toX":"fwdIncline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[0,43,2,413,408],"tindex":"e1d3f44e-dbc2-11e4-887f-69165af3f4ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"e1d3f44f-dbc2-11e4-887f-b320f90598cb","variableMapping":{"size":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":0},{"failures":[],"tindex":"e1d3f450-dbc2-11e4-887f-09839465549c","variableMapping":{"hasOther":"blockFords","hasRel":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"e1d3f451-dbc2-11e4-887f-d7abf5f4651e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[72,76,77,79,85,87,89,91,96,97,99,101,103,108,109,111],"tindex":"e1d41b62-dbc2-11e4-887f-d52146884f0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"e1d41b63-dbc2-11e4-887f-599c44e5a5cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[70,73,74,78,81,83,86,92,94,98,104,106,110],"tindex":"e1d41b64-dbc2-11e4-887f-413917be4df3","variableMapping":{"flags":"encoded","nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"e1d41b65-dbc2-11e4-887f-69634b42b420","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"e1d41b66-dbc2-11e4-887f-8bb0595b0660","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"e1d41b67-dbc2-11e4-887f-75dfd4c363e9","variableMapping":{"encoderList":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"e1d41b68-dbc2-11e4-887f-b93c3d91b3be","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[],"tindex":"e1d41b69-dbc2-11e4-887f-dfe1f5ddffe4","variableMapping":{"str":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:197","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0},{"failures":[],"tindex":"e1d41b6a-dbc2-11e4-887f-9b2bd799d955","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"e1d41b6b-dbc2-11e4-887f-eb9cc143e47d","variableMapping":{"mSize":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"e1d41b6c-dbc2-11e4-887f-bfd60e9d3bde","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[122,120,38,39,40,0,41,414,121,42,43,123,415,216,217,1,2,3,65,4,66,67,5,6,7,8,9,68,416,10,417,418,218,221,222,141,142,223,224,225,226,227,228,229,230,231,24,232,44,233,234,113,114,235,25,26,236,237,238,45,33,34,27,46,47,28,29,48,49,50,35,239,36,51,52,53,54,30,55,31,56,32,57,37,240,241,242,145,146,147,148,243,244,149,245,246,247,248,249,58,59,158,159,160,161,419,162,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,64,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,292,293,115,294,295,166,296,116,167,299,464,168,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,117,169,318,319,320,321,322,170,323,118,324,325,171,326,119,172,327,328,174,465,175,176,331,466,177,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,178,351,352,353,354,355,179,356,357,358,359,180,360,181,182,361,362,183,184,365,467,185,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,186,385,386,387,388,389,187,390,391,392,393,188,394,189,190,395,396,215],"tindex":"e1d4427d-dbc2-11e4-887f-d3883adcac71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":-1},{"failures":[71],"tindex":"e1d4427e-dbc2-11e4-887f-0931452ae4ff","variableMapping":{"costs":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[72,74,75,76,77,78,79,60,80,82,83,61,84,85,86,87,88,89,91,95,96,97,98,99,62,100,101,103,107,108,109,110,111,63,112],"tindex":"e1d4427f-dbc2-11e4-887f-b342d8d5d2c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:434","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[122,120,38,39,40,0,41,121,42,43,123,1,2,3,65,4,66,67,5,6,7,8,9,68,10,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,56,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,64,166,116,167,168,169,170,171,119,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,193,205,215],"tindex":"e1d44280-dbc2-11e4-887f-e34a79d62255","variableMapping":{"WIDTH":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:250","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[(2 * (int)) * (int)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-1},{"failures":[],"tindex":"e1d5f031-dbc2-11e4-887f-cf7eab7bb27f","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[0,43,2,71,413,468],"tindex":"e1d74fc2-dbc2-11e4-887f-87a41190cf43","variableMapping":{"directionBitMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[469,470,471,472,473,474,475,476,477],"tindex":"e1d74fc3-dbc2-11e4-887f-65d419650f52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"e1d74fc4-dbc2-11e4-887f-194b85f93aed","variableMapping":{"str":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":0},{"failures":[],"tindex":"e1d74fc5-dbc2-11e4-887f-e7081e56b5aa","variableMapping":{"s":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":0},{"failures":[],"tindex":"e1d74fc6-dbc2-11e4-887f-b1b318ff2d29","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[122,120,38,39,40,0,41,414,121,42,43,123,415,216,217,1,2,3,65,4,66,67,5,6,478,7,8,9,68,416,10,218,479,131,132,219,133,134,135,136,137,138,220,139,140,480,481,482,221,222,141,142,483,223,224,484,69,485,486,70,487,71,488,72,73,74,11,75,489,76,77,490,491,78,79,407,60,80,12,492,225,413,493,494,468,408,495,13,496,497,14,15,23,498,499,500,16,404,501,502,17,503,504,505,506,226,227,228,229,230,231,507,81,82,83,61,18,84,508,85,509,510,86,87,409,88,405,89,90,91,92,93,94,511,512,513,95,514,96,97,515,516,98,99,410,62,100,143,144,406,101,102,103,104,105,106,517,518,519,107,520,108,109,521,522,110,111,411,63,112,523,24,232,524,44,233,234,113,114,235,25,26,236,237,238,45,33,34,27,46,47,28,29,48,49,50,35,239,36,51,52,53,54,30,55,31,56,32,57,37,240,241,242,145,146,147,148,243,244,149,245,525,246,247,248,249,58,59,526,250,251,252,253,527,254,255,256,257,258,259,528,260,261,262,263,155,156,157,264,265,266,267,268,269,270,271,272,529,273,274,158,159,160,161,419,162,276,277,278,279,280,163,164,165,281,282,283,284,285,286,287,288,289,530,290,291,424,425,426,427,428,429,430,431,432,433,434,19,435,436,437,438,439,440,441,442,443,444,445,446,447,448,64,449,450,451,452,453,454,455,456,457,458,459,292,293,115,294,295,166,296,297,116,167,298,299,464,168,300,301,302,303,304,305,306,307,308,309,20,310,311,312,313,314,315,316,317,117,169,318,319,320,321,322,170,323,118,324,325,171,326,119,172,327,328,174,465,329,175,176,330,331,466,177,332,333,334,335,336,337,338,339,340,341,21,342,343,344,345,346,347,348,349,350,178,351,352,353,354,355,179,356,357,358,359,180,360,181,182,361,362,363,183,184,364,365,467,185,366,367,368,369,370,371,372,373,374,375,22,376,377,378,379,380,381,382,383,384,186,385,386,387,388,389,187,390,391,392,393,188,394,189,190,395,396],"tindex":"e1d776d7-dbc2-11e4-887f-bd9b3c579cc3","variableMapping":{"importance":"usedBits","hash":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"e1d776d8-dbc2-11e4-887f-13fa29e8f719","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[122,120,38,39,40,0,41,121,42,43,123,216,217,1,2,3,65,4,66,67,5,6,7,8,9,68,10,218,131,132,219,133,134,135,136,137,138,220,139,140,141,142,223,224,225,226,227,228,229,230,231,143,144,24,232,44,233,234,113,114,235,25,26,236,237,238,45,33,34,27,46,47,28,29,48,49,50,35,239,36,51,52,53,54,30,55,31,56,32,57,37,240,241,242,145,146,147,148,243,244,149,245,246,247,248,249,58,59,250,251,252,253,254,255,256,257,258,259,260,261,262,263,155,156,157,264,265,266,267,268,269,270,271,272,273,274,158,159,160,161,162,276,277,278,279,280,163,164,165,281,282,283,284,285,286,287,288,289,290,291,19,64,292,293,115,294,295,166,296,297,116,167,298,299,168,300,301,302,303,304,305,306,307,308,309,20,310,311,312,313,314,315,316,317,117,169,318,319,320,321,322,170,323,118,324,325,171,326,119,172,327,328,174,329,175,176,330,331,177,332,333,334,335,336,337,338,339,340,341,21,342,343,344,345,346,347,348,349,350,178,351,352,353,354,355,179,356,357,358,359,180,360,181,182,361,362,363,183,184,364,365,185,366,367,368,369,370,371,372,373,374,375,22,376,377,378,379,380,381,382,383,384,186,385,386,387,388,389,187,390,391,392,393,188,394,189,190,395,396,531,397,398,399,400,401,532,402,403,533,534],"tindex":"e1d776d9-dbc2-11e4-887f-b7bdb5090a43","variableMapping":{"segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"e1d79dea-dbc2-11e4-887f-051f53865105","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"e1d79deb-dbc2-11e4-887f-6f002c853a3b","variableMapping":{"bbox":"this","box":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = com.graphhopper.util.shapes.BBox.clone()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[469,470,535,471,473,474,536,537,475,476,477,262,265,267,268,538,279,282,284,285],"tindex":"e1d79dec-dbc2-11e4-887f-0b0ddb364dfc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[478,69,70,72,74,75,76,77,78,79,60,82,83,61,84,85,86,87,89,90,91,94,95,96,97,98,99,62,101,102,103,106,107,108,109,110,111,63],"tindex":"e1d94b9d-dbc2-11e4-887f-81028c979349","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[120,39,40,0,41,121,42,216,217,1,2,3,4,5,6,7,9,10,134,137,141,225,226,227,228,229,230,231,24,44,233,234,113,114,25,26,236,238,45,33,34,27,46,28,29,49,35,239,36,51,53,30,31,56,32,37,145,146,147,247,249,58,255,261,274,291,424,425,426,429,433,19,439,441,447,64,451,453,454,458,116,168,300,301,304,308,20,314,316,320,322,118,325,171,327,174,175,177,332,333,336,340,21,346,348,353,355,357,359,180,361,183,185,366,367,370,374,22,380,382,387,389,391,393,188,395],"tindex":"e1d94b9e-dbc2-11e4-887f-8ba29a691646","variableMapping":{"high":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[122,38,39,40,41,42,43,1,3,65,4,66,67,5,6,7,8,9,68,10,132,135,138,140,141,56,146,147,149,539,540,541,150,151,152,153,154,155,157,163,165,424,444,64,449,454,457,116,168,169,170,171,172,173,174,175,177,178,179,180,182,183,185,186,187,188,190,194,195,196,199,200,201,202,206,207,208,211,212,213,214,399,403,533,534],"tindex":"e1d94b9f-dbc2-11e4-887f-7b0c06949f55","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[469,470,471,473,474,536,537,476,477,262,265,267,268,538,279,282,284,285],"tindex":"e1d94ba0-dbc2-11e4-887f-8d8a115b8f8e","variableMapping":{"encoded":"hash","backwardBit":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"e1d94ba1-dbc2-11e4-887f-e79a7af4fa5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:502","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"e1d972b2-dbc2-11e4-887f-c9b01b23e90e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[48,51,52,30,37,322],"tindex":"e1d972b3-dbc2-11e4-887f-27ba4699098b","variableMapping":{"tmpNo":"I_SKIP_EDGE2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"e1d972b4-dbc2-11e4-887f-853d37558571","variableMapping":{"err":"guess","dLat":"high","tmpErr":"guess","x1":"low","sLon":"low"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"e1d972b5-dbc2-11e4-887f-5b9a64739699","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","indexDivisor":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-3},{"failures":[],"tindex":"e1d972b6-dbc2-11e4-887f-bfe9726210e4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[226,230,231],"tindex":"e1d972b7-dbc2-11e4-887f-b1381208294b","variableMapping":{"elem":"nodeIndex","i":"start","element":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[],"tindex":"e1d972b8-dbc2-11e4-887f-53f4a4e7ecda","variableMapping":{"java.lang.Double.MAX_VALUE":"java.lang.Double.POSITIVE_INFINITY","java.lang.Integer.MAX_VALUE":"maxTurnCosts","storedInt":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:371","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"e1d972b9-dbc2-11e4-887f-d1ecb060b62f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"e1d972ba-dbc2-11e4-887f-4dc6b07b8d2d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[542,543],"tindex":"e1d972bb-dbc2-11e4-887f-790f143bcd4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"e1d972bc-dbc2-11e4-887f-edf580e3d6bc","variableMapping":{"high":"speed","guess":"speed","low":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":0},{"failures":[122,38,39,40,0,41,121,42,43,123,2,3,65,4,66,67,5,6,7,8,9,10,228],"tindex":"e1d972bd-dbc2-11e4-887f-4109a3c1bccf","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[226,230,231],"tindex":"e1d972be-dbc2-11e4-887f-cb0ddd352f64","variableMapping":{"locs":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-1},{"failures":[],"tindex":"e1d972bf-dbc2-11e4-887f-33fdef564a10","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[],"tindex":"e1d972c0-dbc2-11e4-887f-2b2dcb7e314d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"e1d972c1-dbc2-11e4-887f-d99555e8f8a7","variableMapping":{"freeIndex":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":0},{"failures":[141,142,146,147,148,544,545,546,547,548],"tindex":"e1da0f02-dbc2-11e4-887f-0529d2362db5","variableMapping":{"fwdFaster":"r","incDist2DSum":"r","fwdSlower":"angle","fullDist2D":"r","restDist2D":"angle","speed":"r","decDist2DSum":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[69,70],"tindex":"e1da0f03-dbc2-11e4-887f-a36d45ff0f16","variableMapping":{"directionBitMask":"relBitMask","shift":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[402],"tindex":"e1da0f04-dbc2-11e4-887f-7f9772f60955","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[44,113,114,25,236,238,549,542,550,551],"tindex":"e1da0f05-dbc2-11e4-887f-7d0443915bf1","variableMapping":{"size":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-1},{"failures":[144],"tindex":"e1da0f06-dbc2-11e4-887f-a9992888a7f3","variableMapping":{"shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","backwardBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":55,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":132,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":166,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":523,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":252,"com.graphhopper.GraphHopperAPITest.testNoLoad":526,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":425,"com.graphhopper.reader.OSMReaderTest.testFerry":1,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":247,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":93,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":61,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":164,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":120,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":548,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":328,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":341,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":191,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":418,"com.graphhopper.coll.CompressedArrayTest.testCompress":477,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":510,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":234,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":444,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":22,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":278,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":192,"com.graphhopper.util.AngleCalcTest.testOrientation":544,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":236,"com.graphhopper.GraphHopperTest.testPrepare":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":455,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":24,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":382,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":551,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":35,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":145,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":275,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":86,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":241,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":279,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":230,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":89,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":397,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":49,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":156,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":94,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":174,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":536,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":168,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":550,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":45,"com.graphhopper.GraphHopperTest.testLoadOSM":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":269,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":157,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":487,"com.graphhopper.reader.OSMReaderTest.testSort":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":99,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":8,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":176,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":195,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":392,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":183,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":456,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":137,"com.graphhopper.storage.RAMDataAccessTest.testHeader":210,"com.graphhopper.routing.DijkstraTest.initializationError":480,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":218,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":359,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":321,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":372,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":524,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":465,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":336,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":177,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":309,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":80,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":79,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":283,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":52,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":277,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":281,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":414,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":433,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":47,"com.graphhopper.coll.OSMIDMapTest.testGetLong":153,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":301,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":350,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":315,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":116,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":317,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":546,"com.graphhopper.coll.CompressedArrayTest.testCompress2":476,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":384,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":72,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":21,"com.graphhopper.GraphHopperAPITest.testLoad":58,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":464,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":399,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":12,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":376,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":367,"com.graphhopper.storage.LevelGraphStorageTest.testClone":303,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":412,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":332,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":517,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":48,"com.graphhopper.util.GHUtilityTest.testCopy":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":291,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":490,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":409,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":527,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":213,"com.graphhopper.routing.PathTest.testFindInstruction":142,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":508,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":333,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":549,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":249,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":468,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":326,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":103,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":251,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":393,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":380,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":114,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":521,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":486,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":483,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":305,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":430,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":534,"com.graphhopper.util.InstructionListTest.testWayList2":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":451,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":270,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":395,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":535,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":337,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":181,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":505,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":143,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":184,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":307,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":511,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":438,"com.graphhopper.storage.RAMDirectoryTest.testSynched":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":342,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":29,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":366,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":66,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":194,"com.graphhopper.routing.AStarTest.initializationError":481,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":56,"com.graphhopper.coll.OSMIDMapTest.testGet":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":340,"com.graphhopper.routing.PathBidirRefTest.testExtract":223,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":408,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":95,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":152,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":169,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":287,"com.graphhopper.storage.RAMDataAccessTest.testCopy":206,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":362,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":449,"com.graphhopper.storage.RAMDataAccessTest.testSegments":212,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":513,"com.graphhopper.util.GHUtilityTest.testSort2":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":53,"com.graphhopper.reader.OSMReaderTest.testMain":3,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":167,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":514,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":537,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":410,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":320,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":497,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":453,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":20,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":313,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":327,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":134,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":310,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":520,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":101,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":398,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":316,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":68,"com.graphhopper.storage.StorablePropertiesTest.testStore":215,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":205,"com.graphhopper.storage.GraphHopperStorageTest.testClone":369,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":452,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":16,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":461,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":378,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":499,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":407,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":431,"com.graphhopper.routing.PathTest.testTime":222,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":77,"com.graphhopper.util.BitUtilLittleTest.testToFloat":540,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":119,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":304,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":503,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":272,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":443,"com.graphhopper.reader.OSMReaderTest.testRelation":478,"com.graphhopper.util.GHUtilityTest.testSortDirected":246,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":543,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":111,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":421,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":201,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":133,"com.graphhopper.GraphHopperTest.testFootOnly":43,"com.graphhopper.util.BitUtilLittleTest.testToInt":541,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":82,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":23,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":159,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":463,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":282,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":232,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":406,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":439,"com.graphhopper.search.NameIndexTest.testCreate":130,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":211,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":131,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":532,"com.graphhopper.routing.QueryGraphTest.testOneWay":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":529,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":471,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":84,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":155,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":469,"com.graphhopper.reader.OSMReaderTest.testWithBounds":9,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":214,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":411,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":445,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":495,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":69,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":300,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":298,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":488,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":522,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":88,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":352,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":261,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":498,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":454,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":346,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":185,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":34,"com.graphhopper.util.BitUtilLittleTest.testToBitString":539,"com.graphhopper.util.InstructionListTest.testWayList":146,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":394,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":512,"com.graphhopper.GraphHopperAPITest.testDisconnected179":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":432,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":472,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":427,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":108,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":217,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":442,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":531,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":458,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":516,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":40,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":371,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":237,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":387,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":405,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":36,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":479,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":26,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":171,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":404,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":75,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":98,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":57,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":467,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":530,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":100,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":363,"com.graphhopper.routing.PathTest.testWayList":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":457,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":489,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":435,"com.graphhopper.coll.OSMIDMapTest.testGet2":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":37,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":198,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":118,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":351,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":515,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":381,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":338,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":370,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":284,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":285,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":207,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":202,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":519,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":542,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":73,"com.graphhopper.util.GHUtilityTest.testSort":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":448,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":475,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":97,"com.graphhopper.search.NameIndexTest.testPut":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":361,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":466,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":253,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":280,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":162,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":258,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":403,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":105,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":136,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":144,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":256,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":329,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":11,"com.graphhopper.storage.MMapDirectoryTest.testSynched":420,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":125,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":506,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":494,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":347,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":226,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":533,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":64,"com.graphhopper.routing.PathTest.testFound":221,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":71,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":123,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":325,"com.graphhopper.util.AngleCalcTest.testAtan2":545,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":96,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":343,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":129,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":19,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":203,"com.graphhopper.util.InstructionListTest.testEmptyList":242,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":374,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":50,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":491,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":289,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":51,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":496,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":13,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":87,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":54,"com.graphhopper.reader.PrinctonReaderTest.testRead":216,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":188,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":165,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":339,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":434,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":424,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":348,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":509,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":485,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":462,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":76,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":102,"com.graphhopper.reader.OSMReaderTest.testFoot":2,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":126,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":447,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":267,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":474,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":507,"com.graphhopper.reader.OSMReaderTest.testOneWay":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":268,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":377,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":390,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":358,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":85,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":200,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":518,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":441,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":113,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":538,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":238,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":500,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":233,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":259,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":437,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":219,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":364,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":416,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":423,"com.graphhopper.routing.PathBidirRefTest.testExtract2":224,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":402,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":33,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":78,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":255,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":271,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":127,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":389,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":528,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":60,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":5,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":459,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":264,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":391,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":525,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":306,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":501,"com.graphhopper.GraphHopperTest.testFootAndCar":0,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":186,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":311,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":74,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":290,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":428,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":484,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":502,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":31,"com.graphhopper.GraphHopperTest.testPrepareOnly":122,"com.graphhopper.GraphHopperTest.testVia":38,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":254,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":426,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":7,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":295,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":148,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":388,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":493,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":440,"com.graphhopper.routing.AStarBidirectionTest.initializationError":482,"com.graphhopper.util.AngleCalcTest.testCombined":547,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":504,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":324,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":323,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":175}}]
