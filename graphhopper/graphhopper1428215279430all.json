[{"failures":[],"tindex":"e78059ce-db5c-11e4-94ff-632651258d26","variableMapping":{"cap":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":0},{"failures":[],"tindex":"e78059cf-db5c-11e4-94ff-b7f109e7c220","variableMapping":{"from":"speed","end":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":0},{"failures":[],"tindex":"e78059d0-db5c-11e4-94ff-73aa39dfc6a4","variableMapping":{"speed":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[0],"tindex":"e78080e1-db5c-11e4-94ff-2b7a369af6fd","variableMapping":{"dist":"fwdDecline","com.graphhopper.util.DistanceCalcEarth.R":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-1},{"failures":[1],"tindex":"e78080e2-db5c-11e4-94ff-3f8a97a03f4d","variableMapping":{"encoded":"encoded","backwardBit":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[2],"tindex":"e78080e3-db5c-11e4-94ff-2f40bf98eca1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"e78080e4-db5c-11e4-94ff-43418d8a42ed","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:64","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-2},{"failures":[3],"tindex":"e78080e5-db5c-11e4-94ff-770598fa9476","variableMapping":{"encoded":"hash","backwardBit":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"e78080e6-db5c-11e4-94ff-5518209976ef","variableMapping":{"val":"factor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-2},{"failures":[4,5,6,7],"tindex":"e78080e7-db5c-11e4-94ff-e7ade7dd0129","variableMapping":{"name":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18],"tindex":"e78080e8-db5c-11e4-94ff-19f060f2e2bc","variableMapping":{"dir":"wayTypeName","tr":"tr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:263","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"slight_right\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"e78080e9-db5c-11e4-94ff-2b0a786718d8","variableMapping":{"res":"encoded","value":"encoded","maxBits":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:259","type":"CtIfImpl","sourcecode":"if (long == 0) {\n    long <<= int;\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-2},{"failures":[19,20,21,22,23,24],"tindex":"e78080ea-db5c-11e4-94ff-41c081e90f45","variableMapping":{"initLeafSize":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"e78080eb-db5c-11e4-94ff-71769b56c516","variableMapping":{"midLat":"maxLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"e78080ec-db5c-11e4-94ff-4177e4f8691b","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"e78080ed-db5c-11e4-94ff-cbf47dff2f7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:462","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"e780a7fe-db5c-11e4-94ff-0f21fc4ba039","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"e780a7ff-db5c-11e4-94ff-07306f2f398f","variableMapping":{"item":"osmValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:256","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-2},{"failures":[3,25,26,27,28,58,29,59,30,31,32,60,33,34,61,35,62,36,37],"tindex":"e780a800-db5c-11e4-94ff-f766c7ac690d","variableMapping":{"flags":"hash","mask":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"e780a801-db5c-11e4-94ff-6d8b9c0dd60e","variableMapping":{"factor":"maxLat","delta_lon":"maxLat","a_lon":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,19,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,0,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"e780a802-db5c-11e4-94ff-c9a0bcf70eca","variableMapping":{"start":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[3,25,155,26,156,27,28,59,30,31],"tindex":"e780a803-db5c-11e4-94ff-13c342ddcebe","variableMapping":{"bit":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"e780a804-db5c-11e4-94ff-e33df087a190","variableMapping":{"min":"key","dist":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[157,158,159,108],"tindex":"e780a805-db5c-11e4-94ff-35b44e0488f7","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:90","type":"CtLocalVariableImpl","sourcecode":"int int = (java.lang.String.length()) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-1},{"failures":[],"tindex":"e780a806-db5c-11e4-94ff-a3ff57a105df","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"e780a807-db5c-11e4-94ff-8d7db13e71bb","variableMapping":{"da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":0},{"failures":[],"tindex":"e780a808-db5c-11e4-94ff-9d2059053b6d","variableMapping":{"index":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-2},{"failures":[],"tindex":"e780cf19-db5c-11e4-94ff-210a5493b085","variableMapping":{"sayText":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:450","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) <= 0)) {\n    return java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[160],"tindex":"e780cf1a-db5c-11e4-94ff-87efd3424123","variableMapping":{"graph":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1043","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"e780cf1b-db5c-11e4-94ff-11a15b14400f","variableMapping":{"prevEle":"r","ele":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:727","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-2},{"failures":[],"tindex":"e780cf1c-db5c-11e4-94ff-9fed6940d5e4","variableMapping":{"edgePointer":"wayBitMask","edgeEntryBytes":"usedBits","nextEdge":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:763","type":"CtAssignmentImpl","sourcecode":"this.long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"e780cf1d-db5c-11e4-94ff-25afebb1e1bc","variableMapping":{"intVal":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"e780cf1e-db5c-11e4-94ff-3385746249ac","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"removed","id":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:229","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"e780cf1f-db5c-11e4-94ff-2fdd560feead","variableMapping":{"need":"length","i":"com.graphhopper.coll.SparseIntIntArray.DELETED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-2},{"failures":[],"tindex":"e780cf20-db5c-11e4-94ff-2568fcde96a0","variableMapping":{"factor":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"e780cf21-db5c-11e4-94ff-370cd77fb956","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-2},{"failures":[],"tindex":"e780cf22-db5c-11e4-94ff-69cbaa6e765d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"e780cf23-db5c-11e4-94ff-839c02cac4d1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"e780cf24-db5c-11e4-94ff-cdf7cd194ec5","variableMapping":{"bitsForEdgeFlags":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"e780cf25-db5c-11e4-94ff-eb8318c69127","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:428","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[],"tindex":"e780cf26-db5c-11e4-94ff-c38f75069854","variableMapping":{"edgeId":"skippedEdge1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"e780cf27-db5c-11e4-94ff-2f6cd9bec527","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[161,162],"tindex":"e780cf28-db5c-11e4-94ff-b3412037ba31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[163],"tindex":"e780cf29-db5c-11e4-94ff-dd068b0393a6","variableMapping":{"algo":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[63,64,65,66,67,68,69,70,71,72,73,164,165,74,75,76,77,78,79,80,19,81,82,83,84,85,86,20,91,92,166,93,94,95,96,97,98,167,99,100,101,102,168,169,170,160,171,172,173,174,175,103,0,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,104,210,211,212,213,214,215,105,106,107,108,216,217,109,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,32,237,114,115,116,238,60,239,33,34,240,241,242,243,244,245,117,118,119,120,121,246,247,248,35,249,122,123,124,250,62,251,36,37,252,253,254,255,256,257,258,125,259,260,261,262,263,126,264,265,127,128,266,267,129,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,130,288,289,290,291,292,131,293,294,295,296,132,297,133,134,298,299,135,300,136,137,301,302,138,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,139,323,324,325,326,327,140,328,329,330,331,141,332,142,143,333,334,335,144,145,336,337,146,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,147,358,359,360,361,362,148,363,364,365,366,149,367,150,151,368,369,370,371,372,373],"tindex":"e780f63a-db5c-11e4-94ff-1b1bfb92b050","variableMapping":{"retBucket":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[258,278,313,348],"tindex":"e780f63b-db5c-11e4-94ff-31295047f622","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[],"tindex":"e780f63c-db5c-11e4-94ff-13758069b779","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,19,81,82,83,84,86,171,172,173,199,203,204,207,374,375,213,214,223,224,32,114,115,116,238,239,34,240,241,242,243,244,245,117,118,119,121,246,247,35,122,123,124,250,251,37,252,253,254,255,256,257],"tindex":"e780f63d-db5c-11e4-94ff-77ba99f546da","variableMapping":{"size":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[376],"tindex":"e780f63e-db5c-11e4-94ff-dff3c5b261c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"e780f63f-db5c-11e4-94ff-3df82f4c52ed","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[177,178,184,188,209,259],"tindex":"e7811d50-db5c-11e4-94ff-e9320eb30b69","variableMapping":{"high":"flags","len":"scDirMask","start":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"e7811d51-db5c-11e4-94ff-6d4213fea4fa","variableMapping":{"cap":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[1],"tindex":"e7811d52-db5c-11e4-94ff-ad8384db2b81","variableMapping":{"oldValueIndex":"directionBitMask","lastKey":"forwardBit","key":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[],"tindex":"e7811d53-db5c-11e4-94ff-fd87136450ce","variableMapping":{"size":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"e7811d54-db5c-11e4-94ff-4562aced3855","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":0},{"failures":[38,9,42,377,11,43,46,378,14,51,52,379,17,57],"tindex":"e7811d55-db5c-11e4-94ff-7f6156fb957d","variableMapping":{"workerThreads":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[],"tindex":"e7811d56-db5c-11e4-94ff-41b174221cdd","variableMapping":{"low":"mSize","guess":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"e7811d57-db5c-11e4-94ff-c100d1ecd804","variableMapping":{"nanoTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-2},{"failures":[],"tindex":"e7811d58-db5c-11e4-94ff-effb121a5abd","variableMapping":{"store":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[380,381,382],"tindex":"e7811d59-db5c-11e4-94ff-41e9cf568fa3","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,19,81,82,83,84,85,86,383,384,385,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,0,104,105,106,107,108,109,110,111,386,112,113,114,115,116,122,123,124,125,126,127,128,129,130,131,132,134,387,135,136,137,138,139,140,141,143,144,145,146,147,148,149,151,388,389,390,391,392,393,154],"tindex":"e7811d5a-db5c-11e4-94ff-310545ed555f","variableMapping":{"edgeId":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"e7811d5b-db5c-11e4-94ff-411b5558c124","variableMapping":{"directionBitMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"e7811d5c-db5c-11e4-94ff-7b1746526256","variableMapping":{"size":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[3,25,26,27,28,58,29,30,31,32,60,33,34,61,35,62,36,37],"tindex":"e7811d5d-db5c-11e4-94ff-09b4cccf0078","variableMapping":{"orientation":"minLatTmp","resultOrientation":"lat","baseOrientation":"minLatTmp","java.lang.Math.PI":"maxLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"e7811d5e-db5c-11e4-94ff-655b8ff27b0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:277","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"))"},"status":-2},{"failures":[],"tindex":"e7811d5f-db5c-11e4-94ff-4903e136d616","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[38,9,42,377,11,43,46,14,51,52,17,57],"tindex":"e7811d60-db5c-11e4-94ff-0db828e4468a","variableMapping":{"start":"speed","delta":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"e7811d61-db5c-11e4-94ff-7b0e42df9ea6","variableMapping":{"size":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":0},{"failures":[8,10,11,12,13,14,15,16,17,18],"tindex":"e7814472-db5c-11e4-94ff-dd972187657e","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[65,66,67,68,69,71,72,164,165,75,76,78,19,81,84,94,97,170,394,160,174,175,176,178,179,184,185,186,189,190,191,202,203,204,212,108,220,222,223,230,236,245,257,395,396,258,397,398,399,400,268,269,278,290,294,132,298,303,304,313,325,329,141,333,338,339,348,360,364,149,368],"tindex":"e7814473-db5c-11e4-94ff-511f3c248952","variableMapping":{"tmpDegreeCounter":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[259,260,262,263,264,267,129,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,130,288,289,290,291,292,131,293,294,295,296,132,297,133,134,298,299,302,138,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,139,323,324,325,326,327,140,328,329,330,331,141,332,142,143,333,334,337,146,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,147,358,359,360,361,362,148,363,364,365,366,149,367,150,151,368,369,401,402,403,404,405,406,407,408],"tindex":"e7814474-db5c-11e4-94ff-2b5574a4a4e1","variableMapping":{"size":"segmentSizePower","index":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-1},{"failures":[],"tindex":"e7814475-db5c-11e4-94ff-b7b4b1e508ac","variableMapping":{"nodeB":"shift","edgeId":"shift","nodeA":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"e7814476-db5c-11e4-94ff-3f56fce707fe","variableMapping":{"defaultSegmentSize":"to","graph":"graph"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:703","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-2},{"failures":[],"tindex":"e7814477-db5c-11e4-94ff-e5bfa77e7fdf","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"e7814478-db5c-11e4-94ff-eb0ee2ae92dc","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"e7814479-db5c-11e4-94ff-2b642179fb5e","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"e781447a-db5c-11e4-94ff-fbfc7a45c129","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[19,21,22,23,24],"tindex":"e781447b-db5c-11e4-94ff-eb5570211f05","variableMapping":{"turnRestrictionBit":"turnRestrictionBit","restricted":"restricted"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:615","type":"CtReturnImpl","sourcecode":"return boolean ? long : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[65,66,67,68,69,71,72,176,178,184,185,189,190,191,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,209,104,210,211,212,223],"tindex":"e781447c-db5c-11e4-94ff-ab4510c66cb3","variableMapping":{"alreadyRun":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"e781447d-db5c-11e4-94ff-3f16f388b672","variableMapping":{"properties":"properties"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:107","type":"CtReturnImpl","sourcecode":"return !(java.util.Map<java.lang.String, java.lang.Object>.isEmpty())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"e781447e-db5c-11e4-94ff-95be8fa6e52a","variableMapping":{"lastKey":"unpavedBit","key":"unpavedBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":0},{"failures":[],"tindex":"e781447f-db5c-11e4-94ff-75dab1148210","variableMapping":{"iterState":"iterState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[68,72,75],"tindex":"e7816a90-db5c-11e4-94ff-8fa34bdd4b09","variableMapping":{"hash":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"e7816a91-db5c-11e4-94ff-d5a70d713665","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"e7816a92-db5c-11e4-94ff-7d450d4b6b7b","variableMapping":{"nodeB":"capacity","edgeId":"capacity","nodeA":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"e7816a93-db5c-11e4-94ff-094b3b76166f","variableMapping":{"type":"defaultType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:178","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"e7816a94-db5c-11e4-94ff-7ba8c25f292f","variableMapping":{"flags":"directionBitMask","value":"blockByDefault","forwardBit":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":0},{"failures":[],"tindex":"e7816a95-db5c-11e4-94ff-7320a13ddb38","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"e7816a96-db5c-11e4-94ff-c57d6552a1a7","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"e7816a97-db5c-11e4-94ff-e9edf6b615c9","variableMapping":{"bytePos":"bytePos","segmentSizePower":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:310","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[63,64,65,66,69,70,72,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,104,210,211,212,216,109,222,246,247,35,249,122,123,124,250,62,251,36,37,252,253,254,255,256,257,259,261,262,263,265,127,267,129,268,269,270,271,272,273,274,275,276,279,280,281,282,283,284,285,286,287,130,288,289,290,292,131,293,294,295,296,132,297,133,134,298,299],"tindex":"e7816a98-db5c-11e4-94ff-11954dc24203","variableMapping":{"numTiles":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":-1},{"failures":[],"tindex":"e7816a99-db5c-11e4-94ff-49d169ce9419","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[74,409,410],"tindex":"e7816a9a-db5c-11e4-94ff-c9e617a642ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[376],"tindex":"e7816a9b-db5c-11e4-94ff-3b48058fb8ea","variableMapping":{"acceptBit":"ferryBit","way":"way","sidewalks":"ferries"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"e7816a9c-db5c-11e4-94ff-15db332b3b2b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"e7816a9d-db5c-11e4-94ff-e958f1aed2cc","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"usedBits","tmpNode":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-2},{"failures":[],"tindex":"e7816a9e-db5c-11e4-94ff-4980518824c4","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"e7816a9f-db5c-11e4-94ff-6185a634cae3","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"removed","tmpNode":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-2},{"failures":[178,180,184,186,188,411],"tindex":"e7816aa0-db5c-11e4-94ff-dbe3e5c344fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[412],"tindex":"e7816aa1-db5c-11e4-94ff-f5767b1804cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":292,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":208,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":126,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":159,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":395,"com.graphhopper.reader.OSMReaderTest.testFerry":74,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":220,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":221,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":378,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":43,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":123,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":64,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":312,"com.graphhopper.coll.CompressedArrayTest.testCompress":31,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":180,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":264,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":348,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":248,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":401,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":392,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":186,"com.graphhopper.GraphHopperTest.testPrepare":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":176,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":355,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":382,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":47,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":200,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":12,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":214,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":267,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":174,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":198,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":115,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":135,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":58,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":129,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":381,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":189,"com.graphhopper.GraphHopperTest.testLoadOSM":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":116,"com.graphhopper.reader.OSMReaderTest.testSort":77,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":50,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":137,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":388,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":365,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":144,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":27,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":97,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":331,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":387,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":291,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":344,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":260,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":138,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":277,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":41,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":251,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":204,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":247,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":250,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":195,"com.graphhopper.coll.OSMIDMapTest.testGetLong":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":194,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":269,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":322,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":284,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":127,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":286,"com.graphhopper.coll.CompressedArrayTest.testCompress2":30,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":357,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":38,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":313,"com.graphhopper.GraphHopperAPITest.testLoad":223,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":371,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":349,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":339,"com.graphhopper.storage.LevelGraphStorageTest.testClone":271,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":410,"com.graphhopper.reader.OSMReaderTest.testBarriers":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":303,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":24,"com.graphhopper.util.GHUtilityTest.testCopy":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":197,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":257,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":5,"com.graphhopper.routing.PathTest.testFindInstruction":102,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":304,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":380,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":222,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":53,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":226,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":366,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":353,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":329,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":182,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":317,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":273,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":337,"com.graphhopper.util.InstructionListTest.testWayList2":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":398,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":241,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":368,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":308,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":103,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":145,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":275,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":152,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":23,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":314,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":196,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":338,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":79,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":402,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":104,"com.graphhopper.coll.OSMIDMapTest.testGet":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":311,"com.graphhopper.routing.PathBidirRefTest.testExtract":168,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":376,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":130,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":386,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":253,"com.graphhopper.storage.RAMDataAccessTest.testCopy":406,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":377,"com.graphhopper.storage.RAMDataAccessTest.testSegments":393,"com.graphhopper.util.GHUtilityTest.testSort2":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":205,"com.graphhopper.reader.OSMReaderTest.testMain":76,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":321,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":6,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":254,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":163,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":301,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":278,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":282,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":374,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":298,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":94,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":52,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":370,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":285,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":85,"com.graphhopper.storage.StorablePropertiesTest.testStore":154,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":153,"com.graphhopper.storage.GraphHopperStorageTest.testClone":341,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":369,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":351,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":259,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":4,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":262,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":40,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":133,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":243,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":289,"com.graphhopper.util.GHUtilityTest.testSortDirected":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":56,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":93,"com.graphhopper.GraphHopperTest.testFootOnly":72,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":118,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":409,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":62,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":177,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":244,"com.graphhopper.search.NameIndexTest.testCreate":90,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":408,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":91,"com.graphhopper.routing.QueryGraphTest.testOneWay":167,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":114,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":3,"com.graphhopper.reader.OSMReaderTest.testWithBounds":84,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":7,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":405,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":95,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":332,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":161,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":268,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":266,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":324,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":318,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":146,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":191,"com.graphhopper.util.InstructionListTest.testWayList":106,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":367,"com.graphhopper.GraphHopperAPITest.testDisconnected179":224,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":156,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":326,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":54,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":165,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":400,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":67,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":343,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":119,"com.graphhopper.routing.util.EncodedValueTest.testSwap":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":187,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":360,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":185,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":132,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":15,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":211,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":372,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":335,"com.graphhopper.routing.PathTest.testWayList":101,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":158,"com.graphhopper.coll.OSMIDMapTest.testGet2":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":212,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":294,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":383,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":323,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":309,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":36,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":283,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":37,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":391,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":252,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.util.GHUtilityTest.testSort":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":239,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":49,"com.graphhopper.search.NameIndexTest.testPut":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":333,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":340,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":228,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":249,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":121,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":233,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":379,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":96,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":231,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":300,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":384,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":319,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":160,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":125,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":1,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":73,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":296,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":2,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":261,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":48,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":315,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":411,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":89,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":258,"com.graphhopper.util.InstructionListTest.testEmptyList":215,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":199,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":203,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":394,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":45,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":206,"com.graphhopper.reader.PrinctonReaderTest.testRead":164,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":149,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":124,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":310,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":25,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":139,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":320,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":21,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":39,"com.graphhopper.reader.OSMReaderTest.testFoot":75,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":100,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":397,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":33,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":34,"com.graphhopper.reader.OSMReaderTest.testOneWay":86,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":350,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":363,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":330,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":44,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":390,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":358,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":181,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":179,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":234,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":404,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":170,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":122,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":166,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":336,"com.graphhopper.routing.PathBidirRefTest.testExtract2":169,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":190,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":230,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":242,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":87,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":362,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":42,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":19,"com.graphhopper.util.SimpleIntDequeTest.testPush":375,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":238,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":364,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":274,"com.graphhopper.GraphHopperTest.testFootAndCar":68,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":147,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":280,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":256,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":407,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":306,"com.graphhopper.GraphHopperTest.testPrepareOnly":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":209,"com.graphhopper.GraphHopperTest.testVia":65,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":229,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":396,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":82,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":263,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":108,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":361,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":81,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":295,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":293,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":136}}]
