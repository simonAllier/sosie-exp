[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"dfe7f80c-db9c-11e4-9333-7fb7ff9a835f","variableMapping":{"index":"I_SKIP_EDGE1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"dfe8944d-db9c-11e4-9333-55314bec94b0","variableMapping":{"this":"this","speed":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:223","type":"CtIfImpl","sourcecode":"if ((java.lang.Double.(java.lang.Double.isInfinite(double)) || java.lang.Double.(java.lang.Double.isNaN(double))) || (double < 0))\n    throw new java.lang.IllegalStateException((\"Invalid speed stored in edge! \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":0},{"failures":[14,15,16,17,18,19,20],"tindex":"dfe8944e-db9c-11e4-9333-7f69ab2b43bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[21],"tindex":"dfe8944f-db9c-11e4-9333-5de90f8f70ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[22,23,24,25,26,27,28,29,30],"tindex":"dfe89450-db9c-11e4-9333-55317ff7547f","variableMapping":{"str":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"dfe89451-db9c-11e4-9333-33d832b224fc","variableMapping":{"offset":"I_SKIP_EDGE2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":0},{"failures":[31],"tindex":"dfe8bb62-db9c-11e4-9333-57cdd378ff1a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:97","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"dfe8bb63-db9c-11e4-9333-85f05524ff5e","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"shift","entityType":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[32],"tindex":"dfe8bb64-db9c-11e4-9333-eb302854fec0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"dfe8bb65-db9c-11e4-9333-3bd5b216987b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[33,34,35,36,37,32],"tindex":"dfe8bb66-db9c-11e4-9333-5f9ec13bb8e9","variableMapping":{"scDirMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[24,25],"tindex":"dfe8bb67-db9c-11e4-9333-5b39737a81bf","variableMapping":{"sacScale":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[38,39,40,41,14,15,42,43,20],"tindex":"dfe8bb68-db9c-11e4-9333-111d77cce7b1","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[],"tindex":"dfe8bb69-db9c-11e4-9333-118dcab8c39e","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"maxTurnCosts","flags":"turnRestrictionBit","roundaboutBit":"turnRestrictionBit","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"maxTurnCosts","value":"restricted","forwardBit":"turnRestrictionBit","key":"maxTurnCosts","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"maxTurnCosts","backwardBit":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-2},{"failures":[44,45,46,47],"tindex":"dfe8bb6a-db9c-11e4-9333-e10556e9e6c4","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[48,49,50,1,51,13],"tindex":"dfe8bb6b-db9c-11e4-9333-d97bf2f5e1b1","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[52,53,54,38,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,40,97,98,99,35,100,101,102,103,104,105,106,107,108,11],"tindex":"dfe8bb6c-db9c-11e4-9333-df9b4b52fb1b","variableMapping":{"size":"length","capacity":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"dfe8bb6d-db9c-11e4-9333-b1906328360f","variableMapping":{"edge":"edgeEntryBytes","updatedB":"tmpPrevEdge","updatedA":"tmpPrevEdge","linkA":"edgeEntryBytes","this":"this","linkB":"edgeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.writeEdge(int, int, int, int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[],"tindex":"dfe9098e-db9c-11e4-9333-ade21b94da5a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[109,110,111,112,69,113,114,115,116,117,76,118,119,120,121,122,123,124,125,126,127,128,90,129,130,131],"tindex":"dfe9098f-db9c-11e4-9333-33df65e67f43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"dfe90990-db9c-11e4-9333-9565b0d2787c","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"shift","id":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[132,133,134,135],"tindex":"dfe930a1-db9c-11e4-9333-3934f2a51168","variableMapping":{"from":"frontIndex","hash":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"dfe930a2-db9c-11e4-9333-5d49e8bf93cd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"dfe930a3-db9c-11e4-9333-fff2bf9c1322","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[20],"tindex":"dfe930a4-db9c-11e4-9333-0f316e5e4fda","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"dfe930a5-db9c-11e4-9333-c75f83773a74","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[136],"tindex":"dfe930a6-db9c-11e4-9333-a94ee0699136","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-1},{"failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156],"tindex":"dfe97ec7-db9c-11e4-9333-175221fa805c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"dfe97ec8-db9c-11e4-9333-1fd49049be26","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-2},{"failures":[],"tindex":"dfe97ec9-db9c-11e4-9333-a1219ec8f825","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[157,158,159,160],"tindex":"dfe9a5da-db9c-11e4-9333-e96c1d7b1a57","variableMapping":{"dx":"maxTurnCosts","dy":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"dfe9a5db-db9c-11e4-9333-31d37ab58412","variableMapping":{"nanoTime":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":0},{"failures":[],"tindex":"dfe9a5dc-db9c-11e4-9333-cb63a23a16b2","variableMapping":{"scDirMask":"value","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"dfe9cced-db9c-11e4-9333-d18e6e5f3f72","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[],"tindex":"dfe9ccee-db9c-11e4-9333-e3a64b5fbe43","variableMapping":{"iter":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[161,162],"tindex":"dfe9ccef-db9c-11e4-9333-cbffca1b8af1","variableMapping":{"distance":"durationInHours","speed":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[],"tindex":"dfe9ccf0-db9c-11e4-9333-ffe5469d103b","variableMapping":{"d":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"dfe9ccf1-db9c-11e4-9333-6933b45e8303","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"dfea1b12-db9c-11e4-9333-251cfa02348d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[162],"tindex":"dfea1b13-db9c-11e4-9333-c595893499c9","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"dfea1b14-db9c-11e4-9333-97a910363b9a","variableMapping":{"currentBucket":"segmentSizeInBytes","retBucket":"segmentSizeInBytes","currentIndex":"segmentSizeInBytes","bucketSize":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[161,39,163,164],"tindex":"dfea1b15-db9c-11e4-9333-7f8c2171aae6","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-1},{"failures":[161],"tindex":"dfea1b16-db9c-11e4-9333-0d7377f277f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[28,29],"tindex":"dfea4227-db9c-11e4-9333-fb07af15a67f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-1},{"failures":[165,166,167,168,169,96,170,40,171,97,98,35,0,50,172,173,1,2,174,175,176,3,4,5,6,177,178,7,8,179,180,181,51,182,183,184,185,186,187,9,188,10,11,12,189,13],"tindex":"dfea4228-db9c-11e4-9333-0b31aa02727d","variableMapping":{"index":"nodes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:400","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[190,40,171,97,98,50,172,191,173,192,193,194,1,174,175,176,3,5,6,177,178,7,8,179,180,181,51,182,183,184,185,186,187,9,188,10,11,12,189,13],"tindex":"dfea4229-db9c-11e4-9333-0f864fecd123","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"dfea422a-db9c-11e4-9333-13dc6ec1897a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[195,196,197,198,199,200,201,202],"tindex":"dfea422b-db9c-11e4-9333-ad898d4b987d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[132,133,203,204,205,206,207,208,209,52,53,54,38,210,211,212,213,214,161,33,55,215,216,56,57,217,218,219,220,221,222,39,163,48,165,49,166,223,65,167,224,66,225,226,227,228,67,229,109,230,231,232,233,234,235,236,237,238,110,111,239,240,241,242,243,112,244,68,245,246,247,248,249,69,113,250,251,252,70,253,71,254,255,256,72,257,258,73,259,260,261,262,74,263,114,264,265,266,267,268,269,270,271,272,115,116,273,274,275,276,277,117,278,75,279,280,281,282,283,76,118,284,285,286,77,287,78,288,289,290,291,292,293,294,295,296,297,168,298,169,148,299,79,300,80,301,149,302,150,151,303,304,305,306,307,308,309,310,81,82,83,311,84,312,313,314,315,316,317,318,153,319,85,320,86,321,154,322,155,156,323,324,325,326,327,328,329,330,331,119,332,333,334,335,336,337,338,339,340,120,121,341,342,343,344,345,122,346,347,348,349,350,351,352,123,124,353,354,355,356,357,358,359,360,361,362,87,363,364,365,366,88,367,125,368,369,370,371,372,373,374,375,376,126,127,377,378,379,380,381,128,382,89,383,384,385,386,387,90,129,388,389,390,91,391,92,392,393,394,136,395,396,96,170,40,171,397,34,97,398,98,99,35,100,399,400,401,402,36,403,404,37,405,406,407,408,41,409,410,162,411,14,15,412,413,414,157,415,416,417,418,32,130,419,420,131,421,422,423,424,425,197,426,22,42,427,159,428,429,430,431,432,433,44,434,23,16,435,436,198,437,438,439,24,440,441,442,443,444,45,445,25,17,446,199,447,21,448,449,200,450,26,43,451,160,452,453,454,455,456,457,46,458,27,18,459,460,201,461,462,28,29,463,464,465,466,467,47,468,30,19,469,470,202,471,472,473,474,475,476,477,478,101,102,479,480,481,103,482,483,104,105,484,106,107,485,486,108,487,0,50,488,172,191,173,192,193,194,1,2,174,175,176,3,4,5,6,177,178,7,8,179,180,181,51,182,183,184,185,186,187,9,188,10,11,12,189,13],"tindex":"dfea693c-db9c-11e4-9333-3f057bdffe47","variableMapping":{"sacScale":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[],"tindex":"dfea693d-db9c-11e4-9333-278c86108fac","variableMapping":{"java.lang.Double.MAX_VALUE":"delta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:372","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[],"tindex":"dfea693e-db9c-11e4-9333-19f58c762bb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"dfea693f-db9c-11e4-9333-07e76eee3295","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[],"tindex":"dfea6940-db9c-11e4-9333-d1aa6da79a17","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"dfea6941-db9c-11e4-9333-c5b607ff0a6c","variableMapping":{"osmFile":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"dfea6942-db9c-11e4-9333-fdc9594a8a34","variableMapping":{"encodingManager":"em"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"EncodingManager can only be null if you call loadExisting\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[489],"tindex":"dfea6943-db9c-11e4-9333-3722e83bc51e","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:157","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_SYNC\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[130],"tindex":"dfea6944-db9c-11e4-9333-db67cb59d3fc","variableMapping":{"freeIndex":"i","currentIndex":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[203,205,212,48,165,49,166,223,167,224,66,227,67,229,109,230,231,232,233,234,235,236,237,110,111,239,240,241,242,243,112,244,68,245,246,247,248,249,69,113,250,251,252,70,253,71,254,255,256,168,298,169,148,299,79,300,80,301,149,302,150,151,303,304,305,306,307,308,309,96,40,171,97,98,35,0,50,172,191,173,192,193,194,1,2,174,175,176,3,4,5,6,177,178,7,8,179,180,181,51,182,183,184,185,186,187,9,188,10,11,12,189,13],"tindex":"dfea6945-db9c-11e4-9333-f95cecbbf44a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"status":-1},{"failures":[],"tindex":"dfea6946-db9c-11e4-9333-b798403ff9f8","variableMapping":{"size":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"dfea6947-db9c-11e4-9333-57942a0411ff","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[],"tindex":"dfea6948-db9c-11e4-9333-d5e609e18582","variableMapping":{"flags":"initialBits","scDirMask":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[],"tindex":"dfea6949-db9c-11e4-9333-4316b0784c2a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[31],"tindex":"dfea905a-db9c-11e4-9333-fd898e41f3f7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:75","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"dfea905b-db9c-11e4-9333-0d169ed167f7","variableMapping":{"endIndexPlusOne":"i","frontIndex":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[40,171,97,35,0,172,1,2,3,4,5,6,177,178,7,8,179,180,181,51,183,184,185,186,187,9,10,11,12,189,13],"tindex":"dfea905c-db9c-11e4-9333-f9adc3530089","variableMapping":{"includeWay":"millis"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:347","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[21],"tindex":"dfea905d-db9c-11e4-9333-97fa87040629","variableMapping":{"weightApproximation":"incEleSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"dfea905e-db9c-11e4-9333-03a836f806c6","variableMapping":{"size":"length","index":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"dfea905f-db9c-11e4-9333-d1960ddecda9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[132,133,203,204,205,206,208,209,52,53,54,38,210,211,212,213,214,490,161,33,55,215,216,56,57,217,218,220,221,222,39,163,48,165,49,166,223,65,167,224,66,225,225,226,227,228,67,229,109,230,231,232,233,234,235,236,237,238,110,111,239,240,241,242,243,112,244,68,245,246,247,248,249,69,113,250,251,252,70,253,71,254,255,256,72,258,73,259,259,260,261,262,74,263,114,264,265,266,267,268,269,270,271,272,115,116,273,274,275,276,277,117,278,75,279,280,281,282,283,76,118,284,285,286,77,287,78,288,289,290,291,292,293,294,296,297,168,298,169,148,299,79,300,80,301,149,302,150,151,303,304,305,306,307,308,309,491,310,81,82,83,84,312,313,314,315,317,318,153,319,85,320,86,321,154,322,155,156,323,324,325,326,327,328,329,340,352,362,87,363,363,364,365,366,88,367,125,368,369,370,371,372,373,374,375,376,126,127,377,378,379,380,381,128,382,89,383,384,385,386,387,90,129,388,389,390,91,391,92,392,393,394,136,395,96,96,170,40,40,171,171,397,397,34,34,97,398,398,98,99,35,35,100,100,399,399,402,130,419,420,131,421,422,447,21,477,478,101,102,479,480,481,481,103,103,482,482,483,483,104,104,105,105,484,484,106,106,107,107,485,485,486,486,108,108,0,50,172,191,173,192,193,194,1,2,174,175,176,3,4,5,6,177,178,7,8,179,180,181,51,182,183,184,185,186,187,9,188,10,11,12,189,13],"tindex":"dfea9060-db9c-11e4-9333-19e147a3ac36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"dfea9061-db9c-11e4-9333-1d80cd4a867a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"dfea9062-db9c-11e4-9333-933a35a5f014","variableMapping":{"orientation":"shortTripsSpeed","resultOrientation":"shortTripsSpeed","baseOrientation":"shortTripsSpeed","java.lang.Math.PI":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":0},{"failures":[],"tindex":"dfea9063-db9c-11e4-9333-5120c1b39c32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"dfea9064-db9c-11e4-9333-bda47bc6941f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"dfeab775-db9c-11e4-9333-dd66ec14f60f","variableMapping":{"name":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:161","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String + \".tif\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[131],"tindex":"dfeab776-db9c-11e4-9333-e50f98b02530","variableMapping":{"tmpNo":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[],"tindex":"dfeab777-db9c-11e4-9333-ad628a1a311f","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"dfeab778-db9c-11e4-9333-435b8f7bc8a7","variableMapping":{"name":"res"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[471],"tindex":"dfeab779-db9c-11e4-9333-1376796e5abb","variableMapping":{"val":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-1},{"failures":[],"tindex":"dfeab77a-db9c-11e4-9333-1d6678e75daf","variableMapping":{"version":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:82","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"-\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-2},{"failures":[],"tindex":"dfeab77b-db9c-11e4-9333-2f123b07221b","variableMapping":{"retBucket":"shift","bucketSize":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"dfeab77c-db9c-11e4-9333-f5c51923a0db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[],"tindex":"dfeab77d-db9c-11e4-9333-e902655b695c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"dfeab77e-db9c-11e4-9333-03e4846f4cad","variableMapping":{"i":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"dfeab77f-db9c-11e4-9333-812788d035db","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"dfeab780-db9c-11e4-9333-3fde3b275664","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":0},{"failures":[161,33,55,215,216,56,57,217,218,220,221,222,39,492,163,170,40,171,397,34,97,98,99,100,41,409,412,423],"tindex":"dfeab781-db9c-11e4-9333-1dce3954dd35","variableMapping":{"force":"force","maxSpeed":"speed","speed":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[132,133,203,204,205,206,208,209,52,53,54,38,210,211,212,213,214,490,161,33,55,215,216,56,57,217,218,220,221,222,39,163,493,494,495,496,497,498,499,500,501,502,503,504,48,165,49,166,223,65,167,224,66,225,226,227,67,229,109,230,231,232,233,234,235,236,237,238,110,111,239,240,241,242,243,112,244,68,245,246,247,248,249,69,113,250,251,252,70,253,71,254,255,256,72,258,73,259,260,261,74,263,114,264,265,266,267,268,269,270,271,272,115,116,273,274,275,276,277,117,278,75,279,280,281,282,283,76,118,284,285,286,77,287,78,288,289,290,291,292,293,294,296,297,168,298,169,148,299,79,300,80,301,149,302,150,151,303,304,305,306,308,309,491,310,81,82,83,84,312,313,314,315,317,318,153,319,85,320,86,321,154,322,155,156,323,324,325,326,328,329,340,352,362,87,363,364,365,88,367,125,368,369,370,371,372,373,374,375,376,126,127,377,378,379,380,381,128,382,89,383,384,385,386,387,90,129,388,389,390,91,391,92,392,393,394,136,395,96,40,171,397,34,97,98,99,35,100,402,130,419,420,131,421,422,447,21,477,478,101,102,479,480,481,481,103,103,482,482,483,483,104,104,105,105,484,484,106,106,107,107,485,485,486,486,108,108,0,50,172,191,173,192,193,194,1,2,174,175,176,3,4,5,6,177,178,7,8,179,180,181,51,182,183,184,185,186,187,9,188,10,11,12,189,13],"tindex":"dfeade92-db9c-11e4-9333-c53a92434a0a","variableMapping":{"size":"segmentSizeInBytes","hash":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"dfeade93-db9c-11e4-9333-0d1f7d913d78","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"dfeade94-db9c-11e4-9333-9bd1bcb516ae","variableMapping":{"res":"mask","value":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[],"tindex":"dfeade95-db9c-11e4-9333-5dc730fcc3c4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"dfeade96-db9c-11e4-9333-1393a053a338","variableMapping":{"distance":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","maxSpeed":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"dfeade97-db9c-11e4-9333-a53b44a44c8d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"dfeade98-db9c-11e4-9333-bd66d6e8236c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[161,33,55,215,216,56,57,217,218,219,220,221,222,39,163,49,400,401,402,36,403,404,37,405,406,407,408,41,409,410,162,411,14,15,412,413,414,157,415,416,417,195,158,31,196,32,420,423,424,425,197,426,22,42,427,159,428,429,430,431,432,433,44,434,23,16,435,436,198,437,438,439,24,440,441,442,443,444,45,445,25,17,446,199,447,21,448,449,200,450,26,43,451,160,452,453,454,455,456,457,46,458,27,18,459,460,201,461,462,28,29,463,464,465,466,467,47,468,30,19,469,470,202,478,4,51],"tindex":"dfeade99-db9c-11e4-9333-993d517289de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:623","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[],"tindex":"dfeade9a-db9c-11e4-9333-2df0a213fdf3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[],"tindex":"dfeade9b-db9c-11e4-9333-af1707e5ffd6","variableMapping":{"byteCount":"internalFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[205,40,171,97,35,179,181,184,185,9,11],"tindex":"dfeade9c-db9c-11e4-9333-272d31faead2","variableMapping":{"size":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[161,39],"tindex":"dfeade9d-db9c-11e4-9333-89db150ebc9d","variableMapping":{"newUniqueOsmId":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[32,425,449,462],"tindex":"dfeade9e-db9c-11e4-9333-23526b08b022","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[217,195,196,197,42,427,198,438,24,199,200,43,451,201,29,202],"tindex":"dfeade9f-db9c-11e4-9333-c34634f23da3","variableMapping":{"bytePos":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":249,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":188,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":20,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":65,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":293,"com.graphhopper.GraphHopperAPITest.testNoLoad":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":331,"com.graphhopper.reader.OSMReaderTest.testFerry":161,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":210,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":211,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":42,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":440,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":300,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":170,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":256,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":271,"com.graphhopper.coll.CompressedArrayTest.testCompress":147,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":445,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":392,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":347,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":174,"com.graphhopper.GraphHopperTest.testPrepare":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":381,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":426,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":51,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":52,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":491,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":25,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":133,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":227,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":148,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":421,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":425,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":494,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":180,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":320,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":427,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":72,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":143,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":3,"com.graphhopper.GraphHopperTest.testLoadOSM":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":323,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":499,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":86,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":418,"com.graphhopper.reader.OSMReaderTest.testSort":215,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":16,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":259,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":389,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":87,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":358,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":106,"com.graphhopper.routing.DijkstraTest.initializationError":476,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":286,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":248,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":498,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":372,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":488,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":257,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":266,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":74,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":237,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":19,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":302,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":378,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":185,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":301,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":7,"com.graphhopper.coll.OSMIDMapTest.testGetLong":60,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":273,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":278,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":242,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":66,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":112,"com.graphhopper.coll.CompressedArrayTest.testCompress2":146,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":382,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":462,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":272,"com.graphhopper.GraphHopperAPITest.testLoad":136,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":228,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":497,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":400,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":126,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":125,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":164,"com.graphhopper.storage.LevelGraphStorageTest.testClone":231,"com.graphhopper.reader.OSMReaderTest.testBarriers":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":263,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":422,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":179,"com.graphhopper.util.GHUtilityTest.testCopy":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":334,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":47,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":309,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":295,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":446,"com.graphhopper.routing.PathTest.testFindInstruction":102,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":443,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":114,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":37,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":212,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":253,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":450,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":390,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":379,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":193,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":46,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":31,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":475,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":335,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":365,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":504,"com.graphhopper.util.InstructionListTest.testWayList2":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":460,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":324,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":393,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":267,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":197,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":471,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":363,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":447,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":235,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":115,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":8,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":367,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":56,"com.graphhopper.routing.AStarTest.initializationError":474,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":11,"com.graphhopper.coll.OSMIDMapTest.testGet":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":270,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":405,"com.graphhopper.routing.PathBidirRefTest.testExtract":479,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":123,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":438,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":429,"com.graphhopper.util.GHUtilityTest.testSort2":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":186,"com.graphhopper.reader.OSMReaderTest.testMain":55,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":117,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":431,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":144,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":305,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":435,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":41,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":355,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":238,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":134,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":240,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":255,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":104,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":449,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":496,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":243,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":39,"com.graphhopper.storage.StorablePropertiesTest.testStore":62,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":64,"com.graphhopper.storage.GraphHopperStorageTest.testClone":369,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":412,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":14,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":377,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":48,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":469,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":336,"com.graphhopper.routing.PathTest.testTime":478,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":467,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":71,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":232,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":416,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":326,"com.graphhopper.reader.OSMReaderTest.testRelation":219,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":346,"com.graphhopper.util.GHUtilityTest.testSortDirected":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":18,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":483,"com.graphhopper.GraphHopperTest.testFootOnly":35,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":439,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":81,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":162,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":149,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":448,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":343,"com.graphhopper.search.NameIndexTest.testCreate":95,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":481,"com.graphhopper.routing.QueryGraphTest.testOneWay":485,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":327,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":140,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":85,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":137,"com.graphhopper.reader.OSMReaderTest.testWithBounds":222,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":459,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":287,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":348,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":406,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":195,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":229,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":461,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":458,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":199,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":280,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":318,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":411,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":275,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":88,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":5,"com.graphhopper.util.InstructionListTest.testWayList":53,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":391,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":428,"com.graphhopper.GraphHopperAPITest.testDisconnected179":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":337,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":282,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":332,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":456,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":214,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":122,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":493,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":360,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":434,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":397,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":371,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":175,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":424,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":384,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":183,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":473,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":2,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":413,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":464,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":23,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":189,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":307,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":495,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":500,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":198,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":362,"com.graphhopper.routing.PathTest.testWayList":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":359,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":410,"com.graphhopper.coll.OSMIDMapTest.testGet2":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":13,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":250,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":279,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":44,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":380,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":268,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":370,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":150,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":241,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":151,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":453,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":28,"com.graphhopper.util.GHUtilityTest.testSort":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":351,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":433,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":441,"com.graphhopper.search.NameIndexTest.testPut":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":289,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":368,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":299,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":84,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":314,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":502,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":43,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":484,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":21,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":312,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":463,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":472,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":276,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":130,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":503,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":352,"com.graphhopper.routing.PathTest.testFound":477,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":32,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":100,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":252,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":489,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":432,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":116,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":190,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":94,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":340,"com.graphhopper.util.InstructionListTest.testEmptyList":209,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":374,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":468,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":184,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":415,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":408,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":407,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":187,"com.graphhopper.reader.PrinctonReaderTest.testRead":213,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":80,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":269,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":61,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":330,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":230,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":454,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":158,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":200,"com.graphhopper.reader.OSMReaderTest.testFoot":33,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":350,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":155,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":254,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":437,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":156,"com.graphhopper.reader.OSMReaderTest.testOneWay":163,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":127,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":129,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":285,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":444,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":383,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":345,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":373,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":192,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":152,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":191,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":315,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":402,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":341,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":482,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":364,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":492,"com.graphhopper.routing.PathBidirRefTest.testExtract2":480,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":501,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":4,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":30,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":297,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":325,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":387,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":316,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":470,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":217,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":361,"com.graphhopper.util.SimpleIntDequeTest.testPush":135,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":321,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":388,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":207,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":234,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":414,"com.graphhopper.GraphHopperTest.testFootAndCar":34,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":89,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":29,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":333,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":417,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":10,"com.graphhopper.GraphHopperTest.testPrepareOnly":96,"com.graphhopper.GraphHopperTest.testVia":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":296,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":119,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":220,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":223,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":38,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":386,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":403,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":344,"com.graphhopper.routing.AStarBidirectionTest.initializationError":487,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":423,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":251,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":113,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":73}}]
