[{"failures":[0,1,2,3,4,5,6,7],"tindex":"88c10257-db04-11e4-b25a-05bed6025bed","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-1},{"failures":[],"tindex":"88c261e8-db04-11e4-b25a-8576ff1f9c11","variableMapping":{"eleDelta":"orientation","decEleSum":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"88c261e9-db04-11e4-b25a-73f6b7496948","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17],"tindex":"88c261ea-db04-11e4-b25a-9b44d7526bdb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[18,19,20],"tindex":"88c261eb-db04-11e4-b25a-6de9d6a40b67","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"biggestStart","edgeTo":"biggestStart","edgeFrom":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[21,22],"tindex":"88c261ec-db04-11e4-b25a-83a241abec4c","variableMapping":{"str":"str","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:82","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"88c261ed-db04-11e4-b25a-e954194fc125","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"88c261ee-db04-11e4-b25a-431ee215045e","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[22],"tindex":"88c288ff-db04-11e4-b25a-51ec0154bef8","variableMapping":{"factor":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"88c28900-db04-11e4-b25a-3f3148b8c838","variableMapping":{"weightApproximation":"bwSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,18,19,77,78,79,80,81,82,46,49,83,84,85,86,87],"tindex":"88c28901-db04-11e4-b25a-8d14ae3a77d4","variableMapping":{"size":"v"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[88,89,90],"tindex":"88c28902-db04-11e4-b25a-ddb25d7aa2dc","variableMapping":{"ref":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[10,13,15,17],"tindex":"88c28903-db04-11e4-b25a-3b301c4419a3","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"88c28904-db04-11e4-b25a-07b450135352","variableMapping":{"str":"highwayValue","destination":"highwayValue","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:265","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    int int = 0;\n    for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n        if (java.lang.String.trim().isEmpty())\n            continue;\n        \n        if (int > 0)\n            java.lang.String += \", \";\n        \n        java.lang.String += java.lang.String.trim();\n        int++;\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":0},{"failures":[91,23,92,93,94,95,96,97,98,24,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,25,120,121,122,123,124,125,126,127,128,129,130,131,132,50,133,51,134,135,52,136,137,53,54,55,56,138,57,139,140,141,142,143,144,145,146,147,148,58,59,149,150,60,151,152,153,154,155,156,157,61,62,158,159,160,63,161,64,162,163,65,164,165,66,67,68,69,166,70,167,168,28,169,170,29,171,172,173,174,175,176,177,30,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,31,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,32,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,33,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,38,251,252,39,253,254,255,256,257,258,259,40,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,71,72,293,294,295,296,297,298,299,300,301,302,303,304,305,74,75,306,307,88,76,18,19,89,90,308,309,310,311,312,313,314,315,315,316,316,317,317,318,318,319,319,320,320,321,321,322,322,323,323,324,324,325,325,326,326,327,328,0,329,1,2,3,330,4,331,5,332,6,333,334,335,336,337,338,339,340,341,342,7,343,344,345,77,78,346,347,79,348,349,350,351,352,353,45,354,80,81,355,82,46,47,48,356,49,22,83,357,358,84,359,85,86,360,87,361,362,363,20,364,365,366],"tindex":"88c28905-db04-11e4-b25a-a9b1e4aa6809","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[367],"tindex":"88c2b016-db04-11e4-b25a-4b2cac457bc3","variableMapping":{"osmFile":"tt","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"88c2b017-db04-11e4-b25a-93a27277a0cf","variableMapping":{"maxLat":"minLon","bounds":"com.graphhopper.util.shapes.BBox.INVERSE","lat":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:182","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"88c2b018-db04-11e4-b25a-c1ef9366f2af","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[368,369,9,370,371,372,373,374,12,375,376,377,378,16,379,86],"tindex":"88c2b019-db04-11e4-b25a-332a517338d8","variableMapping":{"value":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[380,381,382,383,384,385,84,87],"tindex":"88c2b01a-db04-11e4-b25a-bfdb186e6ed3","variableMapping":{"tt":"res"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"88c2b01b-db04-11e4-b25a-dd87cf73f19f","variableMapping":{"weightApproximation":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[386],"tindex":"88c2b01c-db04-11e4-b25a-a7c01f4c9dc7","variableMapping":{"time":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[],"tindex":"88c2b01d-db04-11e4-b25a-5309232c6627","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[248,250,0,4,5,6,336,340,343,345,346,349,350,351,353],"tindex":"88c2b01e-db04-11e4-b25a-8f97ef46752d","variableMapping":{"flags":"weightLong","mask":"weightLong"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-1},{"failures":[],"tindex":"88c2b01f-db04-11e4-b25a-4764a67c406f","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.KM_MILE":"minLat","distInMeter":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:76","type":"CtLocalVariableImpl","sourcecode":"double double = (double / 1000) / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[387,368,8,9,388,389,10,370,390,391,371,373,11,12,392,393,13,375,14,376,394,15,377,16,395,17,379,396,397,83,86,398,20],"tindex":"88c2b020-db04-11e4-b25a-9ff2a765917b","variableMapping":{"shift":"value","tmpValue":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[61,158,247,249,251,327,328,0,1,4,331,5,332,6,333,334,335,336,337,338,339,340,341,342,7,343,344,345,77,78,346,347,79,348,349,350,351,352,353,45,354,80,81,46,47,356],"tindex":"88c2b021-db04-11e4-b25a-b5a65269cca2","variableMapping":{"edgeId":"index","nextEdge":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[95,102,105,125,139,146,157,167,174,181,184,204,210,217,220,240,246,250,256,263,266,287,293,399,308,400,401,310,402,403,404,405,378,313,314,322,327,331,334,335,345,77],"tindex":"88c2b022-db04-11e4-b25a-5966cb78ad51","variableMapping":{"distance":"speed","speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[406,407,408,409,91,23,92,93,94,410,95,96,97,98,24,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,25,120,121,122,123,124,125,126,127,128,129,130,131,132,50,133,51,134,135,52,136,137,53,54,55,56,138,57,139,140,141,142,143,144,145,146,147,148,58,59,149,150,60,151,152,153,154,155,156,157,61,62,158,159,160,63,161,64,162,163,65,164,165,66,67,68,69,166,70,167,411,412,168,28,169,170,29,171,172,173,413,174,175,176,177,30,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,31,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,32,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,33,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,38,251,252,39,253,254,255,414,256,257,258,259,40,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,415,416,417,418,71,72,293,294,295,296,297,298,299,300,301,302,303,304,305,74,75,306,307,88,76,18,19,89,90,308,309,310,311,312,313,314,315,315,316,316,317,317,318,318,319,319,320,320,321,321,322,322,323,323,324,324,325,325,326,326,327,328,0,329,1,2,3,330,4,331,5,332,6,333,334,335,336,337,338,339,340,341,342,7,343,344,345,77,78,346,347,79,348,349,350,351,352,353,419,420,421,422,423,45,354,80,81,355,82,46,424,47,48,356,49,425,22,83,357,358,84,359,85,86,360,398,87,361,362,363,426,20,364,427,428,429,430,431,365,366],"tindex":"88c2d733-db04-11e4-b25a-371d013ac653","variableMapping":{"type":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[],"tindex":"88c2d734-db04-11e4-b25a-792ec9902b6a","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[432,433,303,304,305,314],"tindex":"88c2d735-db04-11e4-b25a-69d11ac661e1","variableMapping":{"defaultUTurnCost":"resultOrientation","weight":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[91,23,94,95,96,97,98,24,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,25,120,121,122,123,124,125,126,127,128,129,130,131,132,50,133,51,134,52,136,137,53,54,55,56,57,139,140,141,142,143,145,146,148,58,59,149,60,151,152,153,154,156,157,61,62,158,159,160,63,161,64,162,65,164,165,66,67,68,69,70,167,28,170,29,173,174,175,176,177,30,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,31,199,200,201,202,203,204,205,206,207,208,209,220,33,36,434,435,386,436,437,438,246,247,248,249,250,251,252,39,255,256,257,258,259,40,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,71,72,293,294,295,296,297,298,299,300,301,302,303,304,305,74,75,306,307,88,76,18,19,89,90,308,309,310,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,0,329,1,2,3,330,4,331,5,332,6,333,334,335,336,337,338,339,340,341,342,7,343,344,345,77,78,346,347,79,348,349,350,351,352,353,45,354,80,81,355,82,46,47,48,356,49,22,83,357,358,84,359,85,86,360,87,361,362,363,20,364,365,366],"tindex":"88c2d736-db04-11e4-b25a-c18e0cefabad","variableMapping":{"size":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"88c2fe47-db04-11e4-b25a-39826955bdf6","variableMapping":{"need":"value","i":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"88c2fe48-db04-11e4-b25a-9fd5653b4363","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[408,23,92,137,165,411,28,29,171,38,39,253,45,80,81,355,82,46,47,48,356,49,22,83,357,358,84,359,85,86,360,87,361,362,363,20,431],"tindex":"88c2fe49-db04-11e4-b25a-132183820d23","variableMapping":{"dLat":"bytes","dLon":"bytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"88c2fe4a-db04-11e4-b25a-5b723e7cd06e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"88c2fe4b-db04-11e4-b25a-77e3cd14357c","variableMapping":{"elem":"mKeys","keys":"mKeys","i":"i","key":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:180","type":"CtWhileImpl","sourcecode":"while ((int[][(int / 2)]) > int) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n    int /= 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[402,369,9,439,404,374,12,440,405,376,441,378,16,442],"tindex":"88c2fe4c-db04-11e4-b25a-25820738327e","variableMapping":{"indexWithMaxDist":"speed","lastIndex":"speed","fromIndex":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[],"tindex":"88c2fe4d-db04-11e4-b25a-b13c43d53925","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","nextEdge":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[23,96,97,99,103,105,110,112,118,25,122,124,125,129,28,29,175,176,178,182,184,189,191,197,31,201,203,204,208,211,212,214,218,220,225,227,233,33,237,239,240,244,39,257,258,260,264,266,271,273,279,281,284,286,287,291,71,293,298,302,303,304,88,76,19,89,313,319,322,327,0,329,1,2,3,4,331,5,6,333,334,335,336,337,340,343,345,77,346,79,349,350,351,353,80,81,355,82,46,48,83,86,365,366],"tindex":"88c2fe4e-db04-11e4-b25a-677b4c9c9a08","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[9,372,12,378,16],"tindex":"88c2fe4f-db04-11e4-b25a-87c18518bf58","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[443,444,80,82,83,20],"tindex":"88c2fe50-db04-11e4-b25a-1114d2d6cf71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"88c2fe51-db04-11e4-b25a-818d63b65bad","variableMapping":{"high":"flags","highKey":"value","key":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":0},{"failures":[],"tindex":"88c2fe52-db04-11e4-b25a-3f23d70de860","variableMapping":{"index":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-2},{"failures":[309,310],"tindex":"88c32563-db04-11e4-b25a-e36463adfc10","variableMapping":{"from":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","end":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[91,23,92,93,94,95,96,97,98,24,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,25,120,121,122,123,124,125,126,127,128,129,130,131,132,50,133,51,134,135,52,136,137,53,54,55,56,57,139,140,141,142,143,145,146,148,58,59,149,60,151,152,153,154,156,157,61,62,158,159,160,63,161,64,162,163,65,164,165,66,67,68,69,70,167,28,170,29,171,172,173,174,175,176,177,30,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,31,199,200,201,202,203,204,205,206,207,208,209,220,33,445,446,36,434,435,447,37,386,436,437,438,246,247,248,249,250,38,251,252,39,253,254,255,256,257,258,259,40,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,71,72,293,294,295,296,297,298,299,300,301,302,303,304,305,74,75,306,307,88,76,18,19,89,90,308,309,310,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,0,329,1,2,3,330,4,331,5,332,6,333,334,335,336,337,338,339,340,341,342,7,343,344,345,77,78,346,347,79,348,349,350,351,352,353,45,354,80,81,355,82,46,47,48,356,49,22,83,357,358,84,359,85,86,360,87,361,362,363,20,364,365,366],"tindex":"88c39a94-db04-11e4-b25a-5df8c9569f36","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"88c39a95-db04-11e4-b25a-95c7213f17c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"88c39a96-db04-11e4-b25a-1b49986f7a8d","variableMapping":{"high":"scDirMask","len":"dir","start":"dir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":0},{"failures":[402,8,9,10,372,404,11,12,13,405,14,15,16,17],"tindex":"88c39a97-db04-11e4-b25a-7317d651f7ec","variableMapping":{"location":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[310],"tindex":"88c39a98-db04-11e4-b25a-39eb3d7aa661","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[334,335,343,345,353],"tindex":"88c4fa29-db04-11e4-b25a-310c2f54fe50","variableMapping":{"flags":"flags","this":"this","dist":"dist","reverse":"reverse"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[21],"tindex":"88c4fa2a-db04-11e4-b25a-25284b05fb73","variableMapping":{"red":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[448],"tindex":"88c4fa2b-db04-11e4-b25a-a57333e6c0ad","variableMapping":{"tmp":"fwdSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"88c4fa2c-db04-11e4-b25a-7ddca83ecd03","variableMapping":{"i":"err","child":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[310,372,312,334,343],"tindex":"88c4fa2d-db04-11e4-b25a-2f9c7e333076","variableMapping":{"speedEncoder":"reverseSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-1},{"failures":[],"tindex":"88c5213e-db04-11e4-b25a-a50bed622448","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"88c5213f-db04-11e4-b25a-df3adcb18b57","variableMapping":{"shift":"shift","backwardBit":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"88c52140-db04-11e4-b25a-0b75a89f2aa2","variableMapping":{"high":"nanoTime","guess":"lastTime","low":"nanoTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[],"tindex":"88c52141-db04-11e4-b25a-27d2d76e512d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"88c52142-db04-11e4-b25a-b3cbd723fed2","variableMapping":{"values":"mKeys","n":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:321","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int[][int] = -1;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-2},{"failures":[305,367,448,449,363],"tindex":"88c52143-db04-11e4-b25a-ad63d55cdc4f","variableMapping":{"orientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[405,14],"tindex":"88c52144-db04-11e4-b25a-215fc612eb9e","variableMapping":{"val":"trackType","existing":"trackType","key":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"88c52145-db04-11e4-b25a-69be24282bfa","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"maxCount","entityType":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"88c52146-db04-11e4-b25a-0bc3771699d1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[450,444],"tindex":"88c52147-db04-11e4-b25a-5fc20726baa9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[402,404,405],"tindex":"88c52148-db04-11e4-b25a-f59fa3b30015","variableMapping":{"tmpNo":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"88c52149-db04-11e4-b25a-91afdc6420d5","variableMapping":{"latlon":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"88c5214a-db04-11e4-b25a-6511428c63e3","variableMapping":{"scDirMask":"ferryBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"88c5214b-db04-11e4-b25a-d191643cadb8","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[371],"tindex":"88c5214c-db04-11e4-b25a-efb3df781c73","variableMapping":{"edgePointer":"relBitMask","edgeEntryBytes":"usedBits","nextEdge":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:797","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"88c5214d-db04-11e4-b25a-a50c25a6114f","variableMapping":{"nanoTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"88c5214e-db04-11e4-b25a-ad9b4a3f82d1","variableMapping":{"angle":"durationInHours","com.graphhopper.util.AngleCalc.PI3_4":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":0},{"failures":[],"tindex":"88c5214f-db04-11e4-b25a-fdf03814a1e6","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.trimToSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":-2},{"failures":[333,334,335,350,351,353],"tindex":"88c52150-db04-11e4-b25a-431425c2bc75","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"88c52151-db04-11e4-b25a-17dda4f5b2dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[451,452,453],"tindex":"88c54862-db04-11e4-b25a-b153e82a5796","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[405,14,376],"tindex":"88c54863-db04-11e4-b25a-a5607f6a8e7f","variableMapping":{"entry":"trackType","entryVal":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"88c54864-db04-11e4-b25a-6d2b02f39547","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[454,455,456,457,458,459,460,461,462,463],"tindex":"88c54865-db04-11e4-b25a-b1ac9b1017d5","variableMapping":{"factor":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[464],"tindex":"88c54866-db04-11e4-b25a-3da04bd91ab5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:109","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"collection is already empty!?\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[310],"tindex":"88c54867-db04-11e4-b25a-ad9ce4693d49","variableMapping":{"weightApproximation":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"88c54868-db04-11e4-b25a-cb1cffad17cb","variableMapping":{"guess":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"88c54869-db04-11e4-b25a-25627306b1ba","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"88c5486a-db04-11e4-b25a-23cb52bf81b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"88c5486b-db04-11e4-b25a-f7f6025004ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[91,23,92,93,94,410,95,96,97,98,24,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,25,120,121,122,123,124,125,126,127,128,129,130,139,146,157,167,28,169,170,29,171,172,173,413,174,175,176,177,30,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,31,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,32,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,33,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,38,251,252,39,253,254,255,414,256,257,258,259,40,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,380,399,308,465,400,466,467,468,469,470,464,372,334,335,336,337,338,339,340,341,342,7,343,344,345,77,78,346,347,79,348,349,350,351,352,353,82,356],"tindex":"88c5486c-db04-11e4-b25a-511c97e0b869","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-1},{"failures":[],"tindex":"88c5486d-db04-11e4-b25a-cb0a709904c9","variableMapping":{"turnRelation":"turnRelation","this":"osmReader"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdFrom());\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdTo());\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[],"tindex":"88c5486e-db04-11e4-b25a-a552732430d0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":"88c5486f-db04-11e4-b25a-472b480e4159","variableMapping":{"compressionLevel":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[452,453],"tindex":"88c56f80-db04-11e4-b25a-8d8aa5c2542e","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[380,382,383,384,385],"tindex":"88c56f81-db04-11e4-b25a-2b1da5ff4105","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"88c56f82-db04-11e4-b25a-fb1f00a199a7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-2},{"failures":[23,95,115,120,125,50,51,63,64,28,29,174,194,199,204,210,230,33,235,240,39,256,276,282,287,471,472,473,474,475,298,303,304,313,316,323,326,350,419,45,81,355,46,48,22,357,358,84,359,85,86,360,87,361,362,363,20],"tindex":"88c56f83-db04-11e4-b25a-a769ce99984d","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[],"tindex":"88c56f84-db04-11e4-b25a-13dfb4242578","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[0,4,6,340,343,349,351,353],"tindex":"88c56f85-db04-11e4-b25a-ebc607f71a4e","variableMapping":{"nn":"oldValue","oldPrio":"oldValue","sortedNodes":"this","priority":"oldValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:375","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.update(int, int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":-1},{"failures":[97,106,107,109,113,114,120,121,176,185,186,188,192,193,199,200,212,221,222,224,228,229,235,236,258,267,268,270,274,275,282,283,88,19],"tindex":"88c56f86-db04-11e4-b25a-952896f10421","variableMapping":{"tmpNo":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[387,388,391,392,86],"tindex":"88c59697-db04-11e4-b25a-8bd9e76b0db6","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"maxTurnCosts","nodeType":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17],"tindex":"88c59698-db04-11e4-b25a-cf4a3ff718a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"88c59699-db04-11e4-b25a-6157ef56badf","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":281,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":348,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":38,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":211,"com.graphhopper.reader.OSMReaderTest.testFerry":22,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":294,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":374,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":442,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":161,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":354,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":183,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":431,"com.graphhopper.coll.CompressedArrayTest.testCompress":455,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":1,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":230,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":105,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":5,"com.graphhopper.GraphHopperTest.testPrepare":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":241,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":327,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":453,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":343,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":147,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":17,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":75,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":255,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":89,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":404,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":446,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":336,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":133,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":207,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":28,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":256,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":452,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":333,"com.graphhopper.GraphHopperTest.testLoadOSM":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":53,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":435,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":51,"com.graphhopper.reader.OSMReaderTest.testSort":358,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":18,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":171,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":123,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":23,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":461,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":242,"com.graphhopper.storage.RAMDataAccessTest.testHeader":42,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":322,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":364,"com.graphhopper.storage.MMapDataAccessTest.testHeader":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":203,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":280,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":35,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":101,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":169,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":178,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":174,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":265,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":65,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":109,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":78,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":162,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":339,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":338,"com.graphhopper.coll.OSMIDMapTest.testGetLong":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":187,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":193,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":272,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":39,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":274,"com.graphhopper.coll.CompressedArrayTest.testCompress2":454,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":114,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":405,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":184,"com.graphhopper.GraphHopperAPITest.testLoad":71,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":414,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":434,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":380,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":106,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":97,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":21,"com.graphhopper.storage.LevelGraphStorageTest.testClone":40,"com.graphhopper.reader.OSMReaderTest.testBarriers":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":175,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":61,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":214,"com.graphhopper.util.GHUtilityTest.testCopy":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":341,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":167,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":144,"com.graphhopper.routing.PathTest.testFindInstruction":314,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":395,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":176,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":451,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":293,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":467,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":288,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":141,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":124,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":201,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":296,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":188,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":252,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":464,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":261,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":215,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":438,"com.graphhopper.util.InstructionListTest.testWayList2":304,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":433,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":54,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":129,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":11,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":373,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":403,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":309,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":263,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":185,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":148,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":340,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":359,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":350,"com.graphhopper.coll.OSMIDMapTest.testGet":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":182,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":34,"com.graphhopper.routing.PathBidirRefTest.testExtract":306,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":468,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":276,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":421,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":67,"com.graphhopper.storage.RAMDataAccessTest.testCopy":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":235,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":378,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":383,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":139,"com.graphhopper.util.GHUtilityTest.testSort2":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":346,"com.graphhopper.reader.OSMReaderTest.testMain":357,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":253,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":192,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":393,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":68,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":279,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":239,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":266,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":270,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":291,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":397,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":267,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":197,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":402,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":273,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":363,"com.graphhopper.storage.StorablePropertiesTest.testStore":411,"com.graphhopper.storage.GraphHopperStorageTest.testClone":24,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":238,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":444,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":415,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":448,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":216,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":249,"com.graphhopper.routing.PathTest.testTime":312,"com.graphhopper.util.BitUtilLittleTest.testToFloat":474,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":289,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":260,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":229,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":278,"com.graphhopper.reader.OSMReaderTest.testRelation":398,"com.graphhopper.util.GHUtilityTest.testSortDirected":300,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":417,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":318,"com.graphhopper.GraphHopperTest.testFootOnly":356,"com.graphhopper.util.BitUtilLittleTest.testToInt":475,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":58,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":163,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":337,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":328,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":225,"com.graphhopper.search.NameIndexTest.testCreate":409,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":315,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":37,"com.graphhopper.routing.QueryGraphTest.testOneWay":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":138,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":459,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":50,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":456,"com.graphhopper.reader.OSMReaderTest.testWithBounds":362,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":471,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":222,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":231,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":469,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":390,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":257,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":254,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":379,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":196,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":157,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":189,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":95,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":335,"com.graphhopper.util.BitUtilLittleTest.testToBitString":473,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":126,"com.graphhopper.util.InstructionListTest.testWayList":303,"com.graphhopper.GraphHopperAPITest.testDisconnected179":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":217,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":460,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":198,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":213,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":366,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":228,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":244,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":355,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":100,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":59,"com.graphhopper.routing.util.EncodedValueTest.testSwap":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":332,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":118,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":331,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":173,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":352,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":410,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":166,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":375,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":91,"com.graphhopper.storage.MMapDataAccessTest.testCopy":26,"com.graphhopper.routing.PathTest.testWayList":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":243,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":221,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":450,"com.graphhopper.coll.OSMIDMapTest.testGet2":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":353,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":44,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":284,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":427,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":195,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":111,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":399,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":180,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":164,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":271,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":165,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":472,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":382,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":14,"com.graphhopper.util.GHUtilityTest.testSort":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":234,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":463,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":385,"com.graphhopper.search.NameIndexTest.testPut":407,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":413,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":143,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":160,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":60,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":153,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":369,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":321,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":151,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":310,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":170,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":384,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":428,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":466,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":351,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":88,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":437,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":33,"com.graphhopper.routing.PathTest.testFound":311,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":49,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":372,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":286,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":248,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":186,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":408,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":220,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":103,"com.graphhopper.util.InstructionListTest.testEmptyList":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":7,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":381,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":347,"com.graphhopper.reader.PrinctonReaderTest.testRead":365,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":125,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":64,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":219,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":423,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":210,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":191,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":368,"com.graphhopper.reader.OSMReaderTest.testFoot":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":233,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":326,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":429,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":136,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":290,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":462,"com.graphhopper.reader.OSMReaderTest.testOneWay":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":137,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":107,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":121,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":202,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":116,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":6,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":329,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":308,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":223,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":317,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":93,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":426,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":418,"com.graphhopper.routing.PathBidirRefTest.testExtract2":307,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":386,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":334,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":55,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":146,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":406,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":25,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":155,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":441,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":245,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":465,"com.graphhopper.util.SimpleIntDequeTest.testPush":73,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":134,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":122,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":262,"com.graphhopper.GraphHopperTest.testFootAndCar":82,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":115,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":268,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":32,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":470,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":387,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":30,"com.graphhopper.storage.StorablePropertiesTest.testLoad":412,"com.graphhopper.GraphHopperTest.testPrepareOnly":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":349,"com.graphhopper.GraphHopperTest.testVia":80,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":212,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":87,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":250,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":119,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":305,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":400,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":226,"com.graphhopper.util.AngleCalcTest.testCombined":432,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":449,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":285,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":283,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":29}}]
