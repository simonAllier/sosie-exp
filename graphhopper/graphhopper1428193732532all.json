[{"failures":[],"tindex":"bd741c31-db2a-11e4-a54b-a5969b0c17ec","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"bd741c32-db2a-11e4-a54b-abaac6fba52a","variableMapping":{"high":"maxValue","highKey":"maxValue","key":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"bd741c33-db2a-11e4-a54b-311b4c463aa2","variableMapping":{"strLen":"biggestStart","bLen":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,303,304,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"tindex":"bd744344-db2a-11e4-a54b-955d14118f0f","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"bd744345-db2a-11e4-a54b-47aa656ae452","variableMapping":{"size":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"bd744346-db2a-11e4-a54b-9dcd92d3d25b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":0},{"failures":[250,255],"tindex":"bd744347-db2a-11e4-a54b-a9a1c6716b7d","variableMapping":{"index":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"bd744348-db2a-11e4-a54b-03175a6f0e01","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"bd744349-db2a-11e4-a54b-5d98dc93ecc8","variableMapping":{"hasOther":"in","hasRel":"in"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[345,346,347,348,349,350],"tindex":"bd74434a-db2a-11e4-a54b-3df94fe48fd5","variableMapping":{"size":"bufferIndex","capacity":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:218","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-1},{"failures":[351,352,353,354],"tindex":"bd74434b-db2a-11e4-a54b-07cd45da76d9","variableMapping":{"acceptBit":"acceptBit","intendedValues":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[355,356,327],"tindex":"bd74434c-db2a-11e4-a54b-97f742f1163c","variableMapping":{"scDirMask":"acceptBit","flags":"ferryBit","dir":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[],"tindex":"bd746a5d-db2a-11e4-a54b-4139c078d307","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:153","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_INT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[357],"tindex":"bd746a5e-db2a-11e4-a54b-55b037fac2f8","variableMapping":{"tmpDegreeCounter":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[358,60,66,68,69,77,83,85,86,359,360,361,362,363,364,365,366,367,368,369],"tindex":"bd746a5f-db2a-11e4-a54b-7fdc1c4a723f","variableMapping":{"high":"hash","guess":"hash","low":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"bd746a60-db2a-11e4-a54b-1b6bed547fb8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-2},{"failures":[],"tindex":"bd746a61-db2a-11e4-a54b-e790d03db30a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"bd746a62-db2a-11e4-a54b-a393f137ca4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[370,371],"tindex":"bd746a63-db2a-11e4-a54b-3909416724eb","variableMapping":{"workerThreads":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"bd746a64-db2a-11e4-a54b-d1d8b949fcc1","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxTurnCosts","edge":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-2},{"failures":[],"tindex":"bd746a65-db2a-11e4-a54b-7b41c884521e","variableMapping":{"time":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[6,14,22,25,39,40,44,49,153,161,164,178,179,188,199,207,210,224,225,229,234],"tindex":"bd746a66-db2a-11e4-a54b-3ddcf1129448","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[0,57,265,267,271,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,315,316,317,318,321,322,324],"tindex":"bd746a67-db2a-11e4-a54b-2558fac5369c","variableMapping":{"elevation":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:96","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[359,360,361,362,363,364,372,365,366,369],"tindex":"bd746a68-db2a-11e4-a54b-5365188ebf19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"bd746a69-db2a-11e4-a54b-ff3bf5f6f066","variableMapping":{"indexWithMaxDist":"y1","lastIndex":"x2","fromIndex":"x2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":0},{"failures":[],"tindex":"bd746a6a-db2a-11e4-a54b-4d20973d90c3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"bd74917b-db2a-11e4-a54b-61471b28bf4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"bd74917c-db2a-11e4-a54b-57b7c728e394","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"bd74917d-db2a-11e4-a54b-055bd5965432","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[359,360,361,362,363,364,372,365,366],"tindex":"bd74917e-db2a-11e4-a54b-75fd6f26aef2","variableMapping":{"tmp":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[258],"tindex":"bd74917f-db2a-11e4-a54b-092f9fb58d9b","variableMapping":{"gradient":"fwdIncline","yend":"fwdIncline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-1},{"failures":[],"tindex":"bd749180-db2a-11e4-a54b-efb411787a5c","variableMapping":{"node":"connectedId","i":"connectedId","iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:91","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n} else {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,373,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,374,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,375,376,189,377,378,379,380,190,191,192,193,194,195,196,381,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,382,383,384,385,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,386,387,388,389,390,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,303,304,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,315,316,317,318,319,320,321,391,322,323,324,325,392,326,327,328,329,330,331,332,333,334,335,393,336,337,338,339,394,340,395,396,397,398,399,341,342,343,344,400,401,402,403],"tindex":"bd749181-db2a-11e4-a54b-07b02ae57ad7","variableMapping":{"com.graphhopper.util.Constants.VERSION":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:85","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[250,255],"tindex":"bd749182-db2a-11e4-a54b-ff536e341c93","variableMapping":{"segmentSizeInBytes":"i","index":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[],"tindex":"bd749183-db2a-11e4-a54b-811f1417630a","variableMapping":{"tmpDegreeCounter":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":0},{"failures":[],"tindex":"bd749184-db2a-11e4-a54b-75dc00f1bab9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"bd74b895-db2a-11e4-a54b-f397f8e505b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:472","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[404,370,405,406,271],"tindex":"bd74b896-db2a-11e4-a54b-453286fe79a4","variableMapping":{"i":"child","to":"child","lonSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[407,265,267,271,273,275,276],"tindex":"bd74b897-db2a-11e4-a54b-03980d8c4911","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-1},{"failures":[361,372],"tindex":"bd74b898-db2a-11e4-a54b-edb4762fbdd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"bd74b899-db2a-11e4-a54b-117aad40768c","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[8,12,13,14,21,23,36,41,44,48,108,109,110,117,119,132,137,140,144,147,151,152,153,160,162,175,180,183,187,190,193,197,198,199,206,208,221,226,229,233,244,245,248,408,250,254,255,357,356,409,410,263,265,266,271,272,273,276,277,278,282,285,288,290,291,300,307,310,317,318,319,320,321,323,324,327,328,329,331,334,335,336,337,338,340,341,342,343],"tindex":"bd74b89a-db2a-11e4-a54b-f3df89c232f3","variableMapping":{"segmentSizeInBytes":"shift","capacity":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[],"tindex":"bd74b89b-db2a-11e4-a54b-495671093f4d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"bd74b89c-db2a-11e4-a54b-9beff861d377","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"bd74b89d-db2a-11e4-a54b-f7aeffc3bbc6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"bd74b89e-db2a-11e4-a54b-3b73bc3b5ddf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"bd74b89f-db2a-11e4-a54b-8d6a27978130","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"bd74b8a0-db2a-11e4-a54b-dfbec145ef10","variableMapping":{"tmpNode":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"bd74b8a1-db2a-11e4-a54b-91cd2c868e32","variableMapping":{"osmFile":"com.graphhopper.routing.util.EncodingManager.BIKE2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"bd74b8a2-db2a-11e4-a54b-5b13271a8607","variableMapping":{"distance":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":0},{"failures":[],"tindex":"bd74dfb3-db2a-11e4-a54b-f59d1c3ba70f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[57,286,294,317,324],"tindex":"bd74dfb4-db2a-11e4-a54b-995686573d5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"bd74dfb5-db2a-11e4-a54b-57e6608b2706","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[411],"tindex":"bd74dfb6-db2a-11e4-a54b-d77b9b4646b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"bd74dfb7-db2a-11e4-a54b-93bb5b8b12c5","variableMapping":{"elevation":"mGarbage"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:152","type":"CtIfImpl","sourcecode":"if (boolean)\n    return 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":0},{"failures":[],"tindex":"bd74dfb8-db2a-11e4-a54b-f1734cc0ba47","variableMapping":{"nanoTime":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[265,271,276,278,279,280,281,282,284,285,287,288,289,290,291,292,293,294,296,297,298,299,300,317,318,321,344],"tindex":"bd74dfb9-db2a-11e4-a54b-e9d6c0b412b8","variableMapping":{"is3D":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[263,265,271,272,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,317,318,319,320,321,323,324,343,344],"tindex":"bd74dfba-db2a-11e4-a54b-bfe3e19b34b8","variableMapping":{"min":"from","tmpSize":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[23,119,162,208,244,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,355,427,428,429,430,431,432,433,434,258,435,436,437,438,439,260,261,277,278,287,289,290,300,317,320,324,327,339],"tindex":"bd74dfbb-db2a-11e4-a54b-d35bc0b422d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[358],"tindex":"bd74dfbc-db2a-11e4-a54b-430bd1c0bc2f","variableMapping":{"cap":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"bd74dfbd-db2a-11e4-a54b-37127cc305ed","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[5,8,9,440,147,148,441,345,442,443,444,346,445,446,347,447,448,449,375,190,193,194,450,348,451,452,453,349,454,455,350,456,457,458,388,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,397,398,399],"tindex":"bd74dfbe-db2a-11e4-a54b-7308f79cc2ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":-1},{"failures":[408,459,460,461,410],"tindex":"bd74dfbf-db2a-11e4-a54b-f9ae142c7146","variableMapping":{"acceptBit":"directionBitMask","ferryBit":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":-1},{"failures":[],"tindex":"bd74dfc0-db2a-11e4-a54b-fd509122612c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[],"tindex":"bd74dfc1-db2a-11e4-a54b-170c532ecd29","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"bd74dfc2-db2a-11e4-a54b-7706e7095a0f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"bd74dfc3-db2a-11e4-a54b-97060de5db0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"bd74dfc4-db2a-11e4-a54b-cfceb3fbb79a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"bd7506d5-db2a-11e4-a54b-ff9371cb73bd","variableMapping":{"err":"usedBits","dLat":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[358,60,66,68,69,77,83,85,86,359,360,362,363,364,365,366,367,368],"tindex":"bd7506d6-db2a-11e4-a54b-cb4fe0cb0c5d","variableMapping":{"size":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"bd7506d7-db2a-11e4-a54b-3fccecb58bf2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"bd7506d8-db2a-11e4-a54b-6f16cb1d409d","variableMapping":{"flags":"value","scDirMask":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"bd7506d9-db2a-11e4-a54b-c950a627dff4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:79","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"bd7506da-db2a-11e4-a54b-4b9ca1b0ec2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"bd7506db-db2a-11e4-a54b-513c67689e6a","variableMapping":{"this":"g","iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1330","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.getAllEdges()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[23,119,162,208,244,412,413,415,416,417,418,419,420,422,423,424,426,357,427,428,356,430,431,432,433,434,258,435,436,437,438,439,260,261,277,278,287,289,290,300,317,318,319,320,321,323,324,327,328,340,343],"tindex":"bd7506dc-db2a-11e4-a54b-ab6138cae0f0","variableMapping":{"id":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[462,416,417,463,420,464,423,424,465,466,436,437,467,468,334],"tindex":"bd7506dd-db2a-11e4-a54b-4d5c024ae5a0","variableMapping":{"value":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[358,60,66,68,69,77,83,85,86,359,360,361,362,364,365,366,367,368,369],"tindex":"bd7506de-db2a-11e4-a54b-c107df7a5eb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[439],"tindex":"bd7506df-db2a-11e4-a54b-3f8a2956d961","variableMapping":{"costs":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:612","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[23,119,162,208,357,469,356,409,256,432,328,329,334,340],"tindex":"bd7506e0-db2a-11e4-a54b-65c0c1b9aed5","variableMapping":{"strLen":"shift","res":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:192","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"bd7506e1-db2a-11e4-a54b-478be0e48c03","variableMapping":{"i":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-2},{"failures":[5,8,9,12,33,39,44,46,47,51,52,53,54,56,62,63,64,79,80,81,440,134,147,148,151,172,178,183,185,186,441,345,442,443,444,346,445,446,347,447,448,449,375,190,193,194,197,218,224,229,231,232,450,348,451,452,453,349,454,455,350,456,457,458,237,241,242,243,244,386,387,388,389,390,257,258,261,262,297,303,304,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,397,398,399,400,401,402,403],"tindex":"bd7506e2-db2a-11e4-a54b-4d1c3cb01bfc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[470,327],"tindex":"bd7506e3-db2a-11e4-a54b-a79e5b38f4f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"bd7506e4-db2a-11e4-a54b-831a41345ae5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"bd752df5-db2a-11e4-a54b-b73476877fc2","variableMapping":{"flags":"relBitMask","tmpValue":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"bd752df6-db2a-11e4-a54b-e1571292146b","variableMapping":{"id":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[358,60,66,68,69,77,83,85,86,359,360,361,362,364,365,366,367,368,369],"tindex":"bd752df7-db2a-11e4-a54b-812094a2942c","variableMapping":{"flags":"hash","nodeFlags":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[470,327],"tindex":"bd752df8-db2a-11e4-a54b-61a96563843d","variableMapping":{"index":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[415,471,416,417,472,473,463,419,474,420,475,476,464,423,424,477,478,465,435,479,436,437,480,481,467,468,439,327,328,329,330,332,333,334,335,338,339,340],"tindex":"bd752df9-db2a-11e4-a54b-ef39a8d5638c","variableMapping":{"id":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"bd752dfa-db2a-11e4-a54b-2fbed10b5c56","variableMapping":{"mask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[14,24,25,31,39,40,110,120,121,127,135,136,153,163,164,170,178,179,199,209,210,216,224,225,250,253],"tindex":"bd76667b-db2a-11e4-a54b-55e1c3666100","variableMapping":{"segmentSizeInBytes":"mSize","index":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"bd76667c-db2a-11e4-a54b-f7dc30feac3c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[2,5,7,8,9,10,23,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,106,107,482,483,484,119,134,146,147,148,149,162,190,192,193,194,195,208,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"bd76667d-db2a-11e4-a54b-65b8dfd52c51","variableMapping":{"err":"segmentSizeInBytes","dLat":"segmentsToCreate","tmpErr":"segmentSizeInBytes","x1":"segmentsToCreate","sLon":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-2},{"failures":[],"tindex":"bd76667e-db2a-11e4-a54b-c7b4acc4873a","variableMapping":{"systemProperty":"entryVal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[408,459,460,485,461,410],"tindex":"bd76667f-db2a-11e4-a54b-c1a9a442c059","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[355,325,327],"tindex":"bd766680-db2a-11e4-a54b-d964d254996c","variableMapping":{"shortTripsSpeed":"longTripsSpeed","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:487","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-1},{"failures":[],"tindex":"bd766681-db2a-11e4-a54b-d764b2714163","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[244,416,486,418,487,421,488,425,427,436,489,438,317,339],"tindex":"bd766682-db2a-11e4-a54b-cdb64f4a5c93","variableMapping":{"dX":"maxSpeed","dY":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[5,8,9,12,33,39,44,46,47,51,52,53,54,56,62,63,64,79,80,81,440,134,147,148,151,172,178,183,185,186,441,345,442,443,444,346,445,446,347,447,448,449,375,190,193,194,197,218,224,229,231,232,450,348,451,452,453,349,454,455,350,456,457,458,237,241,242,243,244,386,387,388,389,390,257,258,261,262,297,303,304,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,397,398,399,400,401,402,403],"tindex":"bd768d93-db2a-11e4-a54b-11f259df56d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":295,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":304,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":5,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":413,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.reader.OSMReaderTest.testFerry":327,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":248,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":416,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":477,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":63,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":316,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":480,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":467,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":207,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":396,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":441,"com.graphhopper.coll.CompressedArrayTest.testCompress":360,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":488,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":186,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":129,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":162,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":59,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":345,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":454,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":273,"com.graphhopper.GraphHopperTest.testPrepare":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":294,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":263,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":406,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":287,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":50,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":478,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":247,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":11,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":60,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":254,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":424,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":415,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":482,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":279,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":80,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":232,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":417,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":190,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":367,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":12,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":405,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":276,"com.graphhopper.GraphHopperTest.testLoadOSM":321,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":81,"com.graphhopper.reader.OSMReaderTest.testSort":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":418,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":252,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":194,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":444,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":181,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":147,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":142,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":310,"com.graphhopper.storage.RAMDataAccessTest.testHeader":455,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":228,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":440,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":37,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":158,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":191,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":479,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":197,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":464,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":421,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":67,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":166,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":65,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":437,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":282,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":281,"com.graphhopper.coll.OSMIDMapTest.testGetLong":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":211,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":217,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":29,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":407,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":8,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":31,"com.graphhopper.coll.CompressedArrayTest.testCompress2":359,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":171,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":419,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":208,"com.graphhopper.GraphHopperAPITest.testLoad":343,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":373,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":461,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":163,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":153,"com.graphhopper.storage.LevelGraphStorageTest.testClone":16,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":198,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":255,"com.graphhopper.reader.OSMReaderTest.testBarriers":331,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":113,"com.graphhopper.util.GHUtilityTest.testCopy":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":76,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":353,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":457,"com.graphhopper.routing.PathTest.testFindInstruction":262,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":199,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":404,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":245,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":433,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":45,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":102,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":182,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":226,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":235,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":269,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":114,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":150,"com.graphhopper.util.InstructionListTest.testWayList2":243,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":481,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":88,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":187,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":471,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":231,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":412,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":462,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":257,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":20,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":442,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":123,"com.graphhopper.storage.RAMDirectoryTest.testSynched":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":209,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":51,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":283,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":332,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":297,"com.graphhopper.coll.OSMIDMapTest.testGet":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":206,"com.graphhopper.routing.PathBidirRefTest.testExtract":301,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":411,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":33,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":388,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":71,"com.graphhopper.storage.RAMDataAccessTest.testCopy":452,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":445,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":135,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":423,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":408,"com.graphhopper.storage.RAMDataAccessTest.testSegments":456,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":93,"com.graphhopper.util.GHUtilityTest.testSort2":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":292,"com.graphhopper.reader.OSMReaderTest.testMain":329,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":9,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":216,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":368,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":72,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":351,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":36,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":195,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":23,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":27,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":48,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":24,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":435,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":30,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":339,"com.graphhopper.storage.StorablePropertiesTest.testStore":375,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":451,"com.graphhopper.storage.GraphHopperStorageTest.testClone":155,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":356,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":378,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":427,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":352,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":115,"com.graphhopper.routing.PathTest.testTime":260,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":46,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":429,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":90,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":128,"com.graphhopper.reader.OSMReaderTest.testRelation":393,"com.graphhopper.util.GHUtilityTest.testSortDirected":239,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":371,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":383,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":438,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":448,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":306,"com.graphhopper.GraphHopperTest.testFootOnly":324,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":52,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":355,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":66,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":468,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":124,"com.graphhopper.search.NameIndexTest.testCreate":403,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":350,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":303,"com.graphhopper.routing.QueryGraphTest.testOneWay":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":91,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":364,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":79,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":361,"com.graphhopper.reader.OSMReaderTest.testWithBounds":338,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":458,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":230,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":251,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":130,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":434,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":13,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":489,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":465,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":220,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":469,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":213,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":151,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":278,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":184,"com.graphhopper.util.InstructionListTest.testWayList":242,"com.graphhopper.GraphHopperAPITest.testDisconnected179":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":116,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":372,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":111,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":384,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":342,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":144,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":486,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":319,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":157,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":274,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":175,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":289,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":272,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":44,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":472,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":299,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":374,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":74,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":463,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":146,"com.graphhopper.routing.PathTest.testWayList":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":120,"com.graphhopper.coll.OSMIDMapTest.testGet2":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":300,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":446,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":41,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":219,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":168,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":430,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":204,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":28,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":68,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":69,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":453,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":449,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":410,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":370,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":474,"com.graphhopper.util.GHUtilityTest.testSort":238,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":133,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":414,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":369,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":460,"com.graphhopper.search.NameIndexTest.testPut":401,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":61,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":56,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":96,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":484,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":436,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":309,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":192,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":323,"com.graphhopper.storage.MMapDirectoryTest.testSynched":382,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":459,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":298,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":250,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":134,"com.graphhopper.routing.PathTest.testFound":259,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":325,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":439,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":43,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":2,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":210,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":402,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":119,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":160,"com.graphhopper.util.InstructionListTest.testEmptyList":240,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":450,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":286,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":487,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":290,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":409,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":485,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":293,"com.graphhopper.reader.PrinctonReaderTest.testRead":341,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":183,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":64,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":118,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":362,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":108,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":215,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":379,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":466,"com.graphhopper.reader.OSMReaderTest.testFoot":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":132,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":314,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":399,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":85,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":366,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":86,"com.graphhopper.reader.OSMReaderTest.testOneWay":340,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":164,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":179,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":227,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":447,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":126,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":268,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":358,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":275,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":428,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":266,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":347,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":122,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":305,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":149,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":394,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":385,"com.graphhopper.routing.PathBidirRefTest.testExtract2":302,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":483,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":89,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":107,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":475,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":400,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":177,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":98,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":476,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":145,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":431,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":271,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":82,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":180,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":19,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":172,"com.graphhopper.GraphHopperTest.testFootAndCar":320,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":420,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":75,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":201,"com.graphhopper.storage.StorablePropertiesTest.testLoad":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":296,"com.graphhopper.GraphHopperTest.testPrepareOnly":315,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":106,"com.graphhopper.GraphHopperTest.testVia":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":110,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":336,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":4,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":176,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":244,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":432,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":125,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":422,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":42,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":40,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":193}}]
