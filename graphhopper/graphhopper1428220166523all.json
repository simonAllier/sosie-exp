[{"failures":[],"tindex":"48e50e67-db68-11e4-a41c-07c1224b2390","variableMapping":{"ar_y":"maxLat","ab_y":"maxLat","ar_x":"maxLat","ab_x":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"48e50e68-db68-11e4-a41c-cb4d058261fb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"48e50e69-db68-11e4-a41c-b166ffa8882c","variableMapping":{"sacScale":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"48e50e6a-db68-11e4-a41c-e5b6bb7a3e3b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18],"tindex":"48e50e6b-db68-11e4-a41c-2d435cdb15bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setWorldBounds()"},"status":-1},{"failures":[],"tindex":"48e50e6c-db68-11e4-a41c-5b2e170e5238","variableMapping":{"edgeCount":"bufferIndex","lastEdgeIndex":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":0},{"failures":[],"tindex":"48e5357d-db68-11e4-a41c-ab527e94e633","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29],"tindex":"48e5357e-db68-11e4-a41c-cf162587f015","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:125","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[30,31],"tindex":"48e5357f-db68-11e4-a41c-e5574e6e1814","variableMapping":{"baseUrl":"str","fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:254","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"48e53580-db68-11e4-a41c-290c2612fac9","variableMapping":{"length":"length","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:86","type":"CtIfImpl","sourcecode":"if ((int[][].int) > 0) {\n    throw new java.lang.IllegalThreadStateException(\"already created\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"48e53581-db68-11e4-a41c-2916acae022f","variableMapping":{"edgeId":"i","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"i","nodeA":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-1},{"failures":[],"tindex":"48e53582-db68-11e4-a41c-39daf8df6468","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[],"tindex":"48e53583-db68-11e4-a41c-cd165f0794ce","variableMapping":{"deltaX":"x","maxX":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-2},{"failures":[],"tindex":"48e53584-db68-11e4-a41c-f9db814ea6bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"48e53585-db68-11e4-a41c-f58de8322d67","variableMapping":{"encodingManager":"em"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:138","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"Encoding manager was not set.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":0},{"failures":[],"tindex":"48e53586-db68-11e4-a41c-156d41d592a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[19,20,21,22,24,25,26,27,28,29],"tindex":"48e53587-db68-11e4-a41c-f3f76b581600","variableMapping":{"dir":"wayTypeName","tr":"tr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:263","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"slight_right\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[],"tindex":"48e53588-db68-11e4-a41c-f11e541a62a7","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[],"tindex":"48e53589-db68-11e4-a41c-5d8af96a531f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:454","type":"CtLocalVariableImpl","sourcecode":"java.lang.Exception java.lang.Exception"},"status":0},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"48e5aaba-db68-11e4-a41c-1deb30f39963","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"48e5aabb-db68-11e4-a41c-c198a3b54fdb","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.trimToSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-2},{"failures":[],"tindex":"48e5aabc-db68-11e4-a41c-b50b1799c55b","variableMapping":{"high":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","len":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","start":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,50,88,89,90,91,92,93,94,95,96,97,98,99,51,100,101,102,103,52,104,105,106,107,108,109,53,54,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,55,125,126,127,128,129,130,131,132,133,134,135,136,56,137,138,139,140,57,141,142,143,144,145,146,58,59,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,60,164,165,166,167,168,169,170,171,172,173,174,175,61,176,177,178,179,62,180,181,182,183,184,185,63,64,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,65,205,206,207,208,209,210,211,212,213,214,215,216,66,217,218,219,220,67,221,222,223,224,225,226,68,69,227,228,229,230,231,232,233,234,235,236,237,238,239,19,0,20,240,1,241,242,243,244,245,246,247,21,248,2,249,250,251,252,22,23,253,254,255,256,257,258,259,24,260,3,261,262,263,70,4,264,265,25,266,267,268,269,270,271,272,26,273,5,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,27,6,28,305,7,306,307,308,309,310,311,312,29,313,8,314,315,316,317,318,319,320,321,36,322,37,323,324,38,39,325,40,326,327,328,41,329,42,43,330,44,45,46,47,48,49,331,332,333,334,335,31,336,337,338,339,340,341,9,342,343,344,345,346,72],"tindex":"48e5f8dd-db68-11e4-a41c-fff54e69b6a9","variableMapping":{"line":"encoderList"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-1},{"failures":[347,348,321,36,49],"tindex":"48e5f8de-db68-11e4-a41c-5b0503b60f56","variableMapping":{"edgeId":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"48e5f8df-db68-11e4-a41c-6f01bd1041fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"48e5f8e0-db68-11e4-a41c-0fe22979e215","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"48e5f8e1-db68-11e4-a41c-47d13eb2a83b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"48e5f8e2-db68-11e4-a41c-b1e39663ac50","variableMapping":{"visitedCountFrom":"shift","visitedCountTo":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"48e5f8e3-db68-11e4-a41c-49c63e49f9e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[73,74,76,79,86,87,50,95,98,51,100,102,103,107,109,53,54,110,111,113,117,118,349,350,351,352,353,354,355,356,357,358,359,360,361,362,119,363,364,365,366,367,368,369,370,371,372,373,374,120,375,376,377,378,379,380,381,146,157,163,60,171,174,61,176,178,179,183,185,63,64,187,189,193,194,195,198,204,65,212,215,66,217,219,220,224,226,68,69,228,230,234,235,38,40,41,329,330,45,47,382,383,384,385,334,386,387,388,389,335,31,336,337,338,339,340,341,9,342,343,344,345,346,72,390,391,392],"tindex":"48e5f8e4-db68-11e4-a41c-415dffdd4e0b","variableMapping":{"tmpNo":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,50,88,89,90,91,92,93,94,95,96,97,98,99,51,100,101,102,103,52,104,105,106,107,108,109,53,54,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,55,125,126,127,128,129,130,131,132,133,134,135,136,56,137,138,139,140,57,141,142,143,144,145,146,58,59,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,60,164,165,166,167,168,169,170,171,172,173,174,175,61,176,177,178,179,62,180,181,182,183,184,185,63,64,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,65,205,206,207,208,209,210,211,212,213,214,215,216,66,217,218,219,220,67,221,222,223,224,225,226,68,69,227,228,229,230,231,232,233,234,235,263,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,316,393,394,317,318,319,320,321,36,322,37,323,324,38,39,325,40,326,327,328,41,329,42,43,330,44,45,46,47,48,49,331,332,333,382,334,389,335,31,336,337,338,339,340,341,9,342,343,344,345,346,72],"tindex":"48e61ff5-db68-11e4-a41c-ef88959042d1","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,50,88,89,90,91,92,93,94,95,96,97,98,99,51,100,101,102,103,52,104,105,106,107,108,109,53,54,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,55,125,126,127,128,129,130,131,132,133,134,135,136,56,137,138,139,140,57,141,142,143,144,145,146,58,59,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,60,164,165,166,167,168,169,170,171,172,173,174,175,61,176,177,178,179,62,180,181,182,183,184,185,63,64,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,65,205,206,207,208,209,210,211,212,213,214,215,216,66,217,218,219,220,67,221,222,223,224,225,226,68,69,227,228,229,230,231,232,233,234,235,263,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,316,393,394,317,318,319,320,321,36,322,37,323,324,38,39,325,40,326,327,328,41,329,42,43,330,44,45,46,47,48,49,331,332,333,382,334,389,335,31,336,337,338,339,340,341,9,342,343,344,345,346,72],"tindex":"48e61ff6-db68-11e4-a41c-01e1fbbc98b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"48e61ff7-db68-11e4-a41c-43478c543c03","variableMapping":{"size":"len","i":"len"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:151","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":0},{"failures":[],"tindex":"48e64708-db68-11e4-a41c-cb0d8a85ab70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[395,396],"tindex":"48e64709-db68-11e4-a41c-276f8056d611","variableMapping":{"flags":"relBitMask","scDirMask":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"48e6470a-db68-11e4-a41c-8f94ded1c716","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"48e6470b-db68-11e4-a41c-cfa4cd089ead","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"48e6470c-db68-11e4-a41c-7f804f2bb909","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"48e6470d-db68-11e4-a41c-1d0e0ccf2ac8","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.BIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[397,398,399,34,400,35],"tindex":"48e6470e-db68-11e4-a41c-9f9f159c86e3","variableMapping":{"segmentSizeInBytes":"size","indexDivisor":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"48e6470f-db68-11e4-a41c-17aef5ac6122","variableMapping":{"byteCount":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[9],"tindex":"48e64710-db68-11e4-a41c-11c01db7c820","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[251,252,22,23,253,254,255,256,257,258,259,24,260,3,261,262],"tindex":"48e64711-db68-11e4-a41c-812ab1896cf1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-1},{"failures":[78,81,82,86,104,53,113,115,116,401,402,403,404,405,351,352,353,363,364,365,406,146,157,158,162,180,63,189,191,192,407,408,409,410,411,412,413,414,415,416,417,418,419,195,198,199,203,221,68,230,232,233,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,299,300,442,443,46,333,444,445,446,447,448,449,450,451,452,382,453,383,384,385,334,386,387,388,389,335,31,336,337,338,339,340,341,9,342,343,344,345,346,72,454,455,456,457,458,459,460],"tindex":"48e64712-db68-11e4-a41c-677691454d26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-1},{"failures":[],"tindex":"48e64713-db68-11e4-a41c-99a6c7915265","variableMapping":{"elem":"mKeys","size":"index","value":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:300","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        return int;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"48e64714-db68-11e4-a41c-3b0a7aa1d3a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"48e64715-db68-11e4-a41c-57b3d557f4c1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"48e66d26-db68-11e4-a41c-1f3b47aed69a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[249,261,266,314],"tindex":"48e66d27-db68-11e4-a41c-5b94ac134f4a","variableMapping":{"size":"speed","hash":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[21,24,26,29],"tindex":"48e66d28-db68-11e4-a41c-45ac87c7c245","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"48e66d29-db68-11e4-a41c-135678aa0f04","variableMapping":{"java.lang.Double.MAX_VALUE":"durationInHours","existingDirectWeight":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-2},{"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,50,88,89,90,91,92,93,94,95,96,97,98,99,51,100,101,102,103,52,104,105,106,107,108,109,53,54,110,111,112,113,114,115,116,117,118,401,402,403,404,461,405,349,350,462,463,464,351,352,353,354,465,355,466,356,357,358,359,360,361,362,119,467,468,363,364,365,366,469,367,470,368,369,370,371,372,373,374,120,471,472,473,474,475,476,121,477,478,479,480,481,482,122,123,124,55,125,126,127,128,129,130,131,132,133,134,135,136,56,137,138,139,140,57,141,142,143,144,145,146,58,59,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,60,164,165,166,167,168,169,170,171,172,173,174,175,61,176,177,178,179,62,180,181,182,183,184,185,63,64,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,65,205,206,207,208,209,210,211,212,213,214,215,216,66,217,218,219,220,67,221,222,223,224,225,226,68,69,227,228,229,230,231,232,233,234,235,483,484,432,485,486,487,488,433,434,435,436,489,490,491,492,493,494,495,496,236,237,238,239,19,0,20,240,1,241,242,243,244,245,246,247,21,248,2,249,250,251,252,22,23,253,254,255,256,257,258,259,24,260,3,261,262,263,497,498,70,71,499,500,4,264,265,25,266,267,268,269,270,271,272,26,273,5,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,27,6,28,305,7,306,307,308,309,310,311,312,29,313,8,314,315,316,395,393,394,396,501,317,318,502,503,442,443,319,320,347,504,505,398,506,399,507,508,509,34,348,400,510,35,511,321,36,322,37,323,324,38,39,325,40,326,327,328,41,329,42,43,330,44,45,46,47,48,49,512,513,331,332,333,444,514,445,446,447,448,449,450,515,451,452,382,453,383,384,385,334,386,516,387,388,389,335,517,518,31,336,337,338,339,340,341,9,342,519,343,344,345,346,520,72,521,390,391,392,522],"tindex":"48e6943a-db68-11e4-a41c-05c84f4c1211","variableMapping":{"minResolutionInMeter":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":-1},{"failures":[],"tindex":"48e6943b-db68-11e4-a41c-3f462a1cf60c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-2},{"failures":[],"tindex":"48e6943c-db68-11e4-a41c-6b95b2321d1f","variableMapping":{"i":"maxCount","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":0},{"failures":[],"tindex":"48e6943d-db68-11e4-a41c-a1bc3d0389b5","variableMapping":{"distance":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"48e6943e-db68-11e4-a41c-a941c1a7b6da","variableMapping":{"importance":"i","hash":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[497,499],"tindex":"48e6943f-db68-11e4-a41c-fb783f425623","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"48e69440-db68-11e4-a41c-01c3754702e7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"48e69441-db68-11e4-a41c-c9ac436189bf","variableMapping":{"edge":"tmpPrevEdge","updatedB":"tmpPrevEdge","updatedA":"edgeEntryBytes","linkA":"edgeEntryBytes","this":"this","linkB":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.writeEdge(int, int, int, int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[395,396,519],"tindex":"48e69442-db68-11e4-a41c-314ca21e255b","variableMapping":{"tmpDegreeCounter":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[],"tindex":"48e69443-db68-11e4-a41c-cb047379f1eb","variableMapping":{"initLeafSize":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"48e69444-db68-11e4-a41c-09729d6c12ba","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[73,74,75,76,77,78,79,80,81,82,83,84,86,87,50,88,89,90,91,92,93,94,95,96,97,98,99,51,100,101,102,103,52,104,105,106,107,108,109,53,54,110,111,112,113,114,115,116,117,118,523,401,402,403,404,461,405,349,350,462,463,464,351,352,353,354,465,355,466,356,357,358,359,360,361,362,119,467,468,363,364,365,366,469,367,470,368,369,370,371,372,373,374,120,471,472,473,474,475,476,121,477,478,479,480,481,482,122,123,124,55,125,126,127,128,129,130,131,132,133,134,135,136,56,137,138,139,140,57,141,142,143,144,145,146,58,59,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,60,164,165,166,167,168,169,170,171,172,173,174,175,61,176,177,178,179,62,180,181,182,183,184,185,63,64,186,187,188,189,190,191,192,193,194,419,524,525,195,196,197,198,199,200,201,203,204,65,205,206,207,208,209,210,211,212,213,214,215,216,66,217,218,219,220,67,221,222,223,224,225,226,68,69,227,228,229,230,231,232,233,234,235,526,483,484,432,485,487,488,433,434,435,436,489,490,491,492,493,437,438,439,440,441,497,498,70,71,499,500,292,299,300,502,503,442,443,347,504,398,506,399,507,508,509,34,348,400,510,35,511,321,36,322,37,323,324,38,39,325,40,326,327,328,41,329,42,43,330,44,45,46,47,48,49,512,513,333,333,444,444,514,514,445,445,446,446,447,447,448,448,449,449,450,450,515,515,451,451,452,452,382,453,383,384,385,334,386,516,387,388,389,335,517,518,31,336,337,338,339,340,341,9,342,519,343,344,345,346,520,72,527,528,454,455,456,521,390,391,392,457,458,459,460],"tindex":"48e6bb55-db68-11e4-a41c-f9e08f3c0a46","variableMapping":{"dataAccess":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:308","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create((64 * 1024))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[406,408,410,411,412,413,415,416,417,418,195,421,423,424,425,426,428,429,430,431,437,438,439,440,441,382,453,383,384,385,386,387,388,389,31,337,338,339,340,341,9,342,343,344,345,346,72],"tindex":"48e6bb56-db68-11e4-a41c-f3a65e98e994","variableMapping":{"size":"segmentSizePower","i":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:151","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"48e6bb57-db68-11e4-a41c-e3f52b9e4b57","variableMapping":{"todoBytes":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":0},{"failures":[529,32,530,531,508,34,35,40],"tindex":"48e6bb58-db68-11e4-a41c-f73ba758cdde","variableMapping":{"size":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-1},{"failures":[],"tindex":"48e6bb59-db68-11e4-a41c-47d180d031e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[93,96,119,120,121,122,130,133,169,172,210,213,294,36,328,41,49,334,31,336],"tindex":"48e6bb5a-db68-11e4-a41c-eb1e04f56561","variableMapping":{"nodeB":"shift","edgeId":"shift","nodeA":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-1},{"failures":[],"tindex":"48e6bb5b-db68-11e4-a41c-033be0cfde8b","variableMapping":{"val":"maxTurnCosts","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","java.lang.Integer.MAX_VALUE":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:244","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"48e6bb5c-db68-11e4-a41c-4d19f56b682f","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"speed","tmpNode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-2},{"failures":[],"tindex":"48e6bb5d-db68-11e4-a41c-e3b594443941","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:451","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[241,253,267,275,279,290,306,383,384,385,334,389,335,31,336,337,339,340,341,342,343,344,345,72],"tindex":"48e6bb5e-db68-11e4-a41c-47b69766af0a","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[238,20,25,303,28,395,519],"tindex":"48e6bb5f-db68-11e4-a41c-81ea44678207","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:643","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[],"tindex":"48e6bb60-db68-11e4-a41c-79564012ec5a","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"48e6bb61-db68-11e4-a41c-9122d8f993a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[78,81,86,104,53,113,115,351,353,363,365,157,162,180,63,189,191,409,419,195,198,203,221,68,230,232,422,432,433,434,435,436,437,438,439,440,441,442,443,46,444,449,450,452,382,383,386,387,388,335,337,340,341,458,459,460],"tindex":"48e6bb62-db68-11e4-a41c-23fcf8a19441","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28,29],"tindex":"48e6bb63-db68-11e4-a41c-e514bdc7c7e8","variableMapping":{"key":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"48e6e274-db68-11e4-a41c-e5aa13c638d3","variableMapping":{"val":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:109","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[238,19,0,20,21,22,23,24,264,25,26,303,27,6,28,29,395,396,317,31,336,337,338,340,341,342,345,346,72],"tindex":"48e6e275-db68-11e4-a41c-67c1218c8ad1","variableMapping":{"versionHint":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[497,500],"tindex":"48e6e276-db68-11e4-a41c-c7aff7870a56","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-1},{"failures":[278],"tindex":"48e6e277-db68-11e4-a41c-c5c8d2add084","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"48e6e278-db68-11e4-a41c-ab3d2be8209d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"48e6e279-db68-11e4-a41c-133296db1a49","variableMapping":{"speed":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"48e6e27a-db68-11e4-a41c-91db30956ef6","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"i","tmpNode":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[4,264,265,25,266,267,268,269,270,271,272,26,273,5,274],"tindex":"48e6e27b-db68-11e4-a41c-b58a4bc1b0d5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-1},{"failures":[],"tindex":"48e6e27c-db68-11e4-a41c-058b10b69f28","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:141","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"48e6e27d-db68-11e4-a41c-1fd83f3c4b01","variableMapping":{"high":"nextNodeBit","guess":"nextNodeBit","low":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[436,496,263,277,282,283,383,384,385,334,386,388,346],"tindex":"48e6e27e-db68-11e4-a41c-cdf4230c2363","variableMapping":{"lastKey":"encoded","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[347,398,348,511,321,36,322,37,323,38,39,40,326,328,41,329,42,43,330,45,47,48,49,383],"tindex":"48e6e27f-db68-11e4-a41c-6be49ee2feb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"48e6e280-db68-11e4-a41c-1fbd54a6f3f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-2},{"failures":[],"tindex":"48e6e281-db68-11e4-a41c-6fc24759b5a6","variableMapping":{"shift":"shift","preferWayEncoder":"wayTypeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"48e6e282-db68-11e4-a41c-93d7cf8dcc7e","variableMapping":{"highwayValue":"motorcarTag","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":0},{"failures":[],"tindex":"48e6e283-db68-11e4-a41c-137aadbfeda9","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"48e70994-db68-11e4-a41c-3b4786d1e1f5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-2},{"failures":[],"tindex":"48e70995-db68-11e4-a41c-2589c60c4be9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"48e70996-db68-11e4-a41c-33305b8dd1fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[],"tindex":"48e70997-db68-11e4-a41c-6346dbcea9b0","variableMapping":{"p":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:99","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathNative"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-1},{"failures":[],"tindex":"48e70998-db68-11e4-a41c-d5231e35704e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"48e70999-db68-11e4-a41c-1740b20f6a0b","variableMapping":{"nodes":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","adj":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","base":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"48e7099a-db68-11e4-a41c-e1348011943d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":44,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":444,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":78,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":496,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":479,"com.graphhopper.GraphHopperAPITest.testNoLoad":522,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":124,"com.graphhopper.reader.OSMReaderTest.testFerry":31,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":492,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":493,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":0,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":266,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":352,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":453,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":212,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":407,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":528,"com.graphhopper.coll.CompressedArrayTest.testCompress":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":272,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":192,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":141,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":172,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":462,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":408,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":426,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":400,"com.graphhopper.GraphHopperTest.testPrepare":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":330,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":347,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":531,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":326,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":433,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":523,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":26,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":491,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":84,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":463,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":499,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":237,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":322,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":325,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":364,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":20,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":517,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":195,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":86,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":530,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":511,"com.graphhopper.GraphHopperTest.testLoadOSM":386,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":369,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":379,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":365,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":501,"com.graphhopper.reader.OSMReaderTest.testSort":338,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":248,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":70,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":199,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":411,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":187,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":157,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":152,"com.graphhopper.storage.RAMDataAccessTest.testHeader":427,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":449,"com.graphhopper.routing.DijkstraTest.initializationError":331,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":518,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":229,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":406,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":108,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":168,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":505,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":196,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":27,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":262,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":260,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":355,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":329,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":350,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":354,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":516,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":324,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":323,"com.graphhopper.coll.OSMIDMapTest.testGetLong":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":216,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":205,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":101,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":81,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":103,"com.graphhopper.coll.CompressedArrayTest.testCompress2":10,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":252,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":213,"com.graphhopper.GraphHopperAPITest.testLoad":391,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":85,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":378,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":290,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":173,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":60,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":30,"com.graphhopper.storage.LevelGraphStorageTest.testClone":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":204,"com.graphhopper.reader.OSMReaderTest.testBarriers":339,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":500,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":127,"com.graphhopper.util.GHUtilityTest.testCopy":432,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":119,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":258,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":5,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":481,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":430,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":269,"com.graphhopper.routing.PathTest.testFindInstruction":443,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":65,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":529,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":296,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":489,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":304,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":478,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":188,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":227,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":66,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":508,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":311,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":394,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":332,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":128,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":160,"com.graphhopper.util.InstructionListTest.testWayList2":435,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":370,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":193,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":208,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":232,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":238,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":494,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":158,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":299,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":93,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":240,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":214,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":401,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":38,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":163,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":340,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":410,"com.graphhopper.routing.AStarTest.initializationError":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":46,"com.graphhopper.coll.OSMIDMapTest.testGet":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":211,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":297,"com.graphhopper.routing.PathBidirRefTest.testExtract":512,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":242,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":439,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":358,"com.graphhopper.storage.RAMDataAccessTest.testCopy":423,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":413,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":469,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":58,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":264,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":241,"com.graphhopper.storage.RAMDataAccessTest.testSegments":429,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":120,"com.graphhopper.util.GHUtilityTest.testSort2":484,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":42,"com.graphhopper.reader.OSMReaderTest.testMain":337,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":82,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":220,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":243,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":2,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":359,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":107,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":200,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":96,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":51,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":117,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":97,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":446,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":302,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":377,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":102,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":346,"com.graphhopper.storage.StorablePropertiesTest.testStore":419,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":422,"com.graphhopper.storage.GraphHopperStorageTest.testClone":165,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":284,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":282,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":3,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":129,"com.graphhopper.routing.PathTest.testTime":503,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":257,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":115,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":90,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":289,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":461,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":57,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":106,"com.graphhopper.reader.OSMReaderTest.testRelation":519,"com.graphhopper.util.GHUtilityTest.testSortDirected":487,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":313,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":417,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":445,"com.graphhopper.GraphHopperTest.testFootOnly":389,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":265,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":280,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":402,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":525,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":465,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":504,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":137,"com.graphhopper.search.NameIndexTest.testCreate":460,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":428,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":333,"com.graphhopper.routing.QueryGraphTest.testOneWay":515,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":373,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":15,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":268,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":527,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":363,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":12,"com.graphhopper.reader.OSMReaderTest.testWithBounds":345,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":431,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":8,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":231,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":447,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":498,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":142,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":298,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":395,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":87,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":83,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":312,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":274,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":472,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":223,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":217,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":162,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":450,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":36,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":190,"com.graphhopper.util.InstructionListTest.testWayList":434,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":1,"com.graphhopper.GraphHopperAPITest.testDisconnected179":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":130,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":467,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":125,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":309,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":390,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":154,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":247,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":385,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":167,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":510,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":183,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":236,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":328,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":348,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":285,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":254,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":21,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":48,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":161,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":361,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":376,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":250,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":156,"com.graphhopper.routing.PathTest.testWayList":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":153,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":134,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":279,"com.graphhopper.coll.OSMIDMapTest.testGet2":438,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":49,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":414,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":110,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":454,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":246,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":177,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":291,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":209,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":100,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":466,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":356,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":424,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":306,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":22,"com.graphhopper.util.GHUtilityTest.testSort":485,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":245,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":267,"com.graphhopper.search.NameIndexTest.testPut":458,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":464,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":480,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":405,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":473,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":381,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":6,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":448,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":300,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":197,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":388,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":253,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":455,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":495,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":218,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":497,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":146,"com.graphhopper.routing.PathTest.testFound":502,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":317,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":335,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":112,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":75,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":244,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":215,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":397,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":459,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":133,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":170,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":420,"com.graphhopper.util.InstructionListTest.testEmptyList":488,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":259,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":41,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":288,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":276,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":273,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":275,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":43,"com.graphhopper.reader.PrinctonReaderTest.testRead":521,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":189,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":353,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":210,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":132,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":123,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":219,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":307,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":393,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":256,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":303,"com.graphhopper.reader.OSMReaderTest.testFoot":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":144,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":452,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":456,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":17,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":470,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":4,"com.graphhopper.reader.OSMReaderTest.testOneWay":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":368,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":174,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":64,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":228,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":270,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":416,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":181,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":139,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":507,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":35,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":283,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":398,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":415,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":474,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":506,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":292,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":136,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":514,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":159,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":520,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":526,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":380,"com.graphhopper.routing.PathBidirRefTest.testExtract2":513,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":24,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":371,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":457,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":185,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":475,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":261,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":155,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":293,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":476,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":310,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":366,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":186,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":486,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":92,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":286,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":180,"com.graphhopper.GraphHopperTest.testFootAndCar":334,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":98,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":23,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":362,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":126,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":316,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":287,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":509,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":206,"com.graphhopper.storage.StorablePropertiesTest.testLoad":524,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":45,"com.graphhopper.GraphHopperTest.testPrepareOnly":382,"com.graphhopper.GraphHopperTest.testVia":383,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":482,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":55,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":343,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":77,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":184,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":436,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":294,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":138,"com.graphhopper.routing.AStarBidirectionTest.initializationError":320,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":263,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":111,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":54,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":198}}]
