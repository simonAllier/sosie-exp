[{"failures":[0,1,2,3,4],"tindex":"bdd39ae1-db9c-11e4-a5c3-3fe5e6b9fef4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"bdd45e32-db9c-11e4-a5c3-41d808ff3475","variableMapping":{"fromDist":"minLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:112","type":"CtIfImpl","sourcecode":"if (double < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35],"tindex":"bdd45e33-db9c-11e4-a5c3-b17e8bde5f7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[5,6,7,8,10,11,12,13],"tindex":"bdd45e34-db9c-11e4-a5c3-5f2a34f26fcf","variableMapping":{"bitsForEdgeFlags":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"bdd45e35-db9c-11e4-a5c3-19194f020b0b","variableMapping":{"tmpDegreeCounter":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"bdd48546-db9c-11e4-a5c3-3b082c953392","variableMapping":{"type":"defaultType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":0},{"failures":[],"tindex":"bdd48547-db9c-11e4-a5c3-099f62f12ca5","variableMapping":{"from":"start","end":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":0},{"failures":[36,37,38,39,40,41,42],"tindex":"bdd48548-db9c-11e4-a5c3-d7468edc438c","variableMapping":{"ret":"shift","retBucket":"shift","i":"shift","bucketSize":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"bdd48549-db9c-11e4-a5c3-41aef2357edb","variableMapping":{"forwardBit":"directionBitMask","way":"way","encoded":"encoded","backwardBit":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:589","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":0},{"failures":[],"tindex":"bdd4854a-db9c-11e4-a5c3-df1ac3d1ece2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"bdd4854b-db9c-11e4-a5c3-c5adaeeea0c9","variableMapping":{"costs":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:612","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":0},{"failures":[],"tindex":"bdd4854c-db9c-11e4-a5c3-1b984187a34a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[43,44,31,45,46,47],"tindex":"bdd4854d-db9c-11e4-a5c3-19944fe207e4","variableMapping":{"name":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"bdd4854e-db9c-11e4-a5c3-077a2a684704","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[],"tindex":"bdd4854f-db9c-11e4-a5c3-7392920bd35d","variableMapping":{"a":"elem","high":"size","key":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:390","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"bdd48550-db9c-11e4-a5c3-574afa255042","variableMapping":{"edgePointer":"nodeBitMask","edgeEntryBytes":"shift","nextEdge":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:797","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"bdd48551-db9c-11e4-a5c3-0d8872738757","variableMapping":{"size":"value","hash":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[25,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,27,28,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,30,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,41,153,154,155,156,157,158,159,160,42,161,162,163,164,165,166,167,168,169,170,171,172],"tindex":"bdd4ac62-db9c-11e4-a5c3-a7e7efa3fbf8","variableMapping":{"elevation":"backward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:96","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"bdd4ac63-db9c-11e4-a5c3-fd3159383b07","variableMapping":{"min":"code","tmpSize":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":0},{"failures":[173,174,175,176,177,178,179,180,181,4,182,183,184],"tindex":"bdd4ac64-db9c-11e4-a5c3-af862f09ae48","variableMapping":{"currentEntry":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[185,186,187,188,189,190,191],"tindex":"bdd4ac65-db9c-11e4-a5c3-13a181a28a7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:286","type":"CtIfImpl","sourcecode":"if (int < int)\n    return com.graphhopper.routing.util.EncodedValue.setValue(0, int);\n"},"status":-1},{"failures":[43,44],"tindex":"bdd4ac66-db9c-11e4-a5c3-b5ca190fdece","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"sidewalks","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"bdd4ac67-db9c-11e4-a5c3-97c5969185b7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"bdd4ac68-db9c-11e4-a5c3-b798b067ffc5","variableMapping":{"weightApproximation":"bwSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[192],"tindex":"bdd4ac69-db9c-11e4-a5c3-5d4201b01cc8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[39],"tindex":"bdd4ac6a-db9c-11e4-a5c3-4379fbdf52c4","variableMapping":{"oldValueIndex":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"bdd4ac6b-db9c-11e4-a5c3-2b3eb24539eb","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":0},{"failures":[193,186,194,195,189,196,197,198,199,190,200],"tindex":"bdd4ac6c-db9c-11e4-a5c3-dd08b8077ce8","variableMapping":{"flags":"unpavedBit","mask":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[],"tindex":"bdd4ac6d-db9c-11e4-a5c3-b3981b9f679a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"bdd4ac6e-db9c-11e4-a5c3-3fa06121fc3f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[5,201,202,203,204,205,7,8,206,207,208,209,210,65,211,212,213,214,215,9,216,0,217,10,218,219,220,221,222,12,13,223,224,225,226,227,68,120,121,160,228,162,165,229,230,231,45,32,34,46,232,233,234],"tindex":"bdd4d37f-db9c-11e4-a5c3-8ff213328ab7","variableMapping":{"size":"x1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[235,236,197,198,237,238,239,240,241,242,243,199,244,245,246,247],"tindex":"bdd4d380-db9c-11e4-a5c3-9716b5f50021","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"bdd4d381-db9c-11e4-a5c3-5baf0d71020c","variableMapping":{"mask":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"bdd4d382-db9c-11e4-a5c3-e1e4b10fda18","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[],"tindex":"bdd4d383-db9c-11e4-a5c3-d3fe8d17e62d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"bdd4d384-db9c-11e4-a5c3-e72b98e5a1cb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"bdd4d385-db9c-11e4-a5c3-d3964df43bc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"bdd4d386-db9c-11e4-a5c3-efca0a9ac1c5","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"bdd4d387-db9c-11e4-a5c3-8b31c26d9c3d","variableMapping":{"len":"y2","i":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[152,41,248,167,168,170],"tindex":"bdd4d388-db9c-11e4-a5c3-8da40c6c02d8","variableMapping":{"numTiles":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[144,146,147,148,149,150,151,249,250,251,252,253],"tindex":"bdd4d389-db9c-11e4-a5c3-53ce32370011","variableMapping":{"id":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[254,25,255,256,257,258,259,48,49,50,51,52,260,53,261,54,173,262,263,55,264,174,56,265,57,58,175,266,267,268,59,269,60,270,271,61,272,62,273,274,275,63,64,276,65,66,67,217,68,27,277,278,28,279,280,281,282,283,69,70,71,72,73,284,74,285,75,176,286,287,76,288,177,77,289,78,79,178,290,291,292,80,293,81,294,295,82,296,83,297,298,299,84,85,300,301,86,87,88,89,90,302,91,303,92,179,304,305,93,306,180,94,307,95,96,181,308,309,310,97,311,98,312,313,99,314,100,315,316,317,101,102,318,319,2,36,3,320,29,4,321,30,322,323,324,325,326,103,104,105,106,107,327,108,328,109,182,329,330,110,331,183,111,332,112,113,184,333,334,335,114,336,115,337,338,116,339,117,340,341,342,118,119,343,120,121,344,122,123,126,345,129,130,131,346,133,134,135,136,137,138,139,140,347,348,349,43,350,351,352,44,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,37,38,370,371,185,372,193,373,186,374,375,376,377,378,379,380,381,382,194,383,384,385,386,387,388,192,187,389,390,391,39,392,393,188,394,195,395,189,396,397,398,399,400,401,402,403,404,196,405,406,407,408,235,236,197,198,237,238,239,240,241,242,243,199,244,245,246,247,409,410,411,190,412,413,414,415,416,417,418,200,419,420,421,422,40,423,424,141,425,426,143,427,144,145,146,147,148,428,149,429,150,430,151,152,41,248,153,154,155,156,157,158,159,160,42,161,431,228,162,163,164,165,432,166,167,168,169,170,31,433,229,230,231,45,32,33,34,46,35,434,47,232,233,234,435,436,437,438,191,439,440,441,442,443,444,171,172],"tindex":"bdd4fa9a-db9c-11e4-a5c3-2d256b4c80db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:211","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder)"},"status":-1},{"failures":[25,48,49,261,54,56,59,273,64,65,66,67,68,27,28,69,70,285,75,77,80,297,85,86,87,303,92,94,97,315,102,30,103,104,328,109,111,114,340,119,120,344,122,135,137,139,140,141,144,145,149,150,152,248,161,431,228,162,170,229,45,47,234,437,439,444,171,172],"tindex":"bdd4fa9b-db9c-11e4-a5c3-f3cac48b9a41","variableMapping":{"flags2":"flags","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags","flags1":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-1},{"failures":[],"tindex":"bdd4fa9c-db9c-11e4-a5c3-87f85e2e2380","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"bdd4fa9d-db9c-11e4-a5c3-61815dad0530","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"bdd4fa9e-db9c-11e4-a5c3-57d07c936d96","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"bdd4fa9f-db9c-11e4-a5c3-8d59bef3a98f","variableMapping":{"obtained":"synched"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[445],"tindex":"bdd4faa0-db9c-11e4-a5c3-8daeb0ed71f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[2],"tindex":"bdd4faa1-db9c-11e4-a5c3-e32b9792a0f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[135,140],"tindex":"bdd4faa2-db9c-11e4-a5c3-d5477f60ef9c","variableMapping":{"foundIndex":"minOnewayNetworkSize","this":"component","value":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1017","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.insert(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":-1},{"failures":[],"tindex":"bdd521b3-db9c-11e4-a5c3-5995c5d303ce","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"bdd521b4-db9c-11e4-a5c3-39f42f784d8d","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"speed","nextEdge":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"bdd521b5-db9c-11e4-a5c3-19b014a9167f","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[446,447,448,449,254,25,255,256,257,258,259,48,49,50,51,52,260,53,261,54,173,262,263,55,264,174,56,265,57,58,175,266,267,268,59,269,60,270,271,61,272,62,273,274,275,63,64,276,5,450,201,202,203,204,6,205,7,8,206,207,208,209,451,210,65,452,453,454,455,456,66,457,458,459,460,461,462,463,464,465,466,467,468,67,0,217,1,10,469,218,219,220,221,11,222,12,13,223,224,225,226,470,227,68,471,472,26,27,278,28,279,280,281,282,283,69,70,71,72,73,284,74,285,75,176,286,287,76,288,177,77,289,78,79,178,290,291,292,80,293,81,294,295,82,296,83,297,298,299,84,85,300,304,98,319,2,36,3,320,29,4,321,30,322,323,324,325,326,103,104,105,106,107,327,108,328,109,182,329,330,110,331,183,111,332,112,113,184,333,334,335,114,336,115,337,338,116,339,117,340,341,342,118,119,343,473,474,475,476,120,121,344,122,123,124,125,126,127,128,345,129,130,131,346,477,132,133,134,135,136,137,138,139,140,349,37,38,422,40,423,424,478,478,479,479,480,480,481,481,141,141,482,482,483,483,425,425,484,484,142,142,485,485,486,486,426,143,144,145,146,147,148,428,149,429,150,430,151,152,41,248,153,154,155,156,157,158,159,160,42,161,431,228,162,163,164,165,432,166,167,168,169,170,487,488,489,490,491,31,433,229,230,231,45,32,492,33,34,46,35,493,434,47,232,233,234,435,436,437,438,191,439,440,441,442,443,444,494,495,496,497,171,172],"tindex":"bdd521b6-db9c-11e4-a5c3-9b9b9f6f5461","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[254,25,255,256,257,258,259,48,49,50,51,52,260,53,261,54,173,262,263,55,264,174,56,265,57,58,175,266,267,268,59,269,60,270,271,61,272,62,273,274,275,63,64,276,5,450,201,202,203,204,6,205,7,8,206,207,208,209,451,210,65,452,453,454,455,498,456,66,458,459,460,461,462,463,464,465,466,467,499,468,67,0,217,1,10,469,218,219,220,221,11,222,12,13,223,224,225,226,470,227,68,27,277,278,28,279,280,281,282,283,69,70,71,72,73,284,74,285,75,176,286,287,76,288,177,77,289,78,79,178,290,291,292,80,293,81,294,295,82,296,83,297,298,299,84,85,300,301,86,87,88,89,90,302,91,303,92,179,304,305,93,306,180,94,307,95,96,181,308,309,310,97,311,98,312,313,99,314,100,315,316,317,101,102,318,319,2,36,3,320,29,4,321,30,322,323,324,325,326,103,104,105,106,107,327,108,328,109,182,329,330,110,331,183,111,332,112,113,184,333,334,335,114,336,115,337,338,116,339,117,340,341,342,118,119,343,120,121,500,344,122,123,124,125,126,127,501,128,345,129,130,131,346,477,132,133,134,502,135,136,137,138,139,140,347,348,349,43,350,351,352,44,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,37,38,370,371,185,372,193,373,186,374,375,376,377,378,379,380,381,382,194,383,384,385,386,387,388,192,391,39,392,393,188,394,195,395,189,396,397,398,399,400,401,402,403,404,196,405,406,407,408,235,236,197,198,237,238,239,240,241,242,243,199,244,245,246,247,409,410,411,190,412,413,414,415,416,417,418,200,419,420,421,503,422,40,423,424,504,478,479,480,481,141,482,483,425,484,142,485,486,426,143,427,144,145,146,147,148,428,149,429,150,430,151,152,41,248,153,154,155,156,157,158,159,160,42,161,431,228,162,163,164,165,432,166,167,168,169,170,505,506,31,433,229,230,231,45,32,492,33,34,46,35,493,434,47,232,233,234,435,436,437,438,191,439,440,441,442,444,171,172],"tindex":"bdd548c7-db9c-11e4-a5c3-d5f9ae78bafe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[],"tindex":"bdd548c8-db9c-11e4-a5c3-719e26c899f7","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[390],"tindex":"bdd548c9-db9c-11e4-a5c3-412c120eab3c","variableMapping":{"edgePointer":"relBitMask","edgeEntryBytes":"shift","nextEdge":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:797","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[39],"tindex":"bdd548ca-db9c-11e4-a5c3-3d610b5647d1","variableMapping":{"high":"encoded","guess":"encoded","low":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"bdd548cb-db9c-11e4-a5c3-3fe9bac98896","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"bdd548cc-db9c-11e4-a5c3-232aa3b3b530","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":0},{"failures":[254,25,255,256,257,258,259,48,49,50,51,52,260,53,261,54,173,262,263,55,264,174,56,265,57,58,175,266,267,268,59,269,60,270,271,61,272,62,273,274,275,63,64,276,5,450,201,202,203,204,6,205,7,8,206,207,208,209,451,210,65,452,453,454,455,498,456,66,458,459,460,461,462,463,464,465,466,467,499,468,67,0,217,1,10,469,218,219,220,221,11,222,12,13,223,224,225,226,470,227,68,27,277,278,28,279,280,281,282,283,69,70,71,72,73,284,74,285,75,176,286,287,76,288,177,77,289,78,79,178,290,291,292,80,293,81,294,295,82,296,83,297,298,299,84,85,300,301,86,87,88,89,90,302,91,303,92,179,304,305,93,306,180,94,307,95,96,181,308,309,310,97,311,98,312,313,99,314,100,315,316,317,101,102,318,319,2,36,3,320,29,4,321,30,322,323,324,325,326,103,104,105,106,107,327,108,328,109,182,329,330,110,331,183,111,332,112,113,184,333,334,335,114,336,115,337,338,116,339,117,340,341,342,118,119,343,120,121,500,344,122,123,124,125,126,127,501,128,345,129,130,131,346,477,132,133,134,502,135,136,137,138,139,140,347,348,349,43,350,351,352,44,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,37,38,370,371,185,372,193,373,186,374,375,376,377,378,379,380,381,382,194,383,384,385,386,387,388,192,391,39,392,393,188,394,195,395,189,396,397,398,399,400,401,402,403,404,196,405,406,407,408,235,236,197,198,237,238,239,240,241,242,243,199,244,245,246,247,409,410,411,190,412,413,414,415,416,417,418,200,419,420,421,503,422,40,423,424,504,478,479,480,481,141,482,483,425,484,142,485,486,426,143,427,144,145,146,147,148,428,149,429,150,430,151,152,41,248,153,154,155,156,157,158,159,160,42,161,431,228,162,163,164,165,432,166,167,168,169,170,505,506,31,433,229,230,231,45,32,492,33,34,46,35,493,434,47,232,233,234,435,436,437,438,191,439,440,441,442,444,171,172],"tindex":"bdd548cd-db9c-11e4-a5c3-390a7b144ff8","variableMapping":{"str":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:274","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"bdd548ce-db9c-11e4-a5c3-73cb63f63275","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[354],"tindex":"bdd548cf-db9c-11e4-a5c3-e396db1e858d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"bdd56ee0-db9c-11e4-a5c3-8b67475c0396","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":0},{"failures":[],"tindex":"bdd56ee1-db9c-11e4-a5c3-cf134e7fb102","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-2},{"failures":[],"tindex":"bdd56ee2-db9c-11e4-a5c3-d9c4645b4fa3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:242","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Call loadExisting only once\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"bdd56ee3-db9c-11e4-a5c3-83fe73686fa7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[137,138],"tindex":"bdd56ee4-db9c-11e4-a5c3-a92a45b138a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[],"tindex":"bdd56ee5-db9c-11e4-a5c3-05deb94ca962","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[49,173,263,55,270,271,70,176,287,76,294,295,87,179,305,93,312,313,4,104,182,330,110,337,338,138],"tindex":"bdd56ee6-db9c-11e4-a5c3-b5cc254901ec","variableMapping":{"size":"i","hash":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"bdd56ee7-db9c-11e4-a5c3-2b297f7eaa9c","variableMapping":{"size":"skippedEdge2","from":"from","end":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[187,390,191],"tindex":"bdd56ee8-db9c-11e4-a5c3-d3c89e0e4006","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[],"tindex":"bdd56ee9-db9c-11e4-a5c3-7dbfd403e236","variableMapping":{"graphHopperFolder":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":0},{"failures":[],"tindex":"bdd56eea-db9c-11e4-a5c3-2d8c998df818","variableMapping":{"silent":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:78","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"bdd56eeb-db9c-11e4-a5c3-6fe91efed709","variableMapping":{"segmentSizeInBytes":"endNode","indexDivisor":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[],"tindex":"bdd56eec-db9c-11e4-a5c3-5708afc23d03","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[346,356,361,362,369,507,442],"tindex":"bdd56eed-db9c-11e4-a5c3-9fca2b33e2f1","variableMapping":{"speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"bdd56eee-db9c-11e4-a5c3-256a1c13029f","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"usedBits","edge":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24],"tindex":"bdd56eef-db9c-11e4-a5c3-7b54fa84dc4b","variableMapping":{"speedVal":"maxLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[185,186,187,390,188,189,191],"tindex":"bdd56ef0-db9c-11e4-a5c3-b5dffe54025e","variableMapping":{"size":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[31,45,46,47],"tindex":"bdd56ef1-db9c-11e4-a5c3-7742a0cd06a4","variableMapping":{"size":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"bdd56ef2-db9c-11e4-a5c3-1f33b87a4876","variableMapping":{"width":"start","lonSimilar":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23],"tindex":"bdd59603-db9c-11e4-a5c3-87f7c6a94d86","variableMapping":{"orientation":"minLatTmp","resultOrientation":"maxLatTmp","baseOrientation":"maxLatTmp","java.lang.Math.PI":"minLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"bdd59604-db9c-11e4-a5c3-2b2d6ce24849","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"bdd59605-db9c-11e4-a5c3-5b43cc6aa454","variableMapping":{"nanoTime":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"bdd59606-db9c-11e4-a5c3-25bf292aec09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[],"tindex":"bdd59607-db9c-11e4-a5c3-fd1ebb243497","variableMapping":{"oldValueIndex":"value","lastKey":"value","key":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[445],"tindex":"bdd59608-db9c-11e4-a5c3-6d82071f0d26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"bdd59609-db9c-11e4-a5c3-fd48c83dfd6f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"bdd5960a-db9c-11e4-a5c3-893b9edbb590","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"bdd5960b-db9c-11e4-a5c3-d951b77df010","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"bdd5960c-db9c-11e4-a5c3-5d595d8c7fc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 5))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 5), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"bdd5960d-db9c-11e4-a5c3-4335f1266508","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-2},{"failures":[446,447,448,449,254,25,255,256,257,258,259,48,49,50,51,52,260,53,261,54,173,262,263,55,264,174,56,265,57,58,175,266,267,268,59,269,60,270,271,61,272,62,273,274,275,63,64,276,5,450,201,202,203,204,6,205,7,8,206,207,208,209,451,210,65,452,453,454,455,498,456,66,457,458,459,460,461,462,463,464,465,466,467,499,468,67,0,217,1,10,469,218,219,220,221,11,222,12,13,223,224,225,226,470,227,68,471,472,26,27,277,278,28,279,280,281,282,283,69,70,71,72,73,284,74,285,75,176,286,287,76,288,177,77,289,78,79,178,290,291,292,80,293,81,294,295,82,296,83,297,298,299,84,85,300,301,86,87,88,89,90,302,91,303,92,179,304,305,93,306,180,94,307,95,96,181,308,309,310,97,311,98,312,313,99,314,100,315,316,317,101,102,318,319,2,36,3,320,29,4,321,30,322,323,324,325,326,103,104,105,106,107,327,108,328,109,182,329,330,110,331,183,111,332,112,113,184,333,334,335,114,336,115,337,338,116,339,117,340,341,342,118,119,343,473,474,508,475,476,509,510,511,120,121,344,122,123,124,125,126,127,128,345,129,130,131,346,477,132,133,134,135,136,137,138,139,140,349,37,38,422,40,423,424,478,478,479,479,480,480,481,481,141,141,482,482,483,483,425,425,484,484,142,142,485,485,486,486,426,143,144,145,146,147,148,428,149,429,150,430,151,152,41,248,153,154,155,156,157,158,159,160,42,161,431,228,162,163,164,165,432,166,167,168,169,170,487,488,489,490,491,31,433,229,230,231,45,32,492,33,34,46,35,493,434,47,232,233,234,435,436,437,438,191,439,440,441,442,443,444,494,495,496,497,512,513,171,172],"tindex":"bdd5bd1e-db9c-11e4-a5c3-3580c0ad229b","variableMapping":{"names":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:152","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[],"tindex":"bdd5bd1f-db9c-11e4-a5c3-03e524f8bf7e","variableMapping":{"workerThreads":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":0},{"failures":[],"tindex":"bdd5bd20-db9c-11e4-a5c3-b31f42b25b03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"bdd5bd21-db9c-11e4-a5c3-e51bf4e6cb8c","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"bdd5bd22-db9c-11e4-a5c3-4f2110f633b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[249,252,253],"tindex":"bdd5bd23-db9c-11e4-a5c3-9f0c846e2234","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"bdd5bd24-db9c-11e4-a5c3-4193ff053041","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":432,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":479,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":29,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":507,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":454,"com.graphhopper.GraphHopperAPITest.testNoLoad":500,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":86,"com.graphhopper.reader.OSMReaderTest.testFerry":434,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":122,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":395,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":412,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":219,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":433,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":194,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":176,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":513,"com.graphhopper.coll.CompressedArrayTest.testCompress":15,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":418,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":63,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":308,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":262,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":150,"com.graphhopper.GraphHopperTest.testPrepare":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":316,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":426,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":394,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":42,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":129,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":457,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":200,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":132,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":324,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":139,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":190,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":393,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":159,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":202,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":189,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":493,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":27,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":22,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":326,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":252,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":152,"com.graphhopper.GraphHopperTest.testLoadOSM":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":203,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":391,"com.graphhopper.reader.OSMReaderTest.testSort":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":405,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":137,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":279,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":272,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":25,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":317,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":425,"com.graphhopper.routing.DijkstraTest.initializationError":503,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":494,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":83,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":211,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":336,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":53,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":277,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":73,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":193,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":283,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":247,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":244,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":222,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":162,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":217,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":221,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":492,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":156,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":155,"com.graphhopper.coll.OSMIDMapTest.testGetLong":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":288,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":485,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":178,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":332,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":30,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":113,"com.graphhopper.coll.CompressedArrayTest.testCompress2":14,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":175,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":236,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":286,"com.graphhopper.GraphHopperAPITest.testLoad":120,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":325,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":347,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":263,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":49,"com.graphhopper.storage.LevelGraphStorageTest.testClone":106,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":69,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":140,"com.graphhopper.reader.OSMReaderTest.testBarriers":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":90,"com.graphhopper.util.GHUtilityTest.testCopy":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":158,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":68,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":242,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":212,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":420,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":498,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":415,"com.graphhopper.routing.PathTest.testFindInstruction":424,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":70,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":249,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":344,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":352,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":341,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":372,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":453,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":62,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":82,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":177,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":381,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":504,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":327,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":302,"com.graphhopper.util.InstructionListTest.testWayList2":131,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":207,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":64,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":284,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":195,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":299,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":37,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":255,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":328,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":180,"com.graphhopper.storage.RAMDirectoryTest.testSynched":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":287,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":458,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":157,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":435,"com.graphhopper.routing.AStarTest.initializationError":506,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":167,"com.graphhopper.coll.OSMIDMapTest.testGet":487,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":75,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":44,"com.graphhopper.routing.PathBidirRefTest.testExtract":133,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":399,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":489,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":312,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":410,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":398,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":65,"com.graphhopper.util.GHUtilityTest.testSort2":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":163,"com.graphhopper.reader.OSMReaderTest.testMain":232,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":322,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":79,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":400,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":23,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":225,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":406,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":114,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":280,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":329,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":183,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":119,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":141,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":330,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":371,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":112,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":442,"com.graphhopper.storage.StorablePropertiesTest.testStore":471,"com.graphhopper.storage.GraphHopperStorageTest.testClone":51,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":314,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":363,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":474,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":361,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":319,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":245,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":91,"com.graphhopper.routing.PathTest.testTime":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":241,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":342,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":107,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":368,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":462,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":181,"com.graphhopper.reader.OSMReaderTest.testRelation":191,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":335,"com.graphhopper.util.GHUtilityTest.testSortDirected":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":383,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":509,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":481,"com.graphhopper.GraphHopperTest.testFootOnly":46,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":216,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":411,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":359,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":459,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":475,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":11,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":390,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":154,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":94,"com.graphhopper.search.NameIndexTest.testCreate":449,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":478,"com.graphhopper.routing.QueryGraphTest.testOneWay":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":451,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":414,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":512,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":201,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":16,"com.graphhopper.reader.OSMReaderTest.testWithBounds":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":298,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":482,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":309,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":353,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":187,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":103,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":323,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":382,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":421,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":465,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":292,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":67,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":77,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":259,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":484,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":248,"com.graphhopper.util.InstructionListTest.testWayList":130,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":274,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":397,"com.graphhopper.GraphHopperAPITest.testDisconnected179":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":303,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":88,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":510,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":379,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":172,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":404,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":231,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":260,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":430,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":392,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":431,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":505,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":429,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":340,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":364,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":238,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":196,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":169,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":470,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":408,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":254,"com.graphhopper.routing.PathTest.testWayList":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":101,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":305,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":358,"com.graphhopper.coll.OSMIDMapTest.testGet2":488,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":170,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":116,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":495,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":291,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":403,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":265,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":348,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":74,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":12,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":111,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":13,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":223,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":376,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":251,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":197,"com.graphhopper.util.GHUtilityTest.testSort":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":311,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":402,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":413,"com.graphhopper.search.NameIndexTest.testPut":447,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":282,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":455,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":469,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":463,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":373,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":483,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":38,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":464,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":278,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":237,"com.graphhopper.storage.MMapDirectoryTest.testSynched":476,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":388,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":496,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":289,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":135,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":98,"com.graphhopper.routing.PathTest.testFound":422,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":35,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":39,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":117,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":401,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":76,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":250,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":448,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":304,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":54,"com.graphhopper.util.InstructionListTest.testEmptyList":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":160,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":228,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":367,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":355,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":354,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":419,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":164,"com.graphhopper.reader.PrinctonReaderTest.testRead":171,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":273,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":220,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":285,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":179,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":491,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":301,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":377,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":417,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":389,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":508,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":240,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":185,"com.graphhopper.reader.OSMReaderTest.testFoot":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":97,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":486,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":497,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":7,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":21,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":118,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":409,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":8,"com.graphhopper.reader.OSMReaderTest.testOneWay":444,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":55,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":271,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":296,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":416,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":267,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":95,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":147,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":151,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":362,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":145,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":214,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":467,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":349,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":306,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":480,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":256,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":443,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":511,"com.graphhopper.routing.PathBidirRefTest.testExtract2":134,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":461,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":41,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":208,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":446,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":60,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":499,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":246,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":215,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":437,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":318,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":468,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":380,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":204,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":61,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":501,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":365,"com.graphhopper.GraphHopperTest.testFootAndCar":45,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":266,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":110,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":198,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":89,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":192,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":366,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":428,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":72,"com.graphhopper.storage.StorablePropertiesTest.testLoad":472,"com.graphhopper.GraphHopperTest.testPrepareOnly":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":166,"com.graphhopper.GraphHopperTest.testVia":229,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":456,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":87,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":439,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":320,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":269,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":346,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":350,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":438,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":307,"com.graphhopper.routing.AStarBidirectionTest.initializationError":502,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":369,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":339,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":338,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":28}}]
