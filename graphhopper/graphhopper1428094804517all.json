[{"failures":[],"tindex":"69d6bfa4-da44-11e4-a8b9-77db02264e3e","variableMapping":{"err":"minNetworkSize","dLat":"minNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"69d930a5-da44-11e4-a8b9-2d84397a3523","variableMapping":{"acceptBit":"ferryBit","way":"way","sidewalks":"ferries"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"69d930a6-da44-11e4-a8b9-a74553caaac2","variableMapping":{"nodeFlags":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"69d930a7-da44-11e4-a8b9-6b2c375ff165","variableMapping":{"name":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[5],"tindex":"69d930a8-da44-11e4-a8b9-0f09b1ec8f07","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[0,6,2,7,8,9,10,11,5,12,13,14,15,16,17],"tindex":"69d930a9-da44-11e4-a8b9-0920f7a5bf59","variableMapping":{"this":"em"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:320","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.(getVehicleCount()) > 1)\n    throw new java.lang.IllegalStateException((\"Multiple encoders are active. cannot return one:\" + com.graphhopper.routing.util.EncodingManager.(toString())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-1},{"failures":[],"tindex":"69d930aa-da44-11e4-a8b9-47302e0d49f4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"69d930ab-da44-11e4-a8b9-39baaf61c186","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":0},{"failures":[18],"tindex":"69d930ac-da44-11e4-a8b9-c3d5394bb336","variableMapping":{"tt":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"69d930ad-da44-11e4-a8b9-f96ec632e91d","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"69d930ae-da44-11e4-a8b9-a7272db31432","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:354","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHTBitSet(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[19,2,7,8,10,11,5,12,15,20,16,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"69d957bf-da44-11e4-a8b9-b13f94a6024e","variableMapping":{"lastInBoundsPillarNode":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:660","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"69d957c0-da44-11e4-a8b9-6775166188bb","variableMapping":{"speedVal":"x"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-1},{"failures":[63,64,65,66],"tindex":"69d957c1-da44-11e4-a8b9-a7d0de69b42d","variableMapping":{"reverseOrder":"restricted"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:126","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Switching order multiple times is not supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[],"tindex":"69d957c2-da44-11e4-a8b9-4f391d9de808","variableMapping":{"time":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"69d957c3-da44-11e4-a8b9-fdf1e8df89df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"69d957c4-da44-11e4-a8b9-81897c142d3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:37","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalcEarth.calcDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"69d957c5-da44-11e4-a8b9-eb7092c9066b","variableMapping":{"precision":"angle","lat":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[67,68,48,49,50,69,51,1,19,7,8,9,10,11,5,12,13,14,15,20,16,70,71,72,73,74,53,75,54,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,61,125,126,127,128,129,130,131,132,133],"tindex":"69d957c6-da44-11e4-a8b9-0d4d0f33ebe8","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"69d957c7-da44-11e4-a8b9-b73b0b3ed9db","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[67,0,1,2,3,18,4],"tindex":"69d957c8-da44-11e4-a8b9-09af787141c4","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[67,6],"tindex":"69d957c9-da44-11e4-a8b9-839a11cfb081","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[],"tindex":"69d957ca-da44-11e4-a8b9-2f1ebde39a5f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"69d97ddb-da44-11e4-a8b9-25b57b965096","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[134,135],"tindex":"69d97ddc-da44-11e4-a8b9-032e637ae329","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"69d97ddd-da44-11e4-a8b9-c3027ceaa27c","variableMapping":{"allSegments":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":0},{"failures":[],"tindex":"69d97dde-da44-11e4-a8b9-630134c1747f","variableMapping":{"newUniqueOsmId":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"69d97ddf-da44-11e4-a8b9-074d0ac8cfb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"69d97de0-da44-11e4-a8b9-5d6526c0378a","variableMapping":{"lastKey":"includeWay","key":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"69d97de1-da44-11e4-a8b9-4567a20b5b8f","variableMapping":{"dx":"minLat","dy":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"69d97de2-da44-11e4-a8b9-d71aad271b31","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[2,11,21,22,24,30,32,33,35,36,39,40,42,43,47],"tindex":"69d97de3-da44-11e4-a8b9-1f7fcc0ec334","variableMapping":{"foundIndex":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-1},{"failures":[],"tindex":"69d97de4-da44-11e4-a8b9-fbd3e8f84f3b","variableMapping":{"incEleSum":"maxLon","incDist2DSum":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[67,136,68,48,49,0,50,69,51,1,6,137,138,19,2,7,8,9,10,11,5,12,13,14,15,20,139,16,140,141,142,143,144,145,74,146,147,53,75,54,55,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,84,85,86,87,88,195,196,89,90,91,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,92,93,94,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,103,228,104,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,106,251,252,253,254,107,255,108,256,257,258,109,259,110,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,112,282,283,284,285,113,286,114,287,288,115,289,290,116,291,117,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,119,314,315,316,317,120,318,121,319,320,60,321,322,323,324,3,325,18,4,326,327,328,17,329,330,331,332,333,334,335,134,336,337,338,339,135,340,341,342,343,21,22,23,344,345,24,346,347,26,348,349,350,27,28,351,352,30,353,354,31,32,355,33,34,35,356,357,358,36,359,360,38,123,124,39,361,40,41,42,362,363,364,43,365,366,45,367,368,369,46,47,370,371,372,61,62,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,125,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,126,127,128,129,130,410,131,132,411,412,133],"tindex":"69d9a4f5-da44-11e4-a8b9-53e5d16ee6bc","variableMapping":{"index":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[1,22,23,345,24,26,28,352,30,31,413,414,355,33,35,358,36,38,361,40,42,364,43,45,368,46],"tindex":"69d9a4f6-da44-11e4-a8b9-37fba19c337d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[415,416,417,418,408],"tindex":"69d9a4f7-da44-11e4-a8b9-693d8524a585","variableMapping":{"factor":"lastPrio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:207","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[375,378,379,390,392,393,396,404,405],"tindex":"69d9a4f8-da44-11e4-a8b9-dbc4032e5eda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:89","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[22,23,24,28,30,33,35,36,40,42,43],"tindex":"69df9869-da44-11e4-a8b9-c7f86a43db1f","variableMapping":{"byteCount":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"69df986a-da44-11e4-a8b9-09983fe90be9","variableMapping":{"flags":"flags","scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"69df986b-da44-11e4-a8b9-472b95602b4c","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"69df986c-da44-11e4-a8b9-8f2c0bb6ce22","variableMapping":{"maxBits":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:286","type":"CtLocalVariableImpl","sourcecode":"int int = 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"69df986d-da44-11e4-a8b9-c3605887fbbe","variableMapping":{"newAdjIndex":"usedBits","newBaseIndex":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-2},{"failures":[67,136,68,48,49,0,50,69,51,1,6,2,7,8,9,10,11,5,12,13,14,15,16,419,420,148,149,84,85,86,88,195,89,90,91,197,199,201,202,203,204,205,206,207,208,209,210,92,93,94,212,214,216,217,218,219,220,221,222,60,321,328,17,329,382,386,387,390],"tindex":"69df986e-da44-11e4-a8b9-a1d51a074825","variableMapping":{"err":"endIndexPlusOne","dLat":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[67,136,68,48,49,0,50,69,51,1,6,137,138,19,2,7,8,9,10,11,5,12,13,14,15,20,16,140,141,142,143,144,145,74,146,147,421,53,75,54,55,148,149,150,151,152,153,154,155,156,157,158,159,422,160,161,162,163,164,165,166,167,168,169,423,424,170,171,425,172,173,174,175,176,177,178,426,179,180,181,182,183,184,185,186,427,187,188,189,190,191,192,428,193,194,429,84,85,86,87,430,88,195,196,89,90,91,197,198,199,200,201,202,203,204,205,431,206,207,208,209,432,210,211,92,93,94,212,213,214,215,216,217,218,219,220,433,221,222,223,434,224,225,226,435,436,227,103,437,438,228,104,229,230,231,232,233,234,235,236,237,439,238,239,240,241,242,243,244,245,246,247,105,440,248,249,441,250,106,251,252,253,254,107,442,255,108,256,257,258,109,443,444,259,110,260,261,262,263,264,265,266,267,268,445,269,270,271,272,273,274,275,276,277,278,111,446,279,280,447,281,112,282,283,284,285,113,448,286,114,287,288,115,289,290,116,449,450,291,117,292,293,294,295,296,297,298,299,300,451,301,302,303,304,305,306,307,308,309,310,118,452,311,312,453,313,119,314,315,316,317,120,454,318,121,319,320,60,321,324,327,328,17,329,330,331,123,124,370,371,455,372,61,62,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,125,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,126,126,127,127,456,456,128,128,129,129,130,130,410,410,131,131,132,132,411,411,412,412,133,133],"tindex":"69df986f-da44-11e4-a8b9-6fa7a3f30a74","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"69df9870-da44-11e4-a8b9-f9d698451e06","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1088","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.setEdgesHeader()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":-2},{"failures":[],"tindex":"69df9871-da44-11e4-a8b9-b53ef9dc7c38","variableMapping":{"bitsForEdgeFlags":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-2},{"failures":[],"tindex":"69dfbf82-da44-11e4-a8b9-411f11ccde78","variableMapping":{"latSize":"start","size":"start","lonSize":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[],"tindex":"69dfbf83-da44-11e4-a8b9-f9690e7bd0cf","variableMapping":{"mGarbage":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[],"tindex":"69dfbf84-da44-11e4-a8b9-1b724c8f0691","variableMapping":{"edgeCount":"to","lastEdgeIndex":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":0},{"failures":[],"tindex":"69dfbf85-da44-11e4-a8b9-19e7f281c188","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"69dfbf86-da44-11e4-a8b9-c5502f8b0de9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[],"tindex":"69dfbf87-da44-11e4-a8b9-f196ffb3ed9f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[68,48,49,0,50,51,2,7,9,5,12,13,14,15,16,55,335,135],"tindex":"69dfbf88-da44-11e4-a8b9-a5a517397198","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"69dfbf89-da44-11e4-a8b9-3318a5d3f21a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[336,135],"tindex":"69dfbf8a-da44-11e4-a8b9-9f5d17824fe7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"69dfbf8b-da44-11e4-a8b9-717c568616ea","variableMapping":{"time":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:136","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[152,161,162,164,168,169,173,174,230,239,240,242,246,247,106,251,261,270,271,273,277,278,112,282,293,302,303,305,309,310,119,314,327,329],"tindex":"69dfbf8c-da44-11e4-a8b9-b55dafa87f51","variableMapping":{"bytesForFlags":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[383],"tindex":"69dfbf8d-da44-11e4-a8b9-23dedc9eea9a","variableMapping":{"scDirMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":-1},{"failures":[67,68,49,0,50,69,51,1,6,7,8,9,10,11,70,71,457,72,73,74,53,75,54,55,458,459,460,172,461,89,90,91,92,93,94,462,435,103,104,105,106,107,255,108,109,110,111,112,113,286,114,115,116,117,118,119,120,318,121,463,123,124,61,62,125,126,127,128,129,130,131,132,133],"tindex":"69dfbf8e-da44-11e4-a8b9-efeb3f470fda","variableMapping":{"len":"bufferIndex","dim":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:968","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[((int * int) * 4) + 4]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-1},{"failures":[],"tindex":"69dfbf8f-da44-11e4-a8b9-d19184677a96","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"69dfbf90-da44-11e4-a8b9-b7c5a54af028","variableMapping":{"size":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[52,75,54,55,56,58,59,61,62],"tindex":"69dfe6a1-da44-11e4-a8b9-61ed1ef67e04","variableMapping":{"lat":"lat1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:65","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-1},{"failures":[],"tindex":"69dfe6a2-da44-11e4-a8b9-3b2384031c17","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:625","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[373,374,125,393,395,409],"tindex":"69dfe6a3-da44-11e4-a8b9-0f498b32026c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:74","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[67,6],"tindex":"69dfe6a4-da44-11e4-a8b9-59ede3d0e21a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[338],"tindex":"69dfe6a5-da44-11e4-a8b9-adfd1d3516b3","variableMapping":{"deltaX":"backSpeed","maxX":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[24,27,28,30,36,43],"tindex":"69dfe6a6-da44-11e4-a8b9-abac617f013f","variableMapping":{"closed":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"69dfe6a7-da44-11e4-a8b9-f926ca0b6c51","variableMapping":{"elem":"elem","size":"child","keys":"elem","i":"i","key":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (int[][(int / 2)]) > int ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"69dfe6a8-da44-11e4-a8b9-d7dc89528a26","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[22,23,24,28,30,33,35,36,40,42,43],"tindex":"69dfe6a9-da44-11e4-a8b9-d5f0583b822e","variableMapping":{"segmentSizePower":"pavementType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"69dfe6aa-da44-11e4-a8b9-1f39f7b0871e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[124],"tindex":"69dfe6ab-da44-11e4-a8b9-8f29b2d0c0ee","variableMapping":{"bytePos":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"69dfe6ac-da44-11e4-a8b9-5dec0ed4803b","variableMapping":{"orientation":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","java.lang.Math.PI":"weight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:97","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"69dfe6ad-da44-11e4-a8b9-f78b43d59849","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"69dfe6ae-da44-11e4-a8b9-c77b19434bd8","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[23,27,28,34,35,41,42,47],"tindex":"69dfe6af-da44-11e4-a8b9-317aa76d6493","variableMapping":{"fwdFaster":"speed","incDist2DSum":"speed","fwdSlower":"speed","fullDist2D":"speed","restDist2D":"speed","speed":"speed","decDist2DSum":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[22,24,28,30,33,35,36,40,42,43],"tindex":"69dfe6b0-da44-11e4-a8b9-ab408d30dc2c","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:197","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[],"tindex":"69dfe6b1-da44-11e4-a8b9-0fffc0f1c432","variableMapping":{"time":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[373,374,125,393,395,409],"tindex":"69dfe6b2-da44-11e4-a8b9-d51284ed212a","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[224,123,124,47,372,373,383],"tindex":"69dfe6b3-da44-11e4-a8b9-9b5a2fbcac46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:55","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Reverse Speed\" , int , int , double , com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\") , 30)"},"status":-1},{"failures":[],"tindex":"69dfe6b4-da44-11e4-a8b9-69cf166b347b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[464,465,195,198,200,201,466,210,213,215,216,467,468,469,470,471,472,473,474],"tindex":"69e05be5-da44-11e4-a8b9-7bf8d2d8882d","variableMapping":{"maxY":"minLonTmp","deltaX":"maxLonTmp","stepX":"allBits","maxX":"lon","deltaY":"minLonTmp","stepY":"i","x":"i","y":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:71","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double += double;\n    int += int;\n} else {\n    double += double;\n    int += int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[],"tindex":"69e05be6-da44-11e4-a8b9-93692f1366d9","variableMapping":{"key":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[],"tindex":"69e05be7-da44-11e4-a8b9-ad78e60ac1df","variableMapping":{"time":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[68,48,49,0,50,51,1,137,138,19,2,7,9,5,12,13,14,15,16,141,142,55,150,151,152,159,160,171,175,178,181,103,104,229,230,237,238,249,252,107,256,109,110,260,261,268,269,280,283,113,287,115,116,117,292,293,300,301,312,315,120,319,60,322,327,330,331,333,335,134,135,341,344,351,357,363,367,373,374,378,381,384,386,387,395,396,398,399,404,405,406,409,129,131],"tindex":"69e05be8-da44-11e4-a8b9-afb26a10b74b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[16,152,422,161,162,168,173,174,230,439,239,240,246,106,251,261,445,270,271,277,112,282,293,451,302,303,309,119,314,327,17,329],"tindex":"69e05be9-da44-11e4-a8b9-d7cded1a9433","variableMapping":{"size":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"69e05bea-da44-11e4-a8b9-ad172b898403","variableMapping":{"r":"resultOrientation","x":"orientation","absY":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"69e05beb-da44-11e4-a8b9-ef31f259ad26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"69e05bec-da44-11e4-a8b9-c58d68e901a7","variableMapping":{"freeIndex":"edgeId","currentIndex":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[],"tindex":"69e05bed-da44-11e4-a8b9-b9c17824effd","variableMapping":{"shift":"shift","backwardBit":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"69e05bee-da44-11e4-a8b9-df724f04a5ea","variableMapping":{"lon":"speedFactor","lat":"speedFactor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPoint:78","type":"CtReturnImpl","sourcecode":"return ((double) + \",\") + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:774","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":-2},{"failures":[2,5,16,22,23,24,26,27,28,30,31,355,33,34,35,36,38,361,40,41,42,43,45,368,46,47],"tindex":"69e05bef-da44-11e4-a8b9-a7e1716d7f10","variableMapping":{"high":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-1},{"failures":[],"tindex":"69e05bf0-da44-11e4-a8b9-d7bf68cd175c","variableMapping":{"speedVal":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":0},{"failures":[9,13,322,333,344,351,357,363],"tindex":"69e05bf1-da44-11e4-a8b9-b99902db3815","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"restrictedValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[21,23,25,27,28,29,32,34,35,37,39,41,42,44],"tindex":"69e05bf2-da44-11e4-a8b9-0900b6e92740","variableMapping":{"from":"speed","end":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[136,68,48,50,69,141,210,93,217,218,219,220,221,223,225,103,228,104,229,231,232,233,236,240,242,243,245,249,250,106,252,254,107,256,257,374,375,376,377,378,379,380,382,383,386,387,389,390,392,125,393,394,395,397,398,399,400,401,402,404,406,408,409],"tindex":"69e08303-da44-11e4-a8b9-1b24247db6c1","variableMapping":{"capacity":"I_SKIP_EDGE1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[347,354,360,366],"tindex":"69e08304-da44-11e4-a8b9-8d80953ddbd3","variableMapping":{"acceptBit":"acceptBit","intendedValues":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":250,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":391,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":348,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":435,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":151,"com.graphhopper.reader.OSMReaderTest.testFerry":19,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":142,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":34,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":29,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":93,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":136,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":52,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":43,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":451,"com.graphhopper.coll.CompressedArrayTest.testCompress":465,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":400,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":423,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":269,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":432,"com.graphhopper.util.AngleCalcTest.testOrientation":56,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":406,"com.graphhopper.GraphHopperTest.testPrepare":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":426,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":396,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":418,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":383,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":429,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":30,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":149,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":228,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":210,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":330,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":28,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":381,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":445,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":90,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":121,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":115,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":472,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":104,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":417,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":409,"com.graphhopper.GraphHopperTest.testLoadOSM":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":91,"com.graphhopper.reader.OSMReaderTest.testSort":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":359,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":17,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":449,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":284,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":109,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":470,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":179,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":131,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":317,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":441,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":266,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":289,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":117,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":439,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":346,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":214,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":273,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":378,"com.graphhopper.coll.OSMIDMapTest.testGetLong":72,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":304,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":310,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":244,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":103,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":246,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":58,"com.graphhopper.coll.CompressedArrayTest.testCompress2":464,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":278,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":301,"com.graphhopper.GraphHopperAPITest.testLoad":60,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":322,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":270,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":261,"com.graphhopper.storage.LevelGraphStorageTest.testClone":232,"com.graphhopper.reader.OSMReaderTest.testBarriers":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":292,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":331,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":65,"com.graphhopper.util.GHUtilityTest.testCopy":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":222,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":354,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":428,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":101,"com.graphhopper.routing.PathTest.testFindInstruction":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":352,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":293,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":415,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":18,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":141,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":442,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":190,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":285,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":274,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":315,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":305,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":402,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":369,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":156,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":259,"com.graphhopper.util.InstructionListTest.testWayList2":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":203,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":297,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":318,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":123,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":443,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":236,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":461,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":64,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":302,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":84,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":379,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":10,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":125,"com.graphhopper.coll.OSMIDMapTest.testGet":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":300,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":4,"com.graphhopper.routing.PathBidirRefTest.testExtract":370,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":105,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":457,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":218,"com.graphhopper.storage.RAMDataAccessTest.testCopy":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":320,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":173,"com.graphhopper.storage.RAMDataAccessTest.testSegments":100,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":357,"com.graphhopper.util.GHUtilityTest.testSort2":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":388,"com.graphhopper.reader.OSMReaderTest.testMain":7,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":437,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":309,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":358,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":473,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":219,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":360,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":249,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":450,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":238,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":242,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":419,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":256,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":414,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":129,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":39,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":245,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":20,"com.graphhopper.storage.StorablePropertiesTest.testStore":463,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":462,"com.graphhopper.storage.GraphHopperStorageTest.testClone":263,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":176,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":135,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":272,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":338,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":223,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":157,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":225,"com.graphhopper.routing.PathTest.testTime":372,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":255,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":233,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":342,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":169,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":248,"com.graphhopper.util.GHUtilityTest.testSortDirected":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":365,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":82,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":128,"com.graphhopper.GraphHopperTest.testFootOnly":1,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":85,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":213,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":376,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":165,"com.graphhopper.search.NameIndexTest.testCreate":460,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":99,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":126,"com.graphhopper.routing.QueryGraphTest.testOneWay":411,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":431,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":469,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":89,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":467,"com.graphhopper.reader.OSMReaderTest.testWithBounds":15,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":102,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":95,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":366,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":162,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":454,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":424,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":368,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":229,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":438,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":343,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":31,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":311,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":188,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":306,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":110,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":374,"com.graphhopper.util.InstructionListTest.testWayList":75,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":448,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":356,"com.graphhopper.GraphHopperAPITest.testDisconnected179":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":158,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":453,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":153,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":138,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":181,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":49,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":265,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":86,"com.graphhopper.routing.util.EncodedValueTest.testSwap":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":407,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":280,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":385,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":405,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":107,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":36,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":394,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":433,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":38,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":258,"com.graphhopper.routing.PathTest.testWayList":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":180,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":345,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":161,"com.graphhopper.coll.OSMIDMapTest.testGet2":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":395,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":452,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":275,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":323,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":215,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":216,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":97,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":83,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":363,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":416,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":22,"com.graphhopper.util.GHUtilityTest.testSort":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":425,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":474,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":351,"com.graphhopper.search.NameIndexTest.testPut":458,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":319,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":192,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":211,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":88,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":185,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":41,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":124,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":183,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":290,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":344,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":393,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":327,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":172,"com.graphhopper.routing.PathTest.testFound":455,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":6,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":47,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":254,"com.graphhopper.util.AngleCalcTest.testAtan2":57,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":224,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":303,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":459,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":160,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":268,"com.graphhopper.util.InstructionListTest.testEmptyList":421,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":220,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":333,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":353,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":389,"com.graphhopper.reader.PrinctonReaderTest.testRead":137,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":113,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":94,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":299,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":422,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":150,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":308,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":122,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":361,"com.graphhopper.reader.OSMReaderTest.testFoot":2,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":171,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":200,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":471,"com.graphhopper.reader.OSMReaderTest.testOneWay":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":201,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":271,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":282,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":316,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":81,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":446,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":167,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":401,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":466,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":339,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":398,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":408,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":80,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":399,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":324,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":163,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":456,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":139,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":444,"com.graphhopper.routing.PathBidirRefTest.testExtract2":371,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":373,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":24,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":204,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":281,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":427,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":25,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":5,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":182,"com.graphhopper.util.SimpleIntDequeTest.testPush":420,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":404,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":197,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":283,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":235,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":340,"com.graphhopper.GraphHopperTest.testFootAndCar":0,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":111,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":240,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":23,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":221,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":154,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":367,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":403,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":295,"com.graphhopper.GraphHopperTest.testPrepareOnly":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":392,"com.graphhopper.GraphHopperTest.testVia":68,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":152,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":13,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":226,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":55,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":447,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":325,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":12,"com.graphhopper.util.AngleCalcTest.testCombined":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":166,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":332,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":253,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":251,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":116}}]
