[{"failures":[0],"tindex":"4800caa7-dab3-11e4-9384-d1c3a8e3fb45","variableMapping":{"from":"start","end":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"4800f1b8-dab3-11e4-9384-c78b295c5591","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"4800f1b9-dab3-11e4-9384-13d1a4efaf09","variableMapping":{"mGarbage":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[1],"tindex":"4800f1ba-dab3-11e4-9384-bf7afe567115","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[],"tindex":"4800f1bb-dab3-11e4-9384-19a54830e0d8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"4800f1bc-dab3-11e4-9384-f5ee29b596d5","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"4800f1bd-dab3-11e4-9384-fb2d22cab129","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:88","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DAType com.graphhopper.storage.DAType = java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"4800f1be-dab3-11e4-9384-cb0abe8e84e8","variableMapping":{"width":"edgeId","lonSimilar":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"4800f1bf-dab3-11e4-9384-05d9b3d209d4","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"4800f1c0-dab3-11e4-9384-3f8fe76d05ac","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"4800f1c1-dab3-11e4-9384-57fe6a5ffd3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":0},{"failures":[],"tindex":"4800f1c2-dab3-11e4-9384-93c266d830e5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"4800f1c3-dab3-11e4-9384-614ec621f1c6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[2],"tindex":"4800f1c4-dab3-11e4-9384-afbc4ee0eac1","variableMapping":{"high":"acceptBit","len":"acceptBit","start":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"480118d5-dab3-11e4-9384-f1e260a16cef","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[],"tindex":"480118d6-dab3-11e4-9384-113681090a38","variableMapping":{"newUniqueOsmId":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"480118d7-dab3-11e4-9384-9541d408ebf3","variableMapping":{"filter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:112","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl(com.graphhopper.routing.util.EdgeFilter)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[],"tindex":"480118d8-dab3-11e4-9384-45e6ae85f6d6","variableMapping":{"currentBucket":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"48013fe9-dab3-11e4-9384-51180183d470","variableMapping":{"initialized":"isRoundabout"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:299","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call prepareIndex only once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"48013fea-dab3-11e4-9384-7777ce4a31f5","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[23,24,3,4,5,6,7,25,26,8,27,28,29,30,31,9,10,11,32,12,33,34,13,14,35,15,16,17,18,36,19,37,38,39,40,41,42,43,44,45,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,60,61,62,63,64,65,66,67,68,69,70,0,71,1,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,22,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374],"tindex":"480166fb-dab3-11e4-9384-a7cd46928dc1","variableMapping":{"type":"defaultType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[3,4,5,6,7,8,9,13,18,60,61,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,1,400,401,402,403,404,405,406,86,87,96,98,99,22,202,255,301,345],"tindex":"48018e0c-dab3-11e4-9384-85c0661b313f","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[],"tindex":"48018e0d-dab3-11e4-9384-459cfc34187d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-2},{"failures":[407,408,409,410,411],"tindex":"48018e0e-dab3-11e4-9384-c97794ceebed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"48018e0f-dab3-11e4-9384-b9ede2fca6c6","variableMapping":{"iterState":"iterState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-1},{"failures":[23,24,3,4,5,6,7,26,8,27,28,9,10,11,32,33,34,13,14,17,19,376,412,384,386,21,413,414,415,416,417,406,22],"tindex":"48018e10-dab3-11e4-9384-8b5b6fd79f5f","variableMapping":{"foundIndex":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[66,0],"tindex":"48018e11-dab3-11e4-9384-07e42ac85ca2","variableMapping":{"tmpNo":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[61,22,418,419,420,421,422],"tindex":"4801b522-dab3-11e4-9384-3dd84e65f4fc","variableMapping":{"r":"x","x":"r","absY":"x"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-1},{"failures":[],"tindex":"4801b523-dab3-11e4-9384-f9b8c8a5c1c6","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"4801b524-dab3-11e4-9384-d16ee6653c03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"4801dc35-dab3-11e4-9384-75febbc8a4a2","variableMapping":{"hash":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-2},{"failures":[],"tindex":"4801dc36-dab3-11e4-9384-53e65b8a45ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:329","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"4801dc37-dab3-11e4-9384-9b951858146e","variableMapping":{"nodeFlags":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-2},{"failures":[407,408,409,410,411],"tindex":"4801dc38-dab3-11e4-9384-7f2c00a70565","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"blockByDefault"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[80,92,105,107,109],"tindex":"4801dc39-dab3-11e4-9384-f5571809edc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[],"tindex":"4801dc3a-dab3-11e4-9384-dddb7c0c62dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[3,4,5,6,7,8,27,30,31,9,10,11,12,13,14,15,16,17,19,51,54,423,407,408,424,20,425,21,426,66,70,0,409,410,411,72,74,75,80,81,82,85,86,87,91,94,97,99,100,109,22,121,123,124,191,192,193,200,202,215,220,223,227,239,244,245,246,253,255,268,273,276,280,282,285,290,291,292,299,301,314,319,322,326,329,334,335,336,343,345,358,363,366,370],"tindex":"4801dc3b-dab3-11e4-9384-1d8599a4cb96","variableMapping":{"flags":"directionBitMask","mask":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[],"tindex":"4801dc3c-dab3-11e4-9384-1549f94d34a6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[19,66,68,69,193,201,203,204,206,210,211,218,219,237,246,254,256,257,259,263,264,271,272,292,300,302,303,305,309,310,317,318,336,344,346,347,349,353,354,361,362],"tindex":"4801dc3d-dab3-11e4-9384-65042421e535","variableMapping":{"intVal":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"4802034e-dab3-11e4-9384-0d09621c86a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[23,24,3,4,5,6,7,26,8,27,28,30,31,9,10,11,32,12,33,34,13,14,15,16,17,18,19,42,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,60,61,62,63,64,65,66,67,68,69,70,0,71,1,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,22,116,117,118,119,120,121,122,123,124,125,131,132,133,134,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,202,217,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,427,428,429,430,431,432,433,434,435,436],"tindex":"4802034f-dab3-11e4-9384-61878b96fca1","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"48020350-dab3-11e4-9384-6b210c20705f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[377,394,400],"tindex":"48020351-dab3-11e4-9384-73db136cfa84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:638","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[],"tindex":"48020352-dab3-11e4-9384-15e723a97ef1","variableMapping":{"i":"size","mainNodes":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:439","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"48020353-dab3-11e4-9384-a9fb832fd1c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"48022a64-dab3-11e4-9384-fd0bb7ad913f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[437,438,439],"tindex":"48022a65-dab3-11e4-9384-fb72b68a0322","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-1},{"failures":[],"tindex":"48022a66-dab3-11e4-9384-f106065e9199","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[440,441,391,442,443,397,444,445,403,446],"tindex":"48022a67-dab3-11e4-9384-fd6dc7ec30a1","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[],"tindex":"48022a68-dab3-11e4-9384-ad398fff6d4a","variableMapping":{"freeIndex":"x1","currentIndex":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":0},{"failures":[],"tindex":"48022a69-dab3-11e4-9384-136e5e5b62f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"48022a6a-dab3-11e4-9384-add4a3ac6253","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"48022a6b-dab3-11e4-9384-a337bacce4ca","variableMapping":{"size":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"48022a6c-dab3-11e4-9384-410def5a8873","variableMapping":{"edgePointer":"acceptBit","maxEdges":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[447,22],"tindex":"48022a6d-dab3-11e4-9384-69df6463f54a","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-1},{"failures":[],"tindex":"48022a6e-dab3-11e4-9384-8bdbd8dff37a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:566","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return com.graphhopper.routing.util.EncodedValue.setValue(long, long);\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setLong(long, int, long);\n}"},"status":-2},{"failures":[],"tindex":"48022a6f-dab3-11e4-9384-01dc074fce50","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"48022a70-dab3-11e4-9384-5f3c807652f2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"48022a71-dab3-11e4-9384-ef1d61f5134f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[],"tindex":"48022a72-dab3-11e4-9384-e920417f04d2","variableMapping":{"timeZoneId":"this","tz":"this","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:216","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String)))\n    java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[],"tindex":"48022a73-dab3-11e4-9384-655e392fc403","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[448,449,450,451,452,453,454,455,456,457,458,145,151,153,154,459,172,178,180,181],"tindex":"48022a74-dab3-11e4-9384-db1a8462652c","variableMapping":{"midLat":"minLonTmp","spatialKey":"hash","midLon":"maxLonTmp","bits":"hash","lon":"minLonTmp","lat":"maxLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"48022a75-dab3-11e4-9384-63514e41b340","variableMapping":{"i":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":0},{"failures":[66,70],"tindex":"48025186-dab3-11e4-9384-c1cabba7e22e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[36],"tindex":"48025187-dab3-11e4-9384-cf260c81f653","variableMapping":{"segmentSizeInBytes":"nextNodeBit","length":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":-1},{"failures":[70],"tindex":"48025188-dab3-11e4-9384-2f9b4b5abeb9","variableMapping":{"turnCostIndex":"index","nextTurnCostIndex":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-1},{"failures":[],"tindex":"48025189-dab3-11e4-9384-634fea4ba518","variableMapping":{"r":"minEle","angle":"minEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"4802518a-dab3-11e4-9384-c3e190bd7933","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"4802518b-dab3-11e4-9384-2b654ce313f0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:255","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:774","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":-2},{"failures":[23,24,3,4,5,6,7,26,8,27,28,9,10,11,32,12,33,34,13,14,15,16,17,18,19,43,44,45,46,47,48,50,51,52,53,54,55,57,58,61,62,71,1,106,113,114,115,22,118,126,127,129,130,147,148,149,163,164,165,166,168,174,175,176,217,236,239,240,244,265,271,276,278,279,282,285,286,290,311,317,322,324,325,329,330,334,355,361,366,368,369,460,461,372],"tindex":"4802518c-dab3-11e4-9384-abd7308f285e","variableMapping":{"nextTowerId":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"4802518d-dab3-11e4-9384-0f71f3d4eb0e","variableMapping":{"width":"start","lonSimilar":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":0},{"failures":[23,24,3,4,5,6,7,26,8,27,28,30,31,9,10,11,32,12,33,34,13,14,15,16,17,18,19,42,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,60,61,62,63,64,65,66,67,68,69,70,0,71,1,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,22,116,117,118,119,120,121,122,123,124,125,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371],"tindex":"4802518e-dab3-11e4-9384-516423cb0028","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"4802518f-dab3-11e4-9384-a33239660ddb","variableMapping":{"currentBucket":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[3,6,50,95,103,462],"tindex":"480278a0-dab3-11e4-9384-694ec58160fe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-1},{"failures":[],"tindex":"480278a1-dab3-11e4-9384-690ae3f0592e","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"480278a2-dab3-11e4-9384-613880d0ce69","variableMapping":{"weightApproximation":"fwdFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"480278a3-dab3-11e4-9384-5530a9c1b28d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":0},{"failures":[377,378,463,390,391,464,394,396,397,465,400,402,403,466],"tindex":"480278a4-dab3-11e4-9384-c3eecaac3b8e","variableMapping":{"width":"speed","lonSimilar":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"480278a5-dab3-11e4-9384-094a0b127952","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"480278a6-dab3-11e4-9384-2905e0541401","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"480278a7-dab3-11e4-9384-cbb3f4706bf6","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[23,24,3,4,5,7,26,8,27,54,376,66,68,70,0,98,112,113,114,115,22,124,125],"tindex":"480278a8-dab3-11e4-9384-1d7588715dbc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-1},{"failures":[],"tindex":"480278a9-dab3-11e4-9384-a5ff2e42f3ee","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[9,10,11,32,12,33,34,13,14,35,15,16,17,18,19,60,423,467,468,469,375,376,470,377,440,378,407,471,472,473,474,475,476,441,379,412,463,380,408,381,65,477,382,478,479,2,480,424,481,383,20,425,384,482,385,386,21,483,484,437,426,387,388,68,485,390,486,391,464,409,487,488,489,490,491,442,392,413,393,492,394,395,493,443,396,397,438,414,410,494,495,496,497,498,499,444,398,415,465,399,71,1,500,400,401,501,445,402,403,439,416,411,502,503,504,505,506,507,446,404,417,466,405,86,96,233],"tindex":"480278aa-dab3-11e4-9384-c500c6ae703a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[13,468],"tindex":"480278ab-dab3-11e4-9384-51485ee73ac8","variableMapping":{"initLeafSize":"usedBits","maxLeafEntries":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[],"tindex":"480278ac-dab3-11e4-9384-0fe9b2df8521","variableMapping":{"maxMCSpeed":"minLonTmp","speed":"minLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":0},{"failures":[376],"tindex":"480278ad-dab3-11e4-9384-158f3907c1f0","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"480278ae-dab3-11e4-9384-43341c80d7ab","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"480278af-dab3-11e4-9384-5d978f8a2b5f","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"edgeId","nodeId":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":-2},{"failures":[202,255,301,345,508,509],"tindex":"480278b0-dab3-11e4-9384-8b6f48a7b44d","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[3,4,5,6,7,8,27,30,31,51,59,60,61,62,63,64,423,510,376,470,377,440,378,407,471,472,473,474,475,476,441,379,412,463,380,408,381,65,477,382,478,479,2,480,424,481,383,20,425,384,482,385,386,21,483,484,437,426,387,388,389,511,485,390,486,391,464,409,487,488,489,490,491,442,392,413,393,492,394,395,493,443,396,397,438,414,410,494,495,496,497,498,499,444,398,415,465,399,71,1,500,400,401,501,445,402,403,439,416,411,502,503,504,505,506,507,446,404,417,466,405,72,73,512,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,121,122,123,124,125,137,144,161,170,188,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371],"tindex":"48029fc1-dab3-11e4-9384-6f7d5234ff63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:229","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n        return com.graphhopper.routing.util.AbstractFlagEncoder;\n    \n}"},"status":-1},{"failures":[3,74,75,76,77,78,79,80,82,84,85,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,513,514,515,516,517,518],"tindex":"48029fc2-dab3-11e4-9384-1378ff254c06","variableMapping":{"width":"size","lonSimilar":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[],"tindex":"4802c6d3-dab3-11e4-9384-0bf70becc0de","variableMapping":{"from":"guess","end":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[3,5,6,8,27,74,78,80,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,106,107,108,109,113,114,115,22,124,125],"tindex":"4802c6d4-dab3-11e4-9384-e51289dda3e6","variableMapping":{"lastIndex":"noOfStates","fromIndex":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[377,378,463,390,391,464,394,396,397,465,400,402,403,466],"tindex":"4802c6d5-dab3-11e4-9384-578e3dc892d1","variableMapping":{"numTiles":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[202,255,301,345,436],"tindex":"4802c6d6-dab3-11e4-9384-49370bfe2fd0","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[],"tindex":"4802c6d7-dab3-11e4-9384-b1fe16fb7e7f","variableMapping":{"fileDetails":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[412,413,415,417],"tindex":"4802c6d8-dab3-11e4-9384-5f463b9ea724","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[36],"tindex":"4802c6d9-dab3-11e4-9384-ed42e72cd169","variableMapping":{"start":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":270,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":104,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":236,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":406,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":192,"com.graphhopper.reader.OSMReaderTest.testFerry":9,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":121,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":122,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":396,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":175,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":24,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":422,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":446,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":300,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":38,"com.graphhopper.coll.CompressedArrayTest.testCompress":458,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":491,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":369,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":76,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":212,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":171,"com.graphhopper.util.AngleCalcTest.testOrientation":418,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":82,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":72,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":352,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":518,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":493,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":96,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":113,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":162,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":442,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":111,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":242,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":172,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":70,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":391,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":394,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":428,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":94,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":148,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":325,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":397,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":282,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":454,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":244,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":516,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":85,"com.graphhopper.GraphHopperTest.testLoadOSM":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":155,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":431,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":149,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":510,"com.graphhopper.reader.OSMReaderTest.testSort":32,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":398,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":286,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":364,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":329,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":225,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":54,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":321,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":269,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":341,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":512,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":283,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":295,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":445,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":290,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":380,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":179,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":100,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":170,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":177,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":90,"com.graphhopper.coll.OSMIDMapTest.testGetLong":129,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":246,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":310,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":261,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":239,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":263,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":420,"com.graphhopper.coll.CompressedArrayTest.testCompress2":457,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":354,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":377,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":301,"com.graphhopper.GraphHopperAPITest.testLoad":124,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":243,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":430,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":408,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":346,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":336,"com.graphhopper.storage.LevelGraphStorageTest.testClone":248,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":0,"com.graphhopper.reader.OSMReaderTest.testBarriers":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":439,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":93,"com.graphhopper.util.GHUtilityTest.testCopy":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":196,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":188,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":475,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":135,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":413,"com.graphhopper.routing.PathTest.testFindInstruction":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":488,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":292,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":513,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":123,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":479,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":277,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":501,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":365,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":350,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":78,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":305,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":506,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":469,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":197,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":332,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":436,"com.graphhopper.util.InstructionListTest.testWayList2":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":466,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":156,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":370,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":296,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":443,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":324,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":389,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":395,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":71,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":330,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":252,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":460,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":438,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":302,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":92,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":335,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":106,"com.graphhopper.coll.OSMIDMapTest.testGet":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":299,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":2,"com.graphhopper.routing.PathBidirRefTest.testExtract":63,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":128,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":494,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":183,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":218,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":410,"com.graphhopper.util.GHUtilityTest.testSort2":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":101,"com.graphhopper.reader.OSMReaderTest.testMain":11,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":240,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":309,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":495,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":455,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":184,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":415,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":268,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":287,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":255,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":259,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":280,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":51,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":256,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":503,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":314,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":400,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":429,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":262,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":18,"com.graphhopper.storage.StorablePropertiesTest.testStore":372,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":461,"com.graphhopper.storage.GraphHopperStorageTest.testClone":338,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":221,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":21,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":229,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":348,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":385,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":198,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":234,"com.graphhopper.routing.PathTest.testTime":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":474,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":278,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":249,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":387,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":158,"com.graphhopper.reader.OSMReaderTest.testRelation":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":211,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":267,"com.graphhopper.util.GHUtilityTest.testSortDirected":120,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":517,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":404,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":50,"com.graphhopper.GraphHopperTest.testFootOnly":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":486,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":164,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":384,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":230,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":178,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":73,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":500,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":207,"com.graphhopper.search.NameIndexTest.testCreate":46,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":47,"com.graphhopper.routing.QueryGraphTest.testOneWay":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":159,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":451,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":487,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":147,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":448,"com.graphhopper.reader.OSMReaderTest.testWithBounds":17,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":509,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":417,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":213,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":480,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":467,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":245,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":241,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":470,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":507,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":393,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":313,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":144,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":482,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":306,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":334,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":87,"com.graphhopper.util.InstructionListTest.testWayList":114,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":414,"com.graphhopper.GraphHopperAPITest.testDisconnected179":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":199,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":315,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":194,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":504,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":210,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":499,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":340,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":83,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":492,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":81,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":276,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":483,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":471,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":444,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":108,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":333,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":186,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":432,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":399,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":328,"com.graphhopper.routing.PathTest.testWayList":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":203,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":425,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":447,"com.graphhopper.coll.OSMIDMapTest.testGet2":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":109,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":273,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":312,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":498,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":351,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":297,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":339,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":180,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":260,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":181,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":508,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":182,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":411,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":515,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":440,"com.graphhopper.util.GHUtilityTest.testSort":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":216,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":456,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":497,"com.graphhopper.search.NameIndexTest.testPut":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":326,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":337,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":134,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":173,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":168,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":140,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":402,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":1,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":138,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":284,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":407,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":40,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":511,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":478,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":307,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":66,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":435,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":258,"com.graphhopper.routing.PathTest.testFound":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":217,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":28,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":376,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":275,"com.graphhopper.util.AngleCalcTest.testAtan2":419,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":496,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":303,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":514,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":45,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":202,"com.graphhopper.util.InstructionListTest.testEmptyList":112,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":95,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":476,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":99,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":426,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":481,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":392,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":424,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":102,"com.graphhopper.reader.PrinctonReaderTest.testRead":30,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":176,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":298,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":201,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":191,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":308,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":490,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":502,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":468,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":473,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":401,"com.graphhopper.reader.OSMReaderTest.testFoot":10,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":41,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":215,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":153,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":279,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":453,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":485,"com.graphhopper.reader.OSMReaderTest.testOneWay":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":154,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":347,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":362,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":320,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":489,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":209,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":342,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":77,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":459,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":84,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":386,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":75,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":141,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":65,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":205,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":49,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":36,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":331,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":190,"com.graphhopper.routing.PathBidirRefTest.testExtract2":64,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":433,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":86,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":157,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":441,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":43,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":360,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":463,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":228,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":477,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":505,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":150,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":363,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":251,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":484,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":355,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":257,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":378,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":195,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":423,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":437,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":294,"com.graphhopper.storage.StorablePropertiesTest.testLoad":373,"com.graphhopper.GraphHopperTest.testPrepareOnly":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":105,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":136,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":193,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":15,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":235,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":22,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":359,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":382,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":208,"com.graphhopper.util.AngleCalcTest.testCombined":421,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":388,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":274,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":272,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":285}}]
