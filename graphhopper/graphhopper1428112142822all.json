[{"failures":[],"tindex":"c65a0994-da6c-11e4-b8b1-836c13d609aa","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[0,1,2,3],"tindex":"c65af3f5-da6c-11e4-b8b1-0157bb052921","variableMapping":{"edgePointer":"ferryBit","maxEdges":"internalFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"c65af3f6-da6c-11e4-b8b1-7fd49a9b9b3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"c65af3f7-da6c-11e4-b8b1-1db6dc2a69ee","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[4,5,6,7,8,9,0,10,11],"tindex":"c65af3f8-da6c-11e4-b8b1-63225e3b64fa","variableMapping":{"capacity":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"c65af3f9-da6c-11e4-b8b1-cf709e77b692","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"c65af3fa-da6c-11e4-b8b1-83e47d24b727","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[12,13,14],"tindex":"c65af3fb-da6c-11e4-b8b1-03fe38ab098a","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"node","edgeTo":"node","edgeFrom":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"c65af3fc-da6c-11e4-b8b1-2f2aa414525a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:71","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"c65af3fd-da6c-11e4-b8b1-f9f5134f671a","variableMapping":{"alreadyRun":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"c65af3fe-da6c-11e4-b8b1-93aa954ed799","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"c65af3ff-da6c-11e4-b8b1-f7f0d64bbc8a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"c65af400-da6c-11e4-b8b1-05441b46cf85","variableMapping":{"obtained":"edgeBased"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"c65b1b11-da6c-11e4-b8b1-950a2690cc38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":0},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"c65b1b12-da6c-11e4-b8b1-5f1d5d8a3f1b","variableMapping":{"scDirMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,38,144,145,146,147,42,43,44,46,148,47,48,149,150,151,152,153,154,155,156,157,158,159,160,3,161,162,163,164,165,166,167,168],"tindex":"c65b1b13-da6c-11e4-b8b1-29cd6e4ae56e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[169,170,171,45,48,2],"tindex":"c65b1b14-da6c-11e4-b8b1-69ebc80f9960","variableMapping":{"name":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[62,63,64,65,66,67,73,74,75,76,114,115,116,117,118,119,172,122,124,125,126,127,128,129,173,132,133,134,135,136,137,138,139,140,141,142,143,38,144,174,145,146,42,150,153,154,166,167,168],"tindex":"c65b1b15-da6c-11e4-b8b1-f551af46ece5","variableMapping":{"from":"indexDivisor","lonSize":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:299","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"c65b1b16-da6c-11e4-b8b1-dd757313ddd5","variableMapping":{"motorcarTag":"highway","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"c65b4227-da6c-11e4-b8b1-a145fcf5f95a","variableMapping":{"str":"str","edgeEncoders":"edgeEncoders"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:291","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[175,176],"tindex":"c65b4228-da6c-11e4-b8b1-6fa6562761f7","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-1},{"failures":[15,17,18,22,25,26,36,37,39],"tindex":"c65b6939-da6c-11e4-b8b1-4dd938bf67e5","variableMapping":{"numTiles":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"c65b693a-da6c-11e4-b8b1-9b1855bc41da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"c65b693b-da6c-11e4-b8b1-7fa6e0e1c9e6","variableMapping":{"tmp":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[177,178,179,180,181,182,183,184,62,185,186,187,63,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,64,208,209,210,211,212,65,213,214,215,216,66,217,67,218,219,220,68,69,70,71,72,221,222,223,224,225,73,226,74,227,228,229,230,231,232,233,234,235,236,237,238,239,75,240,76,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,102,276,114,277,278,279,115,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,116,300,301,302,303,304,117,305,306,307,308,118,309,119,310,311,312,122,313,124,314,315,316,125,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,126,337,338,339,340,341,127,342,343,344,345,128,346,129,347,348,349,350,351,132,352,353,354,133,134,135,136,355,356,357,358,359,12,360,361,362,13,14,363,364,365,142,143,15,366,16,367,368,369,370,371,17,18,372,373,374,19,20,21,22,23,24,25,26,27,28,29,30,375,31,32,33,34,35,36,376,37,38,39,40,41,377,378,379,144,380,381,382,383,384,174,145,385,386,146,171,147,42,43,44,45,46,148,47,48,387,388,149,2,150,151,152,153,154,155,156,157,158,159,160,3,389,390,49,391],"tindex":"c65b904c-da6c-11e4-b8b1-db873d2ec37d","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"c65b904d-da6c-11e4-b8b1-c531c9106516","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"c65b904e-da6c-11e4-b8b1-75e260b61a3f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"c65bb75f-da6c-11e4-b8b1-3790c898acd8","variableMapping":{"distInMeter":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[183,189,197,199,206,65,81,392,89,96,103,281,289,291,298,117,318,326,328,335,127],"tindex":"c65bb760-da6c-11e4-b8b1-2b86f5ca7206","variableMapping":{"initLeafSize":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"c65bb761-da6c-11e4-b8b1-5730c34e255b","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"endIndexPlusOne","edgeId":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeIterator:60","type":"CtReturnImpl","sourcecode":"return int > (com.graphhopper.util.EdgeIterator.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[],"tindex":"c65bde72-da6c-11e4-b8b1-a552114dc0f4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[136,393,394,395,396,397,42,43,44,45,46,47,160],"tindex":"c65bde73-da6c-11e4-b8b1-cde3dae40dbf","variableMapping":{"i":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[398,399,400,401],"tindex":"c65bde74-da6c-11e4-b8b1-43c4a7341d54","variableMapping":{"graphHopperFolder":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:670","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"c65bde75-da6c-11e4-b8b1-7926808488bc","variableMapping":{"maxLeafEntries":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"c65bde76-da6c-11e4-b8b1-dd86c796c53b","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:323","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.(getVehicleCount()) == 0)\n    throw new java.lang.IllegalStateException(\"No encoder is active!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":0},{"failures":[],"tindex":"c65bde77-da6c-11e4-b8b1-b1bdb1330d3a","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[402,403],"tindex":"c65bde78-da6c-11e4-b8b1-03dbe0e83d04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[189,197,199,200,202,206,207,65,213,81,392,89,90,92,96,97,103,104,281,289,291,292,294,298,299,117,305,318,326,328,329,331,335,336,127,342,12,362],"tindex":"c65bde79-da6c-11e4-b8b1-81966b316e96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"c65bde7a-da6c-11e4-b8b1-b591c139cdcb","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"key","id":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[],"tindex":"c65bde7b-da6c-11e4-b8b1-c120fab77f27","variableMapping":{"next":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:424","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"c65c058c-da6c-11e4-b8b1-1d22aa74de55","variableMapping":{"size":"edgeId","capacity":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":0},{"failures":[],"tindex":"c65c058d-da6c-11e4-b8b1-872d1364bb76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"c65c058e-da6c-11e4-b8b1-a194889ff89f","variableMapping":{"mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[404],"tindex":"c65c058f-da6c-11e4-b8b1-db807cfce6f6","variableMapping":{"initLeafSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"c65c0590-da6c-11e4-b8b1-392e0d0e59a5","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[12,13,14],"tindex":"c65c0591-da6c-11e4-b8b1-c10530f97075","variableMapping":{"turnCostsCount":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"c65c0592-da6c-11e4-b8b1-f57ed567e0cf","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[26,39],"tindex":"c65c0593-da6c-11e4-b8b1-4d6031fc813a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"c65c0594-da6c-11e4-b8b1-2b90528c6950","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"c65c0595-da6c-11e4-b8b1-9398c43f33c6","variableMapping":{"prepareAlgo":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[],"tindex":"c65c0596-da6c-11e4-b8b1-8778f5580175","variableMapping":{"max":"start","tmpSize":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-2},{"failures":[52,55,58,61],"tindex":"c65c0597-da6c-11e4-b8b1-65cfdf166ab0","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"c65c0598-da6c-11e4-b8b1-955ccd9ffe84","variableMapping":{"size":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"c65c0599-da6c-11e4-b8b1-1b8324f23653","variableMapping":{"properties":"properties"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:107","type":"CtReturnImpl","sourcecode":"return !(java.util.Map<java.lang.String, java.lang.Object>.isEmpty())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[12,13,14],"tindex":"c65c2caa-da6c-11e4-b8b1-19dad39221ed","variableMapping":{"minResolutionInMeter":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[21],"tindex":"c65c2cab-da6c-11e4-b8b1-2fe0fbeaffe9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"status":-1},{"failures":[16,368,370,17,372,374],"tindex":"c65c2cac-da6c-11e4-b8b1-cddd2f6175a7","variableMapping":{"next":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:424","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-1},{"failures":[],"tindex":"c65c2cad-da6c-11e4-b8b1-0da7f93949a4","variableMapping":{"factor":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[],"tindex":"c65c2cae-da6c-11e4-b8b1-b96102399240","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"c65c2caf-da6c-11e4-b8b1-230e9df01c46","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"c65c2cb0-da6c-11e4-b8b1-63beef22e275","variableMapping":{"sacScale":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"c65c2cb1-da6c-11e4-b8b1-1bcef31d3d94","variableMapping":{"this":"this","unknownSpeed":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":0},{"failures":[],"tindex":"c65c2cb2-da6c-11e4-b8b1-97e7fdbe5c90","variableMapping":{"currentBucket":"start","currentIndex":"start","bucketSize":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-2},{"failures":[],"tindex":"c65c2cb3-da6c-11e4-b8b1-0f47c36d773c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[15,17,18,22,25,26,36,37,39],"tindex":"c65c2cb4-da6c-11e4-b8b1-9b64b28bb6bd","variableMapping":{"synched":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:74","type":"CtIfImpl","sourcecode":"if (!boolean)\n    throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"c65c2cb5-da6c-11e4-b8b1-b13a3473eebb","variableMapping":{"mask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-2},{"failures":[],"tindex":"c65c2cb6-da6c-11e4-b8b1-39e39608fd16","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"c65c2cb7-da6c-11e4-b8b1-972197e842a3","variableMapping":{"item":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:256","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[175,176,149],"tindex":"c65c2cb8-da6c-11e4-b8b1-119dd9b3e955","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-1},{"failures":[],"tindex":"c65c2cb9-da6c-11e4-b8b1-336fe8e8e8a3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[177,178,179,180,181,182,183,184,62,185,186,187,405,63,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,64,208,209,210,211,212,65,213,214,215,216,66,217,67,218,219,220,68,69,70,71,406,72,221,222,223,224,225,73,226,74,227,228,229,230,231,232,233,234,235,407,236,237,238,239,75,240,76,241,242,243,244,245,246,247,248,249,408,250,251,252,253,254,255,409,256,257,258,259,260,261,410,262,263,79,80,81,82,83,84,85,86,87,88,392,275,89,90,91,92,93,94,95,96,97,98,99,100,101,411,102,103,104,105,106,107,108,109,110,111,112,113,276,114,277,278,279,412,115,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,116,300,301,302,303,304,117,305,306,307,308,118,309,119,310,311,312,122,123,313,124,314,315,316,413,125,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,126,337,338,339,340,341,127,342,343,344,345,128,346,129,347,348,349,350,351,132,352,414,353,354,133,134,135,136,355,356,357,358,359,415,416,417,418,4,419,420,402,5,421,50,422,423,424,425,426,51,427,398,428,52,429,430,53,431,432,6,433,434,435,436,437,54,438,399,439,55,440,441,442,394,12,360,361,362,13,14,56,443,444,7,445,446,447,448,449,57,450,400,451,58,452,453,454,395,455,456,175,457,396,397,176,458,459,460,461,462,463,464,363,169,465,466,467,170,468,364,365,469,470,8,471,472,403,9,473,59,474,475,476,477,478,60,479,401,480,61,481,482,483,484,1,485,486,487,142,143,488,489,15,366,490,16,367,368,369,370,371,17,18,372,373,374,19,20,21,22,23,24,25,26,27,28,29,30,375,31,32,33,34,35,36,376,37,38,39,40,41,377,378,491,492,379,144,380,381,382,383,384,174,145,385,386,146,171,147,42,43,44,45,46,493,148,47,48,387,494,149,2,150,151,152,153,154,155,156,11,157,158,159,160,3,389,390,49,391,495],"tindex":"c65d3e2a-da6c-11e4-b8b1-e5cfbc8433b1","variableMapping":{"width":"index","lonSimilar":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"c65d3e2b-da6c-11e4-b8b1-9d2f6e2cb5ec","variableMapping":{"allBits":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":0},{"failures":[176,149,160,3],"tindex":"c65d3e2c-da6c-11e4-b8b1-0d9be0f6f21d","variableMapping":{"entry":"motorcarTag","entryVal":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-1},{"failures":[496,497,498,499,500,501,502],"tindex":"c65d3e2d-da6c-11e4-b8b1-8fca1b3b9f27","variableMapping":{"width":"x1","lonSimilar":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[496,503,497,504,498,499,500,501,502],"tindex":"c65d3e2e-da6c-11e4-b8b1-87c8c2a0c562","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"c65d3e2f-da6c-11e4-b8b1-4310c63afa10","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"c65d3e30-da6c-11e4-b8b1-97a9ed8669d9","variableMapping":{"red":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[500,224,228,230,231,238,242,244,245,505,506,507,508,509,510,511,512],"tindex":"c65d6541-da6c-11e4-b8b1-a7d53817aa54","variableMapping":{"r":"midLon","x":"midLon","absY":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"c65d6542-da6c-11e4-b8b1-d39aa0ee45d2","variableMapping":{"time":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"c65d6543-da6c-11e4-b8b1-052ec48dd890","variableMapping":{"encoded":"nanoTime","backwardBit":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[418,402,5,429,431,6,440,445,470,403,9,481,1],"tindex":"c65d6544-da6c-11e4-b8b1-ff937c8ab7ef","variableMapping":{"bytePos":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[425,436,444,477],"tindex":"c65d6545-da6c-11e4-b8b1-8b1004a24329","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:457","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"c65d6546-da6c-11e4-b8b1-b55f1ed27cb8","variableMapping":{"freeIndex":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-2},{"failures":[],"tindex":"c65d6547-da6c-11e4-b8b1-d136f3ef1d38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[453],"tindex":"c65d6548-da6c-11e4-b8b1-cba56def781d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"c65d6549-da6c-11e4-b8b1-f33d119d40d8","variableMapping":{"allIter":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:385","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIterator.fetchWayGeometry(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[177,178,179,180,181,182,183,184,62,185,186,187,63,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,64,208,209,210,211,212,65,213,214,215,216,66,217,67,218,219,220,68,69,70,71,72,221,222,223,224,225,73,226,74,227,228,229,230,231,232,233,234,235,236,237,238,239,75,240,76,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,102,276,114,277,278,279,115,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,116,300,301,302,303,304,117,305,306,307,308,118,309,119,310,311,312,122,313,124,314,315,316,125,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,126,337,338,339,340,341,127,342,343,344,345,128,346,129,347,348,349,350,351,132,352,353,354,133,134,135,136,355,356,357,358,359,12,360,361,362,13,14,363,364,365,142,143,15,366,16,367,368,369,370,371,17,18,372,373,374,19,20,21,22,23,24,25,26,27,28,29,30,375,31,32,33,34,35,36,376,37,38,39,40,41,377,378,379,144,380,381,382,383,384,174,145,385,386,146,171,147,42,43,44,45,46,148,47,48,387,388,149,2,150,151,152,153,154,155,156,157,158,159,160,3,389,390,49,391],"tindex":"c65d654a-da6c-11e4-b8b1-7d933c425011","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"c65d654b-da6c-11e4-b8b1-779769ef9746","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"status":-2},{"failures":[365],"tindex":"c65d654c-da6c-11e4-b8b1-5bbfabe6ae93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[],"tindex":"c65d654d-da6c-11e4-b8b1-ab689395de5b","variableMapping":{"flags":"relBitMask","tmpValue":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[7],"tindex":"c65d8c5e-da6c-11e4-b8b1-637421b08aa3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[155],"tindex":"c65d8c5f-da6c-11e4-b8b1-5bbc971b41e8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[365],"tindex":"c65d8c60-da6c-11e4-b8b1-f5c41c915ad0","variableMapping":{"orientation":"fullDist2D","java.lang.Math.PI":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"c65d8c61-da6c-11e4-b8b1-c3621544a538","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[177,179,180,62,187,63,188,189,190,191,192,193,194,195,196,199,200,202,203,205,206,207,64,210,212,65,213,214,216,66,67,219,220,221,222,224,73,226,74,227,229,230,231,232,233,234,235,236,237,132,355,15,366,16,367,368,369,370,371,17,18,372,374,19,20,21,22,23,24,25,26,27,28,29,30,375,31,32,33,34,35,36,376,37,38,39,40,41,171,147,42,43,46,148,48],"tindex":"c65d8c62-da6c-11e4-b8b1-e9df31769041","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1433","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.loadWayGeometryHeader()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"c65d8c63-da6c-11e4-b8b1-c1028684a076","variableMapping":{"dataAccess":"location","com.graphhopper.storage.DAType.MMAP":"type","com.graphhopper.storage.DAType.UNSAFE_STORE":"type","type":"type","com.graphhopper.storage.DAType.RAM_STORE":"type","com.graphhopper.storage.DAType.RAM":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:165","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"MMAP\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse if (java.lang.String.contains(\"UNSAFE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse {\n    if (java.lang.String.contains(\"RAM_STORE\"))\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    else\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[],"tindex":"c65d8c64-da6c-11e4-b8b1-ab18fb24ceb2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"c65d8c65-da6c-11e4-b8b1-cbd08ebb9945","variableMapping":{"weight":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-2},{"failures":[],"tindex":"c65d8c66-da6c-11e4-b8b1-47c8e8d43d62","variableMapping":{"obtained":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[513],"tindex":"c65d8c67-da6c-11e4-b8b1-250a4520f31d","variableMapping":{"node":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":212,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":376,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":182,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":393,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":260,"com.graphhopper.GraphHopperAPITest.testNoLoad":495,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":80,"com.graphhopper.reader.OSMReaderTest.testFerry":149,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":358,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":402,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":445,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":496,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":226,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":147,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":220,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":482,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":326,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":120,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":162,"com.graphhopper.coll.CompressedArrayTest.testCompress":506,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":450,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":310,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":98,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":290,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":372,"com.graphhopper.GraphHopperTest.testPrepare":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":15,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":297,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":419,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":30,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":133,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":400,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":357,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":187,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":224,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":13,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":418,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":28,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":289,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":240,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":347,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":494,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":122,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":19,"com.graphhopper.GraphHopperTest.testLoadOSM":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":246,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":268,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":76,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":484,"com.graphhopper.reader.OSMReaderTest.testSort":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":428,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":158,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":314,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":307,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":114,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":510,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":110,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":174,"com.graphhopper.routing.DijkstraTest.initializationError":491,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":345,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":211,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":503,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":286,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":123,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":472,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":125,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":197,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":441,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":439,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":229,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":222,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":227,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":493,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":24,"com.graphhopper.coll.OSMIDMapTest.testGetLong":140,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":330,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":336,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":204,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":62,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":206,"com.graphhopper.coll.CompressedArrayTest.testCompress2":505,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":299,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":431,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":327,"com.graphhopper.GraphHopperAPITest.testLoad":49,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":405,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":267,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":463,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":291,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":281,"com.graphhopper.storage.LevelGraphStorageTest.testClone":191,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":14,"com.graphhopper.reader.OSMReaderTest.testBarriers":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":473,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":84,"com.graphhopper.util.GHUtilityTest.testCopy":132,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":237,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":58,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":410,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":497,"com.graphhopper.routing.PathTest.testFindInstruction":143,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":448,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":318,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":355,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":467,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":217,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":471,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":308,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":343,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":350,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":331,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":60,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":513,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":492,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":85,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":279,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":274,"com.graphhopper.util.InstructionListTest.testWayList2":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":481,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":247,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":322,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":420,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":129,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":415,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":364,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":501,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":195,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":172,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":26,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":280,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":153,"com.graphhopper.routing.AStarTest.initializationError":488,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":38,"com.graphhopper.coll.OSMIDMapTest.testGet":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":325,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":170,"com.graphhopper.routing.PathBidirRefTest.testExtract":377,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":64,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":103,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":443,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":422,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":251,"com.graphhopper.util.GHUtilityTest.testSort2":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":34,"com.graphhopper.reader.OSMReaderTest.testMain":150,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":185,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":335,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":424,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":512,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":52,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":234,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":210,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":315,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":198,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":202,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":219,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":199,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":339,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":266,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":470,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":205,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":160,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":173,"com.graphhopper.storage.GraphHopperStorageTest.testClone":283,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":176,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":293,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":396,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":177,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":86,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":180,"com.graphhopper.routing.PathTest.testTime":487,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":437,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":67,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":192,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":462,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":406,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":249,"com.graphhopper.reader.OSMReaderTest.testRelation":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":97,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":209,"com.graphhopper.util.GHUtilityTest.testSortDirected":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":480,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":381,"com.graphhopper.GraphHopperTest.testFootOnly":48,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":502,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":444,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":69,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":175,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":228,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":23,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":504,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":469,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":93,"com.graphhopper.search.NameIndexTest.testCreate":168,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":379,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":270,"com.graphhopper.routing.QueryGraphTest.testOneWay":385,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":408,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":509,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":447,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":75,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":507,"com.graphhopper.reader.OSMReaderTest.testWithBounds":159,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":131,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":346,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":360,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":99,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":468,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":0,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":188,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":186,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":479,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":452,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":338,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":257,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":457,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":332,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":115,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":21,"com.graphhopper.util.InstructionListTest.testWayList":134,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":309,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":77,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":50,"com.graphhopper.GraphHopperAPITest.testDisconnected179":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":87,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":340,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":477,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":390,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":96,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":112,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":427,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":44,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":285,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":373,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":302,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":417,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":31,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":485,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":18,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":66,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":458,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":434,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":398,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":40,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":412,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":407,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":430,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":276,"com.graphhopper.routing.PathTest.testWayList":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":435,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":89,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":456,"com.graphhopper.coll.OSMIDMapTest.testGet2":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":41,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":214,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":163,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":337,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":51,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":296,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":464,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":323,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":203,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":230,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":231,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":232,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":474,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":404,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":432,"com.graphhopper.util.GHUtilityTest.testSort":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":426,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":446,"com.graphhopper.search.NameIndexTest.testPut":166,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":413,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":225,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":261,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":72,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":254,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":272,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":403,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":384,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":365,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":313,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":433,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":164,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":416,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":466,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":333,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":12,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":273,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":102,"com.graphhopper.routing.PathTest.testFound":486,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":1,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":387,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":216,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":442,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":425,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":329,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":167,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":275,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":130,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":288,"com.graphhopper.util.InstructionListTest.testEmptyList":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":29,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":438,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":461,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":454,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":451,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":453,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":35,"com.graphhopper.reader.PrinctonReaderTest.testRead":389,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":78,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":118,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":74,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":324,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":392,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":508,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":79,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":190,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":334,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":475,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":8,"com.graphhopper.reader.OSMReaderTest.testFoot":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":101,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":146,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":165,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":244,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":511,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":56,"com.graphhopper.reader.OSMReaderTest.testOneWay":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":245,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":292,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":305,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":344,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":449,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":95,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":287,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":369,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":500,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":374,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":397,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":367,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":498,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":363,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":91,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":380,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":278,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":271,"com.graphhopper.routing.PathBidirRefTest.testExtract2":378,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":248,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":263,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":399,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":304,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":409,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":440,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":155,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":499,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":113,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":169,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":478,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":241,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":306,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":414,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":194,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":459,"com.graphhopper.GraphHopperTest.testFootAndCar":45,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":116,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":200,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":83,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":483,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":460,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":37,"com.graphhopper.GraphHopperTest.testPrepareOnly":171,"com.graphhopper.GraphHopperTest.testVia":42,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":81,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":157,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":181,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":136,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":303,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":465,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":94,"com.graphhopper.routing.AStarBidirectionTest.initializationError":489,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":394,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":215,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":213,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":124}}]
