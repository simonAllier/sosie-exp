[{"failures":[],"tindex":"20a4ac40-daa1-11e4-99fa-7530b7bd751e","variableMapping":{"defaultValue":"flags","flags":"flags","this":"preferWayEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"20a60bd1-daa1-11e4-99fa-fb58f685cb9a","variableMapping":{"flags":"encoded","mask":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"20a60bd2-daa1-11e4-99fa-152f73b81be6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[6],"tindex":"20a60bd3-daa1-11e4-99fa-7d4b3eed44ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-1},{"failures":[],"tindex":"20a60bd4-daa1-11e4-99fa-d783e167ee0a","variableMapping":{"bitsForEdgeFlags":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"20a60bd5-daa1-11e4-99fa-cde0a4cedb9f","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed","unknownSpeed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[],"tindex":"20a60bd6-daa1-11e4-99fa-4dcf4ffa286e","variableMapping":{"turnCostIndex":"node","nextTurnCostIndex":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"20a60bd7-daa1-11e4-99fa-6f32b1c83431","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[39],"tindex":"20a60bd8-daa1-11e4-99fa-854228901a0d","variableMapping":{"err":"segmentSizeInBytes","tmpErr":"segmentSizeInBytes","y1":"segmentSizeInBytes","dLon":"segmentSizeInBytes","sLat":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"20a60bd9-daa1-11e4-99fa-d9c8fdebb9b7","variableMapping":{"elem":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[8],"tindex":"20a60bda-daa1-11e4-99fa-9745e3b72d3d","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[8],"tindex":"20a632eb-daa1-11e4-99fa-bdb817245b9f","variableMapping":{"precision":"bwFaster","lat":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"20a632ec-daa1-11e4-99fa-c362c4272399","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"20a632ed-daa1-11e4-99fa-b98557cbaf92","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:273","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, boolean), com.graphhopper.routing.util.FlagEncoder.int, boolean)"},"status":-2},{"failures":[66,67,68],"tindex":"20a632ee-daa1-11e4-99fa-cf7c7140c873","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-1},{"failures":[69,70,71,72,73,74,8,75,76,77,78,79,80,18,81,82,19,20,83,84,85,86,87,88,4,89,90,5,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,21,113,45,24,114,115,116,25,117,51,28,118,119,120,121,122,123,35,124,64,38,125,126,127],"tindex":"20a632ef-daa1-11e4-99fa-c55db25ac16a","variableMapping":{"fromNode":"delta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[],"tindex":"20a632f0-daa1-11e4-99fa-7ba98c4f33b3","variableMapping":{"res":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[],"tindex":"20a632f1-daa1-11e4-99fa-57a7034c7346","variableMapping":{"foundIndex":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[128],"tindex":"20a632f2-daa1-11e4-99fa-fbb1ba436b05","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"20a632f3-daa1-11e4-99fa-7fbab6238289","variableMapping":{"str":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:188","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"20a632f4-daa1-11e4-99fa-09ea31c5b4ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:500","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"20a632f5-daa1-11e4-99fa-4d7e601700c2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[73,67],"tindex":"20a632f6-daa1-11e4-99fa-0186105d2066","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[12,129,130,13,131,14,15,132,133,134,135,136,137,138,139,140,141,16,17,142,143,144,145,146,75,147,148,149,4,89,90,5,91,93,94,150,151],"tindex":"20a632f7-daa1-11e4-99fa-7b333f36cc29","variableMapping":{"elevation":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:96","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[152,6,153,154,155,1,2,83,84,85,87,156,157,158,159,160,161,162,3,163,4,89,90,5,91,92,93,95],"tindex":"20a65908-daa1-11e4-99fa-1365a32a0f8f","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"20a65909-daa1-11e4-99fa-df6315397961","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"20a6590a-daa1-11e4-99fa-0b0552fd6830","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"20a6590b-daa1-11e4-99fa-058d4640a871","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"20a6590c-daa1-11e4-99fa-4bd7e78a7427","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[],"tindex":"20a6590d-daa1-11e4-99fa-c3acf0b7e970","variableMapping":{"index":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-2},{"failures":[],"tindex":"20a6590e-daa1-11e4-99fa-9970f984a561","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"20a6590f-daa1-11e4-99fa-7d1787b6dfee","variableMapping":{"index":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":0},{"failures":[],"tindex":"20a65910-daa1-11e4-99fa-51dbdd119a34","variableMapping":{"instruction":"obj"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"20a65911-daa1-11e4-99fa-3f212597a384","variableMapping":{"segmentsToMap":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":0},{"failures":[164,165],"tindex":"20a65912-daa1-11e4-99fa-b59eeab6b97d","variableMapping":{"length":"bufferIndex","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:129","type":"CtIfImpl","sourcecode":"if ((byte[][].int) > 0)\n    throw new java.lang.IllegalStateException(\"already initialized\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[],"tindex":"20a65913-daa1-11e4-99fa-919adc5aad82","variableMapping":{"store":"store"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[166,129,167,168,169,170,171,130,172,173,174,131,15,132,133,134,135,136,137,138,139,140,141,16,17,142,143,144,145,175,146,75,147,148,149,163,4,89,91,92,176],"tindex":"20a65914-daa1-11e4-99fa-8bf526c434aa","variableMapping":{"edgeId":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"20a68025-daa1-11e4-99fa-9bf481305e2e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-2},{"failures":[],"tindex":"20a68026-daa1-11e4-99fa-bdcd443927c5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[],"tindex":"20a68027-daa1-11e4-99fa-4561dcc624bd","variableMapping":{"width":"segmentSizePower","i":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:149","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"20a68028-daa1-11e4-99fa-8ba21d077a28","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"20a68029-daa1-11e4-99fa-e1245f3a24ca","variableMapping":{"i":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED","allBits":"com.graphhopper.routing.util.PriorityWeighting.KEY","hash":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"20a6802a-daa1-11e4-99fa-e9e68376ce8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"20a6802b-daa1-11e4-99fa-87b02bff6b25","variableMapping":{"maxMCSpeed":"incEleSum","speed":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":0},{"failures":[],"tindex":"20a6802c-daa1-11e4-99fa-418b21797c16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[69,70,71,72,73,74,8,75,76,77,78,79,80,177,18,81,178,82,19,20,179,2,83,84,85,86,87,156,157,158,159,160,161,3,180,181,182,88,163,4,89,90,5,91,92,93,94,95,183,96,97,98,99,100,101,102,103,184,164,165,185,186,104,105,106,107,108,109,187,110,111,112,188,21,113,45,24,114,115,116,189,25,117,51,28,118,119,120,190,191,121,192,193,194,195,196,197,198,199,200,122,123,201,35,124,64,38,125,126,202,203,127,204,205,206,207,208,209,210,211,212],"tindex":"20a6802d-daa1-11e4-99fa-15f39c60c1a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-1},{"failures":[],"tindex":"20a6802e-daa1-11e4-99fa-eb48c0ed5106","variableMapping":{"iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:364","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterator.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"20a6802f-daa1-11e4-99fa-457d71af371f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[213,214],"tindex":"20a68030-daa1-11e4-99fa-0726074d35a0","variableMapping":{"size":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"20a68031-daa1-11e4-99fa-75879f71637b","variableMapping":{"acceptBit":"encoded","ferryBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"20a6a742-daa1-11e4-99fa-6b178469457e","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"minutes","id":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"20a6a743-daa1-11e4-99fa-b5fdd5e2eb11","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[1,2,3,4,5],"tindex":"20a6a744-daa1-11e4-99fa-4753946bd546","variableMapping":{"oldValueIndex":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"20a6a745-daa1-11e4-99fa-65d24417d20e","variableMapping":{"area":"this","bitUtil":"this","bytes":"this","j":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:170","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.util.BitUtil.toInt(byte[], (int * 4))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":-2},{"failures":[],"tindex":"20a6a746-daa1-11e4-99fa-712ee0c7c163","variableMapping":{"maxTurnCosts":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","turnRestrictionBit":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[215,216,217,218,219,220,221,222,223],"tindex":"20a6a747-daa1-11e4-99fa-ad08d23e52e5","variableMapping":{"size":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"20a6a748-daa1-11e4-99fa-d9b0de6d8676","variableMapping":{"freeIndex":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[224],"tindex":"20a6a749-daa1-11e4-99fa-b99725f0476c","variableMapping":{"message":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[],"tindex":"20a6a74a-daa1-11e4-99fa-b303f6d2fe85","variableMapping":{"acceptBit":"acceptBit","intendedValues":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[225,213,226,214,179,161,3],"tindex":"20a6a74b-daa1-11e4-99fa-277ebd29600f","variableMapping":{"val":"bikeTag","defaultL":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[73,66,152,6,0,155,68,1,179,2,83,84,85,86,87,156,157,158,159,160,161,162,3,163,4,89,90,5,91,92,93,95],"tindex":"20a6a74c-daa1-11e4-99fa-771107236841","variableMapping":{"lastKey":"encoded","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"20a6a74d-daa1-11e4-99fa-f393074d1ba3","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[227,228,40,3,41,42,229,230,43,231,44,45,46,47,48,232,233,49,234,50,51,52,53,54,235,236,55,237,56,57,58,59,60,61,238,239,62,240,63,64,65],"tindex":"20a6a74e-daa1-11e4-99fa-0bdd7f828a43","variableMapping":{"oldPriorities":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"20a6a74f-daa1-11e4-99fa-27fe84240dd2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[129,130,131,15,132,133,134,135,136,137,138,140,17,142,143,144,145,146,75,147,148,149,89,90,5,91,93,150],"tindex":"20a6a750-daa1-11e4-99fa-833c03246a69","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-1},{"failures":[],"tindex":"20a6a751-daa1-11e4-99fa-51b55e6112d8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"20a6a752-daa1-11e4-99fa-2b28f34d665f","variableMapping":{"index":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"20a6ce63-daa1-11e4-99fa-c5bfc9f7c41c","variableMapping":{"str":"valueStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:281","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[73,67],"tindex":"20a6ce64-daa1-11e4-99fa-55a712c3fe13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[215,216,241,242,243,244,245,246,247,248,249,217,218,219,221,222,250,251,223],"tindex":"20a6ce65-daa1-11e4-99fa-178ab6e350fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"20a6ce66-daa1-11e4-99fa-85fe02416966","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-2},{"failures":[252,9,2,5,253,254,255,256,22,23,26,27,30,31,36,37],"tindex":"20a6ce67-daa1-11e4-99fa-e101f46e0355","variableMapping":{"id":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-1},{"failures":[7,257,258,259,10,0,11,1,260,261,12,166,167,130,13,172,174,131,14,15,134,135,138,141,17,142,149,79,18,2,3,262,4,5,150,111,112,21,263,41,264,23,265,266,267,24,268,116,25,269,47,270,27,271,272,273,28,274,29,275,53,276,31,277,278,279,32,280,33,34,123,35,281,60,282,37,283,284,285,38,286],"tindex":"20a6ce68-daa1-11e4-99fa-2300df957727","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[8],"tindex":"20a6ce69-daa1-11e4-99fa-6d71cc5ba4b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"20a6ce6a-daa1-11e4-99fa-0ff7301a0969","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"key","sign":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[287,288,2,5,94],"tindex":"20a6ce6b-daa1-11e4-99fa-3f7213eaf333","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"20a6ce6c-daa1-11e4-99fa-4377eb079390","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[],"tindex":"20a6ce6d-daa1-11e4-99fa-c52438325d77","variableMapping":{"maxSpeed":"shortTripsSpeed","fwdSpeed":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":0},{"failures":[],"tindex":"20a6ce6e-daa1-11e4-99fa-993802578cc4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[73,67],"tindex":"20a6ce6f-daa1-11e4-99fa-7fa5f8260604","variableMapping":{"cp":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"20a6ce70-daa1-11e4-99fa-2b6c306f3e7f","variableMapping":{"eleDelta":"decDist2DSum","decEleSum":"incDist2DSum","fullDist2D":"decDist2DSum","decDist2DSum":"incEleSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":0},{"failures":[],"tindex":"20a6ce71-daa1-11e4-99fa-e58fc6f86601","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:61","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint3D com.graphhopper.util.shapes.GHPoint3D = ((com.graphhopper.util.shapes.GHPoint3D)(java.lang.Object))"},"status":-2},{"failures":[17,142,145,83,84,85,4,89,90,5,91,93,94,150,151,289,290,291,292,293,241,294,295,242,105,106,296,244,245,297,298,299,300,301,302,246,108,303,304,248,249,305,306,307,308],"tindex":"20a6ce72-daa1-11e4-99fa-a126a8e2a741","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"x2","edgeTo":"y1","edgeFrom":"x2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-1},{"failures":[309],"tindex":"20a6ce73-daa1-11e4-99fa-a962a61a9696","variableMapping":{"flags":"encoded","nodeFlags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"20a6ce74-daa1-11e4-99fa-0fdd9002651d","variableMapping":{"maxTurnCosts":"maxTurnCosts","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","turnRestrictionBit":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[215,216,310,311,217,218,312,219,220,221,222,223],"tindex":"20a6f585-daa1-11e4-99fa-4f4dde015f39","variableMapping":{"r":"midLat","x":"midLat","absY":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"20a6f586-daa1-11e4-99fa-f79d1533315f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[215,216,241,242,243,244,245,246,247,248,249,217,218,312,219,221,222,250,251,223],"tindex":"20a6f587-daa1-11e4-99fa-ab450edd56ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"20a6f588-daa1-11e4-99fa-47d86b194580","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:349","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.nextEdge()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"20a6f589-daa1-11e4-99fa-d901bbfff7a9","variableMapping":{"time":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"20a6f58a-daa1-11e4-99fa-296bfcaacaee","variableMapping":{"elem":"elem","size":"size","keys":"keys","i":"element","key":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:163","type":"CtWhileImpl","sourcecode":"while ((int * 2) <= (int)) {\n    int int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n        int = int;\n    } else {\n        break;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-2},{"failures":[313,314,69,315,316,317,318,319,320,70,71,72,73,7,257,258,321,322,323,324,325,326,327,328,329,330,331,332,333,225,334,152,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,213,353,354,227,355,228,40,259,356,357,128,358,359,360,361,362,363,364,365,366,367,368,226,369,370,371,372,309,74,8,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,214,391,392,393,394,395,396,9,287,10,397,398,288,399,224,400,401,6,0,153,154,11,155,68,1,402,403,404,260,405,406,407,261,408,12,166,409,129,167,168,169,170,171,130,13,172,173,174,131,14,15,132,133,134,135,136,137,138,139,140,141,16,17,142,143,144,145,175,146,75,147,148,149,76,77,410,78,79,80,177,18,81,411,178,82,412,413,414,415,19,20,416,179,2,83,84,85,86,87,156,157,417,158,159,160,161,3,262,418,88,163,4,89,90,5,91,419,92,93,94,95,420,150,151,421,422,423,424,425,426,427,253,184,164,165,185,428,186,429,430,431,432,433,434,254,242,310,104,105,106,435,243,296,244,245,297,298,299,300,436,301,255,302,437,438,246,311,107,108,109,303,247,304,248,249,439,305,306,307,440,308,256,111,441,442,112,188,443,444,445,21,263,41,446,447,448,449,450,22,264,42,23,229,230,451,43,265,452,453,231,44,113,454,455,266,456,457,45,46,267,458,459,24,460,114,115,268,461,462,116,189,463,464,465,25,269,47,466,467,468,469,470,26,270,48,27,232,233,471,49,271,472,473,234,50,117,474,475,272,476,477,51,52,273,478,479,28,480,118,119,274,481,29,275,53,482,483,484,485,486,30,276,54,31,235,236,487,55,277,488,489,237,56,490,491,492,278,493,120,57,58,279,494,495,32,496,497,498,280,499,33,500,501,502,34,122,59,503,123,201,504,505,506,35,281,60,507,508,509,510,511,36,282,61,37,238,239,512,62,283,513,514,240,63,124,515,516,284,517,518,64,65,285,519,520,38,521,125,126,286,522],"tindex":"20a6f58b-daa1-11e4-99fa-e94c505b14c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":-1},{"failures":[321,322,323,324,325,326,327,328,329,330,331,332,333,225,334],"tindex":"20a6f58c-daa1-11e4-99fa-0df5c291fb1e","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[227,356],"tindex":"20a71c9d-daa1-11e4-99fa-351bee048729","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[66,333,352,368,390,6,155,68],"tindex":"20a71c9e-daa1-11e4-99fa-dde479c6b55f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-1},{"failures":[],"tindex":"20a71c9f-daa1-11e4-99fa-6d05996e17ae","variableMapping":{"a":"closed","approx":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[156],"tindex":"20a71ca0-daa1-11e4-99fa-b53fe461de62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"20a71ca1-daa1-11e4-99fa-7309d5ddb55e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[128],"tindex":"20a71ca2-daa1-11e4-99fa-457b0a0875c2","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[69,70,71,72,73,74,8,75,76,77,78,79,80,177,18,81,178,82,19,20,179,2,83,84,85,86,87,156,157,158,159,160,161,3,180,181,182,88,163,4,89,90,5,91,92,93,94,95,183,96,97,98,99,100,101,102,103,184,164,165,185,186,104,105,106,107,108,109,187,110,111,112,188,21,113,45,24,114,115,116,189,25,117,51,28,118,119,120,190,191,121,192,193,194,195,196,197,198,199,200,122,123,201,35,124,64,38,125,126,202,203,127,204,205,206,207,208,209,210,211,212],"tindex":"20a71ca3-daa1-11e4-99fa-0fc403840804","variableMapping":{"shiftSum":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":518,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":175,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":66,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":122,"com.graphhopper.GraphHopperAPITest.testNoLoad":421,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":431,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":275,"com.graphhopper.reader.OSMReaderTest.testFerry":179,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":257,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":258,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":340,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":289,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":325,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":108,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":163,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":522,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":42,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":190,"com.graphhopper.coll.CompressedArrayTest.testCompress":216,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":331,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":119,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":490,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":27,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":438,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":191,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":172,"com.graphhopper.GraphHopperTest.testPrepare":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":496,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":12,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":473,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":338,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":140,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":332,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":319,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":505,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":246,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":259,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":324,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":132,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":105,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":341,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":111,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":250,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":131,"com.graphhopper.GraphHopperTest.testLoadOSM":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":297,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":106,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":372,"com.graphhopper.reader.OSMReaderTest.testSort":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":352,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":188,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":193,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":478,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":116,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":497,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":18,"com.graphhopper.storage.RAMDataAccessTest.testHeader":208,"com.graphhopper.routing.DijkstraTest.initializationError":406,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":459,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":290,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":517,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":470,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":500,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":441,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":448,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":21,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":370,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":368,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":304,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":142,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":437,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":303,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":419,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":135,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":60,"com.graphhopper.coll.OSMIDMapTest.testGetLong":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":134,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":446,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":513,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":123,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":240,"com.graphhopper.coll.CompressedArrayTest.testCompress2":215,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":50,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":128,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":23,"com.graphhopper.GraphHopperAPITest.testLoad":150,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":506,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":395,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":232,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":47,"com.graphhopper.storage.LevelGraphStorageTest.testClone":508,"com.graphhopper.reader.OSMReaderTest.testBarriers":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":263,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":356,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":380,"com.graphhopper.util.GHUtilityTest.testCopy":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":484,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":256,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":365,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":225,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":291,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":433,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":211,"com.graphhopper.routing.PathTest.testFindInstruction":20,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":328,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":515,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":41,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":7,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":398,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":521,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":376,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":430,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":479,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":267,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":170,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":503,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":387,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":252,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":408,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":510,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":485,"com.graphhopper.util.InstructionListTest.testWayList2":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":298,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":274,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":449,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":114,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":337,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":393,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":74,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":189,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":294,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":36,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":121,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":342,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":229,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":136,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":269,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":86,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":192,"com.graphhopper.routing.AStarTest.initializationError":416,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":75,"com.graphhopper.coll.OSMIDMapTest.testGet":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":264,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":288,"com.graphhopper.routing.PathBidirRefTest.testExtract":407,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":101,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":124,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":305,"com.graphhopper.storage.RAMDataAccessTest.testCopy":204,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":461,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":322,"com.graphhopper.storage.RAMDataAccessTest.testSegments":210,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":255,"com.graphhopper.util.GHUtilityTest.testSort2":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":143,"com.graphhopper.reader.OSMReaderTest.testMain":83,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":201,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":231,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":346,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":251,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":306,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":6,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":443,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":495,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":37,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":62,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":286,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":79,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":238,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":266,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":374,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":514,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":161,"com.graphhopper.storage.StorablePropertiesTest.testStore":110,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":127,"com.graphhopper.storage.GraphHopperStorageTest.testClone":467,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":481,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":494,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":1,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":155,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":471,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":33,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":486,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":502,"com.graphhopper.routing.PathTest.testTime":415,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":364,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":125,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":509,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":405,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":428,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":56,"com.graphhopper.reader.OSMReaderTest.testRelation":417,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":516,"com.graphhopper.util.GHUtilityTest.testSortDirected":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":390,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":199,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":78,"com.graphhopper.GraphHopperTest.testFootOnly":94,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":295,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":323,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":154,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":164,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":166,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":277,"com.graphhopper.search.NameIndexTest.testCreate":98,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":209,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":76,"com.graphhopper.routing.QueryGraphTest.testOneWay":411,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":436,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":219,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":327,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":104,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":217,"com.graphhopper.reader.OSMReaderTest.testWithBounds":160,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":212,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":214,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":236,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":460,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":491,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":281,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":504,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":388,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":334,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":455,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":11,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":265,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":25,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":15,"com.graphhopper.util.InstructionListTest.testWayList":71,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":480,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":343,"com.graphhopper.GraphHopperAPITest.testDisconnected179":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":30,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":220,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":456,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":482,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":385,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":418,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":280,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":350,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":90,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":469,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":173,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":272,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":335,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":475,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":16,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":412,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":13,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":402,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":361,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":351,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":444,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":148,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":465,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":440,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":354,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":462,"com.graphhopper.routing.PathTest.testWayList":19,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":498,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":235,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":67,"com.graphhopper.coll.OSMIDMapTest.testGet2":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":149,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":196,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":285,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":454,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":349,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":472,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":450,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":468,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":248,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":283,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":249,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":205,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":200,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":439,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":382,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":358,"com.graphhopper.util.GHUtilityTest.testSort":315,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":493,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":223,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":348,"com.graphhopper.search.NameIndexTest.testPut":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":445,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":466,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":311,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":432,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":186,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":378,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":8,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":422,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":442,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":360,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":181,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":394,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":397,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":452,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":227,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":512,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":120,"com.graphhopper.routing.PathTest.testFound":414,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":95,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":309,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":520,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":224,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":501,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":347,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":230,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":176,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":97,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":31,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":202,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":270,"com.graphhopper.util.InstructionListTest.testEmptyList":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":139,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":260,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":401,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":333,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":400,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":144,"com.graphhopper.reader.PrinctonReaderTest.testRead":262,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":28,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":109,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":54,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":103,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":29,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":507,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":330,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":453,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":363,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":375,"com.graphhopper.reader.OSMReaderTest.testFoot":2,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":82,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":278,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":126,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":244,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":321,"com.graphhopper.reader.OSMReaderTest.testOneWay":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":245,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":233,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":52,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":458,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":329,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":198,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":381,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":489,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":169,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":241,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":174,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":167,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":197,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":292,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":425,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":9,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":487,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":410,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":162,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":463,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":39,"com.graphhopper.routing.PathBidirRefTest.testExtract2":261,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":14,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":299,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":367,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":183,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":477,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":426,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":369,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":156,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":293,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":499,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":427,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":386,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":435,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":273,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":316,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":511,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":403,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":117,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":239,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":359,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":308,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":206,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":483,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":404,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":447,"com.graphhopper.GraphHopperTest.testPrepareOnly":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":146,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":434,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":53,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":158,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":34,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":73,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":476,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":10,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":157,"com.graphhopper.routing.AStarBidirectionTest.initializationError":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":488,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":152,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":519,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":65,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":112}}]
