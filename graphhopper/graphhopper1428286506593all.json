[{"failures":[],"tindex":"bed1c044-dc02-11e4-b49e-2311df9ff758","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"bed2aaa5-dc02-11e4-b49e-c10f60e3e1bf","variableMapping":{"nodesContracted":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"bed2aaa6-dc02-11e4-b49e-cd803afdc25c","variableMapping":{"hash":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"bed2aaa7-dc02-11e4-b49e-911e2a526f5b","variableMapping":{"java.lang.Integer.MAX_VALUE":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27],"tindex":"bed2aaa8-dc02-11e4-b49e-351c0129016e","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"y","speed":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[9,10,28,11,29,12,13,16,17,18],"tindex":"bed2aaa9-dc02-11e4-b49e-55cea3be4e12","variableMapping":{"resultOrientation":"midLon","orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[30],"tindex":"bed2aaaa-dc02-11e4-b49e-83144defdb1d","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[],"tindex":"bed2d1bb-dc02-11e4-b49e-c7c9c8109a64","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[31,32],"tindex":"bed2d1bc-dc02-11e4-b49e-91ff465c94a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[33,34],"tindex":"bed2d1bd-dc02-11e4-b49e-a15141d44948","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[35,36,0,37,1,2,3,4,5,38,6,7,8,39,9,10,28,11,12,13,14,15,16,17,18,40,41,42,43,44,45,46,47,48,49,50],"tindex":"bed2d1be-dc02-11e4-b49e-4daeae9e6078","variableMapping":{"size":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"bed2d1bf-dc02-11e4-b49e-63fdcbc1a139","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:71","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[35,36,0,51,52,37,53,54,55,3,56,57,58,59,60,61,62,63,5,64,65,38,66,67,68,8,69,70,39,71,72,73,9,10,28,11,29,12,13,16,17,18,40,41,42,43,44,45,46,47,48,49,74,75,76,50],"tindex":"bed2d1c0-dc02-11e4-b49e-13eb3b4f272b","variableMapping":{"lastKey":"bits","key":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"bed2d1c1-dc02-11e4-b49e-6570ba3681f1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[40,43],"tindex":"bed2d1c2-dc02-11e4-b49e-0bee9d5a3416","variableMapping":{"shift":"encoded","tmpValue":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"bed2d1c3-dc02-11e4-b49e-316284bad5c5","variableMapping":{"pointIndex":"unvisitedDeadEnds","index":"unvisitedDeadEnds"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[77,78],"tindex":"bed2d1c4-dc02-11e4-b49e-cbde052e7611","variableMapping":{"systemProperty":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[79,80,40,41,42,43,44,81,45,46,82,83,84,47,48,49,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,77,108,109,110,111,112,113,114,115,116,117,118,119,34,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,78,143,144,145,146,147,148,149,150,151,152,153,154,26],"tindex":"bed2d1c5-dc02-11e4-b49e-291e7f371a7a","variableMapping":{"str":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return \"destination: \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-1},{"failures":[9,10,11,29,12,13,17,18],"tindex":"bed2d1c6-dc02-11e4-b49e-69639b05d454","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[130],"tindex":"bed2d1c7-dc02-11e4-b49e-8fdb5b92b50a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,52,37,53,65,38,66,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,79,80,40,41,42,43,44,81,45,46,82,83,84,47,48,49,85,86,87,88,90,91,92,93,95,198,199,200,201,202,203,204,205,206,207,19,20,208,33,209,210,24,25,26,211],"tindex":"bed2f8d8-dc02-11e4-b49e-635a52dd2aa7","variableMapping":{"wayIndex":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:263","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"bed2f8d9-dc02-11e4-b49e-85e8aaa669dc","variableMapping":{"start":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[97,107,132,142],"tindex":"bed2f8da-dc02-11e4-b49e-ff30fbf9ecec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[212],"tindex":"bed2f8db-dc02-11e4-b49e-21c90d3fda20","variableMapping":{"str":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:424","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"bed2f8dc-dc02-11e4-b49e-055c47e5c2a2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"bed2f8dd-dc02-11e4-b49e-8d865248418e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[212],"tindex":"bed2f8de-dc02-11e4-b49e-934715234541","variableMapping":{"message":"dayStr","hash":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:82","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + ((this.java.lang.String) != null ? this.java.lang.String.hashCode() : 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"bed2f8df-dc02-11e4-b49e-81b42557d0c4","variableMapping":{"enableIfAssert":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1371","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":0},{"failures":[],"tindex":"bed2f8e0-dc02-11e4-b49e-8199aa8204d5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"bed2f8e1-dc02-11e4-b49e-4ba9fdd61c15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"bed2f8e2-dc02-11e4-b49e-535dd2ce0241","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"bed2f8e3-dc02-11e4-b49e-795739ea7f77","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"bed2f8e4-dc02-11e4-b49e-b7ed2b86d66d","variableMapping":{"periodicUpdates":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":0},{"failures":[122],"tindex":"bed31ff5-dc02-11e4-b49e-1de8b58dc5b3","variableMapping":{"oldValueIndex":"encoded","lastKey":"encoded","key":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[],"tindex":"bed31ff6-dc02-11e4-b49e-133d72693b65","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"bed31ff7-dc02-11e4-b49e-bb7a53e070c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[99,102,109,111,115,133,134,137,144,146,150],"tindex":"bed31ff8-dc02-11e4-b49e-237c7132ff6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:488","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-1},{"failures":[83,212],"tindex":"bed31ff9-dc02-11e4-b49e-8f9371f4f662","variableMapping":{"red":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[95,31,32],"tindex":"bed31ffa-dc02-11e4-b49e-555c78432d48","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[213,214,215,216,217],"tindex":"bed31ffb-dc02-11e4-b49e-47e4f8190216","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[218,219,220,221,222,217,223],"tindex":"bed31ffc-dc02-11e4-b49e-9f4e01d7e699","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"bed31ffd-dc02-11e4-b49e-3dc8d4aea35a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"bed31ffe-dc02-11e4-b49e-f13fedff4b5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:59","type":"CtLocalVariableImpl","sourcecode":"final java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState> java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState> = new java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>()"},"status":-2},{"failures":[],"tindex":"bed31fff-dc02-11e4-b49e-6f928b00ebfa","variableMapping":{"weightApproximation":"com.graphhopper.util.AngleCalc.PI3_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,52,53,65,66,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,79,80,40,41,42,43,44,81,45,46,82,83,84,47,48,49,85,86,87,88,90,91,92,93,95,199,201,202,204,205,207,19,20,209,210,24,25,26],"tindex":"bed32000-dc02-11e4-b49e-6faebb0cadb0","variableMapping":{"locs":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[79,43,46,84,97,128,129],"tindex":"bed32001-dc02-11e4-b49e-3181ecb4f5d9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"bed34712-dc02-11e4-b49e-dd2f93449a72","variableMapping":{"high":"y1","guess":"y1","low":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"bed34713-dc02-11e4-b49e-b9d890c32ad0","variableMapping":{"y1":"segmentSizePower","y2":"length","x1":"segmentSizePower","x2":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,17,18],"tindex":"bed34714-dc02-11e4-b49e-017ae7c2b255","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[51,64,9,10,28,11,29,12,13,16,17,18],"tindex":"bed34715-dc02-11e4-b49e-7da03feca276","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[],"tindex":"bed34716-dc02-11e4-b49e-ab016dded6f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[],"tindex":"bed34717-dc02-11e4-b49e-35351a6d88ae","variableMapping":{"dist":"prio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[35,36,224,225,226,227,228,229,161,230,231,162,163,232,233,234,164,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,165,255,256,257,258,259,166,260,261,262,263,167,264,168,169,265,266,170,267,268,171,172,269,270,271,173,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,174,292,293,294,295,296,175,297,298,299,300,176,301,177,178,302,303,304,305,306,307,308,309,310,0,51,52,37,53,54,1,55,2,3,56,57,58,59,311,60,61,62,63,312,5,64,65,38,66,67,6,68,7,8,69,70,39,71,313,72,73,179,180,181,182,314,183,315,316,317,318,319,320,321,322,185,186,323,324,325,187,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,188,346,347,348,349,350,189,351,352,353,354,190,355,191,192,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,193,384,385,386,387,388,389,390,391,392,393,394,79,80,40,41,42,43,44,395,81,45,82,396,397,398,399,83,84,47,48,49,85,86,87,88,90,91,92,93,94,95,198,199,400,200,201,202,203,204,205,401,206,207,402,403,404,405,406,407,408,409,19,20,410,411,412,413,414,31,32,415,416,34,126,417,418,419,420,421,422,423,424,425,426,213,427,428,74,429,430,431,75,76,432,433,50,434,214,209,215,435,216,436,437,438,439,440,441,442,443,444,217,445,446,447,223,448,449,450,451,452,210,24,25,26,453,454,455,456,211,457,458,459],"tindex":"bed34718-dc02-11e4-b49e-31f732698339","variableMapping":{"size":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[],"tindex":"bed36e29-dc02-11e4-b49e-cba38ea0387c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[33],"tindex":"bed36e2a-dc02-11e4-b49e-6167cb249a59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"bed36e2b-dc02-11e4-b49e-dfb14ee30b38","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"bed36e2c-dc02-11e4-b49e-c17922239428","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[40,421,422,423,424,425,213,427,74,429,431,75,76,432,433,50,214,215,435,216,436,439,445,448],"tindex":"bed36e2d-dc02-11e4-b49e-2942e0f120ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[35,40,41,42,43,44,45,46,421,422,423,424,425,426,213,427,428,74,429,431,75,76,432,433,50,214,209,215,435,216,436,439,217,445,448],"tindex":"bed36e2e-dc02-11e4-b49e-cda24f2c37f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"status":-1},{"failures":[460],"tindex":"bed36e2f-dc02-11e4-b49e-31febe0d035e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[102,115,137,150],"tindex":"bed36e30-dc02-11e4-b49e-afc6b0eeaca5","variableMapping":{"str":"wayTypeName","name":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"bed36e31-dc02-11e4-b49e-ebfe86cd83b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[83,93,95,122],"tindex":"bed36e32-dc02-11e4-b49e-05871aab9054","variableMapping":{"fullyLoaded":"isRoundabout"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1079","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"bed36e33-dc02-11e4-b49e-ff3bb9c26b1b","variableMapping":{"scDirMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"bed36e34-dc02-11e4-b49e-938b7a9cd54a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[],"tindex":"bed36e35-dc02-11e4-b49e-7d89934c7e7c","variableMapping":{"index":"start","entrySize":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:294","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[87],"tindex":"bed36e36-dc02-11e4-b49e-d57088c368a6","variableMapping":{"foundIndex":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-1},{"failures":[],"tindex":"bed36e37-dc02-11e4-b49e-2b92910a3a99","variableMapping":{"factor":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[46,97,128,129],"tindex":"bed36e38-dc02-11e4-b49e-7ba3088ae198","variableMapping":{"counter":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"bed36e39-dc02-11e4-b49e-515897108134","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"bed36e3a-dc02-11e4-b49e-6f7800652861","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[35,36,155,156,157,158,461,462,463,225,226,227,228,229,161,230,231,162,163,232,233,234,164,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,165,255,256,257,258,259,166,260,261,262,263,167,264,168,169,265,266,464,170,268,171,172,269,270,271,173,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,174,292,293,294,295,296,175,297,298,299,300,176,301,177,178,302,303,304,305,306,307,309,310,0,51,52,37,53,54,1,55,2,3,56,57,58,59,60,61,62,63,312,5,64,65,38,66,67,6,68,7,8,69,70,39,71,72,73,465,179,180,181,182,314,183,315,316,317,318,320,321,184,466,467,322,185,186,323,324,325,187,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,188,346,347,348,349,350,189,351,352,353,354,190,355,191,192,356,357,369,193,194,195,468,196,197,79,80,40,41,42,43,44,395,81,45,46,82,396,397,469,470,471,398,399,83,84,47,48,49,85,86,87,88,89,90,91,92,93,94,95,198,198,199,199,400,400,200,200,201,201,202,202,203,203,204,204,205,205,401,401,206,206,207,207,403,404,408,409,19,20,413,414,31,32,415,416,208,33,472,421,422,423,424,425,426,213,427,428,74,429,430,431,75,76,432,433,50,434,214,209,215,435,216,436,437,439,440,441,442,443,444,217,445,446,447,223,448,449,450,451,452,210,24,25,26,453,454,455,456,211,457,459],"tindex":"bed3954b-dc02-11e4-b49e-095bac15c147","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"bed3954c-dc02-11e4-b49e-cb5263e2b828","variableMapping":{"i":"indexDivisor","mainNodes":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:439","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"bed3954d-dc02-11e4-b49e-cbf029ae3962","variableMapping":{"high":"maxValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"bed3954e-dc02-11e4-b49e-a790b04e4557","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-2},{"failures":[230,236,244,246,247,249,253,254,166,260,273,281,283,284,286,290,291,175,297,327,335,337,338,340,344,345,189,351,360,368,370,371,373,377,378,384,385,413,32],"tindex":"bed3954f-dc02-11e4-b49e-c502ad38490e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[],"tindex":"bed39550-dc02-11e4-b49e-1d448dd2fd0b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[96,473],"tindex":"bed39551-dc02-11e4-b49e-8305e52e2991","variableMapping":{"initialBits":"relBitMask","allBits":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[],"tindex":"bed39552-dc02-11e4-b49e-ef726b2e5416","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[],"tindex":"bed39553-dc02-11e4-b49e-411e6fa93099","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[212],"tindex":"bed39554-dc02-11e4-b49e-b12a514d396d","variableMapping":{"cp":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:125","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"bed39555-dc02-11e4-b49e-33180e63cae9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[220,222],"tindex":"bed39556-dc02-11e4-b49e-0f0e1043d4e4","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"bed39557-dc02-11e4-b49e-f3c36626c17b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"bed3bc68-dc02-11e4-b49e-d73ca75a92dd","variableMapping":{"incEleSum":"java.lang.Math.PI","eleDelta":"resultOrientation","incDist2DSum":"orientation","decEleSum":"java.lang.Math.PI","fullDist2D":"orientation","decDist2DSum":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"bed3bc69-dc02-11e4-b49e-45f6e76b4c59","variableMapping":{"counts":"maxTurnCosts","counter":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"bed3bc6a-dc02-11e4-b49e-6f7b7cc1c029","variableMapping":{"size":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"bed3bc6b-dc02-11e4-b49e-633316cebb4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"bed3bc6c-dc02-11e4-b49e-db72688cdae2","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","nodeId":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"bed3bc6d-dc02-11e4-b49e-a9ac1af9e048","variableMapping":{"dist":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[],"tindex":"bed3bc6e-dc02-11e4-b49e-b37d42397c16","variableMapping":{"distance":"factor","maxSpeed":"factor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-2},{"failures":[],"tindex":"bed3bc6f-dc02-11e4-b49e-5b5867cd5df3","variableMapping":{"initLeafSize":"start","maxLeafEntries":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[35,36,162,235,236,238,239,243,250,252,257,259,261,263,265,170,171,272,273,275,276,280,287,289,294,296,298,300,302,310,61,73,321,185,326,327,329,330,334,341,343,348,350,352,354,356,359,360,362,363,367,374,376,382,193,386,388,393,398,399,201,403,404,413,414,31,32,415,421,423,424,425,426,213,427,428,74,429,76,432,433,50,214,209,215,435,216,439,440,441,442,443,217,446,223,448,210,24,25,453,454,211],"tindex":"bed3bc70-dc02-11e4-b49e-53692c0ed4e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"bed3bc71-dc02-11e4-b49e-b12a7c80657d","variableMapping":{"nextTowerId":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[226],"tindex":"bed3bc72-dc02-11e4-b49e-a91b4a76d00e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"bed3bc73-dc02-11e4-b49e-814820df0ceb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[474,40,41,44,81,422,423,424,425,426,213,427,428,74,429,430,431,75,76,432,433,50,434,214,209,215,435,216,437,439,440,441,442,443,444,217,446,447,223,448],"tindex":"bed3bc74-dc02-11e4-b49e-b90bd3fea9b3","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[219,221,422,424,213,427,74,75,432,433,434,214,209,215,435,216,217,223],"tindex":"bed3bc75-dc02-11e4-b49e-b3f5378eb38b","variableMapping":{"foundIndex":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[83],"tindex":"bed3bc76-dc02-11e4-b49e-771d4cbe8685","variableMapping":{"fwdFaster":"shortTripsSpeed","incDist2DSum":"longTripsSpeed","fwdSlower":"shortTripsSpeed","fullDist2D":"longTripsSpeed","restDist2D":"shortTripsSpeed","speed":"longTripsSpeed","decDist2DSum":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":259,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":434,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":34,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":161,"com.graphhopper.GraphHopperAPITest.testNoLoad":224,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":359,"com.graphhopper.reader.OSMReaderTest.testFerry":83,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":453,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":454,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":145,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":100,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":38,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":80,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":27,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":266,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":281,"com.graphhopper.coll.CompressedArrayTest.testCompress":18,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":192,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":379,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":312,"com.graphhopper.util.AngleCalcTest.testOrientation":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":446,"com.graphhopper.GraphHopperTest.testPrepare":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":390,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":436,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":143,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":429,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":465,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":102,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":450,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":233,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":5,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":415,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":423,"com.graphhopper.coll.BitSetImplTest.testCopy":30,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":428,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":37,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":146,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":170,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":14,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":164,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":448,"com.graphhopper.GraphHopperTest.testLoadOSM":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":53,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":410,"com.graphhopper.reader.OSMReaderTest.testSort":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":151,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":31,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":172,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":353,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":185,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":391,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":204,"com.graphhopper.routing.DijkstraTest.initializationError":402,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":300,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":258,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":332,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":267,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":173,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":244,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":141,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":138,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":68,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":340,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":76,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":67,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":395,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":426,"com.graphhopper.coll.OSMIDMapTest.testGetLong":196,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":425,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":291,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":251,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":162,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":253,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":23,"com.graphhopper.coll.CompressedArrayTest.testCompress2":17,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":345,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":132,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":282,"com.graphhopper.GraphHopperAPITest.testLoad":35,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":234,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":337,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":327,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":212,"com.graphhopper.storage.LevelGraphStorageTest.testClone":238,"com.graphhopper.reader.OSMReaderTest.testBarriers":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":272,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":62,"com.graphhopper.util.GHUtilityTest.testCopy":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":73,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":104,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":308,"com.graphhopper.routing.PathTest.testFindInstruction":20,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":255,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":273,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":129,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":451,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":108,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":305,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":354,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":298,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":455,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":443,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":460,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":407,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":240,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":364,"com.graphhopper.util.InstructionListTest.testWayList2":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":386,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":57,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":356,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":277,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":144,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":467,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":177,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":411,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":208,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":242,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":373,"com.graphhopper.storage.RAMDirectoryTest.testSynched":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":283,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":213,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":326,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":85,"com.graphhopper.routing.AStarTest.initializationError":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":209,"com.graphhopper.coll.OSMIDMapTest.testGet":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":280,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":130,"com.graphhopper.routing.PathBidirRefTest.testExtract":403,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":165,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":468,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":303,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":384,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":61,"com.graphhopper.util.GHUtilityTest.testSort2":456,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":432,"com.graphhopper.reader.OSMReaderTest.testMain":47,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":163,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":290,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":15,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":39,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":152,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":121,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":388,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":245,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":249,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":265,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":201,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":107,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":252,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":93,"com.graphhopper.storage.StorablePropertiesTest.testStore":184,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":159,"com.graphhopper.storage.GraphHopperStorageTest.testClone":329,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":387,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":127,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":462,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":125,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":339,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":225,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":139,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":365,"com.graphhopper.routing.PathTest.testTime":409,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":136,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":168,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":239,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":59,"com.graphhopper.reader.OSMReaderTest.testRelation":89,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":378,"com.graphhopper.util.GHUtilityTest.testSortDirected":459,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":116,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":200,"com.graphhopper.GraphHopperTest.testFootOnly":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":124,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":180,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":463,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":6,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":473,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":424,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":437,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":374,"com.graphhopper.search.NameIndexTest.testCreate":158,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":198,"com.graphhopper.routing.QueryGraphTest.testOneWay":401,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":311,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":52,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":9,"com.graphhopper.reader.OSMReaderTest.testWithBounds":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":117,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":371,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":380,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":96,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":235,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":232,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":131,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":105,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":293,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":287,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":187,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":422,"com.graphhopper.util.InstructionListTest.testWayList":24,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":355,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":147,"com.graphhopper.GraphHopperAPITest.testDisconnected179":36,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":366,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":113,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":399,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":393,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":42,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":331,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":175,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":447,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":348,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":431,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":406,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":445,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":167,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":150,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":270,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":435,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":154,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":322,"com.graphhopper.routing.PathTest.testWayList":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":392,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":370,"com.graphhopper.coll.OSMIDMapTest.testGet2":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":216,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":261,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":469,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":292,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":278,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":330,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":7,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":8,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":69,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":219,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":133,"com.graphhopper.util.GHUtilityTest.testSort":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":383,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":149,"com.graphhopper.search.NameIndexTest.testPut":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":302,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":328,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":64,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":307,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":183,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":110,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":33,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":315,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":268,"com.graphhopper.storage.MMapDirectoryTest.testSynched":464,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":412,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":470,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":288,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":413,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":193,"com.graphhopper.routing.PathTest.testFound":408,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":82,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":97,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":263,"com.graphhopper.util.AngleCalcTest.testAtan2":22,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":148,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":284,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":474,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":157,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":369,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":334,"com.graphhopper.util.InstructionListTest.testEmptyList":452,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":74,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":75,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":120,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":103,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":433,"com.graphhopper.reader.PrinctonReaderTest.testRead":398,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":190,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":66,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":279,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":10,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":358,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":289,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":77,"com.graphhopper.reader.OSMReaderTest.testFoot":84,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":382,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":471,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":2,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":13,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":3,"com.graphhopper.reader.OSMReaderTest.testOneWay":95,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":338,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":351,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":299,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":101,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":346,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":112,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":376,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":442,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":4,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":439,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":440,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":472,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":372,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":400,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":94,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":323,"com.graphhopper.routing.PathBidirRefTest.testExtract2":404,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":421,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":58,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":137,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":310,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":155,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":350,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":319,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":140,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":87,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":394,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":54,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":352,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":458,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":241,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":418,"com.graphhopper.GraphHopperTest.testFootAndCar":43,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":188,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":247,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":134,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":362,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":419,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":444,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":275,"com.graphhopper.storage.StorablePropertiesTest.testLoad":466,"com.graphhopper.GraphHopperTest.testPrepareOnly":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":214,"com.graphhopper.GraphHopperTest.testVia":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":309,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":360,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":90,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":229,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":26,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":349,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":375,"com.graphhopper.routing.AStarBidirectionTest.initializationError":405,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":106,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":262,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":260,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":171}}]
