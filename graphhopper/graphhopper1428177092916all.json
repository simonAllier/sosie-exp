[{"failures":[],"tindex":"fe90e1be-db03-11e4-a049-8b0623872e55","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"fe9108cf-db03-11e4-a049-c5ebec71f6db","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"fe9108d0-db03-11e4-a049-c11a5d399018","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"speed","edgeTo":"speed","edgeFrom":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[41,42,43,11,12,15,44,23,45,46,37,47],"tindex":"fe9108d1-db03-11e4-a049-99d425748a3c","variableMapping":{"tmp":"value","initializedCounter":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"fe9108d2-db03-11e4-a049-41a542fa3d33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:310","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":0},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"fe9108d3-db03-11e4-a049-5d88c726f3b8","variableMapping":{"pointIndex":"tmpPrevEdge","index":"edgeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[53,58,61,62,68,70,72,73,75,77],"tindex":"fe9108d4-db03-11e4-a049-b562589261b8","variableMapping":{"index":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"fe912fe5-db03-11e4-a049-d54914df929f","variableMapping":{"lastKey":"encoded","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":0},{"failures":[79,80,81,82,83,58,61,68,70,72,84,73,85,74,86,87,75,76,77,78,88],"tindex":"fe912fe6-db03-11e4-a049-bbc7db74b186","variableMapping":{"intVal":"nodeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-1},{"failures":[89,90,91,92],"tindex":"fe912fe7-db03-11e4-a049-0777a906f998","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"fe912fe8-db03-11e4-a049-cfcccfc0434d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"fe912fe9-db03-11e4-a049-97eaf804fb11","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"fe912fea-db03-11e4-a049-870631a3fb49","variableMapping":{"elem":"mKeys","i":"com.graphhopper.coll.SparseIntIntArray.DELETED","value":"com.graphhopper.coll.SparseIntIntArray.DELETED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:302","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[],"tindex":"fe912feb-db03-11e4-a049-a5798281b32a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"fe912fec-db03-11e4-a049-999627c3cfc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:506","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[131,48,49,50,51,52,53,54,55,56,57,58,59,132,60,61,133,62,63,64,65,66,67,134,68,69,70,71,72,84,73,85,74,86,87,135,75,76,136,77,78],"tindex":"fe912fed-db03-11e4-a049-e9a6ce1b43c5","variableMapping":{"initLeafSize":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"fe912fee-db03-11e4-a049-6b427d3c10ea","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[137,14,138,15,16,139,140,44,141,142,143,17,144,89,18],"tindex":"fe912fef-db03-11e4-a049-53683418773d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:303","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-1},{"failures":[],"tindex":"fe912ff0-db03-11e4-a049-c9eb9aaa85d5","variableMapping":{"r":"fwdFaster","x":"fwdFaster","absY":"fwdFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"fe912ff1-db03-11e4-a049-057ecbc12d50","variableMapping":{"byteCount":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[131,49,50,51,52,53,54,55,56,57,58,59,132,60,61,133,62,63,64,65,66,67,134,68,69,70,71,72,84,73,85,74,86,87,135,75,76,136,77,78],"tindex":"fe915702-db03-11e4-a049-27af9056267a","variableMapping":{"heap":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"fe915703-db03-11e4-a049-09b672b1e7c8","variableMapping":{"bytePointer":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:80","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"fe915704-db03-11e4-a049-836a963f164b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[145,41,42,146,0,1,5,9,10],"tindex":"fe915705-db03-11e4-a049-cf1e9fd48c57","variableMapping":{"fromNode":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[],"tindex":"fe915706-db03-11e4-a049-d742f48c1324","variableMapping":{"location":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphBuilder:55","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0},{"failures":[],"tindex":"fe915707-db03-11e4-a049-3f6f25864359","variableMapping":{"this":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[147,148,149,150,151,152,93,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,102,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,111,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,120,205,206,207,208,209,210,211,212,213,214,215,216,217,145,48,49,50,218,41,51,52,219,42,220,221,1,2,222,6,7,223,224,8,10,225,226,227,228,229,230,231,232,129,233,130,234,235,236,237,238,239,240,53,54,55,56,57,58,59,132,60,61,133,62,63,64,65,66,67,134,68,69,70,71,72,241,84,73,85,74,86,87,75,242,76,136,77,78,243,244,245,246,247,248,249,88],"tindex":"fe915708-db03-11e4-a049-950b48fed220","variableMapping":{"edgePointer":"forwardBit","edgeEntryBytes":"shift","nextEdge":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:763","type":"CtAssignmentImpl","sourcecode":"this.long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"fe915709-db03-11e4-a049-cf26bb55a857","variableMapping":{"scDirMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"fe91570a-db03-11e4-a049-5dd4d70942f1","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"fe91570b-db03-11e4-a049-13d5a910f8eb","variableMapping":{"minDistance":"backSpeed","rMin":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"fe91570c-db03-11e4-a049-4dab1159e1ff","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,10,129,250,130],"tindex":"fe917e1d-db03-11e4-a049-bf5c165727bc","variableMapping":{"oldPriorities":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[89,90,251,237,252,91,92],"tindex":"fe917e1e-db03-11e4-a049-9b5b9cdcdb85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[147,253,148,79,254,80,149,255,81,256,150,257,258,259,260,151,152,93,261,153,154,262,263,155,156,94,157,95,96,264,97,158,265,159,98,99,266,267,268,160,269,161,100,101,162,270,163,164,271,272,273,165,274,166,275,276,167,277,278,279,280,168,169,102,281,170,171,282,283,172,173,103,174,104,105,284,106,175,285,176,107,108,286,287,288,177,289,178,109,110,179,290,180,181,291,292,293,182,294,183,184,295,185,186,296,187,297,298,299,300,188,189,111,301,190,191,302,303,192,193,112,194,113,114,304,115,195,305,196,116,117,306,307,308,197,309,198,118,119,199,310,200,201,311,312,313,202,314,203,204,120,315,205,206,316,317,207,208,121,209,122,123,318,124,210,319,211,125,126,320,321,322,212,323,213,127,128,214,324,215,216,325,326,327,217,328,145,48,49,50,218,41,51,52,219,42,146,220,221,43,225,226,227,228,329,229,230,231,330,331,13,332,333,129,233,250,130,234,334,137,14,138,15,16,139,140,44,141,142,143,17,144,89,18,335,336,235,337,19,20,338,21,22,23,339,340,341,342,45,343,344,345,346,24,347,90,25,26,348,349,350,236,351,251,352,353,354,237,355,238,356,239,357,358,359,360,361,362,363,364,252,365,366,27,28,29,367,368,46,369,370,371,372,30,373,91,31,32,374,33,34,375,35,36,37,376,377,378,379,47,380,381,382,383,38,384,92,39,40,240,53,54,55,56,57,58,59,132,60,61,133,62,63,64,65,66,67,134,68,69,70,71,72,241,84,385,73,85,74,86,87,135,75,242,76,136,77,78,243,386,244,245,246,247,248,249,88],"tindex":"fe917e1f-db03-11e4-a049-512fa073c2d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[],"tindex":"fe917e20-db03-11e4-a049-1f6e3c14439e","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"fe917e21-db03-11e4-a049-75636c2a6529","variableMapping":{"from":"indexDivisor","lonSize":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:300","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"fe917e22-db03-11e4-a049-09b05a43413d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[147,253,150,152,93,153,154,156,158,159,160,161,162,163,165,166,167,169,102,170,171,173,175,176,177,178,179,180,182,183,184,185,186,187,189,111,190,191,193,195,196,197,198,199,200,202,204,120,205,206,208,210,211,212,213,214,215,217,220,221,225,227,228,129,233,250,130,234,240,54,55,56,57,58,59,132,60,61,64,65,66,67,68,69,70,71,72,73,85,74,86,87,75,76,77,78,244,245,246,248,249,88],"tindex":"fe91a533-db03-11e4-a049-39e7d6618868","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"fe91a534-db03-11e4-a049-c156def3e131","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":0},{"failures":[10,250],"tindex":"fe91a535-db03-11e4-a049-77e849b75984","variableMapping":{"intVal":"maxCount","degree":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[1,6,43,10,11,387,12,15,44,17,18,20,21,23,339,45,24,26,388,389,356,28,29,46,30,32,34,35,37,376,47,38,40],"tindex":"fe91a536-db03-11e4-a049-bd099aba2c52","variableMapping":{"shift":"value","tmpValue":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[],"tindex":"fe91a537-db03-11e4-a049-4b09b61784fe","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.VERY_NICE","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.VERY_NICE","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.VERY_NICE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"fe91a538-db03-11e4-a049-053294b5a8ae","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"fe91a539-db03-11e4-a049-81b31316838b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"fe91a53a-db03-11e4-a049-9b490b464aaa","variableMapping":{"java.lang.Double.MAX_VALUE":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:91","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"fe91a53b-db03-11e4-a049-115e8ac248c6","variableMapping":{"pointIndex":"start","index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-2},{"failures":[11,12,13,14,15,17,18,20,21,22,23,24,26,28,29,30,32,34,35,36,37,38,40],"tindex":"fe91a53c-db03-11e4-a049-5b9c8953a399","variableMapping":{"scDirMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"fe91a53d-db03-11e4-a049-35537b6a9800","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"fe91a53e-db03-11e4-a049-359e3fd395ad","variableMapping":{"cap":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[147,253,148,79,254,80,149,255,81,256,150,257,258,259,151,152,93,261,153,154,262,263,155,156,94,157,95,96,264,97,158,265,159,98,99,266,267,268,160,269,161,100,101,162,270,163,164,271,272,273,165,274,166,276,167,277,278,279,168,169,102,281,170,171,282,283,172,173,103,174,104,105,284,106,175,285,176,107,108,286,287,288,177,289,178,109,110,179,290,180,181,291,292,293,182,294,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,183,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,184,82,295,83,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,185,438,439,440,441,442,443,444,445,446,447,448,186,296,187,297,298,299,188,189,111,301,190,191,302,303,192,193,112,194,113,114,304,115,195,305,196,116,117,306,307,308,197,309,198,118,119,199,310,200,201,311,312,313,202,314,209,213,145,48,49,50,218,41,51,52,219,42,146,449,220,221,0,1,2,3,222,4,5,6,7,223,224,8,9,10,450,450,451,451,452,452,453,453,225,225,454,454,455,455,226,226,456,456,457,457,458,458,459,459,227,228,329,229,230,231,129,233,250,130,234,334,336,235,360,240,53,54,55,56,57,58,59,132,60,61,133,62,63,64,65,66,67,134,68,69,70,71,72,241,84,73,85,74,86,87,135,75,242,76,136,77,78,460,461,243,386,244,245,246,247,248,249,462,463,88,464,465],"tindex":"fe91cc4f-db03-11e4-a049-f3959181382a","variableMapping":{"segNumber":"segmentSizeIntsPower","segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"fe91cc50-db03-11e4-a049-b7cccf8b3071","variableMapping":{"nodeId":"allBits","mainNodes":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[222,223,139,341,348,358,367,378],"tindex":"fe91cc51-db03-11e4-a049-cb879eb84ac6","variableMapping":{"tt":"res"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"fe91cc52-db03-11e4-a049-ab8f80896b72","variableMapping":{"intIndex":"shift","len":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-2},{"failures":[157,174,194,209,0,10,229,230,13,332,333,14,15,335,235,19,22,23,466,350,353,354,359,361,362,364,365,27,29,33,36,37,240,53,61,62,72,247],"tindex":"fe91cc53-db03-11e4-a049-bd212ca88f1d","variableMapping":{"segmentSizeInBytes":"shift","indexDivisor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[79,80,81,82,83,145,48,49,50,51,52,42,240,53,54,55,56,57,58,59,132,60,61,133,62,63,64,65,66,67,134,68,69,70,71,72,241,84,73,74,75,242,76,136,77,78],"tindex":"fe91cc54-db03-11e4-a049-4bb4b6afc062","variableMapping":{"edgeId":"index","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"index","nodeA":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"fe91cc55-db03-11e4-a049-6747352f3db1","variableMapping":{"hourStr":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"fe91cc56-db03-11e4-a049-0331721091b4","variableMapping":{"bits":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":-2},{"failures":[],"tindex":"fe91cc57-db03-11e4-a049-0d21aa849e79","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"fe91cc58-db03-11e4-a049-af9bf0fae722","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"fe91cc59-db03-11e4-a049-2d7c6c8f981b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[388],"tindex":"fe91cc5a-db03-11e4-a049-cb0a5e544cea","variableMapping":{"high":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"fe91cc5b-db03-11e4-a049-ab4dce098e02","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[467,468,75],"tindex":"fe91cc5c-db03-11e4-a049-e11e0137b12e","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"fe91cc5d-db03-11e4-a049-33da13937be4","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1239","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"fe91f36e-db03-11e4-a049-ef68328c4c87","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"fe91f36f-db03-11e4-a049-5f7fb74dc1a1","variableMapping":{"dx":"y","dy":"y"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[],"tindex":"fe91f370-db03-11e4-a049-7bc677c84a52","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"fe91f371-db03-11e4-a049-c3e290394e70","variableMapping":{"size":"tmpValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"fe91f372-db03-11e4-a049-653e2caefe3a","variableMapping":{"from":"segmentSizePower","lonSize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:299","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"fe91f373-db03-11e4-a049-21a9310dd520","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":-2},{"failures":[],"tindex":"fe91f374-db03-11e4-a049-3373b4d73a60","variableMapping":{"size":"mSize","keys":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:68","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum key.\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-2},{"failures":[183,184,185,186,41,0,1,10,13,362,53,62],"tindex":"fe91f375-db03-11e4-a049-2525b56b272d","variableMapping":{"id":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"fe91f376-db03-11e4-a049-f5daeefd6ead","variableMapping":{"precision":"com.graphhopper.util.AngleCalc.PI_4","lat":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[89,90,91,92],"tindex":"fe91f377-db03-11e4-a049-1b44f5168d58","variableMapping":{"acceptBit":"acceptBit","intendedValues":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[145,48,49,50,218,41,51,52,219,42,146,0,1,2,3,222,4,5,6,7,223,224,8,9,10,11,12,13,247],"tindex":"fe91f378-db03-11e4-a049-f7c20e648a7f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[147,253,469,470,471,472,148,79,254,80,149,81,256,258,259,151,152,93,261,153,154,262,263,155,156,94,157,95,96,264,97,158,265,159,98,99,266,267,268,160,269,161,100,101,162,270,163,164,271,272,273,165,274,276,278,279,168,169,102,281,170,171,282,283,172,173,103,174,104,105,284,106,175,285,176,107,108,286,287,288,177,289,178,109,110,179,290,180,181,291,292,293,182,294,401,402,403,404,405,183,406,407,408,409,410,411,412,413,414,415,416,417,418,419,421,184,82,295,83,422,423,424,425,426,427,428,429,430,431,432,433,434,435,437,185,438,439,440,441,442,473,443,444,445,446,447,448,186,474,296,298,299,188,189,111,301,190,191,302,303,192,193,112,194,113,114,304,115,195,305,196,116,117,306,307,308,197,309,198,118,119,199,310,200,201,311,312,313,202,314,209,213,475,476,477,478,479,50,218,41,42,449,480,481,482,220,221,0,1,2,3,222,4,5,6,7,43,223,224,8,9,483,10,450,450,451,451,452,452,453,453,225,225,454,454,455,455,226,226,456,456,457,457,458,458,459,459,227,228,329,229,230,231,129,233,250,130,234,334,336,235,360,240,53,54,55,56,57,58,59,132,60,61,133,62,63,64,65,66,67,134,68,69,70,71,72,241,84,73,85,74,86,87,135,75,242,76,136,77,78,460,461,243,386,244,245,246,247,248,249,462,463,88,464,465],"tindex":"fe91f379-db03-11e4-a049-23c3b684468d","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"fe921a8a-db03-11e4-a049-d31e7edab369","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[484,485,486,487,488,489,490,491,492,493],"tindex":"fe921a8b-db03-11e4-a049-17732b348f2c","variableMapping":{"logSize":"initialBits","java.lang.Integer.MAX_VALUE":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:259","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"fe921a8c-db03-11e4-a049-bb9be4234574","variableMapping":{"this":"this","com.graphhopper.util.Helper.UTF_CS":"this","buildDate":"this","com.graphhopper.util.Helper.class":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:104","type":"CtTryImpl","sourcecode":"try {\n    java.util.List<java.lang.String> java.util.List<java.lang.String> = com.graphhopper.util.Helper.com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(com.graphhopper.util.Helper.com.graphhopper.util.Helper.getResourceAsStream(\"/builddate\") , com.graphhopper.util.Helper.java.nio.charset.Charset));\n    java.lang.String = java.util.List<java.lang.String>.get(0);\n} catch (java.lang.Exception java.lang.Exception) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[],"tindex":"fe921a8d-db03-11e4-a049-c14c099f75c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.RacingBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"fe921a8e-db03-11e4-a049-2fbb326a1cbd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"fe921a8f-db03-11e4-a049-05b227a0ddd3","variableMapping":{"newName":"highwayValue","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:229","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"newName mustn\\'t be empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":0},{"failures":[],"tindex":"fe921a90-db03-11e4-a049-4bb67be9eac8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[],"tindex":"fe921a91-db03-11e4-a049-195d77f52831","variableMapping":{"tmp":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[],"tindex":"fe921a92-db03-11e4-a049-6d673adff9a9","variableMapping":{"byteCount":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[0,1,2,222,6,7,223,224,8,10,229,232,13,139,44,18,235,348,351,367,46,32,240,61],"tindex":"fe921a93-db03-11e4-a049-ffc28f186f2b","variableMapping":{"index":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[131,73,74,75,76,77],"tindex":"fe921a94-db03-11e4-a049-9f144fd9ef8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[230,231,494,495,496,497,245,246,247,498],"tindex":"fe921a95-db03-11e4-a049-8f58b92c153e","variableMapping":{"eleDelta":"r","decEleSum":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[],"tindex":"fe921a96-db03-11e4-a049-cbebd39ef122","variableMapping":{"freeIndex":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-2},{"failures":[],"tindex":"fe921a97-db03-11e4-a049-71065f40bd79","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[131,49,50,51,52,53,54,55,56,57,58,59,132,60,61,133,62,63,64,65,66,67,134,68,69,70,71,72,84,73,85,74,86,87,135,75,76,136,77,78],"tindex":"fe921a98-db03-11e4-a049-b5ba13307d76","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[337,355,374],"tindex":"fe921a99-db03-11e4-a049-8da9a6e11443","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"fe921a9a-db03-11e4-a049-711afecbca0b","variableMapping":{"byteCount":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":0},{"failures":[89,90,91,92],"tindex":"fe921a9b-db03-11e4-a049-fb28d2c39b50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"fe921a9c-db03-11e4-a049-75d965736bf1","variableMapping":{"eleDelta":"java.lang.Double.MAX_VALUE","decEleSum":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[470,471,472,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,148,79,254,80,149,255,81,256,150,257,259,151,152,93,261,153,154,262,263,155,156,94,95,96,264,97,158,265,159,98,99,266,267,268,160,269,161,100,101,162,270,163,164,271,272,273,165,274,516,517,518,166,275,276,167,277,279,168,169,102,281,170,171,282,283,172,173,103,104,105,284,106,175,285,176,107,108,286,287,288,177,289,178,109,110,179,290,180,181,291,292,293,182,294,519,397,398,408,410,415,82,295,83,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,185,439,440,441,442,473,443,296,187,188,111,112,306,118,201,312,314,203,204,120,315,205,206,316,317,207,208,121,122,123,318,124,210,319,211,125,126,320,321,322,212,213,127,128,214,324,215,216,325,326,327,217,328,475,476,477,478,479,145,48,49,50,218,51,52,219,42,449,520,521,480,481,482,0,2,3,222,4,5,6,7,223,224,8,9,10,451,452,456,459,230,231,336,235,240,53,54,55,56,57,58,59,132,60,133,62,63,64,65,66,67,134,68,69,70,71,241,84,73,85,74,86,87,135,75,242,76,136,77,78,243,244,245,246,247,462,88],"tindex":"fe9240ad-db03-11e4-a049-2d7377da3a96","variableMapping":{"pos":"segmentSizeInBytes","mSize":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[137,340,377],"tindex":"fe9240ae-db03-11e4-a049-459dac504b6c","variableMapping":{"sacScale":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"fe9240af-db03-11e4-a049-75552b9cbd63","variableMapping":{"segmentSizePower":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"fe9240b0-db03-11e4-a049-b7c1184c91a5","variableMapping":{"currentBucket":"nextRelBit","currentIndex":"nextRelBit","bucketSize":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"fe9240b1-db03-11e4-a049-455c09e81cf2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":134,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":451,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":255,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":466,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":204,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":248,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":36,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":16,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":425,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":48,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":498,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":103,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":505,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":521,"com.graphhopper.coll.CompressedArrayTest.testCompress":493,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":143,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":74,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":320,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":194,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":83,"com.graphhopper.util.AngleCalcTest.testOrientation":494,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":76,"com.graphhopper.GraphHopperTest.testPrepare":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":325,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":241,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":468,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":61,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":438,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":17,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":461,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":259,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":422,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":234,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":33,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":54,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":409,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":293,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":166,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":151,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":467,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":78,"com.graphhopper.GraphHopperTest.testLoadOSM":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":416,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":394,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":410,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":331,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":384,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":224,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":277,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":310,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":187,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":489,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":326,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":226,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":180,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":269,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":303,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":275,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":171,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":21,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":168,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":373,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":429,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":64,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":295,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":427,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":56,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":93,"com.graphhopper.coll.OSMIDMapTest.testGetLong":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":284,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":281,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":265,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":150,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":98,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":496,"com.graphhopper.coll.CompressedArrayTest.testCompress2":492,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":117,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":174,"com.graphhopper.GraphHopperAPITest.testLoad":147,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":260,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":393,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":358,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":113,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":111,"com.graphhopper.storage.LevelGraphStorageTest.testClone":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.reader.OSMReaderTest.testBarriers":222,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":334,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":59,"com.graphhopper.util.GHUtilityTest.testCopy":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":206,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":185,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":371,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":89,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":44,"com.graphhopper.routing.PathTest.testFindInstruction":231,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":102,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":243,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":364,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":338,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":402,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":200,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":195,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":501,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":179,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":462,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":106,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":256,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":345,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":232,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":262,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":316,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":514,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":400,"com.graphhopper.util.InstructionListTest.testWayList2":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":417,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":202,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":292,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":332,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":336,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":155,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":506,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":439,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":58,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":189,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":69,"com.graphhopper.coll.OSMIDMapTest.testGet":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":173,"com.graphhopper.routing.PathBidirRefTest.testExtract":227,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":252,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":266,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":379,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":477,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":433,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":294,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":378,"com.graphhopper.storage.RAMDataAccessTest.testSegments":503,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":184,"com.graphhopper.util.GHUtilityTest.testSort2":463,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":65,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":257,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":236,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":107,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":92,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":434,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":160,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":278,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":157,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":97,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":165,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":389,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":95,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":19,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":392,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":159,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":9,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":500,"com.graphhopper.storage.GraphHopperStorageTest.testClone":190,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":324,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":237,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":304,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":353,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":148,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":91,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":317,"com.graphhopper.routing.PathTest.testTime":229,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":370,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":272,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":154,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":357,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":473,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":419,"com.graphhopper.reader.OSMReaderTest.testRelation":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":126,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":268,"com.graphhopper.util.GHUtilityTest.testSortDirected":465,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":347,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":453,"com.graphhopper.GraphHopperTest.testFootOnly":42,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":251,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":440,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":428,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":12,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":513,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":84,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":210,"com.graphhopper.search.NameIndexTest.testCreate":472,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":502,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":450,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":396,"com.graphhopper.routing.QueryGraphTest.testOneWay":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":420,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":487,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":140,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":520,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":408,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":484,"com.graphhopper.reader.OSMReaderTest.testWithBounds":8,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":504,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":517,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":123,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":291,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":454,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":321,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":365,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":11,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":152,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":346,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":18,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":288,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":186,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":175,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":188,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":456,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":53,"com.graphhopper.util.InstructionListTest.testWayList":245,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":311,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":511,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":377,"com.graphhopper.GraphHopperAPITest.testDisconnected179":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":207,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":488,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":289,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":343,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":125,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":383,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":218,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":302,"com.graphhopper.routing.util.EncodedValueTest.testSwap":388,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":136,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":197,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":374,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":242,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":164,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":355,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":368,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":38,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":71,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":300,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":436,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":395,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":519,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":40,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":296,"com.graphhopper.routing.PathTest.testWayList":230,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":122,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":351,"com.graphhopper.coll.OSMIDMapTest.testGet2":476,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":72,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":162,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":480,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":382,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":305,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":359,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":283,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":158,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":431,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":510,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":432,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":341,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":28,"com.graphhopper.util.GHUtilityTest.testSort":464,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":512,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":323,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":413,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":491,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":381,"com.graphhopper.search.NameIndexTest.testPut":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":280,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":301,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":423,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":443,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":446,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":22,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":455,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":235,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":444,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":276,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":367,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":333,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":481,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":285,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":129,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":399,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":213,"com.graphhopper.routing.PathTest.testFound":329,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":13,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":146,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":163,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":507,"com.graphhopper.util.AngleCalcTest.testAtan2":495,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":254,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":380,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":105,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":131,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":471,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":516,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":209,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":193,"com.graphhopper.util.InstructionListTest.testEmptyList":386,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":499,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":372,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":435,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":63,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":239,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":349,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":144,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":348,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":66,"com.graphhopper.reader.PrinctonReaderTest.testRead":220,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":201,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":515,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":426,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":121,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":479,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":485,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":203,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":261,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":342,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":387,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":369,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":20,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":212,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":459,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":482,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":273,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":414,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":490,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":137,"com.graphhopper.reader.OSMReaderTest.testOneWay":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":415,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":114,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":119,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":290,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":141,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":509,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":340,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":354,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":85,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":447,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":508,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":360,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":518,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":318,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":452,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":298,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":483,"com.graphhopper.routing.PathBidirRefTest.testExtract2":228,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":397,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":442,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":240,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":30,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":183,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":418,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":469,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":198,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":31,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":328,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":361,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":448,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":75,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":411,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":199,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":263,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":238,"com.graphhopper.GraphHopperTest.testFootAndCar":41,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":306,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":29,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":437,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":205,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":330,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":356,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":170,"com.graphhopper.storage.StorablePropertiesTest.testLoad":474,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":68,"com.graphhopper.GraphHopperTest.testPrepareOnly":145,"com.graphhopper.GraphHopperTest.testVia":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":405,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":120,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":223,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":149,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":247,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":309,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":362,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":319,"com.graphhopper.util.AngleCalcTest.testCombined":497,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":335,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":270,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":101,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":167}}]
