[{"failures":[],"tindex":"143b4834-dbaa-11e4-98e9-7346be25465e","variableMapping":{"minLatInit":"java.lang.Double.NaN","maxLonInit":"minLat","minLonInit":"maxLat","bounds":"this","maxLatInit":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[],"tindex":"143cced5-dbaa-11e4-98e9-53358bd291eb","variableMapping":{"neighborUpdates":"wayType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":0},{"failures":[],"tindex":"143cced6-dbaa-11e4-98e9-db55056cc93d","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":0},{"failures":[],"tindex":"143cced7-dbaa-11e4-98e9-fffc76919ea0","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"143cced8-dbaa-11e4-98e9-81031f4b510f","variableMapping":{"intVal":"size","degree":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"143cf5e9-dbaa-11e4-98e9-a98d117a39dc","variableMapping":{"key":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":-1},{"failures":[75,21,23,24,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"143cf5ea-dbaa-11e4-98e9-6145fc290f4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"143cf5eb-dbaa-11e4-98e9-715a0d318018","variableMapping":{"err":"to","tmpErr":"to","y1":"to","dLon":"to","sLat":"skippedEdge2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[113],"tindex":"143cf5ec-dbaa-11e4-98e9-73a42ce5c63d","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"143cf5ed-dbaa-11e4-98e9-dd5b9fbb3940","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"143cf5ee-dbaa-11e4-98e9-85ba70b25984","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[114,115,116,117],"tindex":"143cf5ef-dbaa-11e4-98e9-dd1a3c4e08e2","variableMapping":{"size":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","i":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:228","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-1},{"failures":[73],"tindex":"143cf5f0-dbaa-11e4-98e9-f37a74922f90","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1432","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.loadEdgesHeader()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[118,119,120,121,122,0,1,5,6,7,8,34,35,36,37,39,40,42,43,45,46,47,48,49,50,52,53,54,55,56,59,63,65],"tindex":"143cf5f1-dbaa-11e4-98e9-af4b4f85172a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-1},{"failures":[],"tindex":"143cf5f2-dbaa-11e4-98e9-91b846c4a83f","variableMapping":{"res":"capacity","maxBits":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:261","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":0},{"failures":[],"tindex":"143cf5f3-dbaa-11e4-98e9-bd58c77ff356","variableMapping":{"tmpNo":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[123],"tindex":"143d4414-dbaa-11e4-98e9-539a3e561853","variableMapping":{"currentEntry":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":-1},{"failures":[124,125],"tindex":"143d4415-dbaa-11e4-98e9-37bdd7e3ebcd","variableMapping":{"currentEntry":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[114,126,127,116],"tindex":"143d4416-dbaa-11e4-98e9-3b31ada5b5df","variableMapping":{"index":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[21,24,76,78,79,81,83,84,85,87,88,90,92,93,94,96,97,99,101,102,104,106,107,109,111,112],"tindex":"143d4417-dbaa-11e4-98e9-cf784ba74842","variableMapping":{"size":"i","capacity":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"143d4418-dbaa-11e4-98e9-edf24de80094","variableMapping":{"shift":"shift","backwardBit":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"143d4419-dbaa-11e4-98e9-d13fabcaa232","variableMapping":{"edgeId":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-2},{"failures":[],"tindex":"143d441a-dbaa-11e4-98e9-876791c74001","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"143d441b-dbaa-11e4-98e9-0f8b18a4e715","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"143d441c-dbaa-11e4-98e9-dfd0dab9ab6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:337","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"143d441d-dbaa-11e4-98e9-3f875953fc2b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[128,129,130,6,7,131,29,30],"tindex":"143d6b2e-dbaa-11e4-98e9-75c771a200d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"143d6b2f-dbaa-11e4-98e9-e9d568aec9c6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[33,34,53,54,56,70],"tindex":"143d6b30-dbaa-11e4-98e9-e9eb977fe9e6","variableMapping":{"turnCostsCount":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"143d6b31-dbaa-11e4-98e9-db998c3f43b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[118,132,119,120,133,121,122,0,1,134,135,136,137,138,42,46,47,50,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"tindex":"143d6b32-dbaa-11e4-98e9-4503d69d7773","variableMapping":{"lastKey":"bits","key":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[33,34,53,54,56,70],"tindex":"143d6b33-dbaa-11e4-98e9-97abe69e00e8","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[177,120,122,178,179,180,181],"tindex":"143d6b34-dbaa-11e4-98e9-6117368a37a0","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[177,182,118,132,119,120,133,183,184,121,122,185,186,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,187,188,189,190,17,191,192,193,18,19,124,178,134,135,136,194,195,196,197,198,199,200,201,202,203,75,204,205,206,207,208,209,210,20,21,22,23,24,25,26,27,28,29,30,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,222,222,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,223,224,225,226,227,71,228,229,76,230,231,232,233,234,235,236,77,237,78,79,238,80,239,240,241,81,82,242,243,244,245,246,247,83,84,248,249,250,251,252,253,254,255,256,147,148,257,149,150,151,152,153,154,258,155,259,156,157,158,159,160,161,162,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,163,164,165,166,167,168,279,169,280,170,171,172,173,174,175,176,281,282,283,284,285,286,287,288,72,289,290,94,291,292,293,294,295,296,297,95,298,96,97,299,98,300,301,302,99,100,303,304,305,306,307,308,101,102,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,73,326,327,328,103,329,330,331,332,333,74,334,335,104,336,337,338,339,340,341,342,105,343,106,107,344,108,345,346,347,109,110,348,349,350,351,352,353,111,112,354,355,356,357,358,359,360,361,362,363],"tindex":"143d9245-dbaa-11e4-98e9-2b2c98222cc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"143d9246-dbaa-11e4-98e9-c12fb59556cf","variableMapping":{"foundIndex":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[],"tindex":"143d9247-dbaa-11e4-98e9-1b18ea41e3a8","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"speed","sign":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":0},{"failures":[],"tindex":"143d9248-dbaa-11e4-98e9-d509a38aa4ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"143d9249-dbaa-11e4-98e9-314294f576cd","variableMapping":{"index":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"143d924a-dbaa-11e4-98e9-fb33557fb617","variableMapping":{"intVal":"key","degree":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"143d924b-dbaa-11e4-98e9-e58a3e57941d","variableMapping":{"need":"speed","i":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"143d924c-dbaa-11e4-98e9-fb5e3207f718","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[],"tindex":"143d924d-dbaa-11e4-98e9-fbd566beaec9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"143d924e-dbaa-11e4-98e9-8d90467f425a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[114,364,365,116],"tindex":"143d924f-dbaa-11e4-98e9-c1994756d8e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[177,182,118,132,133,184,122,9,10,12,17,194,195,196,209,210,213,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,223,229,76,77,79,80,239,241,81,242,245,247,83,84,249,251,255,256,147,148,257,149,150,151,152,153,154,258,155,259,156,157,158,159,160,161,162,170,282,283,284,285,286,288,289,290,94,291,292,293,294,295,296,297,95,96,97,299,98,300,301,302,99,100,304,305,306,307,308,101,102,309,310,311,312,313,314,315,316,317,366,367,368,369,370,371,324,325,73,326,327,328,103,329,330,331,333,334,335,104,336,337,338,339,340,341,342,105,106,107,344,108,345,346,347,109,110,349,350,351,352,353,111,112,354,355,356,357,358,359,360,361,362],"tindex":"143d9250-dbaa-11e4-98e9-75633951daeb","variableMapping":{"maxLeafEntries":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[372,373,34,43,46],"tindex":"143d9251-dbaa-11e4-98e9-dfcd6acd2458","variableMapping":{"incomingEdges":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:585","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIterator.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-1},{"failures":[],"tindex":"143db962-dbaa-11e4-98e9-cb9edb7705b7","variableMapping":{"empty":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[],"tindex":"143db963-dbaa-11e4-98e9-9f5b4eff52b6","variableMapping":{"speedEncoder":"otherEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[118,132,120,133,185,0,1,2,3,374,178,136,195,196,199,22,23,24,46,47,50,147,148,151,153,155,157,158,159,160,161,268,269,272,165,167,169,171,172,173,174,175],"tindex":"143db964-dbaa-11e4-98e9-afe67beda7f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[114,375,376,377,364,365,378,379,126,127,380,116,381,382,383],"tindex":"143db965-dbaa-11e4-98e9-cb58911691df","variableMapping":{"endIndexPlusOne":"speed","frontIndex":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"143db966-dbaa-11e4-98e9-bb76056dc178","variableMapping":{"storedKey":"relationFlags","key":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-2},{"failures":[115,384,385,386,387,388,117,389],"tindex":"143db967-dbaa-11e4-98e9-370e9f38b660","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"143db968-dbaa-11e4-98e9-271897cbc1e3","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[390],"tindex":"143db969-dbaa-11e4-98e9-df120662e5c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"143db96a-dbaa-11e4-98e9-bdb2556f2cf6","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":0},{"failures":[177,182,118,132,119,120,133,184,121,122,185,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,124,178,134,135,136,194,195,196,197,199,200,201,202,75,209,210,20,21,22,23,24,25,26,27,28,29,30,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,222,222,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,223,224,225,226,227,228,229,76,230,231,232,233,234,235,236,77,237,78,79,238,80,239,240,241,81,82,242,243,244,245,246,247,83,84,248,249,250,251,252,253,254,255,256,147,148,257,149,150,151,152,153,154,258,155,259,156,157,158,159,160,391,161,162,260,261,262,263,392,264,265,266,267,268,269,270,271,272,273,274,275,276,393,277,278,163,164,165,166,167,168,279,169,280,170,171,172,173,174,394,175,176,395,396,85,397,398,399,400,401,402,403,86,281,87,88,404,89,405,406,407,90,91,408,409,410,411,412,282,92,93,413,414,415,416,417,418,419,420,421,283,422,284,285,286,287,288,289,290,94,291,292,293,294,295,296,297,95,298,96,97,299,98,300,301,302,99,100,303,304,305,306,307,308,101,102,309,310,311,312,313,314,315,316,317,324,325,73,326,327,328,103,329,330,331,332,333,334,335,104,336,337,338,339,340,341,342,105,343,106,107,344,108,345,346,347,109,110,348,349,350,351,352,353,111,112,354,355,356,357,358,359,360,361,362],"tindex":"143db96b-dbaa-11e4-98e9-7b5b8751d299","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[33,34,35,38,39,50,52,53,54,56,57,65,66,70],"tindex":"143de07c-dbaa-11e4-98e9-5d37ff16ce7e","variableMapping":{"width":"I_SKIP_EDGE2","lonSimilar":"I_SKIP_EDGE2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"143de07d-dbaa-11e4-98e9-1b7c75aa3d00","variableMapping":{"intVal":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:85","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"143de07e-dbaa-11e4-98e9-31ffe5c8c7ed","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[33,34,53,54,56,70],"tindex":"143de07f-dbaa-11e4-98e9-4d5ebf83be90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:74","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[423,376,424,425,378,426,127,427,428,382,429],"tindex":"143de080-dbaa-11e4-98e9-69c3de72a9af","variableMapping":{"str":"message","name":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:82","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[430],"tindex":"143de081-dbaa-11e4-98e9-73a1e5706a2d","variableMapping":{"tmpDegreeCounter":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[177,182,118,132,119,120,133,183,184,121,122,185,186,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,187,188,189,190,17,191,192,193,431,432,18,19,124,178,134,135,136,194,195,196,197,198,199,200,201,202,203,75,204,205,206,207,208,209,210,20,21,22,23,24,25,26,27,28,29,30,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,222,222,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,223,224,225,226,227,71,228,229,76,230,231,232,233,234,235,236,77,237,78,79,238,80,239,240,241,81,82,242,243,244,245,246,247,83,84,248,249,250,251,252,253,254,255,256,147,148,257,149,150,151,152,153,154,258,155,259,156,157,158,159,160,161,162,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,163,164,165,166,167,168,279,169,280,170,171,172,173,174,175,176,395,396,85,397,398,399,400,401,402,403,86,281,87,88,404,89,405,406,407,90,91,408,409,410,411,412,282,92,93,413,414,415,416,417,418,419,420,421,283,422,284,285,286,287,288,72,289,290,94,291,292,293,294,295,296,297,95,298,96,97,299,98,300,301,302,99,100,303,304,305,306,307,308,101,102,309,310,311,312,313,314,315,316,317,318,319,433,320,321,322,323,324,325,73,326,327,328,103,329,330,331,332,333,74,334,335,104,336,337,338,339,340,341,342,105,343,106,107,344,108,345,346,347,109,110,348,349,350,351,352,353,111,112,354,355,356,357,358,359,360,361,362,363,434,435,436],"tindex":"143de082-dbaa-11e4-98e9-af8144e2ce47","variableMapping":{"cp":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[437,438,439,440],"tindex":"143de083-dbaa-11e4-98e9-39c933140b86","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"143de084-dbaa-11e4-98e9-ebe23614f6bd","variableMapping":{"costs":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"143de085-dbaa-11e4-98e9-db5ee693b39d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[177,182,118,132,119,120,133,184,121,122,185,191,192,193,124,178,134,135,136,194,195,196,197,199,200,201,202,75,206,224,225,441,442,443,444,445,446,447,448,449,450,451,452,283,285,286,321,328,330,331,453,454,455,456,457,458,459,460,461,462,463,464,465],"tindex":"143e0696-dbaa-11e4-98e9-e15d47b50e4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":-1},{"failures":[385,127],"tindex":"143e0697-dbaa-11e4-98e9-0fa70dc44e5a","variableMapping":{"segmentSizeInBytes":"usedBits","indexDivisor":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[25],"tindex":"143e0698-dbaa-11e4-98e9-c5bed6f15a19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[466],"tindex":"143e0699-dbaa-11e4-98e9-2f89f78600bd","variableMapping":{"reverse":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:618","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Not yet supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[423,376,424,425,378,426,127,427,428,382,429],"tindex":"143e069a-dbaa-11e4-98e9-bfd987b27aef","variableMapping":{"bytePos":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[118,34,36,45,49,52,53,54,56,59,65,69],"tindex":"143e069b-dbaa-11e4-98e9-9b786fc425bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"143e069c-dbaa-11e4-98e9-272c3e713522","variableMapping":{"estimatedDist":"longTripsSpeed","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:364","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMWay.setTag(\"estimated_distance\", double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":0},{"failures":[198,114,115,467,376,468,469,470,424,471,377,385,386,365,378,472,473,474,426,475,379,476,127,380,477,478,427,479,116,117,480,382,481,482,483,429,484,383],"tindex":"143e069d-dbaa-11e4-98e9-b30e9308602d","variableMapping":{"index":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[],"tindex":"143e069e-dbaa-11e4-98e9-03fd4ae3742e","variableMapping":{"dir":"wayTypeName","tr":"tr","n":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:275","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Translation.tr(\"turn_onto\", java.lang.String, java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":0},{"failures":[366,370],"tindex":"143e069f-dbaa-11e4-98e9-e7e5233dcab6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[34,35,36,40,46,47,48,50,52,54,56,65],"tindex":"143e06a0-dbaa-11e4-98e9-bdfc0d4099d0","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-1},{"failures":[],"tindex":"143e06a1-dbaa-11e4-98e9-675debb2a152","variableMapping":{"i":"nextTurnBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":0},{"failures":[118,132,119,120,133,121,122,0,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,52,53,54,55,56,57,59,65,66,70],"tindex":"143e06a2-dbaa-11e4-98e9-ab24cbf31ea9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"143e06a3-dbaa-11e4-98e9-fdb864a16321","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"143e2db4-dbaa-11e4-98e9-45aa55dc9b71","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"java.lang.Double.POSITIVE_INFINITY","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[118,132,119,121,0,5,6,7,9,12,178,134,196,75,485,486,487,488,210,20,489,21,22,24,25,28,29,215,218,33,35,36,39,43,45,48,50,52,53,54,56,57,58,59,60,61,62,63,65,66,67,69,70,224,229,76,232,237,239,241,245,247,248,250,251,255,396,85,399,281,405,407,411,282,413,415,416,420,283,285,290,94,293,298,300,302,306,308,309,311,312,316,324,327,330,335,104,338,343,345,347,351,353,354,356,357,361],"tindex":"143e2db5-dbaa-11e4-98e9-e59eb45becf7","variableMapping":{"time":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"143e2db6-dbaa-11e4-98e9-318ce70d35ae","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"intendedValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":0},{"failures":[],"tindex":"143e2db7-dbaa-11e4-98e9-81f897446dcc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[365],"tindex":"143e2db8-dbaa-11e4-98e9-bd2c3dd1e02b","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"143e2db9-dbaa-11e4-98e9-2fa65fe6e5f1","variableMapping":{"da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":0},{"failures":[125],"tindex":"143e2dba-dbaa-11e4-98e9-0fe294c3b4af","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"143e2dbb-dbaa-11e4-98e9-130981ee6819","variableMapping":{"level":"removed","lg":"g","polledNode":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:348","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.setLevel(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"143e2dbc-dbaa-11e4-98e9-f14b64745bfc","variableMapping":{"lastTime":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-2},{"failures":[],"tindex":"143e2dbd-dbaa-11e4-98e9-4534b24d8e58","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"index","nodeId":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[],"tindex":"143e2dbe-dbaa-11e4-98e9-2d4a5232e086","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[490,375,376,491,492,364,381,382,493,430,494],"tindex":"143e2dbf-dbaa-11e4-98e9-c1f3ca473dd5","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[114,115,423,376,385,386,116,117,428,382],"tindex":"143e2dc0-dbaa-11e4-98e9-93973d799c47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[423,376,424,425,378,426,127,427,428,382,429],"tindex":"143e2dc1-dbaa-11e4-98e9-fd096cbf6226","variableMapping":{"freeIndex":"wayType","currentIndex":"wayType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[],"tindex":"143e2dc2-dbaa-11e4-98e9-6fa0168e3f4b","variableMapping":{"edgeId":"nextWayBit","nextEdge":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"143e2dc3-dbaa-11e4-98e9-43508f9ebd70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"143e2dc4-dbaa-11e4-98e9-45d4e5a36749","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"143e54d5-dbaa-11e4-98e9-531c7e7b71e1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"143e54d6-dbaa-11e4-98e9-216b88e8b439","variableMapping":{"cp":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"143e54d7-dbaa-11e4-98e9-49b257367dc3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":51,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":212,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":328,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":396,"com.graphhopper.reader.OSMReaderTest.testFerry":124,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":15,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":381,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":152,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":182,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":131,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":95,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":432,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":453,"com.graphhopper.coll.CompressedArrayTest.testCompress":138,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":61,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":408,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":237,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":257,"com.graphhopper.util.AngleCalcTest.testOrientation":128,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":454,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":447,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":67,"com.graphhopper.GraphHopperTest.testPrepare":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":417,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":57,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":480,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":43,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":266,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":427,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":3,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":333,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":149,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":116,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":41,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":77,"com.graphhopper.coll.BitSetImplTest.testCopy":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":166,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":382,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":283,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":334,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":70,"com.graphhopper.GraphHopperTest.testLoadOSM":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":171,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":369,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":167,"com.graphhopper.reader.OSMReaderTest.testSort":135,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":484,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":23,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":286,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":457,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":249,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":224,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":418,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":218,"com.graphhopper.storage.RAMDataAccessTest.testHeader":448,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":311,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":465,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":352,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":234,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":422,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":293,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":423,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":289,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":387,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":475,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":155,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":47,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":148,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":154,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":403,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":37,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":104,"com.graphhopper.coll.OSMIDMapTest.testGetLong":207,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":291,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":346,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":330,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":109,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":130,"com.graphhopper.coll.CompressedArrayTest.testCompress2":137,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":82,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":365,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":298,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":74,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":466,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":78,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":76,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":125,"com.graphhopper.storage.LevelGraphStorageTest.testClone":337,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":26,"com.graphhopper.reader.OSMReaderTest.testBarriers":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":290,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":491,"com.graphhopper.util.GHUtilityTest.testCopy":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":399,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":162,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":392,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":439,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":451,"com.graphhopper.routing.PathTest.testFindInstruction":30,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":94,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":9,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":180,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":358,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":467,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":250,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":239,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":309,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":98,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":329,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":390,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":339,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":400,"com.graphhopper.util.InstructionListTest.testWayList2":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":413,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":172,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":255,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":294,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":428,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":314,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":372,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":209,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":225,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":341,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":455,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":493,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":458,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":89,"com.graphhopper.storage.RAMDirectoryTest.testSynched":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":96,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":39,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":229,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":194,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":456,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":53,"com.graphhopper.coll.OSMIDMapTest.testGet":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":297,"com.graphhopper.routing.PathBidirRefTest.testExtract":31,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":181,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":206,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":481,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":158,"com.graphhopper.storage.RAMDataAccessTest.testCopy":444,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":459,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":92,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":126,"com.graphhopper.storage.RAMDataAccessTest.testSegments":450,"com.graphhopper.util.GHUtilityTest.testSort2":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":48,"com.graphhopper.reader.OSMReaderTest.testMain":134,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":331,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":485,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":99,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":159,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":440,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":415,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":343,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":108,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":361,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":494,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":106,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":306,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":114,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":368,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":347,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":202,"com.graphhopper.storage.StorablePropertiesTest.testStore":321,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":443,"com.graphhopper.storage.GraphHopperStorageTest.testClone":231,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":414,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":487,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":319,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":238,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":438,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":401,"com.graphhopper.routing.PathTest.testTime":28,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":474,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":359,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":338,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":271,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":91,"com.graphhopper.reader.OSMReaderTest.testRelation":198,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":350,"com.graphhopper.util.GHUtilityTest.testSortDirected":14,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":471,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":463,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":214,"com.graphhopper.GraphHopperTest.testFootOnly":122,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":476,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":268,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":320,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":258,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":405,"com.graphhopper.search.NameIndexTest.testCreate":190,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":449,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":211,"com.graphhopper.routing.QueryGraphTest.testOneWay":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":394,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":142,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":477,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":431,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":165,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":139,"com.graphhopper.reader.OSMReaderTest.testWithBounds":201,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":452,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":437,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":442,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":88,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":409,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":385,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":335,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":332,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":388,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":305,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":278,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":486,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":300,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":228,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":34,"com.graphhopper.util.InstructionListTest.testWayList":6,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":252,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":402,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":307,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":397,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":435,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":469,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":420,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":119,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":233,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":269,"com.graphhopper.routing.util.EncodedValueTest.testSwap":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":68,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":245,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":66,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":357,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":472,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":429,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":55,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":71,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":391,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":389,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":223,"com.graphhopper.routing.PathTest.testWayList":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":87,"com.graphhopper.coll.OSMIDMapTest.testGet2":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":56,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":460,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":354,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":304,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":240,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":295,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":259,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":156,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":445,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":157,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":425,"com.graphhopper.util.GHUtilityTest.testSort":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":412,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":483,"com.graphhopper.search.NameIndexTest.testPut":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":72,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":150,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":263,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":272,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":275,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":375,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":210,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":273,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":284,"com.graphhopper.storage.MMapDirectoryTest.testSynched":363,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":192,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":373,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":301,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":21,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":344,"com.graphhopper.routing.PathTest.testFound":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":282,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":185,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":364,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":356,"com.graphhopper.util.AngleCalcTest.testAtan2":129,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":482,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":97,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":189,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":281,"com.graphhopper.util.InstructionListTest.testEmptyList":4,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":236,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":441,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":42,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":488,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":479,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":49,"com.graphhopper.reader.PrinctonReaderTest.testRead":18,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":251,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":153,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":86,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":140,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":395,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":468,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":492,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":433,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":473,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":115,"com.graphhopper.reader.OSMReaderTest.testFoot":178,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":193,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":411,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":280,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":360,"com.graphhopper.reader.OSMReaderTest.testOneWay":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":170,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":79,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":84,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":310,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":478,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":462,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":243,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":407,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":60,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":276,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":461,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":20,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":404,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":213,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":203,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":226,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":436,"com.graphhopper.routing.PathBidirRefTest.testExtract2":32,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":370,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":173,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":265,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":426,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":187,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":247,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":393,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":379,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":196,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":421,"com.graphhopper.util.SimpleIntDequeTest.testPush":374,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":277,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":65,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":470,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":168,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":248,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":340,"com.graphhopper.GraphHopperTest.testFootAndCar":120,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":242,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":107,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":378,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":161,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":446,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":398,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":490,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":292,"com.graphhopper.storage.StorablePropertiesTest.testLoad":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":52,"com.graphhopper.GraphHopperTest.testPrepareOnly":177,"com.graphhopper.GraphHopperTest.testVia":118,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":264,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":85,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":199,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":327,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":8,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":246,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":489,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":406,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":355,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":112,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":285}}]
