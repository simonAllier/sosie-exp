[{"failures":[],"tindex":"90011cf0-dbf5-11e4-a768-61d82e3bbec7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:143","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"90038df1-dbf5-11e4-a768-1b324dba0749","variableMapping":{"store":"edgeBased"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"90038df2-dbf5-11e4-a768-01c9250cdfbb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"9003b503-dbf5-11e4-a768-35d81fd07b37","variableMapping":{"size":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-1},{"failures":[],"tindex":"9003b504-dbf5-11e4-a768-5175913029c2","variableMapping":{"type":"type","defaultType":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"9003b505-dbf5-11e4-a768-2521a48f829f","variableMapping":{"size":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"9003b506-dbf5-11e4-a768-adb443421110","variableMapping":{"resultOrientation":"midLon","orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":0},{"failures":[],"tindex":"9003b507-dbf5-11e4-a768-15d905345bac","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[37,38,10,11,39,16,24,25,28,32,33,34,36],"tindex":"9003b508-dbf5-11e4-a768-397115e9f335","variableMapping":{"dx":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","dy":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-1},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"9003b509-dbf5-11e4-a768-0941c1e0e616","variableMapping":{"midLat":"maxLatTmp","spatialKey":"hash","bits":"hash","lat":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"9003b50a-dbf5-11e4-a768-35e498764de7","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":0},{"failures":[],"tindex":"9003b50b-dbf5-11e4-a768-956dd2807ecd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"9003b50c-dbf5-11e4-a768-b551f5c454eb","variableMapping":{"allSegments":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":0},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,37,96,38,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,49,195,196,197,198,199,50,200,51,52,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,54,218,219,220,221,222,55,223,56,57,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,0,1,275,276,2,3,4,5,6,277,7,8,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,9,304,10,305,306,307,308,309,11,12,39,310,311,13,14,15,16,17,18,19,20,21,22,23,24,312,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"9003dc1d-dbf5-11e4-a768-57930fa0cdee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[313,314,315,316,317,318,319,320,321,322,323],"tindex":"9003dc1e-dbf5-11e4-a768-71ead63098f9","variableMapping":{"foundIndex":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"9003dc1f-dbf5-11e4-a768-71e95ca42753","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"9003dc20-dbf5-11e4-a768-25172e85e38d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"9003dc21-dbf5-11e4-a768-63f62ee8225f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"9003dc22-dbf5-11e4-a768-117596f562b0","variableMapping":{"high":"i","guess":"i","low":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":0},{"failures":[324,325,314,326,316,327,319,322],"tindex":"9003dc23-dbf5-11e4-a768-71a2dddeffe2","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[328,329,330,331,332,333,334],"tindex":"9003dc24-dbf5-11e4-a768-6f25b9790114","variableMapping":{"incEleSum":"speed","eleDelta":"speed","incDist2DSum":"speed","decEleSum":"speed","fullDist2D":"speed","decDist2DSum":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"9003dc25-dbf5-11e4-a768-cdd64d432792","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"9003dc26-dbf5-11e4-a768-5baade706901","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"90040337-dbf5-11e4-a768-59af2f2afbb8","variableMapping":{"index":"sLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"90040338-dbf5-11e4-a768-e1ba2306ea06","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[],"tindex":"90040339-dbf5-11e4-a768-113800a035b2","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"maxTurnCosts","flags":"turnRestrictionBit","roundaboutBit":"turnRestrictionBit","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"maxTurnCosts","value":"restricted","forwardBit":"turnRestrictionBit","key":"maxTurnCosts","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"maxTurnCosts","backwardBit":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-2},{"failures":[40,41,335,42,336,43,44,47,48],"tindex":"9004033a-dbf5-11e4-a768-1752d9ad5653","variableMapping":{"tmp":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"9004033b-dbf5-11e4-a768-05ee33df07e7","variableMapping":{"nanoTime":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"9004033c-dbf5-11e4-a768-d33a907c0f3f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"9004033d-dbf5-11e4-a768-27298c0243be","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"9004033e-dbf5-11e4-a768-31a324db5e67","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[76],"tindex":"9004033f-dbf5-11e4-a768-89198a2f0c98","variableMapping":{"high":"acceptBit","highKey":"ferryBit","key":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"90040340-dbf5-11e4-a768-d39dcc7b7f64","variableMapping":{"hasOther":"out","hasRel":"out"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"90040341-dbf5-11e4-a768-17b2538b4cf9","variableMapping":{"res":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.Circle:172","type":"CtIfImpl","sourcecode":"if (double < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[],"tindex":"90040342-dbf5-11e4-a768-6940a9fda84f","variableMapping":{"osmId":"directionBitMask","com.graphhopper.reader.OSMReader.TOWER_NODE":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","tmpNode":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:665","type":"CtIfImpl","sourcecode":"if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n    throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":0},{"failures":[],"tindex":"90040343-dbf5-11e4-a768-f11291c79349","variableMapping":{"neighborUpdates":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":0},{"failures":[],"tindex":"90040344-dbf5-11e4-a768-0bf3702ec2d9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"90040345-dbf5-11e4-a768-b9b9c36c5bc5","variableMapping":{"i":"x1","lastIndex":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[40,41,335,42,336,43,44,47,48],"tindex":"90040346-dbf5-11e4-a768-e144a0f18837","variableMapping":{"fwdFaster":"midLat","incDist2DSum":"lat","fwdSlower":"lat","fullDist2D":"lat","restDist2D":"lat","speed":"lat","decDist2DSum":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"90042a57-dbf5-11e4-a768-d5263711b96e","variableMapping":{"high":"hash","highKey":"hash","key":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"90042a58-dbf5-11e4-a768-d5d99a0d3a83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[329,337,334],"tindex":"90042a59-dbf5-11e4-a768-d9d90333182a","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:155","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"90042a5a-dbf5-11e4-a768-85f5bcb3eb70","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[62,66,67,68,70,71,73,74,100,105,106,108,109,113,120,122,128,130,133,135,140,142,144,149,150,152,153,157,164,166,172,174,177,179,184,338,339,340,341,342,343,344,345,231,346,347,348,233,238,239,241,242,246,253,255,261,263,266,268,273,0,1,349,350,351,280,281,282,283,284,290,291,296,10,305,306,307,308,11,39,311,13,14,16,17,18,19,20,21,22,23,24,27,28,29,30,32,33,34,35,36],"tindex":"90042a5b-dbf5-11e4-a768-85b5dcfc9e8b","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-1},{"failures":[],"tindex":"90042a5c-dbf5-11e4-a768-db2e062e0c2a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"90042a5d-dbf5-11e4-a768-eb174d9112db","variableMapping":{"max":"i","tmpSize":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[352,353,354,355],"tindex":"90042a5e-dbf5-11e4-a768-2f27b6afaa71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[356,357,358,359,360,361,362,363,364,365],"tindex":"90042a5f-dbf5-11e4-a768-372c846dec58","variableMapping":{"java.lang.Double.MAX_VALUE":"prio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:372","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[106,116,117,119,123,124,131,132,150,160,161,163,167,168,175,176,339,366,367,368,369,370,371,372,239,249,250,252,256,257,264,265,280,283],"tindex":"90042a60-dbf5-11e4-a768-dfefba48c9d3","variableMapping":{"segmentsToMap":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-1},{"failures":[69,76,77,78,79,80,81,82,83,84,85,86,87,88,373,89,275,276,2,3,4,5,6,277,7,8,278,374,375,376,377,378,379,380,328,329,381,382,383,324,384,356,313,325,314,385,315,352,358,326,316,317,353,360,361,318,327,319,386,320,354,363,387,321,322,323,355,365,334],"tindex":"90042a61-dbf5-11e4-a768-1bd3e09b51b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"90045172-dbf5-11e4-a768-29d696829947","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-2},{"failures":[60,62,72,94,37,96,38,99,100,103,104,105,106,107,108,109,110,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,138,139,140,141,192,193,49,196,197,198,199,200,51,52,201,202,203,204,205,206,275,276,2,3,6,277,8,9,304,10,305,306,307,308,11,12,39,311,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36],"tindex":"90045173-dbf5-11e4-a768-b3b8a275a138","variableMapping":{"lg":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:296","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.LevelGraphStorage.getNodes()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-1},{"failures":[],"tindex":"90045174-dbf5-11e4-a768-69c6b4d3374e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"90045175-dbf5-11e4-a768-d335f7c63b84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"90045176-dbf5-11e4-a768-b3f5d183596f","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","speed":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[83],"tindex":"90045177-dbf5-11e4-a768-4d33bfe3caca","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[388,382,383,356,389,314,316,361,390,319,322],"tindex":"90045178-dbf5-11e4-a768-adb8d5daacf2","variableMapping":{"byteCount":"oldRelationFlags","longSegmentSize":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:116","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"90045179-dbf5-11e4-a768-27cad4e35a2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[380],"tindex":"9004517a-dbf5-11e4-a768-ed2a358e96e3","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[89,378],"tindex":"9004517b-dbf5-11e4-a768-9560ded5916b","variableMapping":{"initialBits":"roundaboutBit","allBits":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"9004517c-dbf5-11e4-a768-4d237594aee3","variableMapping":{"finishedTo":"defaultB","finishedFrom":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[391,325,314,392,326,316,393,394,327,319,395,396,322,397],"tindex":"9004517d-dbf5-11e4-a768-49f4ad4f3988","variableMapping":{"allSegments":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[],"tindex":"9004517e-dbf5-11e4-a768-e5b39776dbf3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:145","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"9004788f-dbf5-11e4-a768-ab4ec504f6ed","variableMapping":{"keyIndex":"edgeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-2},{"failures":[],"tindex":"90047890-dbf5-11e4-a768-45b86f734e04","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":0},{"failures":[77,78,79,80,81,82,83,84,85,86,87,89,275,276,2,3,4,5,6,277,7,8,278,282],"tindex":"90047891-dbf5-11e4-a768-f13f3a5ae531","variableMapping":{"graph":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1042","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage) != null)\n    com.graphhopper.storage.GraphStorage.close();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":-1},{"failures":[282],"tindex":"90047892-dbf5-11e4-a768-671f83718400","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[398,399,400,401,402,403],"tindex":"90047893-dbf5-11e4-a768-772813b6ea7c","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"potentialBarriers"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[76,380],"tindex":"90047894-dbf5-11e4-a768-0b933bd2979c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[62,66,67,68,69,404,405,406,76,77,78,79,80,81,82,83,84,85,86,87,88,89,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,97,100,101,104,125,131,136,139,142,144,145,148,169,175,180,183,196,197,198,207,210,211,219,220,221,231,233,234,237,258,264,269,272,428,429,430,431,275,276,2,3,4,5,6,277,7,8,278,286,287,288,289,292,293,295,296,297,298,299,300,302,303,33],"tindex":"9004edc5-dbf5-11e4-a768-dd34163a5b2d","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[337],"tindex":"9004edc6-dbf5-11e4-a768-5d2dc8bc6c29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[432,433,434],"tindex":"9004edc7-dbf5-11e4-a768-d3915240d86c","variableMapping":{"segmentSizePower":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[391,392,393,394,395,396,397],"tindex":"90064d58-dbf5-11e4-a768-45e16be14328","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[40,41,335,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"90064d59-dbf5-11e4-a768-b3da26f7fdc5","variableMapping":{"i":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"90064d5a-dbf5-11e4-a768-6bd40a0decb3","variableMapping":{"carEncoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:80","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.CarFlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[],"tindex":"90064d5b-dbf5-11e4-a768-2390b44bfcdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[324,435],"tindex":"9006746c-dbf5-11e4-a768-7d8130e47a8b","variableMapping":{"reverseSpeed":"reverseSpeed","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[],"tindex":"9006746d-dbf5-11e4-a768-6d7c7c68573f","variableMapping":{"intVal":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:85","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[20,34],"tindex":"9006746e-dbf5-11e4-a768-230613aacbe8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[2,3,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,32,33,34,35,36],"tindex":"9006746f-dbf5-11e4-a768-45ed7332259e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[436,437],"tindex":"90067470-dbf5-11e4-a768-b914d809923e","variableMapping":{"from":"element","hash":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[356,438,315,330,392,317,331,361,439,320,332,395,396,322,440,323,333,397],"tindex":"90067471-dbf5-11e4-a768-ebc18933b01d","variableMapping":{"key":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[275,278],"tindex":"90067472-dbf5-11e4-a768-cb911903d6f5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:200","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[67,68,69,441,442,443,444,445,288,289],"tindex":"90067473-dbf5-11e4-a768-19abbf1e4bba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[],"tindex":"90067474-dbf5-11e4-a768-11bd5cfebc3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[328,329,330,331,332,333,334],"tindex":"90067475-dbf5-11e4-a768-b938004f2f0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"90067476-dbf5-11e4-a768-bf36dc0377f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:71","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"90067477-dbf5-11e4-a768-4530c0fb5d34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[438,315,330,392,317,331,439,320,332,395,396,322,440,323,333,397],"tindex":"90067478-dbf5-11e4-a768-eb8b720d4d83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[446,447,448,449,415,450,422,451,90,452,97,100,108,142,144,152,174,340,231,233,241,263,275,6,277,7,278],"tindex":"90067479-dbf5-11e4-a768-2df81fad089d","variableMapping":{"intVal":"bytePos","degree":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[2,3,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36],"tindex":"9006747a-dbf5-11e4-a768-53e4e7171034","variableMapping":{"edge":"mainEdgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"9006747b-dbf5-11e4-a768-2dac09066023","variableMapping":{"map":"map"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":0},{"failures":[],"tindex":"9006747c-dbf5-11e4-a768-4793836cb937","variableMapping":{"wayTypeEncoder":"this","shift":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[453],"tindex":"90069b8d-dbf5-11e4-a768-83daaa222753","variableMapping":{"value":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[88,2,454,377,328,325,330,331,327,332,337,333],"tindex":"90069b8e-dbf5-11e4-a768-53a7f5373705","variableMapping":{"red":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[69,76,77,78,79,80,81,82,83,84,85,86,87,88,373,89,275,276,2,3,4,5,6,277,7,8,278,374,375,454,377,378,328,329,381,382,383,324,384,391,356,389,313,325,314,455,438,456,457,315,330,392,358,326,458,316,393,459,460,461,317,331,360,394,361,390,318,327,319,462,439,463,464,320,332,395,363,396,321,322,465,440,466,467,323,333,397,365,334],"tindex":"90069b8f-dbf5-11e4-a768-5951a0dfd5b6","variableMapping":{"radiusInMeter":"backSpeed","lon":"maxSpeed","lat":"backSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[40,41,335,42,43,44,45,46,468,47,48,49,50,51,52,53,54,55,56,57],"tindex":"90069b90-dbf5-11e4-a768-e53a65931467","variableMapping":{"size":"i","hash":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"90069b91-dbf5-11e4-a768-2dc08ec66b68","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":31,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":293,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":97,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":334,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":338,"com.graphhopper.reader.OSMReaderTest.testFerry":76,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":70,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":325,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":393,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":197,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":276,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":445,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":141,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":158,"com.graphhopper.coll.CompressedArrayTest.testCompress":48,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":461,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":272,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":306,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":194,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":414,"com.graphhopper.util.AngleCalcTest.testOrientation":441,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":425,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":39,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":9,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":255,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":434,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":389,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":24,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":66,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":317,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":59,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":103,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":49,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":284,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":316,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":22,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":220,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":183,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":142,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":45,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":104,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":433,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":13,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":221,"com.graphhopper.reader.OSMReaderTest.testSort":79,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":330,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":145,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":416,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":267,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":233,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":43,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":299,"com.graphhopper.storage.RAMDataAccessTest.testHeader":451,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":75,"com.graphhopper.storage.MMapDataAccessTest.testHeader":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":179,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":412,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":129,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":449,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":244,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":95,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":153,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":318,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":148,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":365,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":333,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":200,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":27,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":193,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":199,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":18,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":106,"com.graphhopper.coll.OSMIDMapTest.testGetLong":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":162,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":168,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":121,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":100,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":123,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":443,"com.graphhopper.coll.CompressedArrayTest.testCompress2":47,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":257,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":396,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":159,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":91,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":398,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":249,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":239,"com.graphhopper.storage.LevelGraphStorageTest.testClone":108,"com.graphhopper.reader.OSMReaderTest.testBarriers":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":149,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":285,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":21,"com.graphhopper.util.GHUtilityTest.testCopy":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":341,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":206,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":353,"com.graphhopper.routing.PathTest.testFindInstruction":289,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":359,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":150,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":432,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":72,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":375,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":137,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":187,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":390,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":268,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":253,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":177,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":308,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":110,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":236,"com.graphhopper.util.InstructionListTest.testWayList2":68,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":225,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":273,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":154,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":356,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":234,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":286,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":112,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":160,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":20,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":238,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":81,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":415,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":33,"com.graphhopper.coll.OSMIDMapTest.testGet":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":157,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":448,"com.graphhopper.routing.PathBidirRefTest.testExtract":290,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":376,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":125,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":455,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":202,"com.graphhopper.storage.RAMDataAccessTest.testCopy":422,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":418,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":185,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":371,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":400,"com.graphhopper.storage.RAMDataAccessTest.testSegments":427,"com.graphhopper.util.GHUtilityTest.testSort2":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":28,"com.graphhopper.reader.OSMReaderTest.testMain":78,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":101,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":167,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":357,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":352,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":128,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":347,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":115,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":119,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":140,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":116,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":172,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":90,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":394,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":122,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":88,"com.graphhopper.storage.StorablePropertiesTest.testStore":413,"com.graphhopper.storage.GraphHopperStorageTest.testClone":241,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":274,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":381,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":251,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":328,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":94,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":355,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":96,"com.graphhopper.routing.PathTest.testTime":435,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":466,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":138,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":227,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":370,"com.graphhopper.reader.OSMReaderTest.testRelation":388,"com.graphhopper.util.GHUtilityTest.testSortDirected":64,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":437,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":332,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":295,"com.graphhopper.GraphHopperTest.testFootOnly":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":458,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":50,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":343,"com.graphhopper.search.NameIndexTest.testCreate":431,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":426,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":292,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":452,"com.graphhopper.routing.QueryGraphTest.testOneWay":301,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":42,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":459,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":219,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":40,"com.graphhopper.reader.OSMReaderTest.testWithBounds":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":354,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":181,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":281,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":367,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":349,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":382,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":105,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":102,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":464,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":360,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":171,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":217,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":164,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":237,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":15,"com.graphhopper.util.InstructionListTest.testWayList":67,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":270,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":385,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":336,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":439,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":74,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":457,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":243,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":175,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":310,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":261,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":12,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":136,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":465,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":315,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":35,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":358,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":232,"com.graphhopper.routing.PathTest.testWayList":288,"com.graphhopper.storage.MMapDataAccessTest.testCopy":446,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":366,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":379,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":337,"com.graphhopper.coll.OSMIDMapTest.testGet2":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":36,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":450,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":133,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":404,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":170,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":155,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":242,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":51,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":120,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":52,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":402,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":436,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":321,"com.graphhopper.util.GHUtilityTest.testSort":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":223,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":468,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":456,"com.graphhopper.search.NameIndexTest.testPut":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":184,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":240,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":189,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":195,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":211,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":214,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":327,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":298,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":287,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":143,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":403,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":165,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":280,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":231,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":278,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":324,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":135,"com.graphhopper.util.AngleCalcTest.testAtan2":442,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":438,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":161,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":430,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":230,"com.graphhopper.util.InstructionListTest.testEmptyList":65,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":23,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":467,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":26,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":351,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":454,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":331,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":399,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":29,"com.graphhopper.reader.PrinctonReaderTest.testRead":73,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":269,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":198,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":156,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":41,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":169,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":166,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":462,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":361,"com.graphhopper.reader.OSMReaderTest.testFoot":77,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":345,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":406,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":56,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":57,"com.graphhopper.reader.OSMReaderTest.testOneWay":89,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":250,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":265,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":178,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":460,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":420,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":386,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":344,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":307,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":311,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":329,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":305,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":419,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":279,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":196,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":294,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":235,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":373,"com.graphhopper.routing.PathBidirRefTest.testExtract2":291,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":453,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":14,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":323,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":428,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":263,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":397,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":83,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":374,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":463,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":222,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":266,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":111,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":258,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":117,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":322,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":205,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":340,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":32,"com.graphhopper.GraphHopperTest.testPrepareOnly":275,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":190,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":339,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":85,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":38,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":69,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":262,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":84,"com.graphhopper.util.AngleCalcTest.testCombined":444,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":384,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":134,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":132,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":144}}]
