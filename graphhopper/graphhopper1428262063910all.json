[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"tindex":"d5473329-dbc9-11e4-9dbb-53f3d75557eb","variableMapping":{"foundIndex":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[],"tindex":"d5475a3a-dbc9-11e4-9dbb-99ca69e74d9f","variableMapping":{"value":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"d5475a3b-dbc9-11e4-9dbb-23d1dd1d8115","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"d5475a3c-dbc9-11e4-9dbb-8923a7a2c474","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":0},{"failures":[],"tindex":"d5475a3d-dbc9-11e4-9dbb-57abace31d25","variableMapping":{"obtained":"integ"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"d5475a3e-dbc9-11e4-9dbb-31503e863f95","variableMapping":{"flags":"lastTime","mask":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[2,8,9,10,13,14,15,16,17,18,19,24,25,28,29,30,31,32,34,36,38,39,40,42,43,44,45,46,47,48,49,50,54,55,56,57,59,60,61,62,63,68,92,93,105,106,112,123,139,157,158,160,164,165,167,168,172,179,181,187,189,192,194,199,202,206,207,209,210,214,221,223,229,231,234,236,241,306,307,308,309,310,311,312,313,256,314,315,316,265,269,270,272,273,277,284,286,292,294,297,299,304],"tindex":"d5475a3f-dbc9-11e4-9dbb-07ee79292f10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[317],"tindex":"d5475a40-dbc9-11e4-9dbb-bbdf683da038","variableMapping":{"size":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"d5475a41-dbc9-11e4-9dbb-d9bf8a225477","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"d5475a42-dbc9-11e4-9dbb-0fa368046ac1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"d5475a43-dbc9-11e4-9dbb-65f214596a30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"d5478154-dbc9-11e4-9dbb-b9b12b5e7113","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":-2},{"failures":[],"tindex":"d5478155-dbc9-11e4-9dbb-f1e5d534e5dc","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","preferHighwayTags":"avoidHighwayTags","intendedValues":"intendedValues","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","maxSpeed":"maxSpeed","highway":"highway","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[34,318,319],"tindex":"d5478156-dbc9-11e4-9dbb-5bd406807591","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"d5478157-dbc9-11e4-9dbb-774000306792","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"d5478158-dbc9-11e4-9dbb-d7d28500861f","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"d5478159-dbc9-11e4-9dbb-b34feef3e780","variableMapping":{"newUniqueOsmId":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"d547815a-dbc9-11e4-9dbb-5d28c018dfbe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[320,321,322,79,95,99,103],"tindex":"d547815b-dbc9-11e4-9dbb-f91f2064df2a","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[22],"tindex":"d547a86c-dbc9-11e4-9dbb-017849217541","variableMapping":{"orientation":"fullDist2D","java.lang.Math.PI":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[323,324,325,326,327,328,329,330,331,332,333],"tindex":"d547a86d-dbc9-11e4-9dbb-25ac4ab785da","variableMapping":{"lastKey":"relationFlags","key":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[],"tindex":"d547a86e-dbc9-11e4-9dbb-8f87f34fb10f","variableMapping":{"edgeId":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[],"tindex":"d547a86f-dbc9-11e4-9dbb-fb7176425115","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"d547a870-dbc9-11e4-9dbb-6554677db0fe","variableMapping":{"index":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":-2},{"failures":[],"tindex":"d547a871-dbc9-11e4-9dbb-81821fb28e81","variableMapping":{"i":"hash","child":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":0},{"failures":[334,335,336,337,338,339,85],"tindex":"d547a872-dbc9-11e4-9dbb-3f4f71ed357c","variableMapping":{"name":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"d547cf83-dbc9-11e4-9dbb-ed2140beaf14","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"d547f694-dbc9-11e4-9dbb-c5c22dbaefad","variableMapping":{"nodeFlags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"d547f695-dbc9-11e4-9dbb-35f126185a43","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"d547f696-dbc9-11e4-9dbb-83db6f14ebda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[],"tindex":"d547f697-dbc9-11e4-9dbb-13af4b686f1d","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"d547f698-dbc9-11e4-9dbb-3f45f822f012","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[340,341,342,323,343,344,345,346,347,325,335,326,348,349,350,351,352,353,354,355,356,327,357,336,358,359,360,21,22,361,362,363,364,331,338,332,365,366,367,368,369,370,371,372,373,333,374,339,375,376],"tindex":"d547f699-dbc9-11e4-9dbb-5f45e8bec38b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[],"tindex":"d5481daa-dbc9-11e4-9dbb-4d4a49e94c3f","variableMapping":{"entry":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,377,378,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,379,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,380,111,112,381,113,114,115,116,382,117,118,119,120,121,383,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,384,138,139,140,141,385,142,143,144,145,146,147,148,149,150,151,152,153,154,155,386,156,157,387,158,388,159,160,161,389,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,390,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,391,306,307,392,308,309,393,394,395,310,396,255,397,398,399,400,311,401,312,402,403,404,405,406,313,407,256,408,409,314,410,315,411,412,413,414,316,415,257,258,259,260,261,262,263,264,265,266,416,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"tindex":"d5481dab-dbc9-11e4-9dbb-7fbbba30c349","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"d5481dac-dbc9-11e4-9dbb-3533cbdfabaa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":"d5481dad-dbc9-11e4-9dbb-9f4cd3d00792","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"d5481dae-dbc9-11e4-9dbb-d94bb2ddf7f5","variableMapping":{"nodeB":"i","edgeId":"i","nodeA":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[417,418,419,420,421,422,78,79,80,81,82,84,85,86,87,88,89,90,423,91,379,96,97,98,99,100,101,102,104],"tindex":"d5481daf-dbc9-11e4-9dbb-298ec8ecf604","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"d54844c0-dbc9-11e4-9dbb-1fda55fcb421","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[26,35,40,41,63],"tindex":"d54844c1-dbc9-11e4-9dbb-6b8f13ce93ad","variableMapping":{"turnCostIndex":"to","nextTurnCostIndex":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"d54844c2-dbc9-11e4-9dbb-b79a7b6023cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"d54844c3-dbc9-11e4-9dbb-336e14a12825","variableMapping":{"size":"usedBits","from":"nextNodeBit","end":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"d54844c4-dbc9-11e4-9dbb-fdbb0dbc5e01","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[17,91],"tindex":"d54844c5-dbc9-11e4-9dbb-5be35a9754bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[424],"tindex":"d54844c6-dbc9-11e4-9dbb-5912c0a7cced","variableMapping":{"maxLeafEntries":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[],"tindex":"d54844c7-dbc9-11e4-9dbb-2ff099d0f785","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-1},{"failures":[],"tindex":"d54844c8-dbc9-11e4-9dbb-394392c69e40","variableMapping":{"a":"mValues","high":"mSize","low":"mSize","guess":"i","key":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:374","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":0},{"failures":[420,78],"tindex":"d54844c9-dbc9-11e4-9dbb-4374dcfad341","variableMapping":{"maxSpeed":"longTripsSpeed","fwdSpeed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[],"tindex":"d54844ca-dbc9-11e4-9dbb-83f9baa4c79b","variableMapping":{"weightLong":"flags","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"d54844cb-dbc9-11e4-9dbb-7f5c43bf11df","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"d54844cc-dbc9-11e4-9dbb-595f7dc2cef6","variableMapping":{"equalNormedDelta":"com.graphhopper.util.NumHelper.DEFAULT_PRECISION","currNormedDist":"d2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:883","type":"CtIfImpl","sourcecode":"if ((double) <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-2},{"failures":[],"tindex":"d54844cd-dbc9-11e4-9dbb-93291ae75d56","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[],"tindex":"d5486bde-dbc9-11e4-9dbb-09a3f91e1725","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"d5486bdf-dbc9-11e4-9dbb-4786d8d2ea85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[173,178,183,215,220,225,396,400,403,263,278,283,288],"tindex":"d5486be0-dbc9-11e4-9dbb-b5bac3768540","variableMapping":{"offset":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"d5486be1-dbc9-11e4-9dbb-3b707c19a85b","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"d5486be2-dbc9-11e4-9dbb-e552a6806cad","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[318,319],"tindex":"d5486be3-dbc9-11e4-9dbb-3f8fd5781f07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"d5486be4-dbc9-11e4-9dbb-f35eaec6c25d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[],"tindex":"d5486be5-dbc9-11e4-9dbb-41b7de1e67af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[],"tindex":"d5486be6-dbc9-11e4-9dbb-435c363a53a9","variableMapping":{"high":"hash","len":"hash","start":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"d5486be7-dbc9-11e4-9dbb-25e293b07ed8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"d5486be8-dbc9-11e4-9dbb-7d3f65899668","variableMapping":{"size":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[],"tindex":"d5486be9-dbc9-11e4-9dbb-799e28cec073","variableMapping":{"offset":"x1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[46,59,61,78,79,80,81,82,83,85,86,87,89,90,91,93,95,96,97,98,99,100,101,102,103,104,127,133,145,151,159,264],"tindex":"d5486bea-dbc9-11e4-9dbb-bf0ba0679b9c","variableMapping":{"red":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[2,425,426,427,9,60,65,72,75,76,78,80,81,82,83,84,85,86,87,88,89,90,91,95,97,98,100,102,428,429,126,144,158,160,184,190,195,202,226,232,237,252,253,404,256,408,411,430,431,432,433,434,265,289,295,300,435,436,437,438,439],"tindex":"d5486beb-dbc9-11e4-9dbb-d9495841ef07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[],"tindex":"d5486bec-dbc9-11e4-9dbb-9f27d60e404d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"d5486bed-dbc9-11e4-9dbb-e552c9ec7fb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"d54892fe-dbc9-11e4-9dbb-abaa454de4a7","variableMapping":{"currentEntry":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"d54892ff-dbc9-11e4-9dbb-93bf9e7d73d8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-2},{"failures":[],"tindex":"d5489300-dbc9-11e4-9dbb-bfc58ad39377","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[341,323,343,345,335,326,358,440,329,441,362,338,332,375],"tindex":"d5489301-dbc9-11e4-9dbb-0d644a1b48f8","variableMapping":{"size":"speed","newSize":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[28,30,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,95,379,96,97,100,101,103,442],"tindex":"d5489302-dbc9-11e4-9dbb-6d56145c6b02","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-1},{"failures":[],"tindex":"d5489303-dbc9-11e4-9dbb-1d0894c56960","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[22],"tindex":"d5489304-dbc9-11e4-9dbb-fb22331e7d5c","variableMapping":{"maxMCSpeed":"fullDist2D","speed":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"d5489305-dbc9-11e4-9dbb-c7a26c550144","variableMapping":{"bytePos":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[],"tindex":"d5489306-dbc9-11e4-9dbb-75894cc60784","variableMapping":{"clonedG":"g","nodeEntryBytes":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1074","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.int) != (int))\n    throw new java.lang.IllegalStateException(((((\"nodeEntryBytes cannot be different for cloned graph. \" + \"Cloned: \") + (com.graphhopper.storage.GraphHopperStorage.int)) + \" vs \") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"d5489307-dbc9-11e4-9dbb-5fad46845ac9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"d5489308-dbc9-11e4-9dbb-c964123df4e2","variableMapping":{"start":"usedBits","delta":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":0},{"failures":[443],"tindex":"d5489309-dbc9-11e4-9dbb-013a28bd5c9a","variableMapping":{"node":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:423","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (\"--- node \" + int) + \" ---\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[444,445,346,352,359,446,447,448,449,363,369,376],"tindex":"d548930a-dbc9-11e4-9dbb-33de8a98ccf7","variableMapping":{"y":"prio","angle":"prio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[18,91,165,173,175,176,182,190,191,207,215,217,218,224,232,233,307,396,397,398,402,408,409,263,270,278,280,281,287,295,296],"tindex":"d548930b-dbc9-11e4-9dbb-c758b37f9771","variableMapping":{"tmpNode":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"d548930c-dbc9-11e4-9dbb-f3e1b9316a4b","variableMapping":{"time":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"d548930d-dbc9-11e4-9dbb-1b5330739800","variableMapping":{"currentEntry":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"d548930e-dbc9-11e4-9dbb-c53149f901c5","variableMapping":{"store":"store"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"d548930f-dbc9-11e4-9dbb-d117e62fd1f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:304","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"d548ba20-dbc9-11e4-9dbb-352e25459ceb","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[424,78],"tindex":"d548e131-dbc9-11e4-9dbb-8b1c8797251a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[],"tindex":"d548e132-dbc9-11e4-9dbb-f193bda8cea3","variableMapping":{"nodeB":"valueIfKeyNotFound","edgeId":"com.graphhopper.coll.SparseIntIntArray.DELETED","nodeA":"valueIfKeyNotFound"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"d548e133-dbc9-11e4-9dbb-296db0bd741a","variableMapping":{"high":"acceptBit","highKey":"ferryBit","key":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-2},{"failures":[],"tindex":"d548e134-dbc9-11e4-9dbb-c38d37b701d5","variableMapping":{"orientation":"java.lang.Double.MAX_VALUE","java.lang.Math.PI":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[448,449],"tindex":"d548e135-dbc9-11e4-9dbb-d712d3e4e0ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"d5490846-dbc9-11e4-9dbb-3f2e202bd27c","variableMapping":{"d":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"d5490847-dbc9-11e4-9dbb-218e91bbe825","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[26,34,35,39,40,41,42,45,46,57,59,60,61,63],"tindex":"d5490848-dbc9-11e4-9dbb-074d870888f0","variableMapping":{"clonedG":"graph","nodeEntryBytes":"skippedEdge1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1074","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.int) != (int))\n    throw new java.lang.IllegalStateException(((((\"nodeEntryBytes cannot be different for cloned graph. \" + \"Cloned: \") + (com.graphhopper.storage.GraphHopperStorage.int)) + \" vs \") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"d5490849-dbc9-11e4-9dbb-f9ff19e7cc15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"d549084a-dbc9-11e4-9dbb-d7e8f1f4515a","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"d549084b-dbc9-11e4-9dbb-23177721fb8d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"d549084c-dbc9-11e4-9dbb-b774983e7245","variableMapping":{"key":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":58,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":65,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":262,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":306,"com.graphhopper.reader.OSMReaderTest.testFerry":78,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":145,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":379,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":305,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":173,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":30,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":404,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":216,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":385,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":36,"com.graphhopper.GraphHopperTest.testPrepare":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":412,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":26,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":223,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":319,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":347,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":50,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":381,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":324,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":6,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":267,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":142,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":345,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":48,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":215,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":127,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":198,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":158,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":268,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":39,"com.graphhopper.GraphHopperTest.testLoadOSM":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":134,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":248,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":128,"com.graphhopper.reader.OSMReaderTest.testSort":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":357,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":17,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":161,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":235,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":413,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":71,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":194,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":293,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":212,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":388,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":163,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":278,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":447,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":149,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":141,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":44,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":270,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":183,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":285,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":442,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":265,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":287,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":225,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":440,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":174,"com.graphhopper.GraphHopperAPITest.testLoad":105,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":247,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":217,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":207,"com.graphhopper.storage.LevelGraphStorageTest.testClone":272,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":424,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":20,"com.graphhopper.reader.OSMReaderTest.testBarriers":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":164,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":365,"com.graphhopper.util.GHUtilityTest.testCopy":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":309,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":157,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":334,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":383,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":438,"com.graphhopper.routing.PathTest.testFindInstruction":77,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":444,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":165,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":12,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":322,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":301,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":364,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":236,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":221,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":178,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":372,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":274,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":393,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":254,"com.graphhopper.util.InstructionListTest.testWayList2":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":135,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":325,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":197,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":346,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":21,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":203,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":175,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":46,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":206,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":83,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":430,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":60,"com.graphhopper.coll.OSMIDMapTest.testGet":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":172,"com.graphhopper.routing.PathBidirRefTest.testExtract":24,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":317,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":289,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":351,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":153,"com.graphhopper.storage.RAMDataAccessTest.testCopy":435,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":200,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":408,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":350,"com.graphhopper.storage.RAMDataAccessTest.testSegments":437,"com.graphhopper.util.GHUtilityTest.testSort2":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":55,"com.graphhopper.reader.OSMReaderTest.testMain":80,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":352,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":154,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":336,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":292,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":389,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":279,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":283,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":304,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":68,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":187,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":362,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":286,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":90,"com.graphhopper.storage.GraphHopperStorageTest.testClone":209,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":410,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":422,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":219,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":421,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":257,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":337,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":394,"com.graphhopper.routing.PathTest.testTime":378,"com.graphhopper.util.BitUtilLittleTest.testToFloat":426,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":302,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":273,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":382,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":137,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":403,"com.graphhopper.util.GHUtilityTest.testSortDirected":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":374,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":433,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":67,"com.graphhopper.GraphHopperTest.testFootOnly":103,"com.graphhopper.util.BitUtilLittleTest.testToInt":427,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":342,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":114,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":420,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":148,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":311,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":436,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":64,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":250,"com.graphhopper.routing.QueryGraphTest.testOneWay":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":384,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":126,"com.graphhopper.reader.OSMReaderTest.testWithBounds":89,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":439,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":339,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":16,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":405,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":448,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":269,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":416,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":373,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":445,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":186,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":179,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":205,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":41,"com.graphhopper.util.BitUtilLittleTest.testToBitString":425,"com.graphhopper.util.InstructionListTest.testWayList":9,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":238,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":349,"com.graphhopper.GraphHopperAPITest.testDisconnected179":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":395,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":370,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":18,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":316,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":356,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":98,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":211,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":37,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":229,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":344,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":35,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":162,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":62,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":386,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":245,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":359,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":201,"com.graphhopper.routing.PathTest.testWayList":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":414,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":397,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":419,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":63,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":297,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":185,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":355,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":170,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":210,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":150,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":151,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":434,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":367,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":328,"com.graphhopper.util.GHUtilityTest.testSort":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":407,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":199,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":208,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":143,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":117,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":109,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":338,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":22,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":107,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":180,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":15,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":253,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":256,"com.graphhopper.routing.PathTest.testFound":377,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":104,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":320,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":299,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":443,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":259,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":353,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":176,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":255,"com.graphhopper.util.InstructionListTest.testEmptyList":7,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":49,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":53,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":56,"com.graphhopper.reader.PrinctonReaderTest.testRead":92,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":237,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":146,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":391,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":181,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":363,"com.graphhopper.reader.OSMReaderTest.testFoot":79,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":132,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":303,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":340,"com.graphhopper.reader.OSMReaderTest.testOneWay":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":133,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":218,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":233,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":193,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":432,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":366,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":312,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":29,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":110,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":431,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":23,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":399,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":66,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":390,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":423,"com.graphhopper.routing.PathBidirRefTest.testExtract2":25,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":251,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":136,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":330,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":231,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":380,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":441,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":85,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":415,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":371,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":129,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":234,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":275,"com.graphhopper.GraphHopperTest.testFootAndCar":99,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":226,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":281,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":329,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":308,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":59,"com.graphhopper.GraphHopperTest.testPrepareOnly":95,"com.graphhopper.GraphHopperTest.testVia":96,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":122,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":307,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":87,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":261,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":11,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":230,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":401,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":417,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":298,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":296,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":160}}]
