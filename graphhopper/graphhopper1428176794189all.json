[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"4c82c285-db03-11e4-8108-3dc375d66491","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-1},{"failures":[],"tindex":"4c82e996-db03-11e4-8108-d5b2dda79ab8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:61","type":"CtReturnImpl","sourcecode":"return \"PREPARE+\" + (com.graphhopper.routing.util.Weighting.toString())"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,49,20,21,22,23,25,50,51,52,53,54,55,56,26,57,58,59,27,60,61,62,63,64,65,66,67,28,68,69,29,70,71,30,72,73,31,32,74,75,76,33,77,34,35,78,36,79,37,80,81,82,83,84,38,85,86,87,88,89,90,39,91,92,93,94,95,96,97,40,98,99,100,101,102,103,41,104,105,42,43,106,107,108,109,110,111,112,113,44,114,115,116,117,118,119,120,121,122,45,123,124,46,47,125,126,127,128,129,130,131,132,48,133,134,135,136,137],"tindex":"4c82e997-db03-11e4-8108-1927d7743c94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"4c82e998-db03-11e4-8108-3978b76ed091","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"4c82e999-db03-11e4-8108-df604e46bc9a","variableMapping":{"res":"wayBitMask","value":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[2,4,5,8,9,138,139,140,135,141,142,143,144,145,146,147,148,136,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"4c82e99a-db03-11e4-8108-4f652ccfdd5b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-1},{"failures":[166,167,161,162,163,168,169,170,171,172],"tindex":"4c8310ab-db03-11e4-8108-55f3e3477f7b","variableMapping":{"prevEle":"angle","ele":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:727","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[],"tindex":"4c8310ac-db03-11e4-8108-bf59bdd8027c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:940","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[34],"tindex":"4c8310ad-db03-11e4-8108-152896be7e9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[0,2,3,4,6,8,9,11,13,14,15,16,17,18,19,20,21,22,23,25,173,174,175,176,166,156,161,162,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233],"tindex":"4c8310ae-db03-11e4-8108-9d492b3799a0","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[57,59,68,87,89,90,100,41,104,114,119,45,123,133],"tindex":"4c8310af-db03-11e4-8108-aba68df327cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[89],"tindex":"4c8310b0-db03-11e4-8108-eda89295b943","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[32],"tindex":"4c8310b1-db03-11e4-8108-fd932fba86f0","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[234],"tindex":"4c8310b2-db03-11e4-8108-0193e1e07b20","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"4c8310b3-db03-11e4-8108-39c401d721fc","variableMapping":{"dLat":"com.graphhopper.util.EdgeIterator.NO_EDGE","dLon":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[56],"tindex":"4c8310b4-db03-11e4-8108-9b3e47446a66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"4c8310b5-db03-11e4-8108-ad3e0161cdd5","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[0,1,2,3,4,6,7,8,9,13,14,15,16,18,19,20,21,22,25,235,85,236,148,150,151,154,237,238,239,186,240,241,242,243,244,245,188,246,247,248,249],"tindex":"4c8337c6-db03-11e4-8108-b3a0149a612a","variableMapping":{"nodeB":"tmp","edgeId":"tmp","nodeA":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"4c8337c7-db03-11e4-8108-77d6e5b1f5db","variableMapping":{"need":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"4c8337c8-db03-11e4-8108-69d885d754fa","variableMapping":{"orientation":"java.lang.Math.PI","java.lang.Math.PI":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"4c8337c9-db03-11e4-8108-bbc352969d7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:310","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":0},{"failures":[],"tindex":"4c8337ca-db03-11e4-8108-a3841ee361ad","variableMapping":{"newAdjIndex":"guess","newBaseIndex":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"4c8337cb-db03-11e4-8108-515e719224f1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"4c8337cc-db03-11e4-8108-79f3bb9dfb12","variableMapping":{"value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:87","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":0},{"failures":[],"tindex":"4c8337cd-db03-11e4-8108-9f1e17c52a1f","variableMapping":{"byteCount":"flags1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[],"tindex":"4c8337ce-db03-11e4-8108-ff6bba572556","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"4c8337cf-db03-11e4-8108-47272c673d94","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[0,1,2,3,4,6,7,8,9,235,85,236],"tindex":"4c8337d0-db03-11e4-8108-791a08a4c4a0","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-1},{"failures":[],"tindex":"4c8337d1-db03-11e4-8108-d1f4b5988330","variableMapping":{"need":"shift","i":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"4c8337d2-db03-11e4-8108-6dd32c303a53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[0,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,25,85],"tindex":"4c8337d3-db03-11e4-8108-db8865999896","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[0,2,3,6,7,9,250,251,138,252,253,254,139,255,140,256,257,258,259,260,135,141,142,143,144,145,146,147,261,148,136,262,149,150,151,152,153,154,263,155,156,157,158,159,264,177,265,245,266,267,268,269,188,246,189,270,271,272,273,274,275,247,248,276,277,249,278,279,280,137,281,282,283,284,285,196,286,287,197,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,198,307,308,309,310,311,199,312,313,314,315,200,316,317,201,318,319],"tindex":"4c835de4-db03-11e4-8108-f9f02bd72490","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[],"tindex":"4c835de5-db03-11e4-8108-e104983c2a7a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[2,3,6,250,138,254,139,140,256,260,135,141,142,143,144,145,146,147,261,136,149,150,151,152,153,154,155,156,157,158,159,137,196,306,313,317],"tindex":"4c835de6-db03-11e4-8108-1dcc745fd555","variableMapping":{"edgeId":"nodeId","nodeId":"nodeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-1},{"failures":[],"tindex":"4c835de7-db03-11e4-8108-f93fb2da5155","variableMapping":{"hasOther":"defaultB","hasRel":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"4c835de8-db03-11e4-8108-ffc945b7ef72","variableMapping":{"flags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[],"tindex":"4c835de9-db03-11e4-8108-41df1f998343","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[56,57,100,119],"tindex":"4c835dea-db03-11e4-8108-33e5bbe99385","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,268,271,273,274],"tindex":"4c835deb-db03-11e4-8108-b95834d06c78","variableMapping":{"tmpNo":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[15,18,20,25,235,85,236,337,237,238,239,242,243,244],"tindex":"4c835dec-db03-11e4-8108-1538646eb60e","variableMapping":{"index":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"4c835ded-db03-11e4-8108-d3266f1e3549","variableMapping":{"red":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"4c835dee-db03-11e4-8108-874edd8cbcf5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"4c835def-db03-11e4-8108-b76a31728acd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[33,35,37],"tindex":"4c835df0-db03-11e4-8108-e7c46520dfa0","variableMapping":{"name":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"4c838501-db03-11e4-8108-21b02d23d9d5","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"index","edge":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[],"tindex":"4c838502-db03-11e4-8108-cbe20f9c17c5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"4c838503-db03-11e4-8108-6bc2b5f69a67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[250,140,256,260,135,141,142,145,146,154,155,156,157,159],"tindex":"4c838504-db03-11e4-8108-7d7cb934f1d9","variableMapping":{"segmentSizeInBytes":"skippedEdge2","index":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[11,35,234],"tindex":"4c838505-db03-11e4-8108-bfafa2c5268d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"4c838506-db03-11e4-8108-9dc7838c709f","variableMapping":{"time":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"4c838507-db03-11e4-8108-71213f8404a0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"4c838508-db03-11e4-8108-51f4f3d8e45b","variableMapping":{"high":"relBitMask","highKey":"relBitMask","key":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"4c838509-db03-11e4-8108-b1703ecb8619","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[320,321,322,323,325,326,327,328,329,148,330,331,332,333,334,335,336,268,271,273,274],"tindex":"4c83850a-db03-11e4-8108-a721a8d2f491","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"4c83850b-db03-11e4-8108-b90490538a7b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[89,100,119],"tindex":"4c83850c-db03-11e4-8108-5d46a3b1701e","variableMapping":{"size":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"4c83850d-db03-11e4-8108-b54e497451c2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[18,25,56,101,41,104,120,45,123],"tindex":"4c83850e-db03-11e4-8108-075820aeec34","variableMapping":{"shift":"encoded","tmpValue":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[250,140,256,142,145,146,154,155,157],"tindex":"4c83850f-db03-11e4-8108-25c1dba20e40","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"4c838510-db03-11e4-8108-8d2ab3afd403","variableMapping":{"nodeId":"high","mainNodes":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"4c83ac21-db03-11e4-8108-81b0400e392d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[],"tindex":"4c83ac22-db03-11e4-8108-6fca9eb969b1","variableMapping":{"fwdFaster":"lon","incDist2DSum":"midLon","fwdSlower":"midLon","fullDist2D":"lon","restDist2D":"lon","speed":"midLon","decDist2DSum":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":0},{"failures":[25,338,85,236,339,340,341,342,343,344,345,193,346,284,289,297,298,299,301,305,306,199,312,347,348,349,350,351,352,353,207,354,355,356,357,358,359,360,361,213,362],"tindex":"4c83ac23-db03-11e4-8108-a5cf983396bb","variableMapping":{"oldPriorities":"mValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"4c83ac24-db03-11e4-8108-6dda342541df","variableMapping":{"finishedTo":"closed","finishedFrom":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:78","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[28,40,44,48],"tindex":"4c83ac25-db03-11e4-8108-9d296d3eb138","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"4c83ac26-db03-11e4-8108-93107d5d86fe","variableMapping":{"high":"biggestStart","guess":"biggestStart","low":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[50,56,117,135,136],"tindex":"4c83ac27-db03-11e4-8108-bb4ecf60f797","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[36],"tindex":"4c83ac28-db03-11e4-8108-097e5192a042","variableMapping":{"weightApproximation":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"4c83ac29-db03-11e4-8108-75472f54bdf8","variableMapping":{"encoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[],"tindex":"4c83ac2a-db03-11e4-8108-133cf52199ca","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:281","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"4c83ac2b-db03-11e4-8108-27b27c772a06","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[32],"tindex":"4c83ac2c-db03-11e4-8108-475498bdfd06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"4c83ac2d-db03-11e4-8108-5d9accac1e60","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[236],"tindex":"4c83d33e-db03-11e4-8108-07c25ab8d23d","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxCount","edge":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"4c83d33f-db03-11e4-8108-8178b40d12d7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[58,59,66,89,96,103,104,112,122,123,131],"tindex":"4c83d340-db03-11e4-8108-37614b73441b","variableMapping":{"width":"paveType","lonSimilar":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[],"tindex":"4c83d341-db03-11e4-8108-276aee885dfd","variableMapping":{"mask":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-2},{"failures":[338,363,364],"tindex":"4c83d342-db03-11e4-8108-c9e0858e5344","variableMapping":{"newAdjIndex":"start","newBaseIndex":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[],"tindex":"4c83d343-db03-11e4-8108-d75ed4a1afc7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"4c83d344-db03-11e4-8108-89c8989defcb","variableMapping":{"d":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-2},{"failures":[],"tindex":"4c83d345-db03-11e4-8108-3347f4781d9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[],"tindex":"4c83d346-db03-11e4-8108-a3130bab14bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":0},{"failures":[320,321,322,323,324,325,326,329,330,331],"tindex":"4c83d347-db03-11e4-8108-b55c658e6804","variableMapping":{"edgePointer":"initialBits","edgeEntryBytes":"allBits","nextEdge":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:797","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"4c83d348-db03-11e4-8108-d95e20006e87","variableMapping":{"start":"guess","delta":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[338,364],"tindex":"4c83d349-db03-11e4-8108-f3b06e9fbead","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"4c83d34a-db03-11e4-8108-1f5957ab546a","variableMapping":{"i":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[0,3,4,6,8,9,11,13,14,15,16,17,18,19,20,21,22,23,25,173,365,174,366,175,176,166,156,161,162,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,202,203,204,205,206,207,208,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233],"tindex":"4c83d34b-db03-11e4-8108-11a4fa40d7ab","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"4c83d34c-db03-11e4-8108-1f80be2d1b71","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,52,55,56,163],"tindex":"4c83fa5d-db03-11e4-8108-b78c88b7e7a8","variableMapping":{"size":"includeWay"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[2,3,4,5,6,8,23,56,59,65,67,76,33,36,79,38,367,87,89,95,97,41,104,111,113,45,123,130,132,368,163],"tindex":"4c83fa5e-db03-11e4-8108-a1f684be6080","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-1},{"failures":[58,59,66,89,96,103,112,122,131],"tindex":"4c83fa5f-db03-11e4-8108-e30eac8cd87e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[],"tindex":"4c83fa60-db03-11e4-8108-3fcb195dd839","variableMapping":{"str":"value","this":"value","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:97","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-2},{"failures":[117],"tindex":"4c83fa61-db03-11e4-8108-e1a2d81f573c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[369],"tindex":"4c83fa62-db03-11e4-8108-9b41d24c10e5","variableMapping":{"_location":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[58,59,66,89,96,103,104,112,122,123,131],"tindex":"4c83fa63-db03-11e4-8108-8d86edc5a6c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:488","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-1},{"failures":[],"tindex":"4c83fa64-db03-11e4-8108-f71fd5fd7e3b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"4c83fa65-db03-11e4-8108-572ceee70108","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"4c83fa66-db03-11e4-8108-4b9469f5cdc0","variableMapping":{"turnCostIndex":"toSize","NO_TURN_ENTRY":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":-2},{"failures":[2,3,4,5,6,8,10,12,13,14,15,17,18,19,20,21,22,23,24,25],"tindex":"4c83fa67-db03-11e4-8108-65fb9a6758e8","variableMapping":{"highwayValue":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"4c83fa68-db03-11e4-8108-1168d79eac1c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":311,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":263,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":226,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":283,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":368,"com.graphhopper.reader.OSMReaderTest.testFerry":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":41,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":90,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":246,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":323,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":172,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":91,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":186,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":134,"com.graphhopper.reader.OSMReaderTest.testWithBounds":22,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":348,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":174,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":342,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":74,"com.graphhopper.coll.CompressedArrayTest.testCompress":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":95,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":215,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":253,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":284,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":191,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":267,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":26,"com.graphhopper.util.AngleCalcTest.testOrientation":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":130,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":257,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":154,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":250,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":141,"com.graphhopper.util.BitUtilLittleTest.testToBitString":178,"com.graphhopper.util.InstructionListTest.testWayList":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":136,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":160,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":42,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":96,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":239,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":287,"com.graphhopper.GraphHopperAPITest.testDisconnected179":165,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":268,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":363,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":89,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":324,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":261,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":356,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":240,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":209,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":111,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":327,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":197,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":260,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":258,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":187,"com.graphhopper.reader.OSMReaderTest.testSort":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":149,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":21,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":85,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":217,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":256,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":80,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":200,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":60,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":325,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":112,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":158,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":277,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":115,"com.graphhopper.routing.PathTest.testWayList":166,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":195,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":202,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":341,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":310,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":367,"com.graphhopper.coll.OSMIDMapTest.testGet2":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":159,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":313,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":280,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":205,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":297,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":69,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":70,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":67,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":273,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":302,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":359,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":151,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":224,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":266,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":270,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":222,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":47,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":123,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":144,"com.graphhopper.coll.OSMIDMapTest.testGetLong":184,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":289,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":329,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":39,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":109,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":269,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":353,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":303,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":196,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":231,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":305,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":45,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":170,"com.graphhopper.coll.CompressedArrayTest.testCompress2":330,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":117,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":361,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":57,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":27,"com.graphhopper.GraphHopperAPITest.testLoad":164,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":73,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":230,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":157,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":357,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":338,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":355,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":234,"com.graphhopper.storage.LevelGraphStorageTest.testClone":291,"com.graphhopper.reader.OSMReaderTest.testBarriers":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":364,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":232,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":192,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":10,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":245,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":147,"com.graphhopper.util.GHUtilityTest.testCopy":177,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":315,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":64,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":278,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":369,"com.graphhopper.util.AngleCalcTest.testAtan2":169,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":40,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":137,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":228,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":108,"com.graphhopper.routing.PathTest.testFindInstruction":167,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":307,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":350,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":31,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":148,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":316,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":65,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":276,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":150,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":75,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":97,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":264,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":139,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":351,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":214,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":129,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":189,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":54,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":296,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":185,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":340,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":190,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":290,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":125,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":53,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":62,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":233,"com.graphhopper.util.InstructionListTest.testWayList2":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":133,"com.graphhopper.reader.OSMReaderTest.testFoot":12,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":176,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":201,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":326,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":86,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":322,"com.graphhopper.reader.OSMReaderTest.testOneWay":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":335,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":116,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":358,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":295,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":362,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":105,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":218,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":93,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":46,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":146,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":16,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":254,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":156,"com.graphhopper.coll.OSMIDMapTest.testGet":181,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":259,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":32,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":252,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":106,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":183,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":198,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":71,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":247,"com.graphhopper.storage.RAMDataAccessTest.testCopy":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":346,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":43,"com.graphhopper.storage.RAMDataAccessTest.testSegments":227,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":152,"com.graphhopper.reader.OSMReaderTest.testMain":13,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":286,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":77,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":352,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":328,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":44,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":248,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":33,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":135,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":66,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":301,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":337,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":68,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":18,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":318,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":298,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":365,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":119,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":304,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":23,"com.graphhopper.util.SimpleIntDequeTest.testPush":237,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":140,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":37,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":294,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":81,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":36,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":212,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":279,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":299,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":28,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":59,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":281,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":249,"com.graphhopper.routing.PathTest.testTime":50,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":225,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":63,"com.graphhopper.util.BitUtilLittleTest.testToFloat":179,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":317,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":51,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":292,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":84,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":255,"com.graphhopper.reader.OSMReaderTest.testRelation":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":262,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":345,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":155,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":339,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":132,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":221,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":282,"com.graphhopper.GraphHopperTest.testFootOnly":9,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":163,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":72,"com.graphhopper.util.BitUtilLittleTest.testToInt":180,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":88,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":35,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":242,"com.graphhopper.util.AngleCalcTest.testCombined":171,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":271,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":38,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":55,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":143,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":312,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":204}}]
