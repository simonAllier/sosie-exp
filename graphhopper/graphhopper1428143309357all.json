[{"failures":[],"tindex":"5705a22a-dab5-11e4-bb03-9ba2bf055e78","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[0],"tindex":"5706657b-dab5-11e4-bb03-c9db6751c0c5","variableMapping":{"segmentSizeInBytes":"shift","indexDivisor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"5706657c-dab5-11e4-bb03-fb15153d1c96","variableMapping":{"counter":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"5706657d-dab5-11e4-bb03-f9a3fc186e69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[1,2,3,4,5],"tindex":"5706657e-dab5-11e4-bb03-8997724d21fc","variableMapping":{"intVal":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15],"tindex":"5706657f-dab5-11e4-bb03-f9e2a9f2e3c9","variableMapping":{"i":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-1},{"failures":[16,17],"tindex":"57066580-dab5-11e4-bb03-cb9eb8fed4b8","variableMapping":{"currentBucket":"maxCount","currentIndex":"maxCount","bucketSize":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[18,19],"tindex":"57066581-dab5-11e4-bb03-5d0619bf0c29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[],"tindex":"57066582-dab5-11e4-bb03-932b250f58db","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[16],"tindex":"57066583-dab5-11e4-bb03-1d892ded0df1","variableMapping":{"id":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":-1},{"failures":[20,18,21,22,23,24,25],"tindex":"57068c94-dab5-11e4-bb03-bf6e6fb4d568","variableMapping":{"newName":"key","name":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"57068c95-dab5-11e4-bb03-2f58b97c4166","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"57068c96-dab5-11e4-bb03-074af533096b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"57068c97-dab5-11e4-bb03-cb180316b9c1","variableMapping":{"y":"speedVal","angle":"speedVal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"57068c98-dab5-11e4-bb03-9d849c0fe439","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"57068c99-dab5-11e4-bb03-7f963614afa0","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":0},{"failures":[],"tindex":"57068c9a-dab5-11e4-bb03-f94d986a613e","variableMapping":{"deltaX":"fwdFaster","maxX":"fwdFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"57068c9b-dab5-11e4-bb03-475de5af4828","variableMapping":{"size":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"57068c9c-dab5-11e4-bb03-cb7144bf9888","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:61","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8 * 1024]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"57068c9d-dab5-11e4-bb03-ab32a27a2dd4","variableMapping":{"distance":"speed","speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[],"tindex":"57068c9e-dab5-11e4-bb03-3f16c68328d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:136","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.FlagEncoder> java.util.List<com.graphhopper.routing.util.FlagEncoder> = new java.util.ArrayList<com.graphhopper.routing.util.FlagEncoder>()"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"57068c9f-dab5-11e4-bb03-ed2e087c703d","variableMapping":{"red":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[67,68],"tindex":"57068ca0-dab5-11e4-bb03-37f5d4efdb9b","variableMapping":{"nameIndexRef":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,16,339,340,341,342,343,344,345,346,347,348,348,349,349,350,350,351,351,352,352,353,353,354,354,355,355,356,356,357,357,358,358,359,359,360,26,27,28,29,30,31,32,33,361,34,35,36,37,362,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,363,364,365,366,367,368,62,63,64,369,370,65,371,66,372,5,373,374,19,375,376,377,378,379,380,381,382,15,383,384,385,386,387,17,388,389,390,391,392,393,394,395],"tindex":"5706b2b1-dab5-11e4-bb03-19c6b8a911b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[396,8,397,398,13,399,400,401,402,14,403],"tindex":"5706b2b2-dab5-11e4-bb03-25ac160b5903","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:430","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"\\n\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"5706b2b3-dab5-11e4-bb03-67788a05ee00","variableMapping":{"str":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:153","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_INT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[404],"tindex":"5706b2b4-dab5-11e4-bb03-e13e768fc62e","variableMapping":{"line":"hourStr","lat":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String.substring(0, 1).charAt(0)) == 'S')\n    int = -int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[],"tindex":"5706b2b5-dab5-11e4-bb03-6138236ffeff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[405],"tindex":"5706b2b6-dab5-11e4-bb03-b55cda443473","variableMapping":{"bits":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"5706b2b7-dab5-11e4-bb03-43de982c3068","variableMapping":{"pos":"mSize","mSize":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"570727e8-dab5-11e4-bb03-8feaa0780afc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"570727e9-dab5-11e4-bb03-41218744d96c","variableMapping":{"elem":"mKeys","size":"mSize","keys":"mKeys","i":"i","key":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (int[][(int / 2)]) > int ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[343,9,406,0,345,362,47,375,376,378,381,382,385,17],"tindex":"57074efa-dab5-11e4-bb03-9bb990604f7d","variableMapping":{"bitsForEdgeFlags":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,178,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,235,250,407,408,409,410,411,412,413,414,415,416,417,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,16,339,340,341,342,343,344,345,346,347,348,348,349,349,350,350,351,351,352,352,353,353,354,354,355,355,356,356,357,357,358,358,359,359,360,26,27,28,29,30,31,32,33,361,34,35,36,37,362,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,368,63,64,369,370,65,66,372,5,373,19,375,376,377,378,379,380,381,382,383,384,385,386,17,388,394,395],"tindex":"57074efb-dab5-11e4-bb03-3b67925d19c4","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","index":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[360,361,362,38,60],"tindex":"57074efc-dab5-11e4-bb03-1170c718c037","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"57074efd-dab5-11e4-bb03-9de7a001a9d6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[360,33,361,37,362,38,39,42,43,54,56,57,58,60],"tindex":"57074efe-dab5-11e4-bb03-4b24c5c61a5a","variableMapping":{"updatedA":"to","nodeA":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1305","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"57074eff-dab5-11e4-bb03-e7a293757c3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:32","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[],"tindex":"57074f00-dab5-11e4-bb03-0ffc911c3a0c","variableMapping":{"ret":"endNode","retBucket":"endNode","i":"endNode","bucketSize":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66],"tindex":"57077611-dab5-11e4-bb03-5716d9ea749c","variableMapping":{"heap":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"57077612-dab5-11e4-bb03-156477f0abce","variableMapping":{"originalEdgesCount":"nodeB","edgeDifference":"nodeB","contractedNeighbors":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"57077613-dab5-11e4-bb03-6159bdf8c47a","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[418,419,8,420,421,422,13,423,424,401,425,426,14,427],"tindex":"57077614-dab5-11e4-bb03-13ef0f1cf976","variableMapping":{"edgeId":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":-1},{"failures":[331,428],"tindex":"57077615-dab5-11e4-bb03-5f252ba6c590","variableMapping":{"cp":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:125","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[31,33,36,46,429],"tindex":"57077616-dab5-11e4-bb03-173d6ee6ddb7","variableMapping":{"high":"lastElem","guess":"lastElem","low":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[36,430,431,429,432],"tindex":"57077617-dab5-11e4-bb03-45f5d1855e8b","variableMapping":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"i","i":"i","mValues":"elem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:118","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.coll.SparseIntIntArray.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"57077618-dab5-11e4-bb03-0b3d7c2f6873","variableMapping":{"java.lang.Double.MAX_VALUE":"lat","existingDirectWeight":"maxLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-2},{"failures":[],"tindex":"57077619-dab5-11e4-bb03-0b7f17189771","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:53","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"5707761a-dab5-11e4-bb03-bd7ce483f818","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":-2},{"failures":[433],"tindex":"5707761b-dab5-11e4-bb03-939040d8f79a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"5707761c-dab5-11e4-bb03-01b0cdfe032b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Please call empty constructor if you intent to use \" + \"more than two places via addPlace method.\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[343],"tindex":"5707761d-dab5-11e4-bb03-b39c36876f5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[],"tindex":"5707761e-dab5-11e4-bb03-77eb9b7cc999","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.trimToSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-2},{"failures":[],"tindex":"5707761f-dab5-11e4-bb03-9708b6744ddb","variableMapping":{"value":"delta","numberOfBits":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":0},{"failures":[92,107,199,214,237,252,288,303,336,16],"tindex":"57077620-dab5-11e4-bb03-1b500cc8423e","variableMapping":{"err":"mSize","tmpErr":"i","y1":"mSize","dLon":"mSize","sLat":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"57077621-dab5-11e4-bb03-1dec74ba6b63","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"57079d32-dab5-11e4-bb03-232dd5291e69","variableMapping":{"index":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":-2},{"failures":[336,339],"tindex":"57079d33-dab5-11e4-bb03-53bc21a7ef5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[],"tindex":"57079d34-dab5-11e4-bb03-6327032a5165","variableMapping":{"edgeCount":"skippedEdge2","this":"graph"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:376","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureEdgeIndex(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"57079d35-dab5-11e4-bb03-9d1d47272abe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"57079d36-dab5-11e4-bb03-b382a90576c9","variableMapping":{"size":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"57079d37-dab5-11e4-bb03-a9bb200929fc","variableMapping":{"flags":"bytePos","mask":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":0},{"failures":[418,419,8,420,421,422,13,423,424,401,425,426,14,427],"tindex":"57079d38-dab5-11e4-bb03-89748e9ddc2b","variableMapping":{"tInt":"hwInt","speed":"hwInt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:155","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    java.lang.Integer = java.lang.Integer;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[],"tindex":"57079d39-dab5-11e4-bb03-85b26c4ffce4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"57079d3a-dab5-11e4-bb03-332e08918146","variableMapping":{"initializedCounter":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"57079d3b-dab5-11e4-bb03-95485ebae52b","variableMapping":{"bits":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-2},{"failures":[],"tindex":"57079d3c-dab5-11e4-bb03-4d99cf5db01a","variableMapping":{"y1":"factor","x1":"factor","y2":"factor","x2":"factor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":-2},{"failures":[],"tindex":"57079d3d-dab5-11e4-bb03-cb1c141f1310","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[434,435,436],"tindex":"57079d3e-dab5-11e4-bb03-f5c8383867d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-1},{"failures":[],"tindex":"57079d3f-dab5-11e4-bb03-0fcabbee98c4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[437],"tindex":"57079d40-dab5-11e4-bb03-cd942f8387ad","variableMapping":{"force":"force","maxSpeed":"speed","speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[],"tindex":"57079d41-dab5-11e4-bb03-1b390c002ae2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"57079d42-dab5-11e4-bb03-2338ae491def","variableMapping":{"tmpNo":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":0},{"failures":[],"tindex":"5707c453-dab5-11e4-bb03-3724ae021659","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"bitsForEdgeFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[142,143,144,147,320,321,323,325,332,333,338,16],"tindex":"5707c454-dab5-11e4-bb03-f9ab16061461","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[430,429,432],"tindex":"5707c455-dab5-11e4-bb03-f9984bbdc64d","variableMapping":{"from":"i","hash":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"5707c456-dab5-11e4-bb03-731cafffa28a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"5707c457-dab5-11e4-bb03-c91d923b9c34","variableMapping":{"dist":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[397,399,402,426,14,403],"tindex":"5707c458-dab5-11e4-bb03-0b255fc6ba1d","variableMapping":{"is3D":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"5707c459-dab5-11e4-bb03-95c78ce62dd8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"5707c45a-dab5-11e4-bb03-cd8c83d267e5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[],"tindex":"5707c45b-dab5-11e4-bb03-f93fb15a5c2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:345","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,139,140,142,143,144,145,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,178,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,235,250,410,412,415,262,264,265,266,267,268,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,16,339,340,341,342,343,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,26,27,28,29,30,31,32,33,361,34,35,36,37,362,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,368,62,63,64,369,370,65,66,372,5,373,19,375,376,377,378,379,380,381,382,383,384,385,386,17,388,394,395],"tindex":"5707c45c-dab5-11e4-bb03-7f42d89c4081","variableMapping":{"index":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"5707c45d-dab5-11e4-bb03-712d584c9ca8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"5707c45e-dab5-11e4-bb03-d1180806e8c9","variableMapping":{"angle":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[69,70,71,72,74,75,79,83,100,105,106,111,113,114,119,120,121,142,143,144,145,147,160,161,162,175,438,178,181,182,186,190,207,212,213,218,220,221,250,267,270,271,275,279,296,302,307,309,310,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,314,324,328,329,330,331,342,343,346,347,348,349,351,352,353,354,355,356,358,359,57,363,364,365,366,367,368,62,63,64,369,370,65,66,372,5,373,19,375,376,377,378,379,380,381,382,383,384,385,386,17,389,390,391],"tindex":"5707eb6f-dab5-11e4-bb03-535ed9e27022","variableMapping":{"edgeId":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-1},{"failures":[0],"tindex":"5707eb70-dab5-11e4-bb03-8d15f66da448","variableMapping":{"segmentSizeInBytes":"index","capacity":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"5707eb71-dab5-11e4-bb03-29abf0377e63","variableMapping":{"map":"map"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":0},{"failures":[43,58],"tindex":"5707eb72-dab5-11e4-bb03-b14092b4962d","variableMapping":{"prepared":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"5707eb73-dab5-11e4-bb03-9be62982cb3c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:62","type":"CtReturnImpl","sourcecode":"return \"FASTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"status":0},{"failures":[331,463,437,464,465,466,418,6,419,8,467,468,0,421,11,422,13,469,470,401,471,472,405,426,14,473,474,63,64,369,370,65,372,386],"tindex":"5707eb74-dab5-11e4-bb03-07be117b0b37","variableMapping":{"eleDelta":"backSpeed","decEleSum":"maxSpeed","fullDist2D":"maxSpeed","decDist2DSum":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"5707eb75-dab5-11e4-bb03-2b170f0c0401","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[475,476,341,477,478,479,480,20,481,433,463,437,482,483,18,484,464,465,21,485,486,434,487,488,466,342,343,489,418,6,7,396,419,8,435,490,491,492,1,493,494,495,467,397,468,22,420,496,497,9,498,10,0,499,421,11,12,398,422,13,436,500,501,502,2,503,504,505,469,399,470,23,423,506,507,424,400,401,508,509,3,510,511,512,471,402,472,24,425,513,514,426,515,14,427,516,517,4,518,519,473,403,474,25,520,19,375,376,377,378,379,380,381,382,383,384,385,386,17],"tindex":"5707eb76-dab5-11e4-bb03-ad284b1a82b8","variableMapping":{"edgeId":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[336,340],"tindex":"5707eb77-dab5-11e4-bb03-935cae0519cd","variableMapping":{"width":"removed","lonSimilar":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[419,8,422,13,401,426,14],"tindex":"5707eb78-dab5-11e4-bb03-dbd5fd7bcc05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[434,435,498,436,381],"tindex":"5707eb79-dab5-11e4-bb03-efa62f3900d7","variableMapping":{"tmp":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[],"tindex":"5707eb7a-dab5-11e4-bb03-317b090a3aff","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"5708128b-dab5-11e4-bb03-0fe058ad0511","variableMapping":{"this":"osmReader"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.finishedReading()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[263,265,268,324,360,26,27,28,29,30,31,33,361,34,36,37,362,38,39,40,41,43,44,47,48,49,50,52,53,54,56,57,58,59,60,63,64],"tindex":"5708128c-dab5-11e4-bb03-2be8c86f6f4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[331,428],"tindex":"5708128d-dab5-11e4-bb03-b38c62b80452","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":55,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":349,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":267,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":405,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":225,"com.graphhopper.reader.OSMReaderTest.testFerry":19,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":320,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":321,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":422,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":161,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":62,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":397,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":496,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":196,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":393,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":451,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":473,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":29,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":245,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":90,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":157,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":452,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":445,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":34,"com.graphhopper.GraphHopperTest.testPrepare":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":257,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":360,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":432,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":47,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":141,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":403,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":333,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":273,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":158,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":421,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":45,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":120,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":221,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":13,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":178,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":275,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":429,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":37,"com.graphhopper.GraphHopperTest.testLoadOSM":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":127,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":411,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":121,"com.graphhopper.reader.OSMReaderTest.testSort":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":470,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":338,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":182,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":455,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":109,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":74,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":258,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":355,"com.graphhopper.storage.RAMDataAccessTest.testHeader":446,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":217,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":438,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":300,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":86,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":179,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":191,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":186,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":285,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":513,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":472,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":165,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":51,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":156,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":163,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":41,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":277,"com.graphhopper.coll.OSMIDMapTest.testGetLong":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":200,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":206,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":292,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":270,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":294,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":99,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":424,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":197,"com.graphhopper.GraphHopperAPITest.testLoad":317,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":274,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":410,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":475,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":91,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":81,"com.graphhopper.storage.LevelGraphStorageTest.testClone":279,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":187,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":340,"com.graphhopper.reader.OSMReaderTest.testBarriers":378,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":155,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":435,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":229,"com.graphhopper.util.GHUtilityTest.testCopy":324,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":174,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":512,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":25,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":138,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":449,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":4,"com.graphhopper.routing.PathTest.testFindInstruction":347,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":188,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":430,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":319,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":480,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":308,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":7,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":135,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":110,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":215,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":322,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":201,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":495,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":406,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":281,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":230,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":417,"com.graphhopper.util.InstructionListTest.testWayList2":330,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":253,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":128,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":115,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":192,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":398,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":220,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":75,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":342,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":283,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":453,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":436,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":198,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":43,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":80,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":379,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":454,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":57,"com.graphhopper.coll.OSMIDMapTest.testGet":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":195,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":20,"com.graphhopper.routing.PathBidirRefTest.testExtract":334,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":296,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":365,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":502,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":169,"com.graphhopper.storage.RAMDataAccessTest.testCopy":442,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":251,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":426,"com.graphhopper.storage.RAMDataAccessTest.testSegments":448,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":501,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":133,"com.graphhopper.util.GHUtilityTest.testSort2":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":52,"com.graphhopper.reader.OSMReaderTest.testMain":376,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":271,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":482,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":23,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":170,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":299,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":255,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":286,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":290,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":311,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":287,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":210,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":418,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":293,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":386,"com.graphhopper.storage.StorablePropertiesTest.testStore":175,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":441,"com.graphhopper.storage.GraphHopperStorageTest.testClone":83,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":254,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":21,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":313,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":93,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":464,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":262,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":231,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":265,"com.graphhopper.routing.PathTest.testTime":345,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":511,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":309,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":280,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":488,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":130,"com.graphhopper.reader.OSMReaderTest.testRelation":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":244,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":298,"com.graphhopper.util.GHUtilityTest.testSortDirected":326,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":468,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":461,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":351,"com.graphhopper.GraphHopperTest.testFootOnly":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":515,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":18,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":143,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":164,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":489,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":240,"com.graphhopper.search.NameIndexTest.testCreate":72,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":447,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":348,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":413,"com.graphhopper.routing.QueryGraphTest.testOneWay":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":131,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":517,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":392,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":119,"com.graphhopper.reader.OSMReaderTest.testWithBounds":385,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":450,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":22,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":237,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":337,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":246,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":481,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":9,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":276,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":272,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":507,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":467,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":520,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":209,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":154,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":484,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":202,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":79,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":38,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":112,"com.graphhopper.util.InstructionListTest.testWayList":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":500,"com.graphhopper.GraphHopperAPITest.testDisconnected179":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":232,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":211,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":493,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":395,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":243,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":260,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":469,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":369,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":85,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":35,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":499,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":361,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":307,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":485,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":509,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":184,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":59,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":78,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":172,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":412,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":506,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":73,"com.graphhopper.routing.PathTest.testWayList":346,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":483,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":428,"com.graphhopper.coll.OSMIDMapTest.testGet2":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":60,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":458,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":304,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":208,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":505,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":96,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":476,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":193,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":166,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":167,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":443,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":462,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":491,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":431,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":400,"com.graphhopper.util.GHUtilityTest.testSort":325,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":504,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":516,"com.graphhopper.search.NameIndexTest.testPut":70,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":222,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":159,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":150,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":419,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":354,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":180,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":372,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":508,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":390,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":479,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":203,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":336,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":416,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":250,"com.graphhopper.routing.PathTest.testFound":344,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":0,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":373,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":306,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":264,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":503,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":199,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":61,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":71,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":235,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":88,"com.graphhopper.util.InstructionListTest.testEmptyList":327,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":439,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":471,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":50,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":487,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":463,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":433,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":474,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":53,"com.graphhopper.reader.PrinctonReaderTest.testRead":394,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":111,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":162,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":234,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":224,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":492,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":519,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":498,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":510,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":6,"com.graphhopper.reader.OSMReaderTest.testFoot":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":248,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":359,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":391,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":125,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":310,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":514,"com.graphhopper.reader.OSMReaderTest.testOneWay":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":126,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":92,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":107,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":216,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":518,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":460,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":490,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":242,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":36,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":465,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":28,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":151,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":459,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":341,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":238,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":350,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":76,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":387,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":316,"com.graphhopper.routing.PathBidirRefTest.testExtract2":335,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":414,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":362,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":129,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":140,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":402,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":69,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":105,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":152,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":425,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":261,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":477,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":494,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":122,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":108,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":282,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":486,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":100,"com.graphhopper.GraphHopperTest.testFootAndCar":370,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":288,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":401,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":173,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":228,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":497,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":434,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":48,"com.graphhopper.storage.StorablePropertiesTest.testLoad":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":56,"com.graphhopper.GraphHopperTest.testPrepareOnly":368,"com.graphhopper.GraphHopperTest.testVia":63,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":226,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":383,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":266,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":104,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":331,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":478,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":241,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":466,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":305,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":303,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":181}}]
