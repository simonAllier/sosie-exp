[{"failures":[0],"tindex":"5d5cc6db-db52-11e4-9e9b-15787cda616e","variableMapping":{"r":"fwdFaster","x":"fwdFaster","absY":"fwdFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"5d5e748c-db52-11e4-9e9b-fbd6e5bd5cfa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10],"tindex":"5d5e748d-db52-11e4-9e9b-610e78332166","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:397","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[11],"tindex":"5d5e748e-db52-11e4-9e9b-fb7703a69bd6","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[12,13,14],"tindex":"5d5e748f-db52-11e4-9e9b-55cb43174409","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:97","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator))"},"status":-1},{"failures":[],"tindex":"5d5e7490-db52-11e4-9e9b-49623e94197b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"5d5e7491-db52-11e4-9e9b-279d563139f1","variableMapping":{"err":"start","dLat":"prevConnectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"5d5e7492-db52-11e4-9e9b-f9f2f7c7afa7","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"5d5e7493-db52-11e4-9e9b-8b8697e9e7e1","variableMapping":{"edgeTo":"code","edgeFrom":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-2},{"failures":[],"tindex":"5d5e7494-db52-11e4-9e9b-efbfabaf91ab","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"5d5e7495-db52-11e4-9e9b-89c0df0a86cf","variableMapping":{"nodeId":"hash","nodeIdOffset":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"5d5e7496-db52-11e4-9e9b-2b207451b1b1","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"5d5e7497-db52-11e4-9e9b-4b833283260d","variableMapping":{"maxRasterWidth2InMeterNormed":"ele","currNormedDist":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:374","type":"CtReturnImpl","sourcecode":"return double < (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[],"tindex":"5d5e7498-db52-11e4-9e9b-19bb20aef43d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[35],"tindex":"5d5e7499-db52-11e4-9e9b-a700c05d122c","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:281","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[],"tindex":"5d5e9baa-db52-11e4-9e9b-b5461fcb2f1e","variableMapping":{"store":"store"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[36],"tindex":"5d5e9bab-db52-11e4-9e9b-7fe7ee00ceb9","variableMapping":{"towerNodeDistance":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[1,2,3,4,37,5,6,7,8,9,10],"tindex":"5d5e9bac-db52-11e4-9e9b-856a3014fa90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[],"tindex":"5d5e9bad-db52-11e4-9e9b-653ae3b1ee0a","variableMapping":{"flags":"forwardBit","tmpValue":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"5d5e9bae-db52-11e4-9e9b-1d38e6bd0550","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.KM_MILE":"prevEle","distInMeter":"prevEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:76","type":"CtLocalVariableImpl","sourcecode":"double double = (double / 1000) / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[38,39,40,41,42],"tindex":"5d5e9baf-db52-11e4-9e9b-4bbb1d00ab57","variableMapping":{"high":"i","guess":"i","low":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,36,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"5d5e9bb0-db52-11e4-9e9b-4b41b2f68e1f","variableMapping":{"periodicUpdates":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[],"tindex":"5d5e9bb1-db52-11e4-9e9b-afd6614b6236","variableMapping":{"neighborUpdates":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[],"tindex":"5d5e9bb2-db52-11e4-9e9b-dbbc630898cd","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[43,45,46,47,49,51,52,83,84,85,86,87,36,57,58,59,60,61,62,63,64,65,66,67,68,88,89,69,90,91,92,93,94,76,95,96,77,78,97,98,81,99,100,101],"tindex":"5d5e9bb3-db52-11e4-9e9b-59bc3d7b4727","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[],"tindex":"5d5e9bb4-db52-11e4-9e9b-f375f5ff8c2d","variableMapping":{"shift":"wayBitMask","tmpValue":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"5d5e9bb5-db52-11e4-9e9b-0bc3c2795629","variableMapping":{"edgeId":"mSize","nextEdge":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"5d5ec2c6-db52-11e4-9e9b-41abc9759a16","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"5d5ec2c7-db52-11e4-9e9b-9bce772b8636","variableMapping":{"directionBitMask":"flags","flags":"defaultValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-2},{"failures":[102,103,104,105],"tindex":"5d5ec2c8-db52-11e4-9e9b-577fa91bd09f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[],"tindex":"5d5ec2c9-db52-11e4-9e9b-f9f8c249119c","variableMapping":{"entry":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"5d5ec2ca-db52-11e4-9e9b-d340e6962a7a","variableMapping":{"pointer":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[43,44,45,46,47,48,49,106,50,52,107,108,109,110,111,112,113,83,114,115,116,117,87,118,119,120,121,122,123,124,36,56,57,58,59,60,61,62,63,64,65,66,67,68,125,0,126,12,127,128,129,13,14,130,131,89,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,146,147,148,149,150,151,152,153,154,155,39,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,40,176,41,177,178,179,42,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,90,205,206,207,208,209,210,211,212,213,214,91,215,216,217,218,219,220,221,222,27,223,92,224,225,226,28,227,29,30,228,229,230,231,232,233,234,235,236,237,238,239,240,241,71,72,73,74,75,242,243,244,245,246,247,31,248,93,249,250,251,32,252,33,34,253,254,255,256,257,258,259,260,76,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,97,285,286,287,288,289,290,291,292,293,294,98,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,99,330,331,332,333,334,335,336,337,338,339,100,340,341,342,343,344],"tindex":"5d5ec2cb-db52-11e4-9e9b-bf191dea2fc1","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[345],"tindex":"5d5ec2cc-db52-11e4-9e9b-e90146585c66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"5d5ec2cd-db52-11e4-9e9b-0be4b948df63","variableMapping":{"width":"nextNodeBit","latSimilar":"nextNodeBit","lonSimilar":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:100","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[43,53],"tindex":"5d5ec2ce-db52-11e4-9e9b-43adcba145c5","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:307","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[],"tindex":"5d5ee9df-db52-11e4-9e9b-6b4f3874ce26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[346,347,348],"tindex":"5d5ee9e0-db52-11e4-9e9b-bfaf6cdebeeb","variableMapping":{"lastKey":"oldRelationFlags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[349,3,350,351,352,37,353,5,354,355,7,356,357,10,358,359],"tindex":"5d5ee9e1-db52-11e4-9e9b-3970440a82a8","variableMapping":{"maxSpeed":"maxSpeed","fwdSpeed":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[360,361,362,2,363,349,364,3,350,351,365,347,352,37,366,353,367,5,354,355,368,369,6,370,371,372,7,356,373,374,375,376,9,377,357,378,10,358,359,379],"tindex":"5d5ee9e2-db52-11e4-9e9b-2d892f484083","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[147,148,156,158,169],"tindex":"5d5ee9e3-db52-11e4-9e9b-4f8f592add98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"5d5ee9e4-db52-11e4-9e9b-dbd7ac0a2461","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-2},{"failures":[],"tindex":"5d5ee9e5-db52-11e4-9e9b-11fe63179985","variableMapping":{"intVal":"i","degree":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[],"tindex":"5d5ee9e6-db52-11e4-9e9b-15522111d911","variableMapping":{"acceptBit":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir","ferryBit":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"5d5ee9e7-db52-11e4-9e9b-ffcd6d94dbe1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:133","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"5d5ee9e8-db52-11e4-9e9b-c1350160eebd","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":0},{"failures":[],"tindex":"5d5ee9e9-db52-11e4-9e9b-ab579d12c354","variableMapping":{"edgeId":"i","nextEdge":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[380],"tindex":"5d5ee9ea-db52-11e4-9e9b-3f4c12b161ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"5d5ee9eb-db52-11e4-9e9b-537e5933f63e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[360,2,351,380,352,37,355,381,6,370,374,9,359],"tindex":"5d5ee9ec-db52-11e4-9e9b-2de0cd8da753","variableMapping":{"pointIndex":"speed","index":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[],"tindex":"5d5ee9ed-db52-11e4-9e9b-0731fb205914","variableMapping":{"weight":"x"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[104],"tindex":"5d5ee9ee-db52-11e4-9e9b-5714ea75e2e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"5d5f10ff-db52-11e4-9e9b-c307fa0d1f2a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"5d5f1100-db52-11e4-9e9b-3ffc767d6fec","variableMapping":{"midLat":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"5d5f1101-db52-11e4-9e9b-7bb433696655","variableMapping":{"bytePos":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"5d5f1102-db52-11e4-9e9b-f5ce0e404101","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.VERY_NICE","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.VERY_NICE","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.VERY_NICE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"5d5f1103-db52-11e4-9e9b-a548873f70d0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[352,4,37],"tindex":"5d5f1104-db52-11e4-9e9b-2d8aa57711d1","variableMapping":{"versionHint":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"5d5f1105-db52-11e4-9e9b-258f2c4b3ba6","variableMapping":{"latlon":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[43,44,45,46,49,50,52,87,147,148,149,150,151,152,153,154,155,39,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,40,41,177,178,179,42,180,220,221,225,226,227,228,229,230,231,233,234,303,305],"tindex":"5d5f1106-db52-11e4-9e9b-a384cdbb6ac3","variableMapping":{"lastInBoundsPillarNode":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:660","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"5d5f1107-db52-11e4-9e9b-b5d855d6af1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.isBool(long, int);\n}"},"status":-2},{"failures":[],"tindex":"5d5f1108-db52-11e4-9e9b-b1ebcec9946f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"5d5f1109-db52-11e4-9e9b-59e427aff804","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"5d5f110a-db52-11e4-9e9b-3bb3d23fb15c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,24],"tindex":"5d5f110b-db52-11e4-9e9b-9b8d6dcb054a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"status":-1},{"failures":[],"tindex":"5d5f110c-db52-11e4-9e9b-57ec84f142e8","variableMapping":{"width":"maxCount","lonSimilar":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"5d5f110d-db52-11e4-9e9b-35aca199feab","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"5d5f381e-db52-11e4-9e9b-31cd2e5b2226","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"5d5f381f-db52-11e4-9e9b-9f6f6f0bea82","variableMapping":{"id":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":0},{"failures":[],"tindex":"5d5f3820-db52-11e4-9e9b-5387e16dc104","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"5d5f3821-db52-11e4-9e9b-d97a215c5708","variableMapping":{"nanoTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"5d5f3822-db52-11e4-9e9b-417b559d96b6","variableMapping":{"red":"removed","green":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":0},{"failures":[13],"tindex":"5d5f3823-db52-11e4-9e9b-218c9df3e1ea","variableMapping":{"id":"prevConnectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[12,13],"tindex":"5d5f3824-db52-11e4-9e9b-018090c58e16","variableMapping":{"this":"g","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1330","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.getAllEdges()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-1},{"failures":[],"tindex":"5d5f3825-db52-11e4-9e9b-6fe592fdda22","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"5d5f3826-db52-11e4-9e9b-4fde28649bf5","variableMapping":{"algo":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[45,48,56,68,382,383],"tindex":"5d5f3827-db52-11e4-9e9b-435d5f23495a","variableMapping":{"size":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"5d5f3828-db52-11e4-9e9b-af02413d635a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":"5d5f3829-db52-11e4-9e9b-e536dacdeedf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"5d5f382a-db52-11e4-9e9b-f9ab8c991602","variableMapping":{"store":"store"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[1,2,3,8,9,10],"tindex":"5d5f5f3b-db52-11e4-9e9b-d917e9ee449c","variableMapping":{"sacScale":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[36,384],"tindex":"5d5f5f3c-db52-11e4-9e9b-93322a1641ec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[12,14],"tindex":"5d5f5f3d-db52-11e4-9e9b-e94c9365ddd8","variableMapping":{"min":"minOnewayNetworkSize","tmpSize":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":-1},{"failures":[],"tindex":"5d5f5f3e-db52-11e4-9e9b-1b9c2f70d953","variableMapping":{"initLeafSize":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"5d5f5f3f-db52-11e4-9e9b-897a87b0d136","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[12],"tindex":"5d5f5f40-db52-11e4-9e9b-eb038b4a7b83","variableMapping":{"numTiles":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[],"tindex":"5d5f5f41-db52-11e4-9e9b-3dc066bbd345","variableMapping":{"this":"graph","toNodeId":"skippedEdge2","newEdgeId":"to","fromNodeId":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:352","type":"CtIfImpl","sourcecode":"if (int != int)\n    com.graphhopper.storage.GraphHopperStorage.connectNewEdge(int, int);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[360,1,2,3,380,352,4,5,6,7,374,8,9,10],"tindex":"5d5f5f42-db52-11e4-9e9b-5f71d1f0adc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[383],"tindex":"5d5f5f43-db52-11e4-9e9b-ed4b0cbb12e2","variableMapping":{"highwayValue":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"5d5f5f44-db52-11e4-9e9b-c950fdea4c34","variableMapping":{"index":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:767","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[43,44,45,46,47,49,50,51,52,53,112,113,83,84,85,86,87,36,57,58,59,60,61,62,63,64,65,66,67,68,88,385,386,125,0,89,133,134,136,137,138,139,140,141,143,144,166,69,184,90,210,91,217,92,224,225,93,249,250,387,94,76,388,95,389,390,391,392,393,394,395,96,77,78,264,97,290,98,297,396,105,397,398,81,309,99,335,100,342,399,400,401,402,403,404,101],"tindex":"5d5f5f45-db52-11e4-9e9b-49c4d342299f","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[],"tindex":"5d5f5f46-db52-11e4-9e9b-7104d314af6c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-2},{"failures":[122,62,405,406,407,408],"tindex":"5d5f5f47-db52-11e4-9e9b-2b12fdd3e317","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[],"tindex":"5d5f5f48-db52-11e4-9e9b-bfd1f1313039","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"5d5f5f49-db52-11e4-9e9b-798a074b54e9","variableMapping":{"ghLocation":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"5d5f865a-db52-11e4-9e9b-c31bf1af82f7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"5d5f865b-db52-11e4-9e9b-293eb803ea9f","variableMapping":{"byteCount":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"5d5f865c-db52-11e4-9e9b-0d999c3c8e1a","variableMapping":{"nodeFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[],"tindex":"5d5f865d-db52-11e4-9e9b-a3064a75e8dd","variableMapping":{"distance":"lat","speed":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:140","type":"CtReturnImpl","sourcecode":"return com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":334,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":164,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":80,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":237,"com.graphhopper.reader.OSMReaderTest.testFerry":36,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":120,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":121,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":370,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":224,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":44,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":344,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":274,"com.graphhopper.coll.CompressedArrayTest.testCompress":16,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":174,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":94,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":195,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":222,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":399,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":178,"com.graphhopper.GraphHopperTest.testPrepare":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":170,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":202,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":376,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":156,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":241,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":110,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":308,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":13,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":374,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":155,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":249,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":297,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":77,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":23,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":309,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":180,"com.graphhopper.GraphHopperTest.testLoadOSM":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":253,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":250,"com.graphhopper.reader.OSMReaderTest.testSort":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":358,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":65,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":79,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":213,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":69,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":21,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":140,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":294,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":333,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":191,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":301,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":264,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":319,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":368,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":354,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":227,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":160,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":226,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":151,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":311,"com.graphhopper.coll.OSMIDMapTest.testGetLong":386,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":284,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":326,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":81,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":328,"com.graphhopper.coll.CompressedArrayTest.testCompress2":15,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":204,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":352,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":275,"com.graphhopper.GraphHopperAPITest.testLoad":107,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":196,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":186,"com.graphhopper.storage.LevelGraphStorageTest.testClone":313,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":384,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":14,"com.graphhopper.reader.OSMReaderTest.testBarriers":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":265,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":220,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":406,"com.graphhopper.util.GHUtilityTest.testCopy":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":154,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":234,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":395,"com.graphhopper.routing.PathTest.testFindInstruction":132,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":266,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":115,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":340,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":236,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":362,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":214,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":200,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":279,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":306,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":345,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":315,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":183,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":398,"com.graphhopper.util.InstructionListTest.testWayList2":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":351,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":254,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":218,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":270,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":296,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":375,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":125,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":408,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":276,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":153,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":185,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":60,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":400,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":166,"com.graphhopper.coll.OSMIDMapTest.testGet":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":273,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":11,"com.graphhopper.routing.PathBidirRefTest.testExtract":145,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":229,"com.graphhopper.storage.RAMDataAccessTest.testCopy":391,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":299,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":388,"com.graphhopper.storage.RAMDataAccessTest.testSegments":394,"com.graphhopper.util.GHUtilityTest.testSort2":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":161,"com.graphhopper.reader.OSMReaderTest.testMain":57,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":82,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":283,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":24,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":230,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":262,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":320,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":324,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":343,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":137,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":287,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":360,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":396,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":327,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":67,"com.graphhopper.storage.GraphHopperStorageTest.testClone":188,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":219,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":383,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":198,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":300,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":303,"com.graphhopper.routing.PathTest.testTime":131,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":367,"com.graphhopper.util.BitUtilLittleTest.testToFloat":85,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":341,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":256,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":331,"com.graphhopper.reader.OSMReaderTest.testRelation":346,"com.graphhopper.util.GHUtilityTest.testSortDirected":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":350,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":404,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":136,"com.graphhopper.GraphHopperTest.testFootOnly":52,"com.graphhopper.util.BitUtilLittleTest.testToInt":86,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":369,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":72,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":28,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":258,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":393,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":133,"com.graphhopper.routing.QueryGraphTest.testOneWay":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":257,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":20,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":371,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":93,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":17,"com.graphhopper.reader.OSMReaderTest.testWithBounds":66,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":96,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":390,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":127,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":295,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":347,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":310,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":307,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":373,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":286,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":280,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":184,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":148,"com.graphhopper.util.BitUtilLittleTest.testToBitString":84,"com.graphhopper.util.InstructionListTest.testWayList":113,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":215,"com.graphhopper.GraphHopperAPITest.testDisconnected179":108,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":288,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":31,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":349,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":129,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":47,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":190,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":179,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":207,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":177,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":100,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":366,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":263,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":168,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":232,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":379,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":181,"com.graphhopper.routing.PathTest.testWayList":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":389,"com.graphhopper.coll.OSMIDMapTest.testGet2":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":169,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":285,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":201,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":271,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":29,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":325,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":30,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":101,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":228,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":4,"com.graphhopper.util.GHUtilityTest.testSort":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":252,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":378,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":223,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":238,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":75,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":244,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":105,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":242,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":281,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":12,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":397,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":76,"com.graphhopper.routing.PathTest.testFound":130,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":53,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":380,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":339,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":35,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":302,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":357,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":277,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":55,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":260,"com.graphhopper.util.InstructionListTest.testEmptyList":111,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":39,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":159,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":356,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":162,"com.graphhopper.reader.PrinctonReaderTest.testRead":123,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":225,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":272,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":387,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":282,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":363,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":407,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":361,"com.graphhopper.reader.OSMReaderTest.testFoot":56,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":144,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":33,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":34,"com.graphhopper.reader.OSMReaderTest.testOneWay":68,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":197,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":211,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":293,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":372,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":403,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":205,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":175,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":173,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":245,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":402,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":126,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":92,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":135,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":182,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":104,"com.graphhopper.routing.PathBidirRefTest.testExtract2":146,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":255,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":54,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":209,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":355,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":62,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":364,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":251,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":212,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":316,"com.graphhopper.GraphHopperTest.testFootAndCar":48,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":90,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":37,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":233,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":392,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":405,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":268,"com.graphhopper.GraphHopperTest.testPrepareOnly":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":165,"com.graphhopper.GraphHopperTest.testVia":45,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":239,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":359,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":64,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":304,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":114,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":208,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":63,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":338,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":336,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":78}}]
