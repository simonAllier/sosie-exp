[{"failures":[0],"tindex":"51f11944-da63-11e4-b8cf-193b0363e2a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"51f22ab5-da63-11e4-b8cf-77297f5badc3","variableMapping":{"id":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[],"tindex":"51f22ab6-da63-11e4-b8cf-c3df47424532","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.CAR","entryVal":"entry","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:170","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"51f22ab7-da63-11e4-b8cf-67014299edcb","variableMapping":{"allSegments":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[1,2,3,4,5,6],"tindex":"51f22ab8-da63-11e4-b8cf-a139b2b67bb5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[7],"tindex":"51f22ab9-da63-11e4-b8cf-419fc47e6f77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"51f22aba-da63-11e4-b8cf-ddc2cf8c1c52","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-2},{"failures":[],"tindex":"51f22abb-da63-11e4-b8cf-138239e59b7a","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"51f22abc-da63-11e4-b8cf-8fe17fe1514a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-2},{"failures":[8,9,10,11,12],"tindex":"51f22abd-da63-11e4-b8cf-1f3b01efa759","variableMapping":{"foundIndex":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"51f22abe-da63-11e4-b8cf-b9ab3dc2a815","variableMapping":{"java.lang.Double.NaN":"y"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[],"tindex":"51f22abf-da63-11e4-b8cf-e1db5c786770","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"51f22ac0-da63-11e4-b8cf-3728d55367da","variableMapping":{"size":"nextRelBit","newSize":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"51f22ac1-da63-11e4-b8cf-9779ea8ce2eb","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"51f251d2-da63-11e4-b8cf-efad594ea4f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:136","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.FlagEncoder> java.util.List<com.graphhopper.routing.util.FlagEncoder> = new java.util.ArrayList<com.graphhopper.routing.util.FlagEncoder>()"},"status":-2},{"failures":[],"tindex":"51f251d3-da63-11e4-b8cf-9dda51240fc7","variableMapping":{"lat":"ele"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,7,21,22,23,24,25,8,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"tindex":"51f251d4-da63-11e4-b8cf-0f122862fef4","variableMapping":{"err":"indexDivisor","dLat":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[],"tindex":"51f251d5-da63-11e4-b8cf-e5d53cc211c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:154","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"51f251d6-da63-11e4-b8cf-05511290bdd5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"51f29ff7-da63-11e4-b8cf-2d9cf5e36a0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[],"tindex":"51f29ff8-da63-11e4-b8cf-978a3b7953e3","variableMapping":{"scDirMask":"defaultValue","flags":"defaultValue","dir":"defaultValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[126],"tindex":"51f29ff9-da63-11e4-b8cf-dde61c0ad448","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"0 segments are not allowed.\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"51f2c70a-da63-11e4-b8cf-eb0ac36045d7","variableMapping":{"maxDist":"costs","dist":"costs","indexWithMaxDist":"maxTurnCosts","i":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:147","type":"CtIfImpl","sourcecode":"if (double < double) {\n    int = int;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-2},{"failures":[],"tindex":"51f2c70b-da63-11e4-b8cf-31eb39037d2f","variableMapping":{"java.lang.Double.NaN":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:104","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[14,15,16,127,17,19,20,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,122,150,151,152,153,154,155,156,157],"tindex":"51f2c70c-da63-11e4-b8cf-5f4947981f8d","variableMapping":{"segmentSizeInBytes":"to","index":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-1},{"failures":[158,159],"tindex":"51f2c70d-da63-11e4-b8cf-0f84420aefb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[160,50,58,161,79,162,163,99,164,165,102,105,166,167,108,113,168,169,116,170,171,172,0,120,121,130,131,142,143,153,156,173],"tindex":"51f2c70e-da63-11e4-b8cf-47765501ee58","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[174,13,14,15,17,18,20,175,176,160,177,178,42,43,44,45,50,51,52,54,55,58,59,161,64,66,72,73,76,78,79,83,179,180,181,182,162,163,98,99,183,184,185,186,164,187,165,188,189,190,191,192,193,102,194,104,105,195,196,197,198,166,199,167,200,201,202,203,204,205,108,206,110,112,113,207,208,209,210,168,211,169,212,213,214,215,216,217,116,218,128,129,170,171,158,219,220,221,159,222,172,223,0,224,225,226,120,121,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,122,150,151,152,153,227,154,228,229,230,231,155,156,232,233,234,157,235,173],"tindex":"51f2ee1f-da63-11e4-b8cf-ed237e693106","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:273","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, boolean), com.graphhopper.routing.util.FlagEncoder.int, boolean)"},"status":-1},{"failures":[],"tindex":"51f2ee20-da63-11e4-b8cf-5509beb1ed81","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[236,237,238,239,240,241,242,243,244,245,246],"tindex":"51f2ee21-da63-11e4-b8cf-13ff62984c25","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[0],"tindex":"51f2ee22-da63-11e4-b8cf-a73fb7ef074d","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[158,159],"tindex":"51f2ee23-da63-11e4-b8cf-55e4f5bda687","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"51f31534-da63-11e4-b8cf-cf013edf320f","variableMapping":{"this":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:230","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[],"tindex":"51f9cbf5-da63-11e4-b8cf-8761c47464eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:41","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[247,248,249,250,251,252,253,254],"tindex":"51f9cbf6-da63-11e4-b8cf-23d911d5de85","variableMapping":{"factor":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"51f9cbf7-da63-11e4-b8cf-b9aa105c9d79","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"51f9cbf8-da63-11e4-b8cf-4537a7215561","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[174,255],"tindex":"51f9cbf9-da63-11e4-b8cf-e9ec36a559a2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[239,256],"tindex":"51f9cbfa-da63-11e4-b8cf-b3ee7bed579b","variableMapping":{"lastInBoundsPillarNode":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:660","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"51f9cbfb-da63-11e4-b8cf-85ff964824e6","variableMapping":{"offset":"prevConnectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[],"tindex":"51f9f30c-da63-11e4-b8cf-4588974f8a0c","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"51f9f30d-da63-11e4-b8cf-5355cc073d4c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[14,15,16,127,17,19,7,30,46,161,165,167,169,257,171,258,259,260,261,262,263,264,237,265,266,267,268,269,239,270,271,272,273,274,242,275,276,0,277,278,279,245,280,281,256,282,283,226,120,130,131,140,142,143],"tindex":"51f9f30e-da63-11e4-b8cf-7dff9fe0e7bc","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[],"tindex":"51f9f30f-da63-11e4-b8cf-1dedde9d89f3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"51f9f310-da63-11e4-b8cf-f55c029f5999","variableMapping":{"keys":"keys","i":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":0},{"failures":[236,237,238,239,240,284,241,242,243,244,245,246],"tindex":"51f9f311-da63-11e4-b8cf-2f75d7ab1048","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-1},{"failures":[],"tindex":"51f9f312-da63-11e4-b8cf-85fc9f443637","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.KM_MILE":"fwdDecline","distInMeter":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:76","type":"CtLocalVariableImpl","sourcecode":"double double = (double / 1000) / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"51f9f313-da63-11e4-b8cf-a98702821a80","variableMapping":{"java.lang.Double.MAX_VALUE":"backSpeed","existingDirectWeight":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-2},{"failures":[130,131,152,153,156],"tindex":"51f9f314-da63-11e4-b8cf-6f3d575df155","variableMapping":{"dLat":"from","dLon":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[],"tindex":"51f9f315-da63-11e4-b8cf-6f84761960f4","variableMapping":{"lastTime":"lastTime","nanoTime":"lastTime","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[8,9,10,11,12],"tindex":"51fa1a26-da63-11e4-b8cf-b9be81835096","variableMapping":{"factor":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[],"tindex":"51fa1a27-da63-11e4-b8cf-b9121feb2495","variableMapping":{"map":"map"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":0},{"failures":[],"tindex":"51fa1a28-da63-11e4-b8cf-bf08a09bb49c","variableMapping":{"bytes":"flags","capacity":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[],"tindex":"51fa1a29-da63-11e4-b8cf-29a89937be35","variableMapping":{"item":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:256","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[7,30,31,285],"tindex":"51fa1a2a-da63-11e4-b8cf-0f339986797a","variableMapping":{"shift":"ferryBit","flags":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[15,16,17,19,20,21,24,25,8,26,29,37,38,39,40,41,286,287,288,44,45,50,69,73,74,79,289,290,291,292,293,294,86,92,93,94,95,295,296,297,298,299,300,301,302,303,304,97,98,99,100,101,102,104,105,106,107,108,110,112,113,114,115,116,305,120,122,123,235,306,173,124,125],"tindex":"51fa1a2b-da63-11e4-b8cf-b3a516ee9bf6","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[14,127,307,31,222,285],"tindex":"51fa1a2c-da63-11e4-b8cf-5db83baba45d","variableMapping":{"high":"encoded","guess":"encoded","low":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"51fa1a2d-da63-11e4-b8cf-87de6176fb18","variableMapping":{"store":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"51fa1a2e-da63-11e4-b8cf-cd101a2abac5","variableMapping":{"todoBytes":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":0},{"failures":[],"tindex":"51fa1a2f-da63-11e4-b8cf-6d23cca0465d","variableMapping":{"orientation":"longTripsSpeed","resultOrientation":"longTripsSpeed","baseOrientation":"durationInHours","java.lang.Math.PI":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":0},{"failures":[],"tindex":"51fa1a30-da63-11e4-b8cf-a9b6e7213b2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"51fa1a31-da63-11e4-b8cf-7fcff76fcef9","variableMapping":{"segmentSizeInBytes":"usedBits","capacity":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"51fa1a32-da63-11e4-b8cf-8b571585e757","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[],"tindex":"51fa1a33-da63-11e4-b8cf-61f6bf09e24e","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:185","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.length()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[283],"tindex":"51fa1a34-da63-11e4-b8cf-751fcdc806ad","variableMapping":{"compressionLevel":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[253,308],"tindex":"51fa1a35-da63-11e4-b8cf-7745c04f772f","variableMapping":{"tmpDegreeCounter":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"51fa1a36-da63-11e4-b8cf-4d32f023b5d9","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"51fa1a37-da63-11e4-b8cf-0162a2d3bfeb","variableMapping":{"nodeB":"valueIfKeyNotFound","edgeId":"valueIfKeyNotFound","nodeA":"valueIfKeyNotFound"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"51fa1a38-da63-11e4-b8cf-814d84560495","variableMapping":{"this":"this","unknownSpeed":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":0},{"failures":[256,282],"tindex":"51fa4149-da63-11e4-b8cf-23ac79ab3706","variableMapping":{"bytePos":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"51fa414a-da63-11e4-b8cf-eb3ad8ad9144","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"51fa414b-da63-11e4-b8cf-e31db9a33f2e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-2},{"failures":[],"tindex":"51fa414c-da63-11e4-b8cf-0361b1e1f576","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"51fa414d-da63-11e4-b8cf-1982e11c758d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"51fa414e-da63-11e4-b8cf-7d1623ef30fd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"51fa414f-da63-11e4-b8cf-6b80923ddc08","variableMapping":{"acceptBit":"encoded","ferryBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-2},{"failures":[174,17,18,19,255,54,73,289,309,310,311,299,312,313,314,315,98,185,104,197,203,110,112,209,215,316,317],"tindex":"51fa4150-da63-11e4-b8cf-511150225d0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"51fa4151-da63-11e4-b8cf-83974aaff8bd","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[],"tindex":"51fa4152-da63-11e4-b8cf-37bd4c5eea54","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[174,13,14,15,16,127,17,18,19,20,255,175,176,7,307,21,22,23,24,25,8,26,27,28,29,30,31,318,160,177,178,319,320,42,321,322,323,43,44,45,46,324,325,50,51,52,53,54,55,56,57,58,59,326,161,60,61,62,63,64,65,66,67,68,69,70,71,72,327,73,74,75,76,77,78,79,80,81,82,83,84,328,329,330,331,332,333,179,334,335,336,337,338,339,180,340,87,88,89,90,341,91,342,343,92,344,93,345,346,347,348,349,350,351,352,353,354,355,181,356,357,358,359,360,94,361,95,362,363,364,365,366,367,368,369,370,371,372,182,162,373,374,375,163,315,376,377,98,378,379,380,99,183,184,381,185,186,382,383,164,187,384,165,385,386,387,388,188,389,189,390,391,100,392,393,190,394,191,101,395,192,396,193,102,397,103,398,194,399,400,104,401,402,403,105,195,196,404,197,198,405,406,166,199,407,167,408,409,410,411,200,412,201,413,414,106,415,416,202,417,203,107,418,204,419,205,108,420,109,421,206,422,110,111,423,112,424,425,426,113,207,208,427,209,210,428,429,168,211,430,169,431,432,433,434,212,435,213,436,437,114,438,439,214,440,215,115,441,216,442,217,116,443,117,444,218,445,128,129,170,158,219,220,221,159,446,447,0,224,225,448,226,120,121,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,122,150,151,152,153,227,154,228,229,230,231,449,155,156,232,233,234,157,450,450,123,123,451,451,452,452,235,235,306,306,453,453,173,173,124,124,454,454,455,455,125,125],"tindex":"51fa6863-da63-11e4-b8cf-eb5c2e26fbc0","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[162,155,234],"tindex":"51fa6864-da63-11e4-b8cf-13d9e8dfaf32","variableMapping":{"mGarbage":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[52,60,61,67,74,75,184,385,386,390,101,395,196,408,409,413,107,418,208,431,432,436,115,441,158,221],"tindex":"51fa6865-da63-11e4-b8cf-0b7a1d5e7942","variableMapping":{"initializedCounter":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"51fa6866-da63-11e4-b8cf-0d142bc612ee","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[273,278,256,282],"tindex":"51fa6867-da63-11e4-b8cf-510d0da8d6c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[],"tindex":"51fa6868-da63-11e4-b8cf-b946a9a99e24","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[261],"tindex":"51fa6869-da63-11e4-b8cf-71857588fe98","variableMapping":{"orientation":"maxSpeed","java.lang.Math.PI":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:97","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"51fa686a-da63-11e4-b8cf-7f25d4b0b1c2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[],"tindex":"51fa686b-da63-11e4-b8cf-a1d26bb5caf4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[130,131,140,142,152],"tindex":"51fa686c-da63-11e4-b8cf-61309e8fa7d2","variableMapping":{"lastKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[14,16,127,24,25,456,457,458,459,460,42,54,69,82,347,461,462,463,464,465,466,467,468,364,98,185,100,398,104,197,106,421,110,112,209,114,444,139,147,122,123,452,124,454,125],"tindex":"51fa686d-da63-11e4-b8cf-15db4ffc3c06","variableMapping":{"minLon":"epsilon","maxLat":"d2","minLat":"epsilon","maxLon":"epsilon","lon":"d1","lat":"d2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:158","type":"CtReturnImpl","sourcecode":"return (((double < (double)) && (double >= (double))) && (double < (double))) && (double >= (double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-1},{"failures":[],"tindex":"51fa8f7e-da63-11e4-b8cf-e3f5220eabcd","variableMapping":{"i":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[174,14,15,16,127,17,18,19,20,255,307,21,22,23,24,25,8,26,27,28,29,31,220],"tindex":"51fa8f7f-da63-11e4-b8cf-9946074a431e","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"51fa8f80-da63-11e4-b8cf-677479f53304","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[126],"tindex":"51fa8f81-da63-11e4-b8cf-93976fee245b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-1},{"failures":[469],"tindex":"51fa8f82-da63-11e4-b8cf-ddd20e9e47d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"51fa8f83-da63-11e4-b8cf-4fcb9683f888","variableMapping":{"mask":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[470,471,472,473,474,154,229,230,231,155,232,234],"tindex":"51fa8f84-da63-11e4-b8cf-cf73527f634f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"51fa8f85-da63-11e4-b8cf-bd2afd5fc36a","variableMapping":{"oldValueIndex":"wayBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[14,15,16,127,17,19,20,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,122,150,151,152,153,154,155,156,157],"tindex":"51fa8f86-da63-11e4-b8cf-4956293c3ece","variableMapping":{"turnCostIndex":"to","nextTurnCostIndex":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-1},{"failures":[152],"tindex":"51fa8f87-da63-11e4-b8cf-c99225ab041d","variableMapping":{"this":"this","dist":"fromHeight","com.graphhopper.util.DistanceCalcEarth.R":"fromHeight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:70","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin(((double / 2) / (com.graphhopper.util.DistanceCalcEarth.double)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":191,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":148,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":267,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":315,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":51,"com.graphhopper.reader.OSMReaderTest.testFerry":7,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":177,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":274,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":461,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":361,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":13,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":399,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":430,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":33,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":85,"com.graphhopper.coll.CompressedArrayTest.testCompress":248,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":421,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":229,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":69,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":167,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":358,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":232,"com.graphhopper.GraphHopperTest.testPrepare":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":147,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":153,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":201,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":474,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":140,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":340,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":240,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":325,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":359,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":159,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":239,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":272,"com.graphhopper.util.PointListTest.testEquals":458,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":138,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":407,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":344,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":444,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":110,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":99,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":473,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":157,"com.graphhopper.GraphHopperTest.testLoadOSM":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":350,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":93,"com.graphhopper.reader.OSMReaderTest.testSort":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":275,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":28,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":220,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":424,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":419,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":104,"com.graphhopper.util.PointListTest.testReverse":457,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":81,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":173,"com.graphhopper.storage.RAMDataAccessTest.testHeader":312,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":318,"com.graphhopper.storage.MMapDataAccessTest.testHeader":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":217,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":305,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":394,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":462,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":314,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":406,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":460,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":111,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":113,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":384,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":266,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":265,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":364,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":411,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":144,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":357,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":135,"com.graphhopper.coll.OSMIDMapTest.testGetLong":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":134,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":433,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":437,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":389,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":98,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":390,"com.graphhopper.coll.CompressedArrayTest.testCompress2":247,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":414,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":264,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":169,"com.graphhopper.GraphHopperAPITest.testLoad":128,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":295,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":1,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":408,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":196,"com.graphhopper.storage.LevelGraphStorageTest.testClone":185,"com.graphhopper.reader.OSMReaderTest.testBarriers":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":207,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":446,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":11,"com.graphhopper.util.GHUtilityTest.testCopy":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":182,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":338,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":463,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":304,"com.graphhopper.routing.PathTest.testFindInstruction":121,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":208,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":470,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":160,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":397,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":335,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":205,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":216,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":231,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":434,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":126,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":56,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":403,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":298,"com.graphhopper.util.InstructionListTest.testWayList2":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":351,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":428,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":117,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":268,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":273,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":447,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":467,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":164,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":10,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":291,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":431,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":136,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":195,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":24,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":122,"com.graphhopper.coll.OSMIDMapTest.testGet":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":211,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":313,"com.graphhopper.routing.PathBidirRefTest.testExtract":224,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":39,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":100,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":368,"com.graphhopper.storage.RAMDataAccessTest.testCopy":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":74,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":5,"com.graphhopper.storage.RAMDataAccessTest.testSegments":303,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":181,"com.graphhopper.util.GHUtilityTest.testSort2":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":145,"com.graphhopper.reader.OSMReaderTest.testMain":21,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":378,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":459,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":436,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":369,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":425,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":165,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":388,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":194,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":235,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":214,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":277,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":310,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":189,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":30,"com.graphhopper.storage.GraphHopperStorageTest.testClone":197,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":285,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":261,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":410,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":57,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":375,"com.graphhopper.routing.PathTest.testTime":226,"com.graphhopper.util.BitUtilLittleTest.testToFloat":287,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":103,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":186,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":263,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":68,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":393,"com.graphhopper.util.GHUtilityTest.testSortDirected":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":280,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":294,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":452,"com.graphhopper.GraphHopperTest.testFootOnly":20,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":468,"com.graphhopper.util.BitUtilLittleTest.testToInt":288,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":88,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":260,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":363,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":227,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":64,"com.graphhopper.search.NameIndexTest.testCreate":49,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":302,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":450,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":311,"com.graphhopper.routing.QueryGraphTest.testOneWay":454,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":354,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":251,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":92,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":249,"com.graphhopper.reader.OSMReaderTest.testWithBounds":29,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":61,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":219,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":443,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":70,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":256,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":183,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":379,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":271,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":439,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":172,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":212,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":105,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":131,"com.graphhopper.util.BitUtilLittleTest.testToBitString":286,"com.graphhopper.util.InstructionListTest.testWayList":44,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":420,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":118,"com.graphhopper.GraphHopperAPITest.testDisconnected179":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":58,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":252,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":440,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":53,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":176,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":83,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":16,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":405,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":89,"com.graphhopper.routing.util.EncodedValueTest.testSwap":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":233,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":202,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":416,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":156,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":243,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":426,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":151,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":371,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":276,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":400,"com.graphhopper.routing.PathTest.testWayList":120,"com.graphhopper.storage.MMapDataAccessTest.testCopy":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":60,"com.graphhopper.coll.OSMIDMapTest.testGet2":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":152,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":309,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":192,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":438,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":412,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":257,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":429,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":188,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":365,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":366,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":300,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":6,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":472,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":236,"com.graphhopper.util.GHUtilityTest.testSort":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":327,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":347,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":308,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":4,"com.graphhopper.search.NameIndexTest.testPut":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":218,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":404,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":337,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":360,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":91,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":330,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":279,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":453,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":328,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":423,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":3,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":435,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":158,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":297,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":73,"com.graphhopper.routing.PathTest.testFound":448,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":255,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":283,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":193,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":374,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":432,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":471,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":48,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":161,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":96,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":199,"com.graphhopper.util.InstructionListTest.testEmptyList":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":139,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":370,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":143,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":223,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":2,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":270,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":413,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":146,"com.graphhopper.reader.PrinctonReaderTest.testRead":175,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":108,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":119,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":95,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":168,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":41,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":50,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":213,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":278,"com.graphhopper.reader.OSMReaderTest.testFoot":307,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":72,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":125,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":348,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":398,"com.graphhopper.reader.OSMReaderTest.testOneWay":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":349,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":409,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":418,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":442,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":293,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":66,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":234,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":228,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":292,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":331,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":465,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":170,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":62,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":451,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":402,"com.graphhopper.routing.PathBidirRefTest.testExtract2":225,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":130,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":180,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":238,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":352,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":203,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":332,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":8,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":466,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":84,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":333,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":345,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":204,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":383,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":106,"com.graphhopper.GraphHopperTest.testFootAndCar":127,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":386,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":237,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":372,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":54,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":469,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":149,"com.graphhopper.GraphHopperTest.testPrepareOnly":174,"com.graphhopper.GraphHopperTest.testVia":14,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":52,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":27,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":163,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":46,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":417,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":171,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":65,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":258,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":396,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":395,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":112}}]
