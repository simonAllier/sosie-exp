[{"failures":[0,1,2,3],"tindex":"ba06707c-dab4-11e4-8ee1-ffa47bb5721a","variableMapping":{"unpavedBit":"acceptBit","shift":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"ba0b527d-dab4-11e4-8ee1-616d983a2e31","variableMapping":{"initLeafSize":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"ba0b527e-dab4-11e4-8ee1-5f35666bb357","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[3],"tindex":"ba0b527f-dab4-11e4-8ee1-1d535161f31e","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,0,17,18,19,20,21,22,23,24,25,26,27,28,29,1,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,290,291,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301],"tindex":"ba0b7990-dab4-11e4-8ee1-2df0e588df31","variableMapping":{"dataAccess":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:308","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create((64 * 1024))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"ba0b7991-dab4-11e4-8ee1-1dd671aa164c","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"ba0b7992-dab4-11e4-8ee1-3d042a15a131","variableMapping":{"todoBytes":"internalFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"ba0b7993-dab4-11e4-8ee1-add00f358570","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[302,303,304],"tindex":"ba0b7994-dab4-11e4-8ee1-d190e8fab467","variableMapping":{"sacScale":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"ba0b7995-dab4-11e4-8ee1-417560962c81","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[305,306],"tindex":"ba0b7996-dab4-11e4-8ee1-35f0d9f95e70","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[66,72,74,75,86,92,94,95],"tindex":"ba0b7997-dab4-11e4-8ee1-27b82da5e9d0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[307,308,253,262,265],"tindex":"ba0b7998-dab4-11e4-8ee1-dd139a9b1148","variableMapping":{"mainEdgeState":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-1},{"failures":[309],"tindex":"ba0b7999-dab4-11e4-8ee1-a9ddca0649b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"ba0b799a-dab4-11e4-8ee1-2159faad3590","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"ba0b799b-dab4-11e4-8ee1-4b2cd3a01ca3","variableMapping":{"clonedG":"g","nodeEntryBytes":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1074","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.int) != (int))\n    throw new java.lang.IllegalStateException(((((\"nodeEntryBytes cannot be different for cloned graph. \" + \"Cloned: \") + (com.graphhopper.storage.GraphHopperStorage.int)) + \" vs \") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":0},{"failures":[],"tindex":"ba0ba0ac-dab4-11e4-8ee1-d3a436f1be3f","variableMapping":{"d":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"ba0ba0ad-dab4-11e4-8ee1-e7a4dbd3b2d8","variableMapping":{"index":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-2},{"failures":[],"tindex":"ba0ba0ae-dab4-11e4-8ee1-a3a02277b899","variableMapping":{"red":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"ba0ba0af-dab4-11e4-8ee1-d90bfed6f2d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"ba0ba0b0-dab4-11e4-8ee1-a124adcf79a2","variableMapping":{"periodicUpdates":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[],"tindex":"ba0ba0b1-dab4-11e4-8ee1-914c4d9d6d8e","variableMapping":{"factor":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"ba0ba0b2-dab4-11e4-8ee1-c5711e6f5849","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[310,311,312,313],"tindex":"ba0ba0b3-dab4-11e4-8ee1-2972073caa62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,314,13,315,316,14,15,16,0,17,18,19,20,21,22,23,24,25,26,27,28,29,1,30,317,318,319,320,321,322,323,324,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,325,326,327,328,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,329,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,330,331,332,333,103,104,105,106,107,334,108,109,335,336,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,337,338,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,339,193,340,341,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,342,343,344,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,290,291,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301],"tindex":"ba0ba0b4-dab4-11e4-8ee1-dd3b7aa2076d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"ba0ba0b5-dab4-11e4-8ee1-b9ad746b4ecd","variableMapping":{"precision":"java.lang.Double.MAX_VALUE","lat":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[345,346,310,347,348,349,311,350,351,305,352,353,312,354,355,306,356,357,313,358],"tindex":"ba0bc7c6-dab4-11e4-8ee1-152d15ec4f15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"ba0bc7c7-dab4-11e4-8ee1-c3a0965bb6dc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"ba0bc7c8-dab4-11e4-8ee1-379cb0307db6","variableMapping":{"bit":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[252],"tindex":"ba0bc7c9-dab4-11e4-8ee1-cd8832f3fc03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:250","type":"CtIfImpl","sourcecode":"if (!boolean)\n    return com.graphhopper.storage.GraphHopperStorage.reverseFlags(long, long);\n"},"status":-1},{"failures":[],"tindex":"ba0bc7ca-dab4-11e4-8ee1-e122e3f8d0be","variableMapping":{"size":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[16,303,304],"tindex":"ba0bc7cb-dab4-11e4-8ee1-ed2e17c02187","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-1},{"failures":[359,345,346],"tindex":"ba0bc7cc-dab4-11e4-8ee1-879d0c0af343","variableMapping":{"key":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"ba0bc7cd-dab4-11e4-8ee1-516ab7f63196","variableMapping":{"edgeId":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":0},{"failures":[360,361,284],"tindex":"ba0bc7ce-dab4-11e4-8ee1-ab0552e7d8ef","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[345,346,310,349,311,305,353,312,306,357,313],"tindex":"ba0bc7cf-dab4-11e4-8ee1-cde9a1862708","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","capacity":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:328","type":"CtIfImpl","sourcecode":"if (long < (int))\n    long = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[],"tindex":"ba0bc7d0-dab4-11e4-8ee1-5f739edd2604","variableMapping":{"ghLocation":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","osmFile":"entryVal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[362,363,364,360,361,278,280,281,282,284,286,288],"tindex":"ba0bc7d1-dab4-11e4-8ee1-5f6d93051552","variableMapping":{"edgeId":"element","nextEdge":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[258,273],"tindex":"ba0bc7d2-dab4-11e4-8ee1-0f59a31b025e","variableMapping":{"latSimilar":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,314,13,315,316,14,15,16,0,17,18,19,20,21,22,23,24,25,26,27,28,1,31,32,33,34,35,36,37,365,38,39,40,41,42,43,44,45,366,367,368,369,370,371,372,373,374,375,376,46,377,378,379,380,381,382,383,384,385,386,387,388,389,390,47,391,392,393,394,395,396,397,398,399,400,401,48,49,50,51,402,52,53,54,55,56,57,403,58,59,61,62,63,64,329,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,334,108,109,335,336,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,337,338,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,339,404,193,340,341,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,405,406,407,408,237,409,410,411,412,309,413,238,239,240,241,242,243,414,415,416,302,417,418,303,419,420,421,304,422,423,424,425,426,427,359,345,346,428,429,430,431,432,433,434,310,435,436,437,347,438,307,308,439,348,440,349,441,442,443,444,445,446,447,311,448,449,350,450,451,351,452,305,352,353,453,454,455,456,457,458,459,460,461,312,462,463,464,354,244,245,465,466,355,467,306,356,357,468,469,470,471,472,473,474,475,476,313,477,478,479,358,480,481,3,246,247,248,249,250,251,482,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,483,278,279,280,281,282,283,284,285,286,287,288,289,484,290,291,292,293,294,295,296,297,298,299,300,301,485,486],"tindex":"ba0beee3-dab4-11e4-8ee1-fb042381fcce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":-1},{"failures":[487],"tindex":"ba0beee4-dab4-11e4-8ee1-addb23337e2e","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[359,346,429,431,432,310,435,437,347,440,349,441,443,445,311,448,350,451,351,452,353,456,458,459,312,462,464,354,466,355,467,357,471,473,474,313,477,479,358,2],"tindex":"ba0beee5-dab4-11e4-8ee1-8104bfdc068d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[16,28,1,303,304],"tindex":"ba0beee6-dab4-11e4-8ee1-19b1348ccbc6","variableMapping":{"val":"motorcarTag","existing":"motorcarTag","key":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-1},{"failures":[407,428,442,455,470],"tindex":"ba0beee7-dab4-11e4-8ee1-ff5e12ec54eb","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[359],"tindex":"ba0beee8-dab4-11e4-8ee1-31fe172ea89c","variableMapping":{"baseUrl":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[238,242,243],"tindex":"ba0beee9-dab4-11e4-8ee1-f1291884dd25","variableMapping":{"segmentsToMap":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-1},{"failures":[488,489,490,491,492,103,104,106,108,109,113,114,115,123,126,128,129,131,132,137,139,140,141,142,143,145,149,150,151,156,157,165,168,170,171,173,174,179,181,182,183,185,187,191,192,193,198,199,207,210,212,213,215,216,221,223,224,225,227,229,233,234],"tindex":"ba0c15fa-dab4-11e4-8ee1-fda5997d42e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[],"tindex":"ba0c15fb-dab4-11e4-8ee1-61b61c5e1c86","variableMapping":{"edgeId":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[],"tindex":"ba0c15fc-dab4-11e4-8ee1-715b4c81346b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[],"tindex":"ba0c15fd-dab4-11e4-8ee1-0396e96ef81f","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"ba0c15fe-dab4-11e4-8ee1-ad93a8d40a41","variableMapping":{"cap":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"ba0c15ff-dab4-11e4-8ee1-b9d96918da71","variableMapping":{"maxLat":"java.lang.Double.MAX_VALUE","bounds":"com.graphhopper.util.shapes.BBox.INVERSE","lat":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHResponse:182","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[238,242,243],"tindex":"ba0c1600-dab4-11e4-8ee1-afee1371ecc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:99","type":"CtContinueImpl","sourcecode":"continue nextState"},"status":-1},{"failures":[],"tindex":"ba0c1601-dab4-11e4-8ee1-7becac77cbbf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"ba0c1602-dab4-11e4-8ee1-9d64b64de855","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"ba0c1603-dab4-11e4-8ee1-3f98cf498aba","variableMapping":{"tmp":"costs","tmpNo":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:148","type":"CtIfImpl","sourcecode":"if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[245],"tindex":"ba0c8b34-dab4-11e4-8ee1-370faa37a380","variableMapping":{"precision":"incEleSum","lat":"eleDelta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[493],"tindex":"ba0cb245-dab4-11e4-8ee1-05a2064f11e2","variableMapping":{"str":"str","name":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[4,6,13,494],"tindex":"ba0cb246-dab4-11e4-8ee1-75a071686791","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[],"tindex":"ba0cb247-dab4-11e4-8ee1-d5ac25c9e51c","variableMapping":{"systemProperty":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[],"tindex":"ba0cb248-dab4-11e4-8ee1-85a62f63a40e","variableMapping":{"newName":"val","name":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[238,242],"tindex":"ba0cb249-dab4-11e4-8ee1-b3256fc0c9eb","variableMapping":{"low":"index","guess":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"ba0cb24a-dab4-11e4-8ee1-07c9736a7a97","variableMapping":{"weightToPrioMap":"weightToPrioMap","highway":"trackType","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"ba0cb24b-dab4-11e4-8ee1-8d775dfb8f15","variableMapping":{"sacScale":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"ba0cb24c-dab4-11e4-8ee1-cbbb3d13bf81","variableMapping":{"bytePointer":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[],"tindex":"ba0cb24d-dab4-11e4-8ee1-8f09377ba497","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"ba0cb24e-dab4-11e4-8ee1-67cb70029660","variableMapping":{"res":"bytePos","value":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":0},{"failures":[],"tindex":"ba0cb24f-dab4-11e4-8ee1-a1fe440fa024","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"ba0cb250-dab4-11e4-8ee1-b58c9805389e","variableMapping":{"size":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[105,244,245,3,249,252,262],"tindex":"ba0cb251-dab4-11e4-8ee1-2da5f05c6452","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:54","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"ba0cb252-dab4-11e4-8ee1-0743052ef292","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[6,14,15,0,1,31,32,36,366,367,368,375,46,389,393,396,400,335,113,114,115,122,124,137,142,145,149,337,155,156,157,164,166,179,184,187,191,339,340,197,198,199,206,208,221,226,229,233,235,238,242,243,425,253,263,266,275,278,279,284,286,289,294,297],"tindex":"ba0cb253-dab4-11e4-8ee1-130a20d29275","variableMapping":{"flags":"flags","tmpValue":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[],"tindex":"ba0cb254-dab4-11e4-8ee1-c9f214febe67","variableMapping":{"pavementName":"str","wayTypeName":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-2},{"failures":[309],"tindex":"ba0cd965-dab4-11e4-8ee1-1dd7385ed9a5","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"ba0cd966-dab4-11e4-8ee1-31fb031fdce6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,314,13,315,316,14,15,16,0,17,18,19,20,21,22,23,24,25,26,27,28,29,1,30,31,32,33,34,35,36,37,365,38,39,40,41,42,43,44,45,366,367,368,369,370,371,372,373,374,375,376,46,377,378,379,380,381,382,383,384,385,386,387,388,389,390,47,391,392,393,394,395,396,397,398,399,400,401,48,49,50,51,402,52,53,54,55,56,57,403,58,59,61,62,63,64,329,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,334,108,109,335,336,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,337,338,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,339,404,193,340,341,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,405,406,407,408,237,409,410,411,412,309,413,238,239,240,241,242,243,414,415,416,302,417,418,303,419,420,421,304,422,423,424,425,426,427,359,345,346,428,429,430,431,432,433,434,310,435,436,437,347,487,307,308,439,348,440,349,441,442,443,444,445,446,447,311,448,449,350,450,451,351,452,305,352,353,453,454,455,456,457,458,459,460,461,312,462,463,464,354,244,245,465,466,355,467,306,356,357,468,469,470,471,472,473,474,475,476,313,477,478,479,358,480,2,495,496,497,481,3,246,247,248,249,250,251,482,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,483,278,279,280,281,282,283,284,285,286,287,288,289,484,290,291,292,293,294,295,296,297,298,299,300,301,485,486],"tindex":"ba0cd967-dab4-11e4-8ee1-3b61a4666f85","variableMapping":{"ref":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":-1},{"failures":[],"tindex":"ba0cd968-dab4-11e4-8ee1-9195b64072e0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"ba0cd969-dab4-11e4-8ee1-d3e07c6babee","variableMapping":{"capacity":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[0,21,359,345,310,311,451,305,353,312,466,306,357,313,3],"tindex":"ba0cd96a-dab4-11e4-8ee1-5910b35c7775","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","edgeTo":"speed","edgeFrom":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[],"tindex":"ba0cd96b-dab4-11e4-8ee1-3db9c140cb34","variableMapping":{"segmentSizeInBytes":"start","indexDivisor":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[345,310],"tindex":"ba0d007c-dab4-11e4-8ee1-2b5359fcd03b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-1},{"failures":[5,6,7,8,9,10,12,314,315,0,17,18,19,21,22,23,25,26,27,28,29,1,414,302,418,303,420,304],"tindex":"ba0d007d-dab4-11e4-8ee1-896fef7ab54a","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[4,6,7,8,9,10,12,314,13,315,14,15,16,0,17,18,19,20,21,22,23,25,26,27,28,1,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,488,491,492,105,334,109,335,336,110,124,151,337,338,152,166,339,193,340,341,194,208,235,236],"tindex":"ba0d007e-dab4-11e4-8ee1-7b280729170b","variableMapping":{"err":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[498,499,66,72,74,75,500,86,92,94,95,501,502,503,504,505,506,507,508,509],"tindex":"ba0d007f-dab4-11e4-8ee1-a7c7f1b16462","variableMapping":{"edgePointer":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"ba0d0080-dab4-11e4-8ee1-57decb1bd325","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[418],"tindex":"ba0d0081-dab4-11e4-8ee1-2bbeaeaa6c6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,0,17,18,19,20,21,22,23,24,25,26,27,28,29,1,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,290,291,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301],"tindex":"ba0d0082-dab4-11e4-8ee1-87c0ca8542f1","variableMapping":{"heights":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"ba0d0083-dab4-11e4-8ee1-e58693c4f56c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[510],"tindex":"ba0d0084-dab4-11e4-8ee1-b791e612f75f","variableMapping":{"flags":"defaultValue","scDirMask":"defaultValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"ba0d0085-dab4-11e4-8ee1-5bf37d60968e","variableMapping":{"value":"bytes","numberOfBits":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-2},{"failures":[],"tindex":"ba0d0086-dab4-11e4-8ee1-cf42a0fecdeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:143","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[6,7,10,13,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,271,272,273,274,275,276,278,284,285,289],"tindex":"ba0d2797-dab4-11e4-8ee1-153d9894e495","variableMapping":{"this":"this","edgeState":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"ba0f4a78-dab4-11e4-8ee1-d768c4f0e627","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[],"tindex":"ba0f4a79-dab4-11e4-8ee1-3f9df0419fb4","variableMapping":{"distance":"maxEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[4,6,7,8,9,10,12,314,13,315,0,17,18,19,20,21,22,23,25,26,27,1,240],"tindex":"ba0f4a7a-dab4-11e4-8ee1-4fab63f8a3ba","variableMapping":{"segmentSizeInBytes":"removed","index":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-1},{"failures":[],"tindex":"ba0f4a7b-dab4-11e4-8ee1-05bd9f43e463","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:329","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"ba0f4a7c-dab4-11e4-8ee1-79c9109be86f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"ba0f4a7d-dab4-11e4-8ee1-e53fc70e2c2f","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:69","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Dijkstra.runAlgo()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-2},{"failures":[6,17,511],"tindex":"ba0f4a7e-dab4-11e4-8ee1-a93965e4af44","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-1},{"failures":[],"tindex":"ba0f4a7f-dab4-11e4-8ee1-e9e536b66038","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":270,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":291,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":334,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":487,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":56,"com.graphhopper.GraphHopperAPITest.testNoLoad":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":367,"com.graphhopper.reader.OSMReaderTest.testFerry":16,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":32,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":352,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":441,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":89,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":5,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":313,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":207,"com.graphhopper.coll.CompressedArrayTest.testCompress":499,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":447,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":190,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":386,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":166,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":286,"com.graphhopper.GraphHopperTest.testPrepare":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":397,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":173,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":276,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":361,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":452,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":262,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":311,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":45,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":111,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":242,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":451,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":488,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":254,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":69,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":232,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":353,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":339,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":507,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":113,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":289,"com.graphhopper.GraphHopperTest.testLoadOSM":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":76,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":490,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":70,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":481,"com.graphhopper.reader.OSMReaderTest.testSort":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":462,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":341,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":185,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":337,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":505,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":398,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":297,"com.graphhopper.routing.DijkstraTest.initializationError":485,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":228,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":138,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":162,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":404,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":306,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":197,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":347,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":435,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":93,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":170,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":266,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":91,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":257,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":256,"com.graphhopper.coll.OSMIDMapTest.testGetLong":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":211,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":217,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":130,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":494,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":335,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":132,"com.graphhopper.coll.CompressedArrayTest.testCompress2":498,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":175,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":359,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":208,"com.graphhopper.GraphHopperAPITest.testLoad":235,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":112,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":407,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":167,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":157,"com.graphhopper.storage.LevelGraphStorageTest.testClone":117,"com.graphhopper.reader.OSMReaderTest.testBarriers":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":198,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":468,"com.graphhopper.util.GHUtilityTest.testCopy":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":371,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":102,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":433,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":403,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":449,"com.graphhopper.routing.PathTest.testFindInstruction":251,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":444,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":199,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":362,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":31,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":412,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":146,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":467,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":186,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":171,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":226,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":282,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":475,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":496,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":484,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":119,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":372,"com.graphhopper.util.InstructionListTest.testWayList2":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":479,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":393,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":77,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":191,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":503,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":305,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":231,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":351,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":244,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":338,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":121,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":453,"com.graphhopper.storage.RAMDirectoryTest.testSynched":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":209,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":61,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":258,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":20,"com.graphhopper.routing.AStarTest.initializationError":406,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":272,"com.graphhopper.coll.OSMIDMapTest.testGet":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":206,"com.graphhopper.routing.PathBidirRefTest.testExtract":246,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":309,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":134,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":322,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":456,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":234,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":391,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":455,"com.graphhopper.util.GHUtilityTest.testSort2":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":267,"com.graphhopper.reader.OSMReaderTest.testMain":17,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":336,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":216,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":457,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":508,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":463,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":137,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":395,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":124,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":128,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":149,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":510,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":125,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":472,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":466,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":489,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":131,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":28,"com.graphhopper.storage.StorablePropertiesTest.testStore":342,"com.graphhopper.storage.GraphHopperStorageTest.testClone":159,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":394,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":304,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":332,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":169,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":420,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":436,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":373,"com.graphhopper.routing.PathTest.testTime":249,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":432,"com.graphhopper.routing.util.EncodingManagerTest.testFixWayName":511,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":147,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":118,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":426,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":329,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":79,"com.graphhopper.reader.OSMReaderTest.testRelation":24,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":385,"com.graphhopper.util.GHUtilityTest.testSortDirected":38,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":477,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":293,"com.graphhopper.GraphHopperTest.testFootOnly":13,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":440,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":303,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":333,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":92,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":497,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":465,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":381,"com.graphhopper.search.NameIndexTest.testCreate":328,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":290,"com.graphhopper.routing.QueryGraphTest.testOneWay":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":80,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":504,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":443,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":68,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":501,"com.graphhopper.reader.OSMReaderTest.testWithBounds":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":230,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":239,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":413,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":2,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":114,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":110,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":427,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":476,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":350,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":220,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":213,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":155,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":253,"com.graphhopper.util.InstructionListTest.testWayList":41,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":188,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":454,"com.graphhopper.GraphHopperAPITest.testDisconnected179":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":374,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":369,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":473,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":400,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":461,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":8,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":161,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":287,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":450,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":264,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":486,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":285,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":145,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":422,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":429,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":312,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":195,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":274,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":100,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":354,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":151,"com.graphhopper.routing.PathTest.testWayList":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":399,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":430,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":377,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":418,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":493,"com.graphhopper.coll.OSMIDMapTest.testGet2":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":275,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":142,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":219,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":460,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":172,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":408,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":204,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":94,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":129,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":95,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":96,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":470,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":364,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":345,"com.graphhopper.util.GHUtilityTest.testSort":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":390,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":509,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":442,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":459,"com.graphhopper.search.NameIndexTest.testPut":326,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":233,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":57,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":87,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":65,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":50,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":492,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":356,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":296,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":193,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":314,"com.graphhopper.storage.MMapDirectoryTest.testSynched":330,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":428,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":308,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":318,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":273,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":238,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":47,"com.graphhopper.routing.PathTest.testFound":248,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":3,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":315,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":144,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":438,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":458,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":210,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":363,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":327,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":46,"com.graphhopper.util.InstructionListTest.testEmptyList":39,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":261,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":434,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":265,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":416,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":415,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":448,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":268,"com.graphhopper.reader.PrinctonReaderTest.testRead":14,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":187,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":90,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":205,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":376,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":366,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":215,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":446,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":471,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":495,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":431,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":355,"com.graphhopper.reader.OSMReaderTest.testFoot":0,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":301,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":74,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":148,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":506,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":439,"com.graphhopper.reader.OSMReaderTest.testOneWay":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":75,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":168,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":183,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":227,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":445,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":469,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":383,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":281,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":500,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":288,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":421,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":279,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":237,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":379,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":292,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":29,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":152,"com.graphhopper.routing.PathBidirRefTest.testExtract2":247,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":491,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":252,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":310,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":325,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":181,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":402,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":437,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":401,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":409,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":474,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":71,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":184,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":365,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":423,"com.graphhopper.GraphHopperTest.testFootAndCar":9,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":176,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":126,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":346,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":370,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":480,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":424,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":201,"com.graphhopper.storage.StorablePropertiesTest.testLoad":343,"com.graphhopper.GraphHopperTest.testPrepareOnly":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":271,"com.graphhopper.GraphHopperTest.testVia":6,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":368,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":25,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":107,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":43,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":180,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":410,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":382,"com.graphhopper.routing.AStarBidirectionTest.initializationError":482,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":414,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":143,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":141,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":340}}]
