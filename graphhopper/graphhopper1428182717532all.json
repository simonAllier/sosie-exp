[{"failures":[],"tindex":"1918a5f0-db11-11e4-a63e-abdf78ff0bcd","variableMapping":{"freeIndex":"speed","currentIndex":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"19196941-db11-11e4-a63e-555600a895d7","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"19196942-db11-11e4-a63e-77abc11874fb","variableMapping":{"flags":"encoded","nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"19199053-db11-11e4-a63e-f9151ce75193","variableMapping":{"a_lat_deg":"toHeight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:223","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":0},{"failures":[9,10,11,12],"tindex":"19199054-db11-11e4-a63e-53d285f80f70","variableMapping":{"width":"speed","lonSimilar":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[13,14],"tindex":"19199055-db11-11e4-a63e-c91cfef820f6","variableMapping":{"tInt":"estimatedLength","speed":"estimatedLength"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:155","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    java.lang.Integer = java.lang.Integer;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"19199056-db11-11e4-a63e-cd261d1979be","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"19199057-db11-11e4-a63e-99dd5fd30e31","variableMapping":{"originalEdgesCount":"shift","edgeDifference":"shift","contractedNeighbors":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"19199058-db11-11e4-a63e-b3f66723557c","variableMapping":{"deltaX":"maxLon","tmp":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"19199059-db11-11e4-a63e-bf0a35d6f47f","variableMapping":{"retBucket":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[],"tindex":"1919905a-db11-11e4-a63e-ab388c846216","variableMapping":{"allBits":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[15],"tindex":"1919905b-db11-11e4-a63e-a16b9a0a232b","variableMapping":{"high":"acceptBit","highKey":"ferryBit","key":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"1919905c-db11-11e4-a63e-930886bebc3e","variableMapping":{"mmapDA":"da","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:147","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"1919905d-db11-11e4-a63e-1d534d630638","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"1919905e-db11-11e4-a63e-ef49f11a3aa0","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"weight","java.lang.Double.POSITIVE_INFINITY":"weight","weight":"weight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"1919905f-db11-11e4-a63e-795d2f514012","variableMapping":{"finishedTo":"integ","finishedFrom":"integ"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[16,17],"tindex":"19199060-db11-11e4-a63e-f90a0ed3a546","variableMapping":{"retBucket":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"1919b771-db11-11e4-a63e-0f13c14cbe8c","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[],"tindex":"1919b772-db11-11e4-a63e-37c0844eff33","variableMapping":{"i":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"1919b773-db11-11e4-a63e-9be48d712571","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"1919b774-db11-11e4-a63e-2d232e056b26","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-2},{"failures":[],"tindex":"1919b775-db11-11e4-a63e-e14ad275f8d6","variableMapping":{"finishedTo":"defaultB","finishedFrom":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"1919b776-db11-11e4-a63e-33d5d5d2c0f5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[18,19,20],"tindex":"1919b777-db11-11e4-a63e-c70bb03df6c2","variableMapping":{"cp":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:125","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[15],"tindex":"1919b778-db11-11e4-a63e-07a28bf21e33","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":-1},{"failures":[21,22,23,24,25],"tindex":"1919b779-db11-11e4-a63e-21efcdfe9092","variableMapping":{"lastTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"1919b77a-db11-11e4-a63e-91c824eaaecd","variableMapping":{"time":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"1919b77b-db11-11e4-a63e-9bb58588b21e","variableMapping":{"node":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:423","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (\"--- node \" + int) + \" ---\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[26,27,28,29,30,31,32,33],"tindex":"1919b77c-db11-11e4-a63e-f58c1f4f036b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:448","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"1919b77d-db11-11e4-a63e-3b81b3d6a621","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"1919b77e-db11-11e4-a63e-93cc972dcc20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[],"tindex":"1919b77f-db11-11e4-a63e-31633619f57b","variableMapping":{"dist":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","com.graphhopper.util.DistanceCalcEarth.R":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[],"tindex":"1919b780-db11-11e4-a63e-b3b7486a89a1","variableMapping":{"acceptBit":"encoded","ferryBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-2},{"failures":[],"tindex":"1919dd91-db11-11e4-a63e-e7649f1e6ec5","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[34,35,0,2,23,3,4,36,25,37,38,7,39],"tindex":"1919dd92-db11-11e4-a63e-4b18b8cb031d","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"1919dd93-db11-11e4-a63e-1b05e56e86ba","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"1919dd94-db11-11e4-a63e-6943db28f65f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:200","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[40],"tindex":"1919dd95-db11-11e4-a63e-c3482f673833","variableMapping":{"baseUrl":"hourStr","fileDetails":"hourStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:254","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"1919dd96-db11-11e4-a63e-816e0152dc4a","variableMapping":{"high":"nodeB","len":"nodeB","start":"nodeB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"1919dd97-db11-11e4-a63e-e37bd1360352","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[41,42,43,44,45],"tindex":"1919dd98-db11-11e4-a63e-45da3f1ca5cb","variableMapping":{"enableIfAssert":"restricted"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1371","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[],"tindex":"1919dd99-db11-11e4-a63e-8dc3f98b8b84","variableMapping":{"latlon":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[45],"tindex":"1919dd9a-db11-11e4-a63e-171ce6b9e96a","variableMapping":{"flags":"flags","scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-1},{"failures":[46,47,48,49],"tindex":"1919dd9b-db11-11e4-a63e-7356c55de415","variableMapping":{"retBucket":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"1919dd9c-db11-11e4-a63e-4da3a26bdaad","variableMapping":{"shift":"bits","tmpValue":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[],"tindex":"1919dd9d-db11-11e4-a63e-a5bd4bcd42b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"1919dd9e-db11-11e4-a63e-4b43f53c946b","variableMapping":{"high":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":-2},{"failures":[],"tindex":"1919dd9f-db11-11e4-a63e-8705f6f7e331","variableMapping":{"tmpDegreeCounter":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[18,50,51,52,53,54,55,56,57,58,19,59,60,61,13,62,20,63,64,65,66,41,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,34,186,35,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,47,332,333,48,15,334,16,335,336,337,338,17,339,340,341,342,343,344,14,345,346,347,348,349,350,42,351,352,353,354,355,356,45,357,358,359,360,361,362,363,364,21,22,0,365,366,1,2,367,368,369,23,370,24,371,372,373,374,3,375,4,36,5,376,25,6,37,377,38,378,379,380,381,382,7,8,383,384,39,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400],"tindex":"191a04b0-db11-11e4-a63e-cbe4d04c8f81","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-1},{"failures":[401,402,403,404,405,406,407,408,409,410,411],"tindex":"191a04b1-db11-11e4-a63e-e350f178d34a","variableMapping":{"from":"wayType","end":"wayType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[412,413,414,415,416,417,418,419,420],"tindex":"191a04b2-db11-11e4-a63e-d5c9b0f2c7ab","variableMapping":{"tmp":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"191a04b3-db11-11e4-a63e-5b15f4e85cad","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:625","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"191a04b4-db11-11e4-a63e-bb37947941c9","variableMapping":{"high":"acceptBit","len":"acceptBit","start":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"191a04b5-db11-11e4-a63e-6b3b31f01ecb","variableMapping":{"visitedCountFrom":"minutes","visitedCountTo":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"191a2bc6-db11-11e4-a63e-1ffd0276147d","variableMapping":{"cap":"nextTurnBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"191a2bc7-db11-11e4-a63e-7d73ebdcfb9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"191a2bc8-db11-11e4-a63e-23f9ca0a8517","variableMapping":{"is3D":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-2},{"failures":[421],"tindex":"191a2bc9-db11-11e4-a63e-737efd17da41","variableMapping":{"size":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[0,1,3,4,5,6,7,8],"tindex":"191a2bca-db11-11e4-a63e-f3f82cb5d9ee","variableMapping":{"enableIfAssert":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1371","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"191a2bcb-db11-11e4-a63e-bb5dbbc9788e","variableMapping":{"str":"message","key":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"191a2bcc-db11-11e4-a63e-97c8deb15875","variableMapping":{"size":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[],"tindex":"191a2bcd-db11-11e4-a63e-f996a6d0ac32","variableMapping":{"value":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[16,338,17],"tindex":"191a2bce-db11-11e4-a63e-ff6cd77aae25","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"start","edgeTo":"start","edgeFrom":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[],"tindex":"191a2bcf-db11-11e4-a63e-5b3afd34d528","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[18,50,51,52,53,54,55,57,58,46,60,61,62,20,64,41,67,68,69,70,73,75,76,77,80,85,86,87,88,91,92,93,95,96,99,100,102,107,109,115,117,120,122,123,127,34,188,192,197,198,199,201,202,205,206,208,213,215,221,223,226,228,229,233,236,241,242,243,245,246,249,250,252,257,259,265,267,270,272,273,277,279,282,287,288,289,291,292,295,296,298,303,305,311,313,316,318,319,323,325,331,332,16,335,337,338,343,345,348,350,351,422,423,358,359,361,362,363,21,22,0,365,366,1,2,367,368,369,23,370,24,371,372,373,374,3,375,4,36,5,376,25,6,37,38,378,379,380,381,7,8,383,384,39,385,391,394],"tindex":"191a2bd0-db11-11e4-a63e-578fe7a6c03c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"191a2bd1-db11-11e4-a63e-5fb1c6df5b92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(5, 5, 0)"},"status":-2},{"failures":[],"tindex":"191a2bd2-db11-11e4-a63e-af920cb6d05c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"191a52e3-db11-11e4-a63e-957681c989aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[424,425,426,427,428,7,39],"tindex":"191a52e4-db11-11e4-a63e-4b7aa5c57b29","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"191a52e5-db11-11e4-a63e-51eea91abeb6","variableMapping":{"val":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[21,22,23,24,25],"tindex":"191a52e6-db11-11e4-a63e-ed29d6dcd7bb","variableMapping":{"res":"flags","value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"191a52e7-db11-11e4-a63e-5bfc4d21045d","variableMapping":{"r":"angle","angle":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[422],"tindex":"191a52e8-db11-11e4-a63e-012043077b29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[50,51,52,55,57,429,22,0,365,366,1,2,367,368,369,23,370,24,371,372,373,374,3,375,4,36,5,376,25,37,38,378,379,380,381,382,7,383,384,39,385],"tindex":"191c27a9-db11-11e4-a63e-ff643eb6aa49","variableMapping":{"size":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"191c27aa-db11-11e4-a63e-33da7d52875e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:79","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"191c27ab-db11-11e4-a63e-b59bc32538b3","variableMapping":{"bytes":"backwardBit","capacity":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":0},{"failures":[],"tindex":"191c4ebc-db11-11e4-a63e-41900556f9b6","variableMapping":{"fromDist":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:112","type":"CtIfImpl","sourcecode":"if (double < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"191c4ebd-db11-11e4-a63e-8bbaab362084","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[18,51,55,57,58,19,20,65,66,430,431,432,433,434,80,85,86,87,88,435,436,437,438,151,153,171,173,439,189,192,197,218,224,229,231,236,241,262,268,273,275,279,282,287,308,314,319,321,440,362,363,36,388,394,395,398],"tindex":"191c4ebe-db11-11e4-a63e-0bdd64e5ba65","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:437","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.gc()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"191c4ebf-db11-11e4-a63e-4772b94f03c8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"191c4ec0-db11-11e4-a63e-a30afa2f5132","variableMapping":{"red":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":0},{"failures":[441,442,443,444],"tindex":"191c4ec1-db11-11e4-a63e-612b4774bd64","variableMapping":{"name":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[41,445,42,446,447,448,449,450,451,452,407,43,453,454,455,410,44,456,457,45,421],"tindex":"191c4ec2-db11-11e4-a63e-ff429507bca6","variableMapping":{"size":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[],"tindex":"191c4ec3-db11-11e4-a63e-01da3138ea95","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:625","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"191c4ec4-db11-11e4-a63e-2f6f08758ed6","variableMapping":{"silent":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"191c4ec5-db11-11e4-a63e-b5133167abde","variableMapping":{"edgePointer":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"191c4ec6-db11-11e4-a63e-3321462267ed","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[102,191,208,235,252,281,298],"tindex":"191c4ec7-db11-11e4-a63e-75802a6b8d02","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[424,426,428],"tindex":"191c4ec8-db11-11e4-a63e-cb0988125bd0","variableMapping":{"from":"child","hash":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[50,51,52,53,54,55,57,58,19,62,20,63,64,66,41,67,68,69,70,71,72,73,339,342,344,14,346,348],"tindex":"191c75d9-db11-11e4-a63e-31b9bda11b30","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"191c75da-db11-11e4-a63e-5776fca8ffe6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"191c75db-db11-11e4-a63e-f504aa1a8de6","variableMapping":{"index":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-2},{"failures":[329,458,459,460,461],"tindex":"191c75dc-db11-11e4-a63e-9b4d34147966","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[18,52,53,55,58,46,13,20,63,64,65,66,41,67,68,69,70,71,73,430,431,432,433,434,462,463,464,86,87,91,112,117,118,123,126,465,466,467,468,469,470,471,153,173,472,473,474,475,476,477,478,479,480,481,482,192,197,218,224,229,232,236,241,262,268,273,276,279,282,287,308,314,319,322,483,362,36,388,392,395,398],"tindex":"191c75dd-db11-11e4-a63e-8173a4721cf6","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[],"tindex":"191c75de-db11-11e4-a63e-1be77922fdca","variableMapping":{"size":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"191c75df-db11-11e4-a63e-e185e9076369","variableMapping":{"high":"ferryBit","highKey":"ferryBit","key":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-2},{"failures":[],"tindex":"191c75e0-db11-11e4-a63e-1facab8274e0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[338],"tindex":"191c75e1-db11-11e4-a63e-71c83895d115","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[64,68,340],"tindex":"191c75e2-db11-11e4-a63e-350efc5d98cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":-1},{"failures":[],"tindex":"191c9cf3-db11-11e4-a63e-1762f854c5c3","variableMapping":{"mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":375,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":388,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":189,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":353,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":138,"com.graphhopper.GraphHopperAPITest.testNoLoad":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":92,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":76,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":77,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":10,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":172,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":50,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":234,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":457,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":297,"com.graphhopper.coll.CompressedArrayTest.testCompress":413,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":276,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":112,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":252,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":383,"com.graphhopper.GraphHopperTest.testPrepare":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":6,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":259,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":428,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":23,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":85,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":405,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":90,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":195,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":169,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":338,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":0,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":368,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":152,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":322,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":407,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":279,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":197,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":426,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":385,"com.graphhopper.GraphHopperTest.testLoadOSM":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":153,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":357,"com.graphhopper.reader.OSMReaderTest.testSort":63,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":69,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":283,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":466,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":271,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":236,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":125,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":394,"com.graphhopper.routing.DijkstraTest.initializationError":399,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":318,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":483,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":222,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":248,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":280,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":409,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":287,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":447,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":176,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":372,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":174,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":1,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":366,"com.graphhopper.coll.OSMIDMapTest.testGetLong":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":301,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":307,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":214,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":192,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":216,"com.graphhopper.coll.CompressedArrayTest.testCompress2":412,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":261,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":298,"com.graphhopper.GraphHopperAPITest.testLoad":325,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":196,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":472,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":329,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":253,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":243,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":40,"com.graphhopper.storage.LevelGraphStorageTest.testClone":201,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":17,"com.graphhopper.reader.OSMReaderTest.testBarriers":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":288,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":166,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":44,"com.graphhopper.util.GHUtilityTest.testCopy":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":367,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":185,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":140,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":442,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":481,"com.graphhopper.routing.PathTest.testFindInstruction":363,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":448,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":289,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":424,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":48,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":75,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":230,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":137,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":272,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":257,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":316,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":302,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":381,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":423,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":386,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":97,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":239,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":475,"com.graphhopper.util.InstructionListTest.testWayList2":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":160,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":277,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":293,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":321,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":354,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":452,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":237,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":205,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":438,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":43,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":467,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":299,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":2,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":242,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":65,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":465,"com.graphhopper.routing.AStarTest.initializationError":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":36,"com.graphhopper.coll.OSMIDMapTest.testGet":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":296,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":15,"com.graphhopper.routing.PathBidirRefTest.testExtract":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":30,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":218,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":432,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":180,"com.graphhopper.storage.RAMDataAccessTest.testCopy":476,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":460,"com.graphhopper.storage.RAMDataAccessTest.testSegments":480,"com.graphhopper.util.GHUtilityTest.testSort2":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":373,"com.graphhopper.reader.OSMReaderTest.testMain":20,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":193,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":306,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":453,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":181,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":443,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":221,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":284,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":208,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":212,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":233,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":451,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":209,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":311,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":215,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":71,"com.graphhopper.storage.StorablePropertiesTest.testStore":440,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":439,"com.graphhopper.storage.GraphHopperStorageTest.testClone":245,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":348,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":255,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":346,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":34,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":98,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":187,"com.graphhopper.routing.PathTest.testTime":361,"com.graphhopper.util.BitUtilLittleTest.testToFloat":463,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":231,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":202,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":352,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":111,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":220,"com.graphhopper.reader.OSMReaderTest.testRelation":445,"com.graphhopper.util.GHUtilityTest.testSortDirected":83,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":427,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":470,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":390,"com.graphhopper.GraphHopperTest.testFootOnly":46,"com.graphhopper.util.BitUtilLittleTest.testToInt":464,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":28,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":14,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":144,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":175,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":421,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":365,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":107,"com.graphhopper.search.NameIndexTest.testCreate":437,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":479,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":387,"com.graphhopper.routing.QueryGraphTest.testOneWay":396,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":163,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":417,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":151,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":414,"com.graphhopper.reader.OSMReaderTest.testWithBounds":70,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":482,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":320,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":335,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":113,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":334,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":198,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":194,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":449,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":310,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":135,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":303,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":241,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":22,"com.graphhopper.util.BitUtilLittleTest.testToBitString":462,"com.graphhopper.util.InstructionListTest.testWayList":86,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":274,"com.graphhopper.GraphHopperAPITest.testDisconnected179":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":99,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":418,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":33,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":61,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":127,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":53,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":247,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":145,"com.graphhopper.routing.util.EncodedValueTest.testSwap":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":314,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":384,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":265,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":24,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":400,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":8,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":229,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":349,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":408,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":285,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":183,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":454,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":235,"com.graphhopper.routing.PathTest.testWayList":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":126,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":103,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":344,"com.graphhopper.coll.OSMIDMapTest.testGet2":431,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":25,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":226,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":309,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":258,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":330,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":177,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":178,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":477,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":471,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":461,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":425,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":401,"com.graphhopper.util.GHUtilityTest.testSort":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":156,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":459,"com.graphhopper.search.NameIndexTest.testPut":435,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":323,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":139,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":170,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":148,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":131,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":473,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":393,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":422,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":281,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":458,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":355,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":304,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":16,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":474,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":117,"com.graphhopper.routing.PathTest.testFound":360,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":19,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":49,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":228,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":31,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":300,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":429,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":436,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":102,"com.graphhopper.util.InstructionListTest.testEmptyList":84,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":369,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":182,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":371,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":341,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":340,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":374,"com.graphhopper.reader.PrinctonReaderTest.testRead":60,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":273,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":173,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":101,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":415,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":91,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":305,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":45,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":455,"com.graphhopper.reader.OSMReaderTest.testFoot":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":115,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":398,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":157,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":232,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":420,"com.graphhopper.reader.OSMReaderTest.testOneWay":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":158,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":254,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":269,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":317,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":469,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":109,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":380,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":39,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":347,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":378,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":468,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":331,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":105,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":389,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":72,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":238,"com.graphhopper.routing.PathBidirRefTest.testExtract2":359,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":403,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":267,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":133,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":9,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":41,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":128,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":154,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":270,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":82,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":204,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":350,"com.graphhopper.GraphHopperTest.testFootAndCar":54,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":262,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":210,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":402,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":184,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":478,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":95,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":356,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":382,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":4,"com.graphhopper.GraphHopperTest.testPrepareOnly":18,"com.graphhopper.GraphHopperTest.testVia":51,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":93,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":68,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":188,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":88,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":266,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":332,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":108,"com.graphhopper.routing.AStarBidirectionTest.initializationError":364,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":339,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":227,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":225,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":282}}]
