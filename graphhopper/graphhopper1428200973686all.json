[{"failures":[0],"tindex":"993f8dc9-db3b-11e4-bd5a-73b0c9157211","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"99413b7a-db3b-11e4-bd5a-1d817c73ddc5","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:78","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Dijkstra.finished())\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11],"tindex":"99413b7b-db3b-11e4-bd5a-4b1dda537498","variableMapping":{"acceptBit":"encoded","ferryBit":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-1},{"failures":[],"tindex":"99413b7c-db3b-11e4-bd5a-0778fbed8182","variableMapping":{"value":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[12,13,14,7,15,16,17,18,19,20,21,8,22,23,24],"tindex":"9941628d-db3b-11e4-bd5a-ad761e92aff5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:252","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-1},{"failures":[],"tindex":"9941628e-db3b-11e4-bd5a-1df06c6183af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"9941628f-db3b-11e4-bd5a-c7523b432f9f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-2},{"failures":[25,26],"tindex":"99416290-db3b-11e4-bd5a-272fbd2c9e8d","variableMapping":{"tmpNo":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[27,28,29,30,31,32,33,34],"tindex":"99416291-db3b-11e4-bd5a-df8b80c27c67","variableMapping":{"segmentSizeInBytes":"sLat","index":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"99416292-db3b-11e4-bd5a-05dd72f0f3c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:134","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"99416293-db3b-11e4-bd5a-c3d036c356d2","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"99416294-db3b-11e4-bd5a-a9393f781837","variableMapping":{"currentEntry":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,1,228,2,229,230,231,232,233,234,235,236,237,3,238,239,240,241,242,243,4,5,244,245,246,247,248,249,250,6,251,252,253,254,255,12,13,14,7,15,16,17,18,19,20,21,8,22,23,24,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,0,281,282,283,284,9,285,10,286,287,288,289,290,291,292,293,294,11,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358],"tindex":"994189a5-db3b-11e4-bd5a-edd8c8faa26c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:229","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n        return com.graphhopper.routing.util.AbstractFlagEncoder;\n    \n}"},"status":-1},{"failures":[0],"tindex":"994189a6-db3b-11e4-bd5a-cfe5ac4ce2c6","variableMapping":{"closestEdge":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:138","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[359],"tindex":"99433757-db3b-11e4-bd5a-ed9226569cc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"99433758-db3b-11e4-bd5a-b3d69d49a824","variableMapping":{"newUniqueOsmId":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[41,50,58,60,61,63,67,75,360,361,362,363,364,365,93,101,103,104,106,110,118,137,145,147,148,150,154,162,183,191,193,194,196,200,208,366,367,368,369,370,220,221,371,372,373,374,375,376,377,359,378,379,348,349,350,351,352,380,353,354,381],"tindex":"99435e69-db3b-11e4-bd5a-b1e4e01e089c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:45","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(int)"},"status":-2},{"failures":[382,383,264],"tindex":"99435e6a-db3b-11e4-bd5a-7b2b9c934e47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-1},{"failures":[],"tindex":"99435e6b-db3b-11e4-bd5a-2190729a3790","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":0},{"failures":[],"tindex":"99435e6c-db3b-11e4-bd5a-e9c02195e693","variableMapping":{"byteCount":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,271,272,273,274,275,276,277,278,279,299,384,301,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,351,354],"tindex":"99435e6d-db3b-11e4-bd5a-e992b0816e28","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-1},{"failures":[],"tindex":"99435e6e-db3b-11e4-bd5a-bf8c81d61d18","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"99435e6f-db3b-11e4-bd5a-4f164d525345","variableMapping":{"heap":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[],"tindex":"99435e70-db3b-11e4-bd5a-bf6df3488569","variableMapping":{"gradient":"y","yend":"y"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[],"tindex":"99435e71-db3b-11e4-bd5a-f131fa196733","variableMapping":{"newName":"name","this":"da","location":"name"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:235","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.(isStoring()) && (new java.io.File(((java.lang.String) + java.lang.String)).exists()))\n    throw new java.lang.IllegalArgumentException(\"file newName already exists!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-2},{"failures":[0],"tindex":"99435e72-db3b-11e4-bd5a-672881873d49","variableMapping":{"midLat":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[43,49,50,52,53,57,64,66,72,74,77,79,84,87,88,89,90,92,93,95,96,100,107,109,115,117,120,122,127,130,136,137,139,140,144,151,153,159,161,164,166,171,173,176,182,183,185,186,190,197,199,205,207,210,212,217,385,386,387,388,220,221,376,377,359,378,389,309,310,311,312,313,315,317,319,320,321,323,324,325,326,327,328,329,330,331,335,336,337,338,340,341,342,343,344,345,346,347,355,356,357,358],"tindex":"99438583-db3b-11e4-bd5a-859b239b766a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"99438584-db3b-11e4-bd5a-c1ce9e92e08f","variableMapping":{"i":"x1","lastIndex":"x2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"99438585-db3b-11e4-bd5a-b34d52985f1c","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit","ferries":"ferries","highwayValue":"highwayValue","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"99438586-db3b-11e4-bd5a-5d4627d7f6e2","variableMapping":{"flags":"flags","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"99438587-db3b-11e4-bd5a-dd37df2c0dac","variableMapping":{"turnCosts":"java.lang.Double.POSITIVE_INFINITY","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[306,309,316,320,321,322,323,324,325,327,328,330,331,333,334,335,336,337,338,340,342,343,344,348],"tindex":"99438588-db3b-11e4-bd5a-19d300f2853b","variableMapping":{"tmp":"distance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"99438589-db3b-11e4-bd5a-73fba5c37e6a","variableMapping":{"encoderList":"name"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[],"tindex":"9943858a-db3b-11e4-bd5a-4ba5cda12eb3","variableMapping":{"baseUrl":"key","fileDetails":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:254","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"9943858b-db3b-11e4-bd5a-e1aa8dc31efe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"9943858c-db3b-11e4-bd5a-f76742748685","variableMapping":{"i":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"9943858d-db3b-11e4-bd5a-81a38e2ec09e","variableMapping":{"len":"lastEdgeIndex","i":"edgeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[360,361,362,363,365,390,86,391,392,393,394,395,396,397,398,399,400,401,402,87,403,404,405,406,407,408,409,410,411,412,413,414,88,369,370,377,359,378,330,334,335,338,379,415,348,349,350,351,352,380,353,354,381,416,417,418,419,420,421,422,423,424,425,426,427,357,358],"tindex":"9943858e-db3b-11e4-bd5a-6fb5a878bf86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.SimpleIntDeque.this(100, 2)"},"status":-1},{"failures":[],"tindex":"9943858f-db3b-11e4-bd5a-3fcaef90fa77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[29,30,31,32,33,34],"tindex":"99438590-db3b-11e4-bd5a-956071f2fc78","variableMapping":{"intVal":"err","degree":"dLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[50,60,61,67,75,76,93,103,104,110,118,119,137,147,148,154,162,163,183,193,194,200,208,209,376,378],"tindex":"99438591-db3b-11e4-bd5a-bbaa456fbd7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[0],"tindex":"99438592-db3b-11e4-bd5a-edcfbe670104","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"99438593-db3b-11e4-bd5a-353a779af461","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[25,26],"tindex":"9943aca4-db3b-11e4-bd5a-dfd403de4fd8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11],"tindex":"9943aca5-db3b-11e4-bd5a-a795e27c5c87","variableMapping":{"red":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"9943aca6-db3b-11e4-bd5a-1799a6a55d19","variableMapping":{"strLen":"shift","res":"unpavedBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:192","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":0},{"failures":[383],"tindex":"9943aca7-db3b-11e4-bd5a-9ff24977114d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[428,429],"tindex":"9943aca8-db3b-11e4-bd5a-1107e67bdc8a","variableMapping":{"val":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:109","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-1},{"failures":[43,48,49,50,57,59,72,77,80,84,91,92,93,100,102,115,120,123,127,130,135,136,137,144,146,159,164,167,171,173,176,181,182,183,190,192,205,210,213,217,428,219,220,231,244,376,389,430,16,256,259,260,265,269,271,288,299,306,309,310,315,316,317,320,321,322,326,329,332,334,335,344,347,431,348,349,350,351,352,353,354,26,416,417,419,422,423,424,425,426,427,355,356,357],"tindex":"9943aca9-db3b-11e4-bd5a-a935ea86e789","variableMapping":{"oldValueIndex":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[225,13,7,282,432],"tindex":"9943acaa-db3b-11e4-bd5a-654a2f8c24e5","variableMapping":{"index":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"9943acab-db3b-11e4-bd5a-031439dcb205","variableMapping":{"x1":"fromHeight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:158","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":0},{"failures":[386,387,388,428,309,313,315,320,321,322,323,324,325,327,328,330,331,333,334,335,336,337,338,340,341,342,343,344,348,350,351,353,354,357,358],"tindex":"9943acac-db3b-11e4-bd5a-4bb49475a047","variableMapping":{"need":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"9943acad-db3b-11e4-bd5a-b32d8c55e595","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[1,3,4,5,6,7,8,9,11],"tindex":"9943acae-db3b-11e4-bd5a-07fe6352fe36","variableMapping":{"str":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:434","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\\t\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[242,243,4,5,244,245,246,247,248,249,250,6,251,252,253,254],"tindex":"9943acaf-db3b-11e4-bd5a-0170762c5bf4","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"9943acb0-db3b-11e4-bd5a-170fb8649f04","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[433,434,435],"tindex":"9943d3c1-db3b-11e4-bd5a-cb8430efad79","variableMapping":{"size":"child","capacity":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[383],"tindex":"9943d3c2-db3b-11e4-bd5a-85de5d50d7f2","variableMapping":{"com.graphhopper.util.Constants.VERSION":"str","tmp":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[25],"tindex":"9943d3c3-db3b-11e4-bd5a-c7be07e47004","variableMapping":{"str":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:420","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"9943d3c4-db3b-11e4-bd5a-3503c134d039","variableMapping":{"dLat":"frontIndex","dLon":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"9943d3c5-db3b-11e4-bd5a-b52b4a7da356","variableMapping":{"edge":"tmpPrevEdge","updatedB":"edgeEntryBytes","updatedA":"tmpPrevEdge","linkA":"tmpPrevEdge","this":"this","linkB":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.writeEdge(int, int, int, int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[433,436,434,437,435,315,319],"tindex":"9943d3c6-db3b-11e4-bd5a-459886925c50","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[37,43,68,77,82,306,309,312,313,315,316,320,321,322,323,324,325,326,327,328,329,331,333,334,335,336,337,338,340,341,342,343,344,348,349,352],"tindex":"9943d3c7-db3b-11e4-bd5a-a3257ce0d5f6","variableMapping":{"edgeId":"edge","nodeId":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-1},{"failures":[261,26],"tindex":"9943d3c8-db3b-11e4-bd5a-4ff10c309a88","variableMapping":{"distance":"longTripsSpeed","speed":"unknownSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[],"tindex":"9943d3c9-db3b-11e4-bd5a-018921f1b504","variableMapping":{"edgeKey1":"endIndexPlusOne","edgeKey2":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:521","type":"CtReturnImpl","sourcecode":"return (int / 2) == (int / 2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[],"tindex":"9943d3ca-db3b-11e4-bd5a-558f1b2c2481","variableMapping":{"acceptBit":"acceptBit","ferryBit":"ferryBit","bikeTag":"highwayValue","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"9943d3cb-db3b-11e4-bd5a-7914eb0033d4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"9943d3cc-db3b-11e4-bd5a-65b6d59174cf","variableMapping":{"edgeId":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":0},{"failures":[],"tindex":"9943d3cd-db3b-11e4-bd5a-2d00d2bd46ae","variableMapping":{"a_lon_deg":"maxLat","factor":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[309,311,312,313,314,315,317,319,320,322,323,324,327,328,330,331,333,334,336,337,338,339,340,341,342,343,344],"tindex":"9943d3ce-db3b-11e4-bd5a-4f227230287a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-1},{"failures":[],"tindex":"9943d3cf-db3b-11e4-bd5a-398ac1e0e733","variableMapping":{"latSize":"com.graphhopper.util.EdgeIterator.NO_EDGE","lonSize":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[428,259,265,348,349,350,351,352,353,416,417,419,422,423,424,425,426,427],"tindex":"9943d3d0-db3b-11e4-bd5a-b707e64384ca","variableMapping":{"flags":"directionBitMask","nodeFlags":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[261,26],"tindex":"9943d3d1-db3b-11e4-bd5a-3fa435734ac4","variableMapping":{"this":"this","unknownSpeed":"unknownSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[],"tindex":"9943d3d2-db3b-11e4-bd5a-892d2f63e234","variableMapping":{"size":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":0},{"failures":[41,50,58,60,61,67,75,76,438,137,145,147,148,154,162,163,183,191,193,194,200,208,209,359,378,427],"tindex":"9943fae3-db3b-11e4-bd5a-fd373f79d3f1","variableMapping":{"segmentCount":"remainingSegments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:163","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[int][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[28,29,30,31,32,33,34],"tindex":"9943fae4-db3b-11e4-bd5a-e3ed52260497","variableMapping":{"red":"dLon","green":"tmpErr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"9943fae5-db3b-11e4-bd5a-aba945a3645f","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"9943fae6-db3b-11e4-bd5a-330647b3864a","variableMapping":{"additionalEdgeFilter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[],"tindex":"9943fae7-db3b-11e4-bd5a-a56cbae8d99f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[265,26,429,427],"tindex":"9943fae8-db3b-11e4-bd5a-b7f8267dcb6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"9943fae9-db3b-11e4-bd5a-b959e1813e74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[436,437],"tindex":"9943faea-db3b-11e4-bd5a-7922ce732de6","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[322,344],"tindex":"9943faeb-db3b-11e4-bd5a-6704562399fa","variableMapping":{"nodesContracted":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-1},{"failures":[],"tindex":"9943faec-db3b-11e4-bd5a-6730acb68a64","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[35,37,39,48,54,56,59,78,80,86,87,88,89,90,91,97,99,102,121,123,135,141,143,146,165,167,181,187,189,192,211,213,428,219,222,382,225,226,1,228,2,3,238,241,243,4,5,6,251,254,255,13,7,8,22,24,258,259,261,263,264,265,270,272,273,275,280,0,282,283,9,285,10,11,295,298,432,439,301,303,304,305,306,316,321,322,331,333,334,431,415,348,349,350,351,352,380,353,381,26,416,417,418,419,420,421,422,423,424,425,426,429,440,427],"tindex":"9943faed-db3b-11e4-bd5a-19802d29abbd","variableMapping":{"costs":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:612","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"9943faee-db3b-11e4-bd5a-5747e42e9326","variableMapping":{"silent":"uTurnSupport"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"9943faef-db3b-11e4-bd5a-65a9dd51edd7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11],"tindex":"9943faf0-db3b-11e4-bd5a-9b515ab42d42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"9943faf1-db3b-11e4-bd5a-199a465d13c5","variableMapping":{"min":"costs","dist":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":0},{"failures":[],"tindex":"9943faf2-db3b-11e4-bd5a-f5e2ea8585ea","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[0,331],"tindex":"9943faf3-db3b-11e4-bd5a-9b76dce157ef","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-1},{"failures":[],"tindex":"99442204-db3b-11e4-bd5a-7510cb4a790a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-2},{"failures":[43,48,69,75,80,82,360,361,362,363,365,392,394,404,406,441,442,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,130,135,156,162,167,169,443,444,173,174,176,181,202,208,213,215,445,446,385,386,387,388,428,447,448,449,450,451,304,305,341,452,453,454,415,348,349,350,352,380,353,354,26,417,418,419,420,421,422,423,424,425,426,429,427,455,456,457,458,459,460,461,462],"tindex":"99442205-db3b-11e4-bd5a-557bcc14d0de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[0],"tindex":"99442206-db3b-11e4-bd5a-ad65f6fb2600","variableMapping":{"speed":"incDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,463,360,361,362,363,365,390,86,464,391,465,392,393,394,395,466,396,467,397,398,399,400,401,402,87,403,468,404,405,406,407,469,408,470,409,410,411,412,413,414,88,471,472,473,474,475,89,476,477,478,479,480,90,481,482,483,484,485,486,438,487,488,489,102,117,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,490,366,385,367,368,491,386,387,388,428,219,369,370,220,221,376,377,359,378,389,430,273,280,0,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,492,492,452,452,493,493,494,494,347,347,495,495,496,496,431,431,453,453,497,497,498,498,454,454,379,415,348,349,350,351,352,380,353,354,381,499,26,416,417,418,419,420,421,422,423,424,425,426,429,427,355,356,357,358],"tindex":"99442207-db3b-11e4-bd5a-73e6cf4c952c","variableMapping":{"high":"segmentSizeInBytes","guess":"segmentSizeIntsPower","low":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[43,48,49,50,57,59,72,77,80,84,91,92,93,100,102,115,120,123,127,130,135,136,137,144,146,159,164,167,171,173,176,181,182,183,190,192,205,210,213,217,385,219,220,376,389,430,269,279,309,310,315,317,320,321,322,332,334,335,344,347,431,348,416,427,355,356],"tindex":"99442208-db3b-11e4-bd5a-ef7ead968b66","variableMapping":{"high":"directionBitMask","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"99442209-db3b-11e4-bd5a-21bab5e4b1a3","variableMapping":{"lat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:769","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"9944220a-db3b-11e4-bd5a-1b962d0f106f","variableMapping":{"r":"com.graphhopper.util.AngleCalc.PI_4","x":"com.graphhopper.util.AngleCalc.PI_4","absY":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[315,327,340,342],"tindex":"9944220b-db3b-11e4-bd5a-37027a86bb76","variableMapping":{"this":"this","value":"key","key":"oldValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":339,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":452,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":40,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":382,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":478,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":92,"com.graphhopper.reader.OSMReaderTest.testFerry":26,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":220,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":221,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":228,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":15,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":27,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":393,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":415,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":191,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":443,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":456,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":21,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":170,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":112,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":146,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":464,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":317,"com.graphhopper.GraphHopperTest.testPrepare":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":338,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":306,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":435,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":331,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":386,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":463,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":370,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":391,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":389,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":225,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":482,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":323,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":329,"com.graphhopper.coll.BitSetImplTest.testCopy":372,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":405,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":216,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":173,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":48,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":434,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":320,"com.graphhopper.GraphHopperTest.testLoadOSM":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":410,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":485,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":406,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":300,"com.graphhopper.reader.OSMReaderTest.testSort":418,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":238,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":359,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":177,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":165,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":125,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":431,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":212,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":28,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":73,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":142,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":174,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":254,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":251,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":396,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":150,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":335,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":395,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":326,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":325,"com.graphhopper.coll.OSMIDMapTest.testGetLong":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":195,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":498,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":201,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":65,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":43,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":67,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":155,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":243,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":192,"com.graphhopper.GraphHopperAPITest.testLoad":357,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":47,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":484,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":271,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":147,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":137,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":25,"com.graphhopper.storage.LevelGraphStorageTest.testClone":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":182,"com.graphhopper.reader.OSMReaderTest.testBarriers":419,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":390,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":328,"com.graphhopper.util.GHUtilityTest.testCopy":385,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":87,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":249,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":23,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":18,"com.graphhopper.routing.PathTest.testFindInstruction":305,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":183,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":433,"com.graphhopper.coll.BitSetImplTest.testClear":371,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":219,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":277,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":284,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":477,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":166,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":210,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":490,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":313,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":293,"com.graphhopper.coll.BitSetImplTest.testEnsureCapacity":375,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":384,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":97,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":133,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":489,"com.graphhopper.util.InstructionListTest.testWayList2":388,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":411,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":215,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":226,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":33,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":131,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":280,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":193,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":360,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":327,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":341,"com.graphhopper.coll.OSMIDMapTest.testGet":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":190,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":278,"com.graphhopper.routing.PathBidirRefTest.testExtract":345,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":232,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":449,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":399,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":469,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":218,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":88,"com.graphhopper.util.GHUtilityTest.testSort2":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":336,"com.graphhopper.reader.OSMReaderTest.testMain":417,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":44,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":200,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":239,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":400,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":72,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":178,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":59,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":63,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":84,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":60,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":347,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":205,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":282,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":483,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":66,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":429,"com.graphhopper.storage.GraphHopperStorageTest.testClone":139,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":265,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":149,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":263,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":35,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":252,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":98,"com.graphhopper.routing.PathTest.testTime":303,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":248,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":82,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":270,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":364,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":413,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":111,"com.graphhopper.util.GHUtilityTest.testSortDirected":368,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":437,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":295,"com.graphhopper.coll.BitSetImplTest.testNext":373,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":494,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":34,"com.graphhopper.GraphHopperTest.testFootOnly":354,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":14,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":261,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":361,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":466,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":439,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":107,"com.graphhopper.search.NameIndexTest.testCreate":462,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":492,"com.graphhopper.routing.QueryGraphTest.testOneWay":497,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":17,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":455,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":404,"com.graphhopper.coll.BitSetImplTest.testToString":374,"com.graphhopper.reader.OSMReaderTest.testWithBounds":426,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":446,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":214,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":377,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":495,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":113,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":279,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":432,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":49,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":45,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":294,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":24,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":472,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":204,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":89,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":197,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":135,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":453,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":322,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":168,"com.graphhopper.util.InstructionListTest.testWayList":387,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":441,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":230,"com.graphhopper.GraphHopperAPITest.testDisconnected179":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":99,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":291,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":356,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":110,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":481,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":237,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":350,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":141,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":208,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":318,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":159,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":224,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":333,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":316,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":80,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":266,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":245,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":3,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":179,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":343,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":486,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":241,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":129,"com.graphhopper.routing.PathTest.testWayList":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":126,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":103,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":260,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":383,"com.graphhopper.coll.OSMIDMapTest.testGet2":448,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":344,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":77,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":236,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":152,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":272,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":188,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":64,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":467,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":397,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":444,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":288,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":436,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":4,"com.graphhopper.util.GHUtilityTest.testSort":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":408,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":235,"com.graphhopper.search.NameIndexTest.testPut":460,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":217,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":465,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":479,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":365,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":473,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":487,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":285,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":496,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":175,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":353,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":244,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":223,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":458,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":342,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":376,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":488,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":117,"com.graphhopper.routing.PathTest.testFound":302,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":301,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":381,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":79,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":234,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":194,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":461,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":102,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":144,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":445,"com.graphhopper.util.InstructionListTest.testEmptyList":491,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":330,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":401,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":334,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":257,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":22,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":256,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":337,"com.graphhopper.reader.PrinctonReaderTest.testRead":355,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":167,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":442,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":394,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":101,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":91,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":199,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":289,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":283,"com.graphhopper.reader.OSMReaderTest.testFoot":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":115,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":454,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":459,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":470,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":409,"com.graphhopper.reader.OSMReaderTest.testOneWay":427,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":148,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":163,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":211,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":19,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":109,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":312,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":309,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":319,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":310,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":474,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":273,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":105,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":493,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":132,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":440,"com.graphhopper.routing.PathBidirRefTest.testExtract2":346,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":438,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":6,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":412,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":253,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":31,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":128,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":274,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":475,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":315,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":407,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":164,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":55,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":267,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":156,"com.graphhopper.GraphHopperTest.testFootAndCar":351,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":95,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":299,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":340,"com.graphhopper.GraphHopperTest.testPrepareOnly":379,"com.graphhopper.GraphHopperTest.testVia":348,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":480,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":93,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":424,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":39,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":160,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":428,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":275,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":108,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":255,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":78,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":76,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":176}}]
