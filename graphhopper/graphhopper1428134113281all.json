[{"failures":[],"tindex":"ecb6b72e-da9f-11e4-8af7-a3e1d624d169","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"ecb6de3f-da9f-11e4-8af7-8b12e20b9a66","variableMapping":{"logSize":"wayBitMask","java.lang.Integer.MAX_VALUE":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:259","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"ecb6de40-da9f-11e4-8af7-01a917372e7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":0},{"failures":[],"tindex":"ecb6de41-da9f-11e4-8af7-e17e0e4e1c08","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"ecb6de42-da9f-11e4-8af7-251bbd7ffde9","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"lon2","speed":"lon2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"ecb6de43-da9f-11e4-8af7-bbc91a310416","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[],"tindex":"ecb6de44-da9f-11e4-8af7-21fd8e98044c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"ecb70555-da9f-11e4-8af7-636cdfc22aa0","variableMapping":{"high":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[65,66],"tindex":"ecb70556-da9f-11e4-8af7-cdd596c8ec1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[],"tindex":"ecb70557-da9f-11e4-8af7-9fa7325ac4cb","variableMapping":{"size":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"ecb70558-da9f-11e4-8af7-63572bcbd8a5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[87,88,89,98,99,95],"tindex":"ecb70559-da9f-11e4-8af7-b9c1643fee05","variableMapping":{"endX":"skippedEdge1","reachedX":"empty","x":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:88","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    boolean = true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"ecb7055a-da9f-11e4-8af7-a5ff96d62cc5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:272","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterator com.graphhopper.util.EdgeSkipIterator = com.graphhopper.util.EdgeSkipExplorer.setBaseNode(com.graphhopper.util.EdgeIteratorState.getAdjNode())"},"status":-2},{"failures":[100,99],"tindex":"ecb7055b-da9f-11e4-8af7-130614e26612","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"ecb7055c-da9f-11e4-8af7-67de820902e3","variableMapping":{"distInMeter":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[101,102],"tindex":"ecb7055d-da9f-11e4-8af7-f9e57ebe08ef","variableMapping":{"newUniqueOsmId":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[103,104,105,106,107,108,109,110],"tindex":"ecb7055e-da9f-11e4-8af7-57930afef3ec","variableMapping":{"eleDelta":"midLat","decEleSum":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"ecb7055f-da9f-11e4-8af7-c11975cae7a9","variableMapping":{"incDist2DSum":"minLat","fullDist2D":"minLat","decDist2DSum":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[65,66,67],"tindex":"ecb70560-da9f-11e4-8af7-8f0a6a37473d","variableMapping":{"retBucket":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[111,112],"tindex":"ecb70561-da9f-11e4-8af7-233e83b1553d","variableMapping":{"size":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,24,128,129,130,131,49,132,50,51,133,134,135,53,136,137,138,139,56,140,141,142,143,144,145,146,57,147,148,59,149,150,62,151,64,152,83,84,153,154,155,156,85,157,86,158,159,87,88,89,160,161,162,163,100,164,165,166,90,91,92,93,94,167,168,169,170,171,98,99,172,95,173,7,174,175,176,177],"tindex":"ecb72c72-da9f-11e4-8af7-71080bec1dee","variableMapping":{"segmentSizePower":"a"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[],"tindex":"ecb72c73-da9f-11e4-8af7-8330e79bdb9d","variableMapping":{"acceptedRailways":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"ecb72c74-da9f-11e4-8af7-2b320dce94c0","variableMapping":{"from":"frontIndex","lonSize":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:299","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[178,9,179,180,181,182,10,11,12,183,184,185,186,187,13,14,188,15,189,190,191,192,16,193,194,195,196,197,198,199,17,200,201,202,203,18,204,205,19,206,207,208,20,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,21,226,227,228,229,230,231,22,232,233,234,235,236,237,238,239,240,241,242,243,23,244,113,245,114,115,246,116,117,118,119,120,121,122,123,124,125,126,247,127,24,25,248,249,26,250,251,252,253,27,28,29,254,255,256,257,258,30,31,259,32,260,261,262,263,33,264,265,266,267,268,269,270,34,271,272,273,274,35,275,276,36,277,278,279,37,280,38,39,40,281,282,283,284,285,41,42,286,43,287,288,289,290,44,291,292,293,294,295,296,297,45,298,299,300,301,46,302,303,47,304,305,306,48,307,308,309,128,129,130,310,311,131,49,312,313,132,314,50,51,52,133,315,316,134,135,53,54,317,55,136,137,138,139,56,140,141,142,143,144,145,146,57,318,147,319,320,58,148,321,59,149,150,322,60,323,61,324,325,62,63,326,151,327,64,328,329,330,331,332,333,334,0,335,336,337,338,339,65,340,341,342,66,67,343,68,344,345,69,346,347,348,70,349,350,1,351,352,353,71,2,3,354,355,356,357,72,358,359,360,73,361,74,362,363,364,4,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,75,76,380,381,382,383,77,384,385,386,5,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,78,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,79,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,80,434,435,436,437,438,439,81,440,441,82,442,443,444,445,152,446,447,83,84,153,154,155,156,85,157,86,158,159,87,88,89,160,161,162,163,100,164,165,166,90,91,92,93,94,167,168,169,170,171,98,99,172,95,448,449,173,450,7,174,451,452,175,453,176,454,177,455,456,112,457,458,459,101,460,461,462,463,464,102,465,466,8,467,96,97],"tindex":"ecb75385-da9f-11e4-8af7-a18616a57d9e","variableMapping":{"str":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:434","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\\t\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[111],"tindex":"ecb75386-da9f-11e4-8af7-a3fbf54d397f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[83,85,86,159,100,166,171,99,468,469,470,471,472,473],"tindex":"ecb75387-da9f-11e4-8af7-0b4022f92329","variableMapping":{"i":"size","to":"size","lonSize":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[],"tindex":"ecb75388-da9f-11e4-8af7-29b25a9ef83c","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"ecb75389-da9f-11e4-8af7-17eef4c6e55c","variableMapping":{"splitIndex":"indexDivisor","entrySize":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[12,189,190,195,202,203,29,260,261,266,273,274,40,287,288,293,300,301,52,136,137,142,319,320,342],"tindex":"ecb7538a-da9f-11e4-8af7-7bd30f9bc0c8","variableMapping":{"java.lang.Integer.MAX_VALUE":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-1},{"failures":[348,354,377,399,414,429],"tindex":"ecb7538b-da9f-11e4-8af7-c9f5703a152d","variableMapping":{"values":"values","properties":"properties","key":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"ecb7538c-da9f-11e4-8af7-8b29561a68a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[],"tindex":"ecb7538d-da9f-11e4-8af7-01e01dcdf713","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"ecb7538e-da9f-11e4-8af7-a39558112c3c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[343,349,368,390,405,421],"tindex":"ecb7538f-da9f-11e4-8af7-330fd550eb68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[353,112],"tindex":"ecb75390-da9f-11e4-8af7-756a05134b1f","variableMapping":{"fwdFaster":"durationInHours","incDist2DSum":"durationInHours","fwdSlower":"shortTripsSpeed","fullDist2D":"val","restDist2D":"durationInHours","speed":"shortTripsSpeed","decDist2DSum":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[474],"tindex":"ecb75391-da9f-11e4-8af7-67be2ae02c5b","variableMapping":{"bytesForFlags":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"ecb75392-da9f-11e4-8af7-afdc3bdb2509","variableMapping":{"longSegmentSize":"encoded","bufferStart":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"ecb75393-da9f-11e4-8af7-17a5f7ebf0ab","variableMapping":{"segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":0},{"failures":[],"tindex":"ecb75394-da9f-11e4-8af7-0fe65957cbd1","variableMapping":{"flags":"directionBitMask","value":"blockByDefault","forwardBit":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":0},{"failures":[65,66],"tindex":"ecb75395-da9f-11e4-8af7-f9b572a89714","variableMapping":{"id":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"ecb77aa6-da9f-11e4-8af7-7d08ede11890","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[73],"tindex":"ecb77aa7-da9f-11e4-8af7-97de0d51690b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"ecb77aa8-da9f-11e4-8af7-0f3b29f7b08b","variableMapping":{"capacity":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[152,157,88,89,95],"tindex":"ecb77aa9-da9f-11e4-8af7-c70295318d35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"ecb77aaa-da9f-11e4-8af7-097856771712","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[],"tindex":"ecb77aab-da9f-11e4-8af7-bded9e251e45","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"ecb77aac-da9f-11e4-8af7-2d17323c75f1","variableMapping":{"eleDelta":"java.lang.Double.MAX_VALUE","decEleSum":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[351,354,7,452,457,467],"tindex":"ecb77aad-da9f-11e4-8af7-af3b5568983b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"ecb77aae-da9f-11e4-8af7-2d1070f218f3","variableMapping":{"entry":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":-2},{"failures":[],"tindex":"ecb77aaf-da9f-11e4-8af7-fd63faba4a1e","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:99","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.finished())\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[],"tindex":"ecb77ab0-da9f-11e4-8af7-8bde45076524","variableMapping":{"size":"kmInteger","newSize":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":0},{"failures":[],"tindex":"ecb77ab1-da9f-11e4-8af7-ed5855f8157f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":0},{"failures":[15,32,43,55,341,343,68,344,345,69,346,347,348,70,349,350,1,351,352,353,71,2,3,354,355,356,357,72,358,359,360,73,361,74,362,363,364,4,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,475,476,477,382,383,77,384,385,386,5,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,78,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,79,418,419,420,421,422,423,424,425,426,427,428,429,430,112,457,458,459,101,460,461,462,463,102,465,466,8,467],"tindex":"ecb77ab2-da9f-11e4-8af7-03c24df64883","variableMapping":{"x1":"nextWayBit","sLon":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"ecb7a1c3-da9f-11e4-8af7-553335d2d74e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:502","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"ecb7a1c4-da9f-11e4-8af7-cdcebf7a8c15","variableMapping":{"nanoTime":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"ecb7a1c5-da9f-11e4-8af7-bdbdfc159cbe","variableMapping":{"dist":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"ecb7a1c6-da9f-11e4-8af7-71524743304c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[74,77,78],"tindex":"ecb7a1c7-da9f-11e4-8af7-6d2cf270f768","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:638","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[],"tindex":"ecb7a1c8-da9f-11e4-8af7-b76fde0d6b53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.RacingBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"ecb7a1c9-da9f-11e4-8af7-5f13d3e3800d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[],"tindex":"ecb7a1ca-da9f-11e4-8af7-83450d4a1e18","variableMapping":{"tmpDegreeCounter":"includeWay"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"ecb7a1cb-da9f-11e4-8af7-89585e721fc0","variableMapping":{"type":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:178","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"ecb7a1cc-da9f-11e4-8af7-73686af77ac2","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"nextRelBit","nextEdge":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-2},{"failures":[356,478],"tindex":"ecb7a1cd-da9f-11e4-8af7-59f5052a8fe3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-1},{"failures":[],"tindex":"ecb7a1ce-da9f-11e4-8af7-7faccc7a3505","variableMapping":{"logMessages":"maxSpeed","logMessagesPercentage":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:158","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[343,349,368,390,405,421,101,102],"tindex":"ecb7a1cf-da9f-11e4-8af7-39d8efaa2165","variableMapping":{"newUniqueOsmId":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[446,83,84,153,154,155,156,85,86,158,159,87,89,160,161,162,163,100,164,165,166,90,91,92,93,94,167,168,169,170,171,98,99,172,95,469,450,7,174,175,176],"tindex":"ecb7a1d0-da9f-11e4-8af7-333bc26e5537","variableMapping":{"pos":"toSize","mSize":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"ecb7a1d1-da9f-11e4-8af7-61ac4cef8a80","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"high","speed":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"ecb7a1d2-da9f-11e4-8af7-ef687e3a831b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[9,184,197,208,217,479,480,481,482,483,484,485,486,120,25,26,255,268,279,282,295,306,49,315,144,322,487,64,488,489,490,491,437,439,442,443,445,166,169,98,7,451,452,460,461],"tindex":"ecb7a1d3-da9f-11e4-8af7-018cd240e149","variableMapping":{"maxRasterWidth2InMeterNormed":"d1","currNormedDist":"d1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:374","type":"CtReturnImpl","sourcecode":"return double < (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-1},{"failures":[],"tindex":"ecb7a1d4-da9f-11e4-8af7-4d5414fc14a8","variableMapping":{"a_lon_deg":"minLonTmp","factor":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"ecb7c8e5-da9f-11e4-8af7-8174ff29e691","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[468,471,473],"tindex":"ecb7c8e6-da9f-11e4-8af7-3d4a96666992","variableMapping":{"pos":"child","mSize":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"ecb7c8e7-da9f-11e4-8af7-0d7037a4d98f","variableMapping":{"line":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[0,1,2,359,8],"tindex":"ecb7c8e8-da9f-11e4-8af7-13b9bb5d780c","variableMapping":{"resultOrientation":"speed","orientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"ecb7c8e9-da9f-11e4-8af7-d707d27ca8e2","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":0},{"failures":[348],"tindex":"ecb7c8ea-da9f-11e4-8af7-1beb663f54f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"ecb7c8eb-da9f-11e4-8af7-230b31d00eff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"ecb7c8ec-da9f-11e4-8af7-a1859d9ec855","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"ecb7c8ed-da9f-11e4-8af7-b79554d955c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:340","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[],"tindex":"ecb7c8ee-da9f-11e4-8af7-4b3561bb80c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:514","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, int, boolean);\n}"},"status":-2},{"failures":[362,375,384,397,412,427],"tindex":"ecb7c8ef-da9f-11e4-8af7-ff8c5cc2e440","variableMapping":{"str":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"ecb7c8f0-da9f-11e4-8af7-5342d7dc3577","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[1],"tindex":"ecb7c8f1-da9f-11e4-8af7-db2c0fecd8f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"ecb7c8f2-da9f-11e4-8af7-338a4c163044","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"ecb7c8f3-da9f-11e4-8af7-f79932903894","variableMapping":{"val":"distance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[],"tindex":"ecb7c8f4-da9f-11e4-8af7-1f4fa39bb03b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[65,66,67],"tindex":"ecb7c8f5-da9f-11e4-8af7-8f1a95e1235f","variableMapping":{"allBits":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"ecb7c8f6-da9f-11e4-8af7-0f72db2ebac9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"ecb7c8f7-da9f-11e4-8af7-8930d124452c","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"ecb7f008-da9f-11e4-8af7-ebaf704efaa3","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[83,153,154,155,85,86,159,100,171,99,468,469,470,471,472,473],"tindex":"ecb7f009-da9f-11e4-8af7-0bd9dfb11a43","variableMapping":{"importance":"i","hash":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"ecb7f00a-da9f-11e4-8af7-936c311950d1","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"ecb7f00b-da9f-11e4-8af7-93a1aad5d6db","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"ecb7f00c-da9f-11e4-8af7-a9835783c57f","variableMapping":{"id":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":0},{"failures":[],"tindex":"ecb7f00d-da9f-11e4-8af7-7bf9c5c97f2e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[73],"tindex":"ecb7f00e-da9f-11e4-8af7-f9075e666ae3","variableMapping":{"pl":"pl"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:141","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.PointList.is3D()))\n    throw new java.lang.IllegalStateException(\"To support speed calculation based on elevation data it is necessary to enable import of it.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[],"tindex":"ecb7f00f-da9f-11e4-8af7-b786977e7aad","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"ecb7f010-da9f-11e4-8af7-75428caee7dc","variableMapping":{"val":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[178,9,179,180,181,182,10,11,12,183,184,185,186,187,13,14,188,15,189,190,191,192,16,193,194,195,196,197,198,199,17,200,201,202,203,18,204,205,19,206,207,208,20,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,21,226,227,228,229,230,231,22,232,233,234,235,236,237,238,239,240,241,242,243,23,244,113,245,114,115,246,116,117,118,119,120,121,122,123,124,125,126,247,127,24,25,248,249,26,250,251,252,253,27,28,29,254,255,256,257,258,30,31,259,32,260,261,262,263,33,264,265,266,267,268,269,270,34,271,272,273,274,35,275,276,36,277,278,279,37,280,38,39,40,281,282,283,284,285,41,42,286,43,287,288,289,290,44,291,292,293,294,295,296,297,45,298,299,300,301,46,302,303,47,304,305,306,48,307,308,309,128,129,130,310,311,131,49,312,313,132,314,50,51,52,133,315,316,134,135,53,54,317,55,136,137,138,139,56,140,141,142,143,144,145,146,57,318,147,319,320,58,148,321,59,149,150,322,60,323,61,324,325,62,63,326,151,327,64,328,329,330,331,332,333,334,0,335,336,337,338,339,65,340,341,342,66,67,343,68,344,345,69,346,347,348,70,349,350,1,351,352,353,71,2,3,354,355,356,357,72,358,359,360,73,361,74,362,363,364,4,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,75,76,380,381,382,383,77,384,385,386,5,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,78,403,404,405,406,407,408,409,410,411,412,413,414,415,416,492,417,79,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,80,434,435,436,437,438,439,81,440,441,82,442,443,444,445,152,446,447,83,84,153,154,155,156,85,157,86,158,159,87,88,89,160,161,162,163,100,164,165,166,90,91,92,93,94,167,168,169,170,171,98,99,172,95,448,449,173,450,7,174,451,452,175,453,176,454,177,455,456,112,457,458,459,101,460,461,462,463,464,102,465,466,8,467,96,97],"tindex":"ecb81621-da9f-11e4-8af7-ddb59d2150c7","variableMapping":{"k":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:80","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(\"graphhopper.\".length())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":170,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":437,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":6,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":310,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":228,"com.graphhopper.GraphHopperAPITest.testNoLoad":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":39,"com.graphhopper.reader.OSMReaderTest.testFerry":112,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":63,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":420,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":479,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":116,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":450,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":323,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":375,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":259,"com.graphhopper.coll.CompressedArrayTest.testCompress":104,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":426,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":208,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":153,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":295,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":15,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":86,"com.graphhopper.GraphHopperTest.testPrepare":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":152,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":194,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":473,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":90,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":332,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":427,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":336,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":132,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":66,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":419,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":77,"com.graphhopper.util.PointListTest.testEquals":491,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":165,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":213,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":279,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":387,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":25,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":50,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":471,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":87,"com.graphhopper.GraphHopperTest.testLoadOSM":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":214,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":381,"com.graphhopper.reader.OSMReaderTest.testSort":459,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":398,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":341,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":465,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":250,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":204,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":9,"com.graphhopper.util.PointListTest.testReverse":490,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":305,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":82,"com.graphhopper.routing.DijkstraTest.initializationError":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":276,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":318,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":480,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":187,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":489,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":309,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":248,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":256,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":27,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":317,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":416,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":413,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":120,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":94,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":113,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":118,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":453,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":163,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":262,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":267,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":140,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":49,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":142,"com.graphhopper.coll.CompressedArrayTest.testCompress2":103,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":196,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":78,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":32,"com.graphhopper.GraphHopperAPITest.testLoad":61,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":314,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":343,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":189,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":12,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":111,"com.graphhopper.storage.LevelGraphStorageTest.testClone":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":28,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":67,"com.graphhopper.reader.OSMReaderTest.testBarriers":101,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":366,"com.graphhopper.util.GHUtilityTest.testCopy":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":283,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":24,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":410,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":230,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":429,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":481,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":423,"com.graphhopper.routing.PathTest.testFindInstruction":434,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":29,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":468,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":62,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":347,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":149,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":363,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":205,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":35,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":151,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":263,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":373,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":478,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":435,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":134,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":284,"com.graphhopper.util.InstructionListTest.testWayList2":334,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":221,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":386,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":278,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":384,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":360,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":485,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":388,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":487,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":260,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":232,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":100,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":460,"com.graphhopper.routing.AStarTest.initializationError":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":31,"com.graphhopper.routing.PathBidirRefTest.testExtract":337,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":348,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":144,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":391,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":280,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":390,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":21,"com.graphhopper.util.GHUtilityTest.testSort2":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":167,"com.graphhopper.reader.OSMReaderTest.testMain":458,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":312,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":488,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":266,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":392,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":125,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":399,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":1,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":303,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":55,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":139,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":60,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":81,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":136,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":74,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":141,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":8,"com.graphhopper.storage.GraphHopperStorageTest.testClone":184,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":302,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":2,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":191,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":308,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":414,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":285,"com.graphhopper.routing.PathTest.testTime":433,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":409,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":150,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":316,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":358,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":223,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":294,"com.graphhopper.reader.OSMReaderTest.testRelation":464,"com.graphhopper.util.GHUtilityTest.testSortDirected":330,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":472,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":376,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":439,"com.graphhopper.GraphHopperTest.testFootOnly":177,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":486,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":418,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":233,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":353,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":119,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":477,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":446,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":44,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":436,"com.graphhopper.routing.QueryGraphTest.testOneWay":443,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":224,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":422,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":212,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":105,"com.graphhopper.reader.OSMReaderTest.testWithBounds":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":288,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":340,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":440,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":296,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":475,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":51,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":313,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":402,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":374,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":430,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":270,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":33,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":10,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":442,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":89,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":206,"com.graphhopper.util.InstructionListTest.testWayList":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":389,"com.graphhopper.GraphHopperAPITest.testDisconnected179":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":41,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":108,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":271,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":371,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":396,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":451,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":186,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":158,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":383,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":92,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":448,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":157,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":59,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":355,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":406,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":397,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":172,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":182,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":247,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":401,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":178,"com.graphhopper.routing.PathTest.testWayList":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":306,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":287,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":352,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":474,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":95,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":395,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":193,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":68,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":258,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":122,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":123,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":368,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":470,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":403,"com.graphhopper.util.GHUtilityTest.testSort":328,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":394,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":37,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":253,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":115,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":229,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":237,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":240,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":4,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":73,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":249,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":454,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":405,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":76,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":264,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":65,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":299,"com.graphhopper.routing.PathTest.testFound":432,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":382,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":455,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":321,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":492,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":393,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":261,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":469,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":43,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":14,"com.graphhopper.util.InstructionListTest.testEmptyList":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":166,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":411,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":126,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":93,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":350,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":349,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":428,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":168,"com.graphhopper.reader.PrinctonReaderTest.testRead":96,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":19,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":117,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":30,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":38,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":369,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":425,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":476,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":362,"com.graphhopper.reader.OSMReaderTest.testFoot":457,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":45,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":445,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":218,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":322,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":219,"com.graphhopper.reader.OSMReaderTest.testOneWay":467,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":190,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":203,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":275,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":424,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":367,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":154,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":84,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":241,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":483,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":344,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":289,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":438,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":180,"com.graphhopper.routing.PathBidirRefTest.testExtract2":338,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":88,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":222,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":412,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":201,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":242,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":415,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":462,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":484,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":482,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":307,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":345,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":243,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":372,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":215,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":18,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":329,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":135,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":356,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":197,"com.graphhopper.GraphHopperTest.testFootAndCar":452,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":137,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":282,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":380,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":171,"com.graphhopper.GraphHopperTest.testPrepareOnly":173,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":231,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":40,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":102,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":130,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":0,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":200,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":69,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":463,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":291,"com.graphhopper.routing.AStarBidirectionTest.initializationError":339,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":359,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":148,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":320,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":26}}]
