[{"failures":[],"tindex":"16257777-dad9-11e4-a255-9d03c62559e3","variableMapping":{"newName":"highway","name":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"16259e88-dad9-11e4-a255-5f6d346c122c","variableMapping":{"longSegmentSize":"oldRelationFlags","bufferStart":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"16259e89-dad9-11e4-a255-1bf8a757a761","variableMapping":{"reverseSpeed":"reverseSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"16259e8a-dad9-11e4-a255-adf447b89d83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"16259e8b-dad9-11e4-a255-f965ca9282a3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalThreadStateException(\"already created\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":0},{"failures":[],"tindex":"16259e8c-dad9-11e4-a255-9b24bcafb59c","variableMapping":{"str":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"16259e8d-dad9-11e4-a255-0d3362084cc9","variableMapping":{"str":"pavementName","nodeCount":"pavementType","base":"pavementType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1344","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.RuntimeException((\"Base node problem with edge \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"16259e8e-dad9-11e4-a255-3369bfe924fa","variableMapping":{"elem":"arr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"16259e8f-dad9-11e4-a255-d747a0a89c6a","variableMapping":{"i":"y1","child":"sLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"16259e90-dad9-11e4-a255-bb998d7ecae0","variableMapping":{"minLon":"d1","maxLon":"d2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:94","type":"CtIfImpl","sourcecode":"if ((double) >= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-2},{"failures":[],"tindex":"16259e91-dad9-11e4-a255-e18be91ec6a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:86","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,276,277,277,278,278,279,279,280,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355],"tindex":"1625c5a2-dad9-11e4-a255-65295c890220","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[236,257],"tindex":"1625c5a3-dad9-11e4-a255-5bdc98255ddf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-1},{"failures":[356,357,358,359],"tindex":"1625c5a4-dad9-11e4-a255-9f42cd0049fa","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"1625c5a5-dad9-11e4-a255-870147279f01","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,360,361,362,363,364,365,366,367,368,369,370,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,158,159,160,161,162,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,221,236,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,276,277,277,278,278,279,279,280,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355],"tindex":"1625ecb6-dad9-11e4-a255-7f04c46922c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-1},{"failures":[],"tindex":"1625ecb7-dad9-11e4-a255-55a0860fdd5f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"1625ecb8-dad9-11e4-a255-7bde63615cd8","variableMapping":{"ghLocation":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":0},{"failures":[],"tindex":"1625ecb9-dad9-11e4-a255-ddc66bb380b2","variableMapping":{"dist":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[0,1,2,4,5,6,7,8,10],"tindex":"1625ecba-dad9-11e4-a255-fd36611a5ee7","variableMapping":{"str":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"1625ecbb-dad9-11e4-a255-4505a0271b57","variableMapping":{"highwayValue":"highwayValue","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":0},{"failures":[371,372,373],"tindex":"1625ecbc-dad9-11e4-a255-0bf4d85c3b8f","variableMapping":{"allBits":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"1625ecbd-dad9-11e4-a255-37744140b84e","variableMapping":{"edge":"edgeEntryBytes","updatedB":"edgeEntryBytes","updatedA":"edgeEntryBytes","linkA":"tmpPrevEdge","this":"this","linkB":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.writeEdge(int, int, int, int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[38,53,83,98,185,200,223,238,297],"tindex":"1625ecbe-dad9-11e4-a255-25ffb9f11f5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"1625ecbf-dad9-11e4-a255-c3cfa7ff3df1","variableMapping":{"segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":0},{"failures":[],"tindex":"1625ecc0-dad9-11e4-a255-df9bc45a5441","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"162613d1-dad9-11e4-a255-877b03730f1b","variableMapping":{"from":"com.graphhopper.util.EdgeIterator.NO_EDGE","lonSize":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:300","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"162613d2-dad9-11e4-a255-07282ab92b12","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"162613d3-dad9-11e4-a255-4394a984d1e8","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"162613d4-dad9-11e4-a255-b90dff932bd1","variableMapping":{"lastTime":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"162613d5-dad9-11e4-a255-09bbb62682d5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:814","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-2},{"failures":[],"tindex":"162613d6-dad9-11e4-a255-85a2300e4333","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":0},{"failures":[],"tindex":"162613d7-dad9-11e4-a255-15e9a752296a","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"162613d8-dad9-11e4-a255-3ba397bcdf6a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[374,375,376,377,378,18,21,25,46,52,57,59,63,66,70,91,97,102,104,117,119,137,139,379,168,172,193,199,204,206,380,381,382,383,384,248,250,254,255,256,258,264,267,268,277,283,284,287,292,293,323,345,346,347,348,353],"tindex":"162613d9-dad9-11e4-a255-a5e2bb5170bc","variableMapping":{"indexWithMaxDist":"index","lastIndex":"length","fromIndex":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[],"tindex":"162613da-dad9-11e4-a255-4b5aca4a3470","variableMapping":{"this":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:237","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"162613db-dad9-11e4-a255-e30eaa26eb25","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,385,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,386,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,131,151,165,167,168,169,170,171,387,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,253,258,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,388,389,390,391,392,393,394,395,396,296,397,398,399,0,400,401,402,403,404,405,406,1,407,356,408,409,300,301,410,371,411,412,2,413,3,414,415,416,417,418,419,420,421,422,4,423,357,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,302,443,444,445,446,447,448,449,372,5,6,450,451,452,453,454,455,456,7,457,358,458,459,460,373,461,462,8,463,9,464,465,466,467,468,469,470,471,472,10,473,359,474,475,476,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326],"tindex":"16263aec-dad9-11e4-a255-ff54f0d18ab4","variableMapping":{"x1":"shift","sLon":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[269,394,414,438,464],"tindex":"16263aed-dad9-11e4-a255-3b1001318eb9","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-1},{"failures":[],"tindex":"16263aee-dad9-11e4-a255-4da0767087a4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[296],"tindex":"16263aef-dad9-11e4-a255-add050a98883","variableMapping":{"pos":"minNetworkSize","mSize":"minNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"16263af0-dad9-11e4-a255-298ef0165099","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[269],"tindex":"16263af1-dad9-11e4-a255-e3c461c06016","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-1},{"failures":[],"tindex":"16277372-dad9-11e4-a255-3b5d624d02b0","variableMapping":{"reverseSpeed":"preferWayEncoder","flags":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"16277373-dad9-11e4-a255-490e5fc72fb3","variableMapping":{"err":"bytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"16277374-dad9-11e4-a255-df8a5f853129","variableMapping":{"size":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[],"tindex":"16277375-dad9-11e4-a255-b5b801864e57","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,361,362,363,364,365,367,368,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,158,159,160,161,162,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,221,236,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,276,277,277,278,278,279,279,280,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355],"tindex":"16279a86-dad9-11e4-a255-e792b22026d3","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"16279a87-dad9-11e4-a255-fdf0f322e0e2","variableMapping":{"eleDelta":"java.lang.Math.PI","decEleSum":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"16279a88-dad9-11e4-a255-6fd702fb14fe","variableMapping":{"edgeId":"i","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"i","nodeA":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[294,298,299],"tindex":"16279a89-dad9-11e4-a255-a7f34c2432be","variableMapping":{"allBits":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"16279a8a-dad9-11e4-a255-671440d3e12d","variableMapping":{"hasOther":"defaultB","hasRel":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[301],"tindex":"16279a8b-dad9-11e4-a255-85820844e3d6","variableMapping":{"initialBits":"flags","allBits":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[477],"tindex":"16279a8c-dad9-11e4-a255-e798b76456b4","variableMapping":{"cap":"otherValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"16279a8d-dad9-11e4-a255-c3a580eeb8f7","variableMapping":{"baseNode":"index","id":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:360","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[478,329,331,335,337,339,340],"tindex":"16279a8e-dad9-11e4-a255-cb24217a1cdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-1},{"failures":[],"tindex":"16279a8f-dad9-11e4-a255-65f5397e2f66","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"16279a90-dad9-11e4-a255-b10cc8ef1376","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[479,480,481,482,483,484,485,486,487,488],"tindex":"16279a91-dad9-11e4-a255-3b3c8e82cc88","variableMapping":{"towerNodeDistance":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"16279a92-dad9-11e4-a255-450dee66a298","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[],"tindex":"16279a93-dad9-11e4-a255-9deaa6d66ba5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[489,490,491,492,493,335,339],"tindex":"16279a94-dad9-11e4-a255-dbfe8ebb4006","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"16279a95-dad9-11e4-a255-ef7219de1946","variableMapping":{"towerNodeDistance":"bwSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"1627c1a6-dad9-11e4-a255-bb9a68d4d099","variableMapping":{"scDirMask":"maxValue","flags":"maxValue","dir":"maxValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"1627c1a7-dad9-11e4-a255-bf6e9bde94d4","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"currDistToGoal","speed":"currDistToGoal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"1627c1a8-dad9-11e4-a255-dd7a312f35f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.RacingBikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[],"tindex":"1627c1a9-dad9-11e4-a255-8f384e365338","variableMapping":{"factor":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"1627c1aa-dad9-11e4-a255-5db295c10b7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[11,21,26,27,30,34,36,41,43,49,51,54,56,57,61,63,66,71,72,75,79,81,86,88,94,96,99,101,102,106,114,131,151,165,168,173,174,177,181,183,188,190,196,198,201,203,204,208,211,212,215,219,221,226,228,234,236,239,241,242,246,250,251,252,253,254,256,260,261,262,263,264,266,269,270,271,273,275,292,294,297,298,302,303,304,305,306,309,313,315,316,318,320,322,323,324,326,327,329,330,332,333,335,336,337,339,340,343,345,346,347,353],"tindex":"1627c1ab-dad9-11e4-a255-0ffd708676be","variableMapping":{"longSegmentSize":"flags","bufferStart":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"1627c1ac-dad9-11e4-a255-6d32fcf240d5","variableMapping":{"dLat":"err","dLon":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[1,4,7,10],"tindex":"1627c1ad-dad9-11e4-a255-0fdd432251fe","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"1627c1ae-dad9-11e4-a255-ef8a0d95742d","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":0},{"failures":[],"tindex":"1627c1af-dad9-11e4-a255-435a6e3bda93","variableMapping":{"nodeB":"minutes","edgeId":"minutes","nodeA":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[372],"tindex":"1627c1b0-dad9-11e4-a255-fbbfbd585aaf","variableMapping":{"encoderList":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[374,375,376,377,378,18,21,25,46,52,57,59,63,66,70,91,97,102,104,117,119,137,139,154,155,156,158,379,168,172,193,199,204,206,380,381,383,384,248,250,254,255,256,257,258,264,267,268,277,280,281,283,284,287,292,293,323,345,346,347,348],"tindex":"1627c1b1-dad9-11e4-a255-f3dd372aeeed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[],"tindex":"1627c1b2-dad9-11e4-a255-a3f1caec460d","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"kmInteger","entityType":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":0},{"failures":[],"tindex":"1627c1b3-dad9-11e4-a255-9b5a3ed18375","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"1627c1b4-dad9-11e4-a255-693a22442254","variableMapping":{"low":"removed","guess":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"1627c1b5-dad9-11e4-a255-93c7a7fca8dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"1627c1b6-dad9-11e4-a255-333b7e6bac4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[],"tindex":"1627e8c7-dad9-11e4-a255-d1c223be0afd","variableMapping":{"retBucket":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"1627e8c8-dad9-11e4-a255-7f3949de89ad","variableMapping":{"that":"g","index":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:125","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[],"tindex":"1627e8c9-dad9-11e4-a255-03048f38acb5","variableMapping":{"keys":"keys","i":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":0},{"failures":[399,402,417,419,451,453,467,469],"tindex":"1627e8ca-dad9-11e4-a255-15b3a20afb0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:448","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"1627e8cb-dad9-11e4-a255-0baa96eb662c","variableMapping":{"precision":"com.graphhopper.util.AngleCalc.PI3_4","lat":"com.graphhopper.util.AngleCalc.PI3_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[250,251,254,257,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,322,323,324,325,326,327,329,335,336,340],"tindex":"1627e8cc-dad9-11e4-a255-cdbc49a2643a","variableMapping":{"EMPTY_FLAGS":"millis","turnFlags":"millis"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:127","type":"CtIfImpl","sourcecode":"if (long == (long))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[269],"tindex":"1627e8cd-dad9-11e4-a255-89020a83ccfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-1},{"failures":[],"tindex":"1627e8ce-dad9-11e4-a255-f7b4fc8efa06","variableMapping":{"from":"minOnewayNetworkSize","hash":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"1627e8cf-dad9-11e4-a255-ffcdf5a1f007","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"1627e8d0-dad9-11e4-a255-f7c44d1fa1b2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"1627e8d1-dad9-11e4-a255-5b5899385f1f","variableMapping":{"freeIndex":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-2},{"failures":[],"tindex":"1627e8d2-dad9-11e4-a255-6b0d2eb82c42","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[296,297],"tindex":"1627e8d3-dad9-11e4-a255-532185e321dc","variableMapping":{"strLen":"maxCount","bLen":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[],"tindex":"1627e8d4-dad9-11e4-a255-af64b67d7e42","variableMapping":{"bestPath":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:166","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-1},{"failures":[],"tindex":"1627e8d5-dad9-11e4-a255-1de4ebd37960","variableMapping":{"precision":"x","lat":"x"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":0},{"failures":[11,12,250,251,252,253,254,256,257,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,335,336,340],"tindex":"1627e8d6-dad9-11e4-a255-abc1a99952ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[],"tindex":"1627e8d7-dad9-11e4-a255-95d1ee8d48f3","variableMapping":{"distInMeter":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[479,480,482,483,484,485,487,488],"tindex":"1627e8d8-dad9-11e4-a255-331b45be6144","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[356,357,358,359],"tindex":"1627e8d9-dad9-11e4-a255-fdb10a6083e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":51,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":321,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":18,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":211,"com.graphhopper.reader.OSMReaderTest.testFerry":262,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":349,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":350,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":463,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":400,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":138,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":249,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":80,"com.graphhopper.coll.CompressedArrayTest.testCompress":488,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":406,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":207,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":231,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":183,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":337,"com.graphhopper.GraphHopperTest.testPrepare":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":320,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":327,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":493,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":462,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":313,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":345,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":152,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":1,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":342,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":24,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":298,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":373,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":305,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":118,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":63,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":25,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":491,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":340,"com.graphhopper.GraphHopperTest.testLoadOSM":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":125,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":364,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":119,"com.graphhopper.reader.OSMReaderTest.testSort":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":473,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":272,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":67,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":202,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":168,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":484,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":244,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":283,"com.graphhopper.routing.DijkstraTest.initializationError":388,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":101,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":50,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":179,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":64,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":75,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":2,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":70,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":459,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":457,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":142,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":187,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":308,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":307,"com.graphhopper.coll.OSMIDMapTest.testGetLong":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":84,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":90,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":42,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":478,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":21,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":44,"com.graphhopper.coll.CompressedArrayTest.testCompress2":487,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":192,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":372,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":81,"com.graphhopper.GraphHopperAPITest.testLoad":11,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":385,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":363,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":441,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":184,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":174,"com.graphhopper.storage.LevelGraphStorageTest.testClone":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":71,"com.graphhopper.reader.OSMReaderTest.testBarriers":266,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":310,"com.graphhopper.util.GHUtilityTest.testCopy":353,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":151,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":455,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":112,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":356,"com.graphhopper.routing.PathTest.testFindInstruction":293,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":403,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":72,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":489,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":343,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":446,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":58,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":412,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":203,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":99,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":351,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":421,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":391,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":31,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":216,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":370,"com.graphhopper.util.InstructionListTest.testWayList2":347,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":239,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":126,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":208,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":461,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":300,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":33,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":378,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":82,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":153,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":309,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":267,"com.graphhopper.routing.AStarTest.initializationError":476,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":323,"com.graphhopper.coll.OSMIDMapTest.testGet":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":79,"com.graphhopper.routing.PathBidirRefTest.testExtract":288,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":447,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":46,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":382,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":467,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":237,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":398,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":466,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":131,"com.graphhopper.util.GHUtilityTest.testSort2":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":318,"com.graphhopper.reader.OSMReaderTest.testMain":264,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":22,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":468,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":147,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":359,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":49,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":241,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":36,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":40,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":61,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":37,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":94,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":371,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":43,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":274,"com.graphhopper.storage.StorablePropertiesTest.testStore":379,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":377,"com.graphhopper.storage.GraphHopperStorageTest.testClone":176,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":240,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":435,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":186,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":433,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":13,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":358,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":217,"com.graphhopper.routing.PathTest.testTime":291,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":454,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":59,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":440,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":128,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":230,"com.graphhopper.util.GHUtilityTest.testSortDirected":355,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":492,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":423,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":279,"com.graphhopper.GraphHopperTest.testFootOnly":257,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":399,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":154,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":431,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":141,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":328,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":410,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":226,"com.graphhopper.search.NameIndexTest.testCreate":376,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":276,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":366,"com.graphhopper.routing.QueryGraphTest.testOneWay":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":129,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":482,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":117,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":479,"com.graphhopper.reader.OSMReaderTest.testWithBounds":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":223,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":281,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":232,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":448,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":393,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":26,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":23,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":422,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":408,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":93,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":86,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":172,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":304,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":205,"com.graphhopper.util.InstructionListTest.testWayList":346,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":465,"com.graphhopper.GraphHopperAPITest.testDisconnected179":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":218,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":483,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":419,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":261,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":229,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":472,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":252,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":178,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":155,"com.graphhopper.routing.util.EncodedValueTest.testSwap":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":338,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":196,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":460,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":315,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":336,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":57,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":436,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":451,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":325,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":149,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":365,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":475,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":167,"com.graphhopper.routing.PathTest.testWayList":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":245,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":222,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":430,"com.graphhopper.coll.OSMIDMapTest.testGet2":381,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":326,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":471,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":189,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":77,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":177,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":41,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":143,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":144,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":145,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":416,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":490,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":5,"com.graphhopper.util.GHUtilityTest.testSort":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":235,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":486,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":470,"com.graphhopper.search.NameIndexTest.testPut":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":106,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":386,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":111,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":136,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":158,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":161,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":413,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":282,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":159,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":65,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":256,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":450,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":324,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":294,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":369,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":236,"com.graphhopper.routing.PathTest.testFound":290,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":258,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":396,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":56,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":469,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":83,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":375,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":221,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":181,"com.graphhopper.util.InstructionListTest.testEmptyList":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":312,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":456,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":316,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":439,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":427,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":407,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":426,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":319,"com.graphhopper.reader.PrinctonReaderTest.testRead":260,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":204,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":139,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":220,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":384,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":480,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":210,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":88,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":417,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":394,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":453,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":411,"com.graphhopper.reader.OSMReaderTest.testFoot":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":234,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":287,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":123,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":485,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":124,"com.graphhopper.reader.OSMReaderTest.testOneWay":275,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":185,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":200,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":100,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":404,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":194,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":415,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":332,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":329,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":339,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":434,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":330,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":302,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":224,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":278,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":170,"com.graphhopper.routing.PathBidirRefTest.testExtract2":289,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":367,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":303,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":127,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":198,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":163,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":458,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":247,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":443,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":335,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":420,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":120,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":201,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":437,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":193,"com.graphhopper.GraphHopperTest.testFootAndCar":253,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":38,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":214,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":392,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":438,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":74,"com.graphhopper.GraphHopperTest.testPrepareOnly":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":322,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":113,"com.graphhopper.GraphHopperTest.testVia":250,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":212,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":271,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":17,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":197,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":348,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":444,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":227,"com.graphhopper.routing.AStarBidirectionTest.initializationError":389,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":409,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":55,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":53,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":66}}]
