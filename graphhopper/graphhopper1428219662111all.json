[{"failures":[],"tindex":"1c0fa8df-db67-11e4-926c-611c9a70cfdc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:37","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalcEarth.calcDist(double, double, double, double)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"1c106b30-db67-11e4-926c-671677fdd554","variableMapping":{"importance":"endIndexPlusOne","hash":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"1c106b31-db67-11e4-926c-077c59871103","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[65],"tindex":"1c106b32-db67-11e4-926c-2b5f4fea71ce","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"1c106b33-db67-11e4-926c-8920517239ac","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[66],"tindex":"1c109244-db67-11e4-926c-21d00bdbda6c","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:463","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return \"\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[],"tindex":"1c109245-db67-11e4-926c-d3966acab287","variableMapping":{"dx":"fromHeight","dy":"fromHeight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[],"tindex":"1c109246-db67-11e4-926c-93f98d9e4e79","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:514","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, int, boolean);\n}"},"status":-2},{"failures":[],"tindex":"1c109247-db67-11e4-926c-9b233157daaa","variableMapping":{"factor":"bwSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"1c109248-db67-11e4-926c-0db0446252e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:272","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterator com.graphhopper.util.EdgeSkipIterator = com.graphhopper.util.EdgeSkipExplorer.setBaseNode(com.graphhopper.util.EdgeIteratorState.getAdjNode())"},"status":-2},{"failures":[],"tindex":"1c109249-db67-11e4-926c-4b04cae4e615","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"1c10924a-db67-11e4-926c-fbc17ab476fb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"1c10924b-db67-11e4-926c-b35ae39f18b4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"1c10924c-db67-11e4-926c-654ced194ecc","variableMapping":{"retBucket":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[67,68,69,70,71,72,73,74,59],"tindex":"1c10924d-db67-11e4-926c-776c8fb5fc6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[75,76,77,78,79,80,81,82,83],"tindex":"1c10924e-db67-11e4-926c-4d1248fe9c46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"status":-1},{"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,97,1,2,3,12,13,14,15,16,20,21,22,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,42,43,44,45,46,47,48,49,50,51,52,172,53,54,55,56,57,58,59,60,61,62,63,173,64,174,175,176],"tindex":"1c10924f-db67-11e4-926c-97b8d6784a8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:114","type":"CtAssignmentImpl","sourcecode":"byte[][][int] = new byte[1 << (int)]"},"status":-1},{"failures":[],"tindex":"1c109250-db67-11e4-926c-f392ced96d67","variableMapping":{"index":"bytePos","entriesPerSegment":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:99","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"1c10b961-db67-11e4-926c-2d517a9bd7db","variableMapping":{"angle":"maxLatTmp","com.graphhopper.util.AngleCalc.PI3_4":"maxLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"1c110782-db67-11e4-926c-41ba3cc0e1ef","variableMapping":{"scDirMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[153],"tindex":"1c110783-db67-11e4-926c-078bda5eddc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[177,178,179],"tindex":"1c110784-db67-11e4-926c-b3e78406b8a9","variableMapping":{"cp":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:110","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[75,76,77,78,79,80,180,81,82,181],"tindex":"1c110785-db67-11e4-926c-23c874ffa114","variableMapping":{"i":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"1c110786-db67-11e4-926c-e9504ccda05d","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[88,182,183,91,184,185,186,187,188,93,189,190,191,11,192,193,30,100,101,194,195,104,196,197,198,199,200,106,201,202,203,204,205,206,207,208,209,210,211,111,212,213,214,113,215,216,116,217,218,219,220,221,222,223,224,225,226,227,228,229,147,148,149,150,230,231,232,35,36,37,233,159,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,38,251,40,252,253,41,254,166,255,256,257,258,259],"tindex":"1c112e97-db67-11e4-926c-1f398ab7b69d","variableMapping":{"bytes":"flags","capacity":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"1c1155a8-db67-11e4-926c-51badacf1216","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"1c1155a9-db67-11e4-926c-adf24b9ebd1b","variableMapping":{"fromNode":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[],"tindex":"1c1155aa-db67-11e4-926c-93a1e73781eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:310","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":0},{"failures":[260,65,172],"tindex":"1c1155ab-db67-11e4-926c-85f8afadc94a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"1c1155ac-db67-11e4-926c-91a92452c7b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:413","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId())"},"status":-2},{"failures":[261],"tindex":"1c1155ad-db67-11e4-926c-eb72cdede3d3","variableMapping":{"angle":"backSpeed","com.graphhopper.util.AngleCalc.PI3_4":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"1c1155ae-db67-11e4-926c-57e3d41de928","variableMapping":{"turnCostIndex":"edgeEntryBytes","NO_TURN_ENTRY":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-2},{"failures":[151,179],"tindex":"1c1155af-db67-11e4-926c-6d3f486a7636","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[36],"tindex":"1c1155b0-db67-11e4-926c-3ba3881a56f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[262,239,263,242,243,264,244,248,41,254,166,255,257],"tindex":"1c1155b1-db67-11e4-926c-f14f074379c8","variableMapping":{"mainEdgeState":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-1},{"failures":[19,21,25,26,27,28,29,265,266,113,267,115,215,268,116,217,269,270,271,219,220,221,222,118,223,224,119,225,272,273,274,234,235,236,237,238,239,240,241,242,264,244,245,246,247,248,249,38,251,39,40,253,41,254,166,255,256,257,43,44,45,48,49],"tindex":"1c1155b2-db67-11e4-926c-07b29eb0ce86","variableMapping":{"bytesForFlags":"I_SKIP_EDGE1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"1c1155b3-db67-11e4-926c-b7626a390e57","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"1c117cc4-db67-11e4-926c-a528a29df36e","variableMapping":{"edgeId":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-2},{"failures":[262,239,263,244,247,41,254,255],"tindex":"1c117cc5-db67-11e4-926c-8f46ca78657f","variableMapping":{"currentBucket":"skippedEdge2","currentIndex":"from","bucketSize":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[42,52],"tindex":"1c117cc6-db67-11e4-926c-97ed1fc16cee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[],"tindex":"1c117cc7-db67-11e4-926c-e52efe88b40d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"1c117cc8-db67-11e4-926c-6586e821f238","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"1c117cc9-db67-11e4-926c-3370c683a758","variableMapping":{"res":"turnRestrictionBit","maxBits":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:261","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[179],"tindex":"1c117cca-db67-11e4-926c-6d13df6a134e","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[183,275,276,277,278,94,279,195,280,281,282,283,107,284,205,285,286,287,288,289,290,216,291,292,270,293,118,294,232,36,37,64],"tindex":"1c117ccb-db67-11e4-926c-3f9e486e90d5","variableMapping":{"length":"high","factor":"len"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-1},{"failures":[],"tindex":"1c117ccc-db67-11e4-926c-173530734cd2","variableMapping":{"size":"v"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"1c117ccd-db67-11e4-926c-1bf57b0569b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[277,279,282,284,287,290,270,294,37],"tindex":"1c117cce-db67-11e4-926c-a585d3bb2c33","variableMapping":{"i":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[177,178,179],"tindex":"1c11a3df-db67-11e4-926c-3509fb66bc2e","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:197","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[295,296,297,298],"tindex":"1c11a3e0-db67-11e4-926c-934c958977ae","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[299,300],"tindex":"1c11a3e1-db67-11e4-926c-79b11f124932","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-1},{"failures":[],"tindex":"1c11a3e2-db67-11e4-926c-172c968717cc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[],"tindex":"1c11a3e3-db67-11e4-926c-851586b57330","variableMapping":{"shift":"encoded","flags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"1c11a3e4-db67-11e4-926c-03860bda94b2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"1c11a3e5-db67-11e4-926c-0b82d4a78977","variableMapping":{"nodeId":"tmp","mainNodes":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"1c11a3e6-db67-11e4-926c-11029291cc85","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"1c11a3e7-db67-11e4-926c-fb2a8d97b0fd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"1c11a3e8-db67-11e4-926c-fb1e0c7daeaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[151,301,302,261,177,303,304,178,43,44,45,46,47,48,49,50,52,172,53,54,55,56,57,58,59,60,61,62,63,173,305,64],"tindex":"1c11a3e9-db67-11e4-926c-a90d253c6ae3","variableMapping":{"reverseOrder":"isRoundabout"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:126","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Switching order multiple times is not supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[66],"tindex":"1c11a3ea-db67-11e4-926c-fb9563dfc8e2","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[260,303,172],"tindex":"1c11a3eb-db67-11e4-926c-094dc73efdbc","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[88,90,182,183,91,184,306,185,307,186,187,188,93,189,190,95,191,100,101,103,194,195,104,196,308,197,309,198,199,200,106,201,202,108,203,310,204,205,206,207,311,208,312,209,210,211,111,212,213,313,214,265,314,113,115,215,216,116,217,269,218,315,219,220,221,222,223,224,119,225,226,227,273,228,229,147,148,149,150,151,230,231,232,35,36,37,233,316,317,301,302,318,260,319,261,177,303,320,321,304,178,154,155,159,162,262,274,234,235,236,237,238,239,263,240,322,241,242,264,244,245,246,247,248,249,250,38,323,324,39,40,252,253,41,325,254,166,255,256,257,43,44,45,46,47,48,49,50,52,172,53,54,55,56,58,59,60,61,62,63,173,305,64,258,259],"tindex":"1c11a3ec-db67-11e4-926c-738154242923","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:137","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"1c11a3ed-db67-11e4-926c-5f900dec2f92","variableMapping":{"d":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[],"tindex":"1c11cafe-db67-11e4-926c-9b51d268b0a4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[241,326,327,328,329],"tindex":"1c11caff-db67-11e4-926c-a1ccf1772ed3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"1c11cb00-db67-11e4-926c-1fed4a67049f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[243],"tindex":"1c11cb01-db67-11e4-926c-e3544879f924","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[232,233,330],"tindex":"1c11cb02-db67-11e4-926c-01aa04db2495","variableMapping":{"size":"start","index":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[274,234,235,236,237,238,331,239,240,322,241,242,264,244,245,246,247,248,249,250,38,251,323,324,39,40,252,253,41,325,254,166,255,256,257,332,43,44,45,48,49],"tindex":"1c11cb03-db67-11e4-926c-cbdfac48d79b","variableMapping":{"size":"toSize","capacity":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-1},{"failures":[333,334,335,336,337,338,339],"tindex":"1c11cb04-db67-11e4-926c-996447ffca27","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[227,234,239,242,264,244,245,246,247,249,250,251,323,324,39,40,252,253,41,254,166,255,256,257,44,45,48],"tindex":"1c11cb05-db67-11e4-926c-a9899efe83a8","variableMapping":{"fullyLoaded":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:658","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[84,85,86,87,88,89,90,92,94,95,96,97,1,2,3,12,13,14,15,16,20,21,22,98,100,101,102,103,105,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,136,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,42,43,44,45,46,47,48,49,50,51,52,172,53,54,55,56,57,58,59,60,61,62,63,173,64],"tindex":"1c11cb06-db67-11e4-926c-57993fd5ea12","variableMapping":{"len":"indexDivisor","start":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[75,76,78,79,80,81,82,181],"tindex":"1c11cb07-db67-11e4-926c-91208dc81edf","variableMapping":{"x1":"lon","x2":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:159","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[75,76,77,78,79,80,180,81,82,181],"tindex":"1c11cb08-db67-11e4-926c-d1fe5220f172","variableMapping":{"factor":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[88,90,182,183,185,307,188,189,95,191,100,101,103,194,195,197,309,200,201,108,203,310,204,205,208,312,211,212,313,214,113,115,215,216,218,315,221,223,119,225,226,273,228,232,233,330,302,303,321,340,159,162,262,234,235,239,263,240,242,243,264,247,250,323,39,40,257,44,45,46,47,50,172,53,54,56,59,60,61,62,63,64,258,259],"tindex":"1c11cb09-db67-11e4-926c-f3bf4d1a6a4c","variableMapping":{"size":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[],"tindex":"1c11cb0a-db67-11e4-926c-4d503db5e9e6","variableMapping":{"edgeId":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[299,300],"tindex":"1c11f21b-db67-11e4-926c-4d98b415b243","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[341,342,343,334],"tindex":"1c11f21c-db67-11e4-926c-7d9e6f3b8932","variableMapping":{"i":"speed","to":"speed","lonSize":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[],"tindex":"1c11f21d-db67-11e4-926c-37bb9b8e8a4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[75,76,77,78,79,80,180,81,82,181],"tindex":"1c11f21e-db67-11e4-926c-936dcee358c1","variableMapping":{"orientation":"lat","java.lang.Math.PI":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[344,88,89,345,346,90,182,183,347,91,184,348,349,306,185,275,307,276,277,350,351,186,352,187,278,353,92,354,355,188,356,93,94,279,189,357,190,95,358,96,97,191,359,0,360,1,2,3,4,361,5,362,363,6,7,8,9,364,10,11,365,366,367,368,369,370,192,371,12,13,14,15,372,16,373,374,375,376,377,378,193,17,18,379,19,380,20,21,22,23,381,24,382,383,25,26,27,28,384,29,30,100,385,386,101,102,387,388,103,194,195,389,104,196,390,391,308,197,280,309,281,282,392,393,198,394,199,283,395,105,396,397,200,398,106,107,284,201,399,202,108,400,109,110,203,401,310,204,205,402,206,207,403,404,311,208,285,312,286,287,405,406,209,407,210,288,408,409,410,411,211,412,111,289,290,212,413,213,313,414,415,416,214,417,265,418,419,266,314,112,420,421,113,114,422,267,115,215,216,268,116,217,423,424,269,218,291,315,292,270,425,271,219,426,220,293,427,117,428,429,221,430,222,118,294,223,431,224,119,432,120,121,225,272,226,227,273,228,229,433,434,147,435,436,437,148,149,150,151,33,34,230,231,232,35,36,37,233,330,438,152,153,439,440,154,155,156,156,157,157,441,441,158,158,159,159,160,160,161,161,162,162,163,163,442,442,164,164,165,165,262,274,234,235,236,237,238,331,239,263,240,322,241,242,243,264,244,245,246,247,248,249,250,38,251,323,324,39,40,252,253,41,325,254,166,255,256,257,42,43,44,45,46,47,48,49,50,51,52,172,53,54,55,56,57,58,59,60,61,62,63,173,64,443,258,259],"tindex":"1c11f21f-db67-11e4-926c-91e894882efd","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[444,445,446],"tindex":"1c11f220-db67-11e4-926c-d9ecc846665a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"1c11f221-db67-11e4-926c-37d713495d90","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"1c11f222-db67-11e4-926c-87e786bbf41e","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[447,448,449,337],"tindex":"1c11f223-db67-11e4-926c-73a6caf1ee4c","variableMapping":{"_location":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"1c11f224-db67-11e4-926c-5bafe4040eea","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"1c11f225-db67-11e4-926c-439d48af32c7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[302,64],"tindex":"1c11f226-db67-11e4-926c-13e38da83aff","variableMapping":{"pos":"shift","mSize":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"1c11f227-db67-11e4-926c-a34c4b209688","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[232,233],"tindex":"1c11f228-db67-11e4-926c-b73a14ec0c9a","variableMapping":{"allIter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:379","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getBaseNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-1},{"failures":[242,243,264,166,257],"tindex":"1c121939-db67-11e4-926c-af091d71efcf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"1c12193a-db67-11e4-926c-a7221458799a","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"1c12193b-db67-11e4-926c-731e07444e96","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","speed":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"1c12193c-db67-11e4-926c-1f3f1bd03e73","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[450,451,452,68,453,454,455,447,456,341,299,300,457,458,459,71,460,461,462,448,463,342,464,72,465,466,467,449,468,343,333,74,334,335,336,337,338,469],"tindex":"1c12193d-db67-11e4-926c-19141a9d4bcb","variableMapping":{"id":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[470,471],"tindex":"1c12193e-db67-11e4-926c-4139cf37ec5a","variableMapping":{"size":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[89,345,275,355,102,387,280,397,472,473,474,475,476,477,478,479,480,481,482,112,420,114,422,291,429,437,323],"tindex":"1c12404f-db67-11e4-926c-950742a7a5b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":222,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":325,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":112,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":178,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":204,"com.graphhopper.reader.OSMReaderTest.testFerry":172,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":228,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":229,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":70,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":334,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":21,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":43,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":272,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":280,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":134,"com.graphhopper.coll.CompressedArrayTest.testCompress":76,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":236,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":409,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":307,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":379,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":135,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":240,"com.graphhopper.GraphHopperTest.testPrepare":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":414,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":262,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":459,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":251,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":371,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":337,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":34,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":267,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":233,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":74,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":457,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":473,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":250,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":2,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":110,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":100,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":115,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":242,"com.graphhopper.GraphHopperTest.testLoadOSM":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":6,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":476,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":3,"com.graphhopper.reader.OSMReaderTest.testSort":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":463,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":36,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":102,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":138,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":357,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":88,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":415,"com.graphhopper.storage.RAMDataAccessTest.testHeader":129,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":162,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":443,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":202,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":430,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":349,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":385,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":103,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":291,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":468,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":24,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":351,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":40,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":247,"com.graphhopper.coll.OSMIDMapTest.testGetLong":170,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":246,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":395,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":426,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":113,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":293,"com.graphhopper.coll.CompressedArrayTest.testCompress2":75,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":353,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":464,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":309,"com.graphhopper.GraphHopperAPITest.testLoad":226,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":475,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":276,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":183,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":65,"com.graphhopper.storage.LevelGraphStorageTest.testClone":116,"com.graphhopper.reader.OSMReaderTest.testBarriers":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":194,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":330,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":17,"com.graphhopper.util.GHUtilityTest.testCopy":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":249,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":30,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":369,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":132,"com.graphhopper.routing.PathTest.testFindInstruction":155,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":195,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":326,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":273,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":432,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":452,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":190,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":201,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":433,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":393,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":421,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":423,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":403,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":482,"com.graphhopper.util.InstructionListTest.testWayList2":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":7,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":191,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":458,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":89,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":152,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":269,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":136,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":281,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":12,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":248,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":57,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":166,"com.graphhopper.coll.OSMIDMapTest.testGet":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":197,"com.graphhopper.routing.PathBidirRefTest.testExtract":230,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":117,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":460,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":26,"com.graphhopper.storage.RAMDataAccessTest.testCopy":125,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":401,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":289,"com.graphhopper.storage.RAMDataAccessTest.testSegments":131,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":471,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":11,"com.graphhopper.util.GHUtilityTest.testSort2":434,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":252,"com.graphhopper.reader.OSMReaderTest.testMain":54,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":114,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":283,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":83,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":27,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":221,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":387,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":315,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":31,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":271,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":225,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":159,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":450,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":474,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":220,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":173,"com.graphhopper.storage.StorablePropertiesTest.testStore":98,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":124,"com.graphhopper.storage.GraphHopperStorageTest.testClone":91,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":413,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":303,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":261,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":350,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":265,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":404,"com.graphhopper.routing.PathTest.testTime":440,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":467,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":120,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":217,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":372,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":408,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":429,"com.graphhopper.reader.OSMReaderTest.testRelation":469,"com.graphhopper.util.GHUtilityTest.testSortDirected":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":456,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":144,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":158,"com.graphhopper.GraphHopperTest.testFootOnly":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":333,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":13,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":260,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":146,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":381,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":445,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":209,"com.graphhopper.search.NameIndexTest.testCreate":87,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":130,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":156,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":478,"com.graphhopper.routing.QueryGraphTest.testOneWay":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":364,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":80,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":335,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":1,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":77,"com.graphhopper.reader.OSMReaderTest.testWithBounds":63,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":133,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":123,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":35,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":410,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":299,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":215,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":422,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":297,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":339,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":397,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":193,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":198,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":90,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":264,"com.graphhopper.util.InstructionListTest.testWayList":149,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":296,"com.graphhopper.GraphHopperAPITest.testDisconnected179":227,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":311,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":398,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":402,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":454,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":259,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":288,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":214,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":46,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":348,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":322,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":188,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":446,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":355,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":263,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":444,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":465,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":388,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":427,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":384,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":477,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":344,"com.graphhopper.routing.PathTest.testWayList":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":286,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":318,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":179,"com.graphhopper.coll.OSMIDMapTest.testGet2":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":257,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":141,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":223,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":396,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":352,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":391,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":219,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":383,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":126,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":145,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":470,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":327,"com.graphhopper.util.GHUtilityTest.testSort":435,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":412,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":181,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":462,"com.graphhopper.search.NameIndexTest.testPut":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":203,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":347,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":368,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":380,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":16,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":375,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":480,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":67,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":161,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":153,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":373,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":386,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":394,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":232,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":481,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":111,"com.graphhopper.routing.PathTest.testFound":439,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":52,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":69,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":224,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":66,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":419,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":461,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":282,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":332,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":86,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":312,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":122,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":185,"com.graphhopper.util.InstructionListTest.testEmptyList":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":38,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":39,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":321,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":317,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":338,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":253,"com.graphhopper.reader.PrinctonReaderTest.testRead":258,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":95,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":22,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":308,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":78,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":310,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":199,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":453,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":451,"com.graphhopper.reader.OSMReaderTest.testFoot":53,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":165,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":211,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":82,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":362,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":298,"com.graphhopper.reader.OSMReaderTest.testOneWay":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":363,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":277,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":279,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":399,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":336,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":143,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":354,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":210,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":237,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":241,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":235,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":376,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":438,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":405,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":441,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":305,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":345,"com.graphhopper.routing.PathBidirRefTest.testExtract2":231,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":479,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":243,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":8,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":192,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":449,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":84,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":93,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":377,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":343,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":417,"com.graphhopper.util.SimpleIntDequeTest.testPush":32,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":378,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":455,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":4,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":189,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":424,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":320,"com.graphhopper.GraphHopperTest.testFootAndCar":47,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":92,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":270,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":72,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":29,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":206,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":340,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":104,"com.graphhopper.GraphHopperTest.testPrepareOnly":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":254,"com.graphhopper.GraphHopperTest.testVia":44,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":205,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":61,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":314,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":151,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":356,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":316,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":407,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":304,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":431,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":294,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":101}}]
