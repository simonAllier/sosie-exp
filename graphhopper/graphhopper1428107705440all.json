[{"failures":[],"tindex":"7071e59c-da62-11e4-87f2-1d6d34a1c861","variableMapping":{"flags":"turnRestrictionBit","value":"restricted","forwardBit":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-2},{"failures":[],"tindex":"70720cad-da62-11e4-87f2-75a03f4f3d9b","variableMapping":{"com.graphhopper.routing.AlgorithmOptions.ASTAR":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:192","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AlgorithmOptions.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"70720cae-da62-11e4-87f2-dbd8cf84fc88","variableMapping":{"from":"segmentSizePower","lonSize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:300","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"70725acf-da62-11e4-87f2-a96b960d7bf4","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"70725ad0-da62-11e4-87f2-5be1e42ffe35","variableMapping":{"edgeCount":"speed","lastEdgeIndex":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":0},{"failures":[],"tindex":"70725ad1-da62-11e4-87f2-d3a10a3929dd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"70725ad2-da62-11e4-87f2-59fa4dbd4626","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"shift","id":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"70725ad3-da62-11e4-87f2-dfba52467c75","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[1,26,37,45,86,101,104,129,140,167,172,178,192,217,228,344,345,346,347,348,241,247,264,349,316,318,319,320,322,324,325,327,329,330,331,332,333,334,335,336,337,338,339,340],"tindex":"70725ad4-da62-11e4-87f2-4964d45398ce","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[350,351,352,353,334],"tindex":"70725ad5-da62-11e4-87f2-19ceff441f4b","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-1},{"failures":[],"tindex":"70725ad6-da62-11e4-87f2-f38a43129760","variableMapping":{"flags":"encoded","scDirMask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"707281e7-da62-11e4-87f2-7fde0a636a43","variableMapping":{"type":"com.graphhopper.storage.DAType.RAM_INT_STORE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[],"tindex":"707281e8-da62-11e4-87f2-bf23b66fc15c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[354,355],"tindex":"707281e9-da62-11e4-87f2-4753477fffea","variableMapping":{"size":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"707281ea-da62-11e4-87f2-1ffddd8b7eea","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"707281eb-da62-11e4-87f2-5930fc2c5b82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"707281ec-da62-11e4-87f2-1575c7364289","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"707281ed-da62-11e4-87f2-b7fa820c6a9b","variableMapping":{"val":"size","keys":"elem","values":"elem","i":"i","o":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:136","type":"CtIfImpl","sourcecode":"if (int != int) {\n    int[][int] = int[][int];\n    int[][int] = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"7072d00e-da62-11e4-87f2-b9e994817cd0","variableMapping":{"need":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"7072d00f-da62-11e4-87f2-8930b7bdcfa9","variableMapping":{"delta_lat":"maxLat","r_lat":"minLat","a_lat":"maxLat","delta_lon":"maxLat","r_lon":"maxLat","a_lon":"minLat","norm":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[356,357],"tindex":"7072d010-da62-11e4-87f2-0b405fffa370","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"7072d011-da62-11e4-87f2-c530515e591a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:630","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"call next before detaching\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[358],"tindex":"7072d012-da62-11e4-87f2-efd30943440a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,327,328,329,330,332,333,334,335,338,339,340],"tindex":"7072d013-da62-11e4-87f2-e5834a6de634","variableMapping":{"ghLocation":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-1},{"failures":[],"tindex":"7072d014-da62-11e4-87f2-ad1d15aa9d5e","variableMapping":{"maxMCSpeed":"resultOrientation","speed":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"7072d015-da62-11e4-87f2-49022f95f105","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"7072f726-da62-11e4-87f2-95ec81714745","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-2},{"failures":[381,361,362,382,383,369,370,384,385,374,386,377,378,387],"tindex":"7072f727-da62-11e4-87f2-338b6c86eaa2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[388,327],"tindex":"7072f728-da62-11e4-87f2-1faaa220ff43","variableMapping":{"endIndexPlusOne":"minutes","frontIndex":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"7072f729-da62-11e4-87f2-898fe1746176","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[81,306,309,318],"tindex":"7072f72a-da62-11e4-87f2-3550448a2cb6","variableMapping":{"length":"nodeA","factor":"nodeA"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[389],"tindex":"7072f72b-da62-11e4-87f2-79b4fff0e7d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[390,391,392,1,5,26,32,37,39,45,47,86,88,393,101,104,108,129,135,140,142,189,192,196,217,223,228,230,394,395,241,245,246,247,248,264,265,267,273,274,277,312,349,396,397,398,399,316,318,322,323,324,326,329,332,333],"tindex":"7072f72c-da62-11e4-87f2-035d5e6e04f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[],"tindex":"7072f72d-da62-11e4-87f2-45f033e74a45","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:155","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":0},{"failures":[],"tindex":"7072f72e-da62-11e4-87f2-c5c736685039","variableMapping":{"dist":"minLatTmp","com.graphhopper.util.DistanceCalcEarth.R":"maxLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"7072f72f-da62-11e4-87f2-df67a0ce26c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"70731d40-da62-11e4-87f2-17de42020b90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"70731d41-da62-11e4-87f2-0f66750de162","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit","ferries":"ferries","highwayValue":"highwayValue","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"70731d42-da62-11e4-87f2-3b794c4c6e1b","variableMapping":{"maxTurnCosts":"maxTurnCosts","costs":"costs","turnRestrictionBit":"turnRestrictionBit","restricted":"restricted"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":0},{"failures":[],"tindex":"70731d43-da62-11e4-87f2-237b21559a42","variableMapping":{"logger":"com.graphhopper.routing.util.AbstractFlagEncoder.logger","osmFile":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:637","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info((\"start creating graph from \" + (java.lang.String)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":-2},{"failures":[],"tindex":"70731d44-da62-11e4-87f2-67d24d91a0ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[],"tindex":"70731d45-da62-11e4-87f2-c7d5489219f4","variableMapping":{"java.lang.Double.MAX_VALUE":"shortTripsSpeed","existingDirectWeight":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-2},{"failures":[],"tindex":"70731d46-da62-11e4-87f2-89ab72ed9e8e","variableMapping":{"nodeThis":"size","nextEdgeOther":"size","nodeOther":"i","nextEdge":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":0},{"failures":[],"tindex":"70731d47-da62-11e4-87f2-a59590e6000a","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"70731d48-da62-11e4-87f2-29b5d79e84d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[253,257,258],"tindex":"70731d49-da62-11e4-87f2-8ba0f522d704","variableMapping":{"edgeId":"start","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"start","nodeA":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[325],"tindex":"70731d4a-da62-11e4-87f2-d16e6aae52fe","variableMapping":{"initLeafSize":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"70731d4b-da62-11e4-87f2-7946db9b7626","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[400,401],"tindex":"70731d4c-da62-11e4-87f2-75e4117c0c06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[402,403,404,405,406,407],"tindex":"7073445d-da62-11e4-87f2-514a1391886e","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[],"tindex":"7073445e-da62-11e4-87f2-47a06ecab8a9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[260,261,408,381,359,409,360,361,362,351,410,404,411,412,413,414,415,416,363,417,418,382,364,419,420,383,367,421,368,369,370,353,422,405,423,424,425,426,427,428,371,429,430,384,372],"tindex":"7073445f-da62-11e4-87f2-9bbc5f133a16","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[400],"tindex":"70734460-da62-11e4-87f2-e9fa5a704ee5","variableMapping":{"flags":"directionBitMask","scDirMask":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"70734461-da62-11e4-87f2-2b9934813399","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:127","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":0},{"failures":[43,49,51,52,431,84,90,92,93,432,433,434,435,436,354,437,438,439,355],"tindex":"70734462-da62-11e4-87f2-9765fe0642ba","variableMapping":{"flags":"hash","mask":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[361,362,366,369,370,374,377,378],"tindex":"70734463-da62-11e4-87f2-d5434851ddf3","variableMapping":{"fwdFaster":"speed","incDist2DSum":"speed","fwdSlower":"speed","fullDist2D":"speed","restDist2D":"speed","speed":"speed","decDist2DSum":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[13,16,59,66,80,100,116,119,154,157,204,207,440,403,441,400,442,401,443,419,444,366,406,407,315,321,327,328,329,331,334,335,336,337,338,340],"tindex":"70734464-da62-11e4-87f2-1db7122be4c5","variableMapping":{"segmentSizeInBytes":"encoderCount","indexDivisor":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"70734465-da62-11e4-87f2-9d4d39ad1e07","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[279,280,281,282,283,284,285,286,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,445,318,319,322,323],"tindex":"70734466-da62-11e4-87f2-479266a88490","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"70734467-da62-11e4-87f2-3b9ac246507e","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.PREFER","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.PREFER","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"70734468-da62-11e4-87f2-8f4843d3d22c","variableMapping":{"cap":"flags","bytes":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"70734469-da62-11e4-87f2-fd7c3ed94e8d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"7073446a-da62-11e4-87f2-91bf5aed3f86","variableMapping":{"bytePointer":"scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:80","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"70736b7b-da62-11e4-87f2-bdc7fabe51bc","variableMapping":{"neighborUpdates":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[],"tindex":"70736b7c-da62-11e4-87f2-b19491104394","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[388],"tindex":"70736b7d-da62-11e4-87f2-8d9b0d456d4b","variableMapping":{"ghLocation":"hourStr","osmFile":"hourStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[356,357],"tindex":"70736b7e-da62-11e4-87f2-11e19c76b154","variableMapping":{"pos":"i","mSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"70736b7f-da62-11e4-87f2-a9028a35d985","variableMapping":{"tmp":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"status":-2},{"failures":[],"tindex":"70736b80-da62-11e4-87f2-a54aa8d3e7c6","variableMapping":{"maxTurnCosts":"maxTurnCosts","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","turnRestrictionBit":"flags","flags":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[381,446,383,377,378],"tindex":"70736b81-da62-11e4-87f2-9d59054e1490","variableMapping":{"lat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"70736b82-da62-11e4-87f2-a7d45196a9ba","variableMapping":{"acceptBit":"oldRelationFlags","ferryBit":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"70736b83-da62-11e4-87f2-1d79ec930cb0","variableMapping":{"retBucket":"shift","bucketSize":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[447,321,328],"tindex":"70736b84-da62-11e4-87f2-09847f33204f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[418,430,448,449],"tindex":"70736b85-da62-11e4-87f2-0dc397931b47","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"70736b86-da62-11e4-87f2-918e0feb6ab2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"70736b87-da62-11e4-87f2-71582f1a2200","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"70736b88-da62-11e4-87f2-475aa0082516","variableMapping":{"high":"lastTime","guess":"lastTime","low":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[261],"tindex":"70736b89-da62-11e4-87f2-139878d96426","variableMapping":{"res":"flags","value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"70736b8a-da62-11e4-87f2-3b9d277d2b91","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[359,362,446,367,370,378,450],"tindex":"70736b8b-da62-11e4-87f2-65a64d8722fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-1},{"failures":[451],"tindex":"70736b8c-da62-11e4-87f2-5b0375d329ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:155","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    java.lang.Integer = java.lang.Integer;\n"},"status":-1},{"failures":[43,49,51,52,431,84,90,92,93,432,433,434,435,436,354,437,438,439,355],"tindex":"70736b8d-da62-11e4-87f2-0170f8c8a958","variableMapping":{"lastTime":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"7073929e-da62-11e4-87f2-7380384f8c62","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"7073929f-da62-11e4-87f2-29ab056f69de","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"707392a0-da62-11e4-87f2-71c13a69d9a1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-2},{"failures":[],"tindex":"707392a1-da62-11e4-87f2-b3f3ecaf0187","variableMapping":{"lastKey":"lastTime","key":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[447,452,366,321,325,328],"tindex":"707392a2-da62-11e4-87f2-dd3164c87858","variableMapping":{"high":"allowed","highKey":"allowed","key":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"707392a3-da62-11e4-87f2-538d7c41cf76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"707392a4-da62-11e4-87f2-773df828d0fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"707392a5-da62-11e4-87f2-3d6c5cf6de15","variableMapping":{"scDirMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[261],"tindex":"707392a6-da62-11e4-87f2-fdef9c0565b0","variableMapping":{"x1":"restDist2D","x2":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:159","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[],"tindex":"7073b9b7-da62-11e4-87f2-d36d64323243","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"7073b9b8-da62-11e4-87f2-01e1eb9bce28","variableMapping":{"shift":"nodeBitMask","tmpValue":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[255,256],"tindex":"7073b9b9-da62-11e4-87f2-65ecafd5aff6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[43,45,46,47,48,50,52,53,54,55,56,58,59,68,69,70,73,81,82,84,86,87,88,89,91,93,94,95,96,97,99,100,234,235,453,249,250,254,255,256,301,305,306,309,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,340],"tindex":"7073b9ba-da62-11e4-87f2-d5a7e9ed566a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[7,18,32,33,110,121,135,136,148,159,173,174,198,209,223,224,253,256],"tindex":"7073b9bb-da62-11e4-87f2-6b058aa26ad0","variableMapping":{"a":"mValues","high":"i","guess":"mSize","low":"i","key":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:378","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[278,280,286,287,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,311,312,313,314,315,318,319,322,325],"tindex":"7073b9bc-da62-11e4-87f2-9b9fdbd44b9e","variableMapping":{"this":"this","edgeState":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"7073b9bd-da62-11e4-87f2-0dde79910bc5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:366","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":0},{"failures":[186,188,280,286,290,291,293,294,297,302,304,309,312,313,315],"tindex":"7073b9be-da62-11e4-87f2-afa5aa7587fe","variableMapping":{"java.lang.Double.MAX_VALUE":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:91","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":222,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":310,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":189,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":147,"com.graphhopper.reader.OSMReaderTest.testFerry":327,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":237,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":238,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":369,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":87,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":317,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":363,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":118,"com.graphhopper.coll.CompressedArrayTest.testCompress":433,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":40,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":167,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":16,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":288,"com.graphhopper.GraphHopperTest.testPrepare":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":309,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":278,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":421,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":302,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":67,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":379,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":250,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":195,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":257,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":378,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":294,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":300,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":46,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":101,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":438,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":291,"com.graphhopper.GraphHopperTest.testLoadOSM":322,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":47,"com.graphhopper.reader.OSMReaderTest.testSort":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":429,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":255,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":105,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":35,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":1,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":180,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":273,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":139,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":221,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":12,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":102,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":113,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":108,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":91,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":20,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":306,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":89,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":297,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":296,"com.graphhopper.coll.OSMIDMapTest.testGetLong":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":122,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":128,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":213,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":192,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":215,"com.graphhopper.coll.CompressedArrayTest.testCompress2":432,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":385,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":119,"com.graphhopper.GraphHopperAPITest.testLoad":234,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":402,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":17,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":7,"com.graphhopper.storage.LevelGraphStorageTest.testClone":200,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":258,"com.graphhopper.reader.OSMReaderTest.testBarriers":331,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":151,"com.graphhopper.util.GHUtilityTest.testCopy":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":100,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":64,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":449,"com.graphhopper.routing.PathTest.testFindInstruction":265,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":110,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":236,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":452,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":229,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":61,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":409,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":36,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":137,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":123,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":415,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":444,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":202,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":152,"com.graphhopper.util.InstructionListTest.testWayList2":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":54,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":114,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":142,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":367,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":260,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":204,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":395,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":120,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":68,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":298,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":312,"com.graphhopper.coll.OSMIDMapTest.testGet":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":117,"com.graphhopper.routing.PathBidirRefTest.testExtract":251,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":389,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":217,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":397,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":173,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":405,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":59,"com.graphhopper.util.GHUtilityTest.testSort2":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":307,"com.graphhopper.reader.OSMReaderTest.testMain":329,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":193,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":424,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":439,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":96,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":430,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":220,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":177,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":207,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":211,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":232,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":208,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":381,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":214,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":339,"com.graphhopper.storage.StorablePropertiesTest.testStore":393,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":394,"com.graphhopper.storage.GraphHopperStorageTest.testClone":9,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":176,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":401,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":19,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":184,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":448,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":153,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":187,"com.graphhopper.routing.PathTest.testTime":263,"com.graphhopper.util.BitUtilLittleTest.testToFloat":347,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":230,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":201,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":166,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":219,"com.graphhopper.reader.OSMReaderTest.testRelation":450,"com.graphhopper.util.GHUtilityTest.testSortDirected":243,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":417,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":269,"com.graphhopper.GraphHopperTest.testFootOnly":325,"com.graphhopper.util.BitUtilLittleTest.testToInt":348,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":69,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":90,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":408,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":162,"com.graphhopper.search.NameIndexTest.testCreate":392,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":266,"com.graphhopper.routing.QueryGraphTest.testOneWay":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":57,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":436,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":45,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":434,"com.graphhopper.reader.OSMReaderTest.testWithBounds":338,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":344,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":254,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":168,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":446,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":197,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":194,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":416,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":380,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":131,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":80,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":124,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":5,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":293,"com.graphhopper.util.BitUtilLittleTest.testToBitString":346,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":38,"com.graphhopper.util.InstructionListTest.testWayList":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":422,"com.graphhopper.GraphHopperAPITest.testDisconnected179":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":154,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":413,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":343,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":428,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":320,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":11,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":289,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":420,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":287,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":107,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":372,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":0,"com.graphhopper.routing.PathTest.testWayList":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":158,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":400,"com.graphhopper.coll.OSMIDMapTest.testGet2":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":315,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":130,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":427,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":22,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":115,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":92,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":93,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":404,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":356,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":373,"com.graphhopper.util.GHUtilityTest.testSort":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":171,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":355,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":407,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":426,"com.graphhopper.search.NameIndexTest.testPut":390,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":144,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":63,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":85,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":73,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":76,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":361,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":272,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":103,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":313,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":253,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":172,"com.graphhopper.routing.PathTest.testFound":262,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":326,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":366,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":227,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":358,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":186,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":425,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":121,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":445,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":391,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":157,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":14,"com.graphhopper.util.InstructionListTest.testEmptyList":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":305,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":443,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":403,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":308,"com.graphhopper.reader.PrinctonReaderTest.testRead":342,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":37,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":88,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":156,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":399,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":146,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":411,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":359,"com.graphhopper.reader.OSMReaderTest.testFoot":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":170,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":51,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":231,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":437,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":52,"com.graphhopper.reader.OSMReaderTest.testOneWay":340,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":18,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":33,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":138,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":410,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":283,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":290,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":281,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":259,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":160,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":268,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":3,"com.graphhopper.routing.PathBidirRefTest.testExtract2":252,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":55,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":375,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":31,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":386,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":183,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":447,"com.graphhopper.util.SimpleIntDequeTest.testPush":453,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":48,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":34,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":203,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":26,"com.graphhopper.GraphHopperTest.testFootAndCar":321,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":209,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":374,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":150,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":419,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":350,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":311,"com.graphhopper.GraphHopperTest.testPrepareOnly":316,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":65,"com.graphhopper.GraphHopperTest.testVia":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":148,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":336,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":188,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":30,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":248,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":440,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":163,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":226,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":224,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":104}}]
