[{"failures":[],"tindex":"f218ab25-dac6-11e4-bd55-c92c9c1e7c35","variableMapping":{"high":"i","guess":"i","low":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"f218ab26-dac6-11e4-bd55-bd9cf550d5b5","variableMapping":{"lat":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":0},{"failures":[],"tindex":"f218ab27-dac6-11e4-bd55-1bce1bf4a43d","variableMapping":{"incEleSum":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","eleDelta":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","incDist2DSum":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","decEleSum":"weight","fullDist2D":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","decDist2DSum":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"f218ab28-dac6-11e4-bd55-277ce2a822e1","variableMapping":{"currentEntry":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":0},{"failures":[],"tindex":"f218d239-dac6-11e4-bd55-c70a31e106f5","variableMapping":{"edgeId":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"f218d23a-dac6-11e4-bd55-2d753ea8fe09","variableMapping":{"start":"a"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-1},{"failures":[107],"tindex":"f218d23b-dac6-11e4-bd55-4579bd688aed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"f218d23c-dac6-11e4-bd55-595281af021d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[1,108,109,110,111,112,37,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,41,43,130,44,131,132,133,134,51,53,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,70,72,91,96,101,152],"tindex":"f218d23d-dac6-11e4-bd55-01d37e8427ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[153,154,155,156,123],"tindex":"f218d23e-dac6-11e4-bd55-9978d06c9db6","variableMapping":{"high":"turnRestrictionBit","highKey":"turnRestrictionBit","key":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[0,157,1,158,159,160,161,162,163,164,111,112,165,2,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,153,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,154,229,230,231,232,233,234,235,236,237,238,239,240,241,155,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,107,275,276,156,277,278,279,280,281,282,3,4,283,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,284,113,285,286,287,288,289,290,114,291,292,115,293,294,295,296,116,297,298,117,299,118,119,120,121,122,123,124,300,125,126,127,128,301,129,302,303,304,41,305,42,43,130,306,44,307,45,131,46,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,133,335,134,336,337,338,339,340,341,342,343,344,345,346,347,47,48,348,49,50,51,52,53,54,55,56,57,58,59,60,61,62,349,63,64,135,350,351,136,352,353,354,355,137,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,138,376,377,378,379,380,139,381,382,383,384,140,385,386,387,388,389,390,141,391,392,393,394,142,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,143,415,416,417,418,419,144,420,421,422,423,145,424,425,426,427,428,146,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,147,449,450,451,452,148,149,453,454,455,456,150,457,458,459,460,461,65,462,66,67,68,463,464,69,70,465,466,71,467,72,73,74,75,76,77,78,79,80,81,468,469,82,83,84,85,86,87,88,89,90,91,92,93,94,470,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"f218f94f-dac6-11e4-bd55-65801e5b6ee3","variableMapping":{"originalEdgesCount":"shift","edgeDifference":"shift","contractedNeighbors":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"f218f950-dac6-11e4-bd55-31cbcfe67716","variableMapping":{"highwayValue":"res"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":0},{"failures":[154,123],"tindex":"f218f951-dac6-11e4-bd55-d1bb532f18fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-1},{"failures":[],"tindex":"f218f952-dac6-11e4-bd55-6b0da47a6e46","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"f218f953-dac6-11e4-bd55-8d768ca8aa32","variableMapping":{"bb":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:281","type":"CtTryImpl","sourcecode":"try {\n    ((java.nio.MappedByteBuffer)(java.nio.ByteBuffer)).isLoaded();\n    return true;\n} catch (java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[264],"tindex":"f218f954-dac6-11e4-bd55-bb7ba8862221","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[11,15,471,472,473,474,475],"tindex":"f218f955-dac6-11e4-bd55-fbf3f647f67d","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"f218f956-dac6-11e4-bd55-59ed1603bad0","variableMapping":{"i":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"f218f957-dac6-11e4-bd55-83eab7d84291","variableMapping":{"edgePointer":"nodeBitMask","edgeEntryBytes":"shift","nextEdge":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:797","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"f218f958-dac6-11e4-bd55-d9c79c40dd47","variableMapping":{"latSize":"start","size":"start","lonSize":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,153,192,193,194,195,196,197,198,199,200,201,202,203,204,207,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,154,229,230,232,233,234,235,236,237,238,239,240,241,155,242,243,244,245,246,247,248,249,250,251,252,253,254,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,107,275,276,156,277,278,17,27,296,117,299,118,119,120,121,122,123,124,300,125,126,127,128,129,66],"tindex":"f2192069-dac6-11e4-bd55-f3eed061ddc6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":-1},{"failures":[],"tindex":"f219206a-dac6-11e4-bd55-1f1ca8cc3b8f","variableMapping":{"values":"mValues","index":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:325","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return int[][int];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[107],"tindex":"f219206b-dac6-11e4-bd55-33f9c4773ba5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[161,162,476,477,206,207,208],"tindex":"f219206c-dac6-11e4-bd55-bf5947035b48","variableMapping":{"initLeafSize":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[1,164,111,112,166,167,205,206,207,208,209,280,281,5,6,7,8,9,11,13,15,16,17,19,20,21,22,23,24,25,26,27,31,32,33,34,36,37,38,39,40,287,302,303,310,311,319,332,347,64,135,136,356,357,359,360,364,371,373,378,380,382,384,388,141,395,396,398,399,403,410,412,417,419,421,423,427,429,430,432,433,437,444,446,451,148,454,456,460,70,73,74,76,77,81,86,88,94,95,98,100,105],"tindex":"f219206d-dac6-11e4-bd55-659395206ba9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[],"tindex":"f219206e-dac6-11e4-bd55-25e25c3414a8","variableMapping":{"y1":"del","y2":"del","x1":"unvisitedDeadEnds","x2":"del"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":-2},{"failures":[17,18,27,29,40],"tindex":"f219206f-dac6-11e4-bd55-fb0afbbf8b5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"f2192070-dac6-11e4-bd55-e537b5b28cf2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[234],"tindex":"f2192071-dac6-11e4-bd55-f1b4a49e7fab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[],"tindex":"f2192072-dac6-11e4-bd55-c1a1b4d116de","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,153,192,193,194,195,196,197,198,199,200,201,202,203,204,207,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,154,229,230,232,233,234,235,236,237,238,239,240,241,155,242,243,244,245,246,247,248,249,250,251,252,253,254,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,107,275,276,156,277,278,17,27,296,117,299,118,119,120,121,122,123,124,300,125,126,127,128,129,66],"tindex":"f2192073-dac6-11e4-bd55-1b8502d2eca6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:623","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[],"tindex":"f2192074-dac6-11e4-bd55-bf00725e1fe7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"f2194685-dac6-11e4-bd55-9399447c54c0","variableMapping":{"type":"defaultType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":0},{"failures":[],"tindex":"f21a7f06-dac6-11e4-bd55-d9e40eb2e705","variableMapping":{"keyIndex":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"f21a7f07-dac6-11e4-bd55-b9b82743dbd6","variableMapping":{"size":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[478,479,480,333,337,339,340,49,55,57,58,481,482,483,484,485,486,487,488,489],"tindex":"f21a7f08-dac6-11e4-bd55-4f0c97304846","variableMapping":{"ret":"i","retBucket":"allBits","i":"allBits","storedKey":"hash","bucketSize":"i","key":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:120","type":"CtIfImpl","sourcecode":"if (long == long) {\n    int = (int * (int)) + int;\n    break;\n} else if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[478,479,480,333,337,339,340,49,55,57,58,481,482,483,484,485,486,487,488,489],"tindex":"f21a7f09-dac6-11e4-bd55-c7e7f39633d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"f21a7f0a-dac6-11e4-bd55-7bd729d88cd2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"f21a7f0b-dac6-11e4-bd55-b7a6da7d1755","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-2},{"failures":[165,168,490,491,170,172,181,184,186,190,191,201,212,214,223,232,234,236,240,241,251,255,258,260,261,263,265,268,271,273,274,278,17,18,27,29,30,40,296,116,117,128,42,43,130,306,44,131,46,310,366,405,439,469],"tindex":"f21a7f0c-dac6-11e4-bd55-958fb23fcc69","variableMapping":{"i":"tmpValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[478,479,481,482,484,492,485,486,489],"tindex":"f21a7f0d-dac6-11e4-bd55-7b05b70a5199","variableMapping":{"factor":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[265,17,27,28,31,40,135,136,356,357,364,371,378,382,388,141,395,396,403,410,417,421,427,429,430,437,444,451,454,460,70,73,74,81,86,94,98,105],"tindex":"f21aa61e-dac6-11e4-bd55-0d55d1ef571c","variableMapping":{"len":"flags","start":"defaultValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-1},{"failures":[],"tindex":"f21aa61f-dac6-11e4-bd55-cfe8fc8a9bfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:514","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, int, boolean);\n}"},"status":-2},{"failures":[],"tindex":"f21aa620-dac6-11e4-bd55-215ef0a7f440","variableMapping":{"directionBitMask":"nodeBitMask","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"f21aa621-dac6-11e4-bd55-53c91317f8eb","variableMapping":{"distance":"bwFaster","dist":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[],"tindex":"f21aa622-dac6-11e4-bd55-b536db8ef20f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"f21aa623-dac6-11e4-bd55-3decaa42de7d","variableMapping":{"size":"minOnewayNetworkSize","capacity":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":0},{"failures":[493],"tindex":"f21acd34-dac6-11e4-bd55-9f9064265d18","variableMapping":{"i":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"f21acd35-dac6-11e4-bd55-3d7e9cc9d3ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"f21acd36-dac6-11e4-bd55-c7c4bdd07d30","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"f21acd37-dac6-11e4-bd55-1ba836275972","variableMapping":{"encoded":"capacity","backwardBit":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":0},{"failures":[234],"tindex":"f21acd38-dac6-11e4-bd55-ab88a653c847","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"f21acd39-dac6-11e4-bd55-3b6fe56ea74e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[41,308],"tindex":"f21af44a-dac6-11e4-bd55-9ffd7e4977d3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:255","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[170,172,183,187,190,191,204,214,226,228,230,237,240,241,254],"tindex":"f21af44b-dac6-11e4-bd55-914f9ed9f5d1","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR":"speed","weight":"speed","weightLong":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"f21af44c-dac6-11e4-bd55-3beb6feb27e0","variableMapping":{"finishedTo":"integ","finishedFrom":"integ"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"f21af44d-dac6-11e4-bd55-5f2cf4ceef97","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","nextEdge":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-2},{"failures":[],"tindex":"f21af44e-dac6-11e4-bd55-bd2727022ed4","variableMapping":{"locs":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":0},{"failures":[],"tindex":"f21af44f-dac6-11e4-bd55-89c231781684","variableMapping":{"type":"com.graphhopper.storage.DAType.RAM_INT_STORE","defaultType":"com.graphhopper.storage.DAType.RAM_INT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[],"tindex":"f21af450-dac6-11e4-bd55-2179fa677eb9","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[271,117],"tindex":"f21af451-dac6-11e4-bd55-0ff8684463e6","variableMapping":{"logMessages":"durationInHours","logMessagesPercentage":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:158","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-1},{"failures":[],"tindex":"f21af452-dac6-11e4-bd55-e768740d05a8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"f21af453-dac6-11e4-bd55-d5c59e6f3c0e","variableMapping":{"encoded":"nanoTime","backwardBit":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[],"tindex":"f21af454-dac6-11e4-bd55-c99f621d1813","variableMapping":{"resultOrientation":"fwdSlower","orientation":"fwdSlower","java.lang.Math.PI":"fwdSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"f21af455-dac6-11e4-bd55-9b1315a80248","variableMapping":{"visitedCountFrom":"index","visitedCountTo":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-2},{"failures":[],"tindex":"f21af456-dac6-11e4-bd55-b76cc2856e4e","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"f21af457-dac6-11e4-bd55-ad0392bafbb2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"f21af458-dac6-11e4-bd55-29024bdfa641","variableMapping":{"strLen":"i","bLen":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":0},{"failures":[5,11,13,15,16,18,22,23,27,31,36,38,40,65,66],"tindex":"f21af459-dac6-11e4-bd55-d33cc0ed013c","variableMapping":{"len":"scDirMask","start":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[],"tindex":"f21af45a-dac6-11e4-bd55-f597b09d329e","variableMapping":{"edgeId":"minNetworkSize","nextEdge":"minNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[182,190,192,202,211,224,240,242,252,260,263,264,270,271,107,299,122,123,41,306,46],"tindex":"f21af45b-dac6-11e4-bd55-df3e39e6d061","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[165,168,170,172,173,177,180,181,182,183,184,186,187,188,189,190,191,192,196,197,200,201,202,203,204,211,212,213,214,218,219,222,223,224,225,226,228,232,236,237,238,239,240,241,242,246,247,250,251,252,253,254,260,263,264,267,268,269,270,271,273,274,107,117,299,118,119,120,121,122,123,124,300,125,126,127,128,301,129,41,305,42,43,130,306,44,45,131,46,308],"tindex":"f21b1b6c-dac6-11e4-bd55-19034d5b75b8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-1},{"failures":[],"tindex":"f21b1b6d-dac6-11e4-bd55-5fd46b409851","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"f21b1b6e-dac6-11e4-bd55-5749a4620f97","variableMapping":{"numTiles":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[494,495,496,111,112,165,497,116,297],"tindex":"f21b1b6f-dac6-11e4-bd55-a9de7318e993","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"y","speed":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"f21b1b70-dac6-11e4-bd55-196ccce8deea","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[498],"tindex":"f21b1b71-dac6-11e4-bd55-f554c2c0a731","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[],"tindex":"f21b1b72-dac6-11e4-bd55-9b60afd41836","variableMapping":{"factor":"dist","value":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[],"tindex":"f21b1b73-dac6-11e4-bd55-29ef12fb326c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"f21b1b74-dac6-11e4-bd55-09cd1ba85bd7","variableMapping":{"flags2":"flags","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"turnRestrictionBit","flags1":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":0},{"failures":[],"tindex":"f21b1b75-dac6-11e4-bd55-ebe10e9435a5","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"f21b1b76-dac6-11e4-bd55-b33a282d224c","variableMapping":{"slice":"maxSpeed","azimuth":"maxSpeed","cp":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:114","type":"CtIfImpl","sourcecode":"if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"f21b1b77-dac6-11e4-bd55-913452389a3e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[357,365,368,139,381,140,389,396,404,407,144,420,428,464,74,468,83,96,97,101,106],"tindex":"f21b1b78-dac6-11e4-bd55-6dcebf065295","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[205,207,208,129,357,365,367,368,370,374,375,139,381,396,404,406,407,409,413,414,144,420,430,438,440,441,443,447,448,149,453,464,74,468,82,83,85,89,90,96,97],"tindex":"f21b1b79-dac6-11e4-bd55-e56fcc677b33","variableMapping":{"entries":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"f21b1b7a-dac6-11e4-bd55-8db0051be047","variableMapping":{"flags":"nodeBitMask","mask":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[472,474],"tindex":"f21b1b7b-dac6-11e4-bd55-6df30862d662","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"f21b1b7c-dac6-11e4-bd55-fb4eef6c09f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"f21b428d-dac6-11e4-bd55-557cc3f89178","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"f21b428e-dac6-11e4-bd55-7f8eb6ed07aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[170,172,190,191,214,240,241],"tindex":"f21b428f-dac6-11e4-bd55-097a51125616","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"f21b4290-dac6-11e4-bd55-9fcdca202a7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[205,209,210],"tindex":"f21b4291-dac6-11e4-bd55-fdd50c9daeba","variableMapping":{"values":"nodeLowLink","n":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:321","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int[][int] = -1;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[357,365,368,139,381,140,389,396,404,407,144,420,428,464,74,468,83,96,97,101,106],"tindex":"f21b4292-dac6-11e4-bd55-e7b79541c4d8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[499],"tindex":"f21b4293-dac6-11e4-bd55-8b4af00f086d","variableMapping":{"str":"str","latInt":"knotInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:284","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int < 10 ? \"_0\" : \"_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[165,269,107,299,118,120,123,124,125,126,127,129,42,43,130,306,44,131],"tindex":"f21b4294-dac6-11e4-bd55-79c6b562fdd6","variableMapping":{"value":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,500],"tindex":"f21b4295-dac6-11e4-bd55-0dd4ff665fd8","variableMapping":{"segmentSizeInBytes":"toSize","index":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-1},{"failures":[165,168,190,240,268,273,274,128,42],"tindex":"f21b4296-dac6-11e4-bd55-2bb3ae85548d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"f21b4297-dac6-11e4-bd55-f59fb0ff3c9c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[],"tindex":"f21b4298-dac6-11e4-bd55-13be0bca626d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":35,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":113,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":168,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":463,"com.graphhopper.GraphHopperAPITest.testNoLoad":312,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":429,"com.graphhopper.reader.OSMReaderTest.testFerry":117,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":166,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":167,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":190,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":173,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":52,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":305,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":497,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":250,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":365,"com.graphhopper.coll.CompressedArrayTest.testCompress":479,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":179,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":426,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":7,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":147,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":405,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":348,"com.graphhopper.util.AngleCalcTest.testOrientation":494,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":13,"com.graphhopper.GraphHopperTest.testPrepare":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":457,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":3,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":412,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":475,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":27,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":164,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":180,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":162,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":71,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":49,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":209,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":172,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":25,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":404,"com.graphhopper.coll.BitSetImplTest.testCopy":498,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":335,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":387,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":191,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":135,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":487,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":72,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":473,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":16,"com.graphhopper.GraphHopperTest.testLoadOSM":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":134,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":231,"com.graphhopper.reader.OSMReaderTest.testSort":119,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":201,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":126,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":352,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":422,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":141,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":485,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":458,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":290,"com.graphhopper.routing.DijkstraTest.initializationError":279,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":384,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":470,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":401,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":462,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":350,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":360,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":491,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":137,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":468,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":223,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":56,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":409,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":31,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":48,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":54,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":21,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":74,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":375,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":87,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":70,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":89,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":496,"com.graphhopper.coll.CompressedArrayTest.testCompress2":478,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":414,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":212,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":366,"com.graphhopper.GraphHopperAPITest.testLoad":310,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":467,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":257,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":406,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":396,"com.graphhopper.storage.LevelGraphStorageTest.testClone":76,"com.graphhopper.reader.OSMReaderTest.testBarriers":120,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":356,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":47,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":155,"com.graphhopper.util.GHUtilityTest.testCopy":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":64,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":220,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":182,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":330,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":176,"com.graphhopper.routing.PathTest.testFindInstruction":297,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":357,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":471,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":2,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":263,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":238,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":327,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":423,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":410,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":382,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":9,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":248,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":229,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":282,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":78,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":434,"com.graphhopper.util.InstructionListTest.testWayList2":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":454,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":342,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":427,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":361,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":187,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":233,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":391,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":367,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":23,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":395,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":121,"com.graphhopper.routing.AStarTest.initializationError":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":37,"com.graphhopper.coll.OSMIDMapTest.testGet":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":364,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":264,"com.graphhopper.routing.PathBidirRefTest.testExtract":280,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":91,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":194,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":149,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":170,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":193,"com.graphhopper.util.GHUtilityTest.testSort2":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":32,"com.graphhopper.reader.OSMReaderTest.testMain":118,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":465,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":374,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":488,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":202,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":456,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":469,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":85,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":476,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":105,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":82,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":287,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":378,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":236,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":88,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":128,"com.graphhopper.storage.GraphHopperStorageTest.testClone":398,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":455,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":107,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":273,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":408,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":65,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":224,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":435,"com.graphhopper.routing.PathTest.testTime":296,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":219,"com.graphhopper.util.BitUtilLittleTest.testToFloat":109,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":103,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":278,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":344,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":93,"com.graphhopper.reader.OSMReaderTest.testRelation":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":448,"com.graphhopper.util.GHUtilityTest.testSortDirected":160,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":251,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":286,"com.graphhopper.GraphHopperTest.testFootOnly":46,"com.graphhopper.util.BitUtilLittleTest.testToInt":110,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":171,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":271,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":321,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":55,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":444,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":284,"com.graphhopper.routing.QueryGraphTest.testOneWay":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":345,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":484,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":133,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":481,"com.graphhopper.reader.OSMReaderTest.testWithBounds":127,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":252,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":206,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":441,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":449,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":228,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":73,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":466,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":249,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":183,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":377,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":272,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":371,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":142,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":18,"com.graphhopper.util.BitUtilLittleTest.testToBitString":108,"com.graphhopper.util.InstructionListTest.testWayList":111,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":424,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":192,"com.graphhopper.GraphHopperAPITest.testDisconnected179":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":436,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":492,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":379,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":431,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":246,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":303,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":460,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":130,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":400,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":185,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":417,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":416,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":29,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":12,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":101,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":275,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":216,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":200,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":39,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":394,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":204,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":390,"com.graphhopper.routing.PathTest.testWayList":116,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":459,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":440,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":499,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":40,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":376,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":198,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":411,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":362,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":399,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":57,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":58,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":151,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":59,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":243,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":472,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":213,"com.graphhopper.util.GHUtilityTest.testSort":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":452,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":490,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":489,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":388,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":397,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":50,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":329,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":325,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":240,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":289,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":234,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":313,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":351,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":215,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":256,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":372,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":205,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":148,"com.graphhopper.routing.PathTest.testFound":295,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":232,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":308,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":100,"com.graphhopper.util.AngleCalcTest.testAtan2":495,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":196,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":368,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":500,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":439,"com.graphhopper.util.InstructionListTest.testEmptyList":163,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":403,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":277,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":267,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":181,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":266,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":413,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":33,"com.graphhopper.reader.PrinctonReaderTest.testRead":302,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":145,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":53,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":438,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":146,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":75,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":178,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":373,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":154,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":218,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":237,"com.graphhopper.reader.OSMReaderTest.testFoot":299,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":451,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":339,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":486,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":169,"com.graphhopper.reader.OSMReaderTest.testOneWay":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":340,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":407,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":420,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":383,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":177,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":242,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":446,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":8,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":480,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":15,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":274,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":6,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":316,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":259,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":442,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":285,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":301,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":392,"com.graphhopper.routing.PathBidirRefTest.testExtract2":281,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":493,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":17,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":222,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":343,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":419,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":317,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":225,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":123,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":461,"com.graphhopper.util.SimpleIntDequeTest.testPush":477,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":336,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":421,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":159,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":276,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":143,"com.graphhopper.GraphHopperTest.testFootAndCar":306,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":83,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":214,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":63,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":432,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":36,"com.graphhopper.GraphHopperTest.testPrepareOnly":41,"com.graphhopper.GraphHopperTest.testVia":42,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":331,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":430,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":125,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":68,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":165,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":418,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":261,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":124,"com.graphhopper.routing.AStarBidirectionTest.initializationError":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":445,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":184,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":99,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":97,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":136}}]
