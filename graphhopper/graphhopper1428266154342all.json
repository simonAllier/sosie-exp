[{"failures":[],"tindex":"5e1febac-dbd3-11e4-87f7-89823aa90de1","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","bikeTag":"highwayValue","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"5e214b3d-dbd3-11e4-87f7-25a100f9a285","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"5e214b3e-dbd3-11e4-87f7-0962058e1a54","variableMapping":{"high":"roundaboutBit","len":"flags","start":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"5e214b3f-dbd3-11e4-87f7-ff05e283b52e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[0,1,2],"tindex":"5e214b40-dbd3-11e4-87f7-d96ccf95d2ff","variableMapping":{"counter":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"5e214b41-dbd3-11e4-87f7-2ffd4a87f8fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11],"tindex":"5e214b42-dbd3-11e4-87f7-cf4d9f2e2fa2","variableMapping":{"clonedG":"graph","edgeEntryBytes":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1070","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.int) != (int))\n    throw new java.lang.IllegalStateException(((((\"edgeEntryBytes cannot be different for cloned graph. \" + \"Cloned: \") + (com.graphhopper.storage.GraphHopperStorage.int)) + \" vs \") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"5e214b43-dbd3-11e4-87f7-c544de3dfb3f","variableMapping":{"tt":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"5e214b44-dbd3-11e4-87f7-296ea526bd16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"5e214b45-dbd3-11e4-87f7-279359fb4556","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-2},{"failures":[],"tindex":"5e214b46-dbd3-11e4-87f7-b9bddd5c463d","variableMapping":{"i":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-2},{"failures":[],"tindex":"5e214b47-dbd3-11e4-87f7-b75987cf3a19","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"5e214b48-dbd3-11e4-87f7-0905d03b0190","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[40,41,42,43,44,45,46,17,18,19,20],"tindex":"5e217259-dbd3-11e4-87f7-250608e0b409","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"5e21725a-dbd3-11e4-87f7-855744930fae","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-2},{"failures":[47,48,49,50,51,52,53,54,55,41,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,42,94,43,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,0,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,1,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,2,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,45,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,46,13,14,15,16,17,18,19,230,20,231,232,233,234,21,22,23,24,235,25,26,27,28,29,30,31,33,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,3,263,264,4,5,265,266,267,268,269,270,271,272,273,274,6,275,7,276,8,277,278,9,279,280,281,282,283,284,285,10,11,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303],"tindex":"5e21725b-dbd3-11e4-87f7-d9d298c540c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"5e21725c-dbd3-11e4-87f7-2f20fb4a9f9a","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[304],"tindex":"5e21725d-dbd3-11e4-87f7-2f054afc3dee","variableMapping":{"flags":"encoded","scDirMask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"5e21725e-dbd3-11e4-87f7-a5e1e39d5f85","variableMapping":{"maxSpeed":"ele"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"5e21725f-dbd3-11e4-87f7-3b4de6c62b4c","variableMapping":{"calcMean":"finishedTo","eleCalcMean":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:75","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[305,306,307,308],"tindex":"5e217260-dbd3-11e4-87f7-130a290a3013","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"5e217261-dbd3-11e4-87f7-27cc7664b859","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[],"tindex":"5e217262-dbd3-11e4-87f7-1536be514bfb","variableMapping":{"scDirMask":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir","flags":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir","dir":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[309,310,311],"tindex":"5e219973-dbd3-11e4-87f7-d7b0883ad39a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[160,161,167,168,170,172,173,174,175,176,177,14,17,267,271,272,6],"tindex":"5e219974-dbd3-11e4-87f7-21d331fa675c","variableMapping":{"high":"nodeB","len":"nodeA","start":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"5e219975-dbd3-11e4-87f7-73282cf20212","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[312],"tindex":"5e219976-dbd3-11e4-87f7-dd3ef9d792e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"5e219977-dbd3-11e4-87f7-b10336396a90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"5e219978-dbd3-11e4-87f7-3dd877bdf1a0","variableMapping":{"conn":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:93","type":"CtInvocationImpl","sourcecode":"java.net.HttpURLConnection.setUseCaches(true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[],"tindex":"5e219979-dbd3-11e4-87f7-7bbbd7473508","variableMapping":{"len":"y2","i":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"5e220eaa-dbd3-11e4-87f7-fd7e0e617062","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[252,256,257],"tindex":"5e220eab-dbd3-11e4-87f7-8d52ef1e1354","variableMapping":{"segmentSizeInBytes":"index","index":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-1},{"failures":[],"tindex":"5e220eac-dbd3-11e4-87f7-67fb3c093f0e","variableMapping":{"red":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"5e220ead-dbd3-11e4-87f7-2f0c48e1b719","variableMapping":{"i":"lastEdgeIndex","lastIndex":"lastEdgeIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[13,14,17,230,261,262,3,263,264,4,5,265,266,267,268,270,271,272,273,274,6,7,276,8,277,278,9,280,10,11,289],"tindex":"5e2235be-dbd3-11e4-87f7-8d3db3e868f9","variableMapping":{"edge":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[261,262,276,8,278,289],"tindex":"5e2235bf-dbd3-11e4-87f7-dd23c64d3753","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[309,310,313,314,315,316,317],"tindex":"5e2235c0-dbd3-11e4-87f7-93607fee7e02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-1},{"failures":[],"tindex":"5e2235c1-dbd3-11e4-87f7-f5921d70fa5f","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"5e2235c2-dbd3-11e4-87f7-27eb3b8f111a","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"5e2235c3-dbd3-11e4-87f7-916ef3c7574c","variableMapping":{"hasOther":"edgeBased","hasRel":"edgeBased"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"5e2235c4-dbd3-11e4-87f7-61de5756944e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"5e2235c5-dbd3-11e4-87f7-3d5e5ebf32d6","variableMapping":{"need":"hash","i":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[305,306,307,308],"tindex":"5e2235c6-dbd3-11e4-87f7-2d9f6a938c45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"5e2235c7-dbd3-11e4-87f7-a7703dcd791e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[313],"tindex":"5e2235c8-dbd3-11e4-87f7-4b0fc1e34362","variableMapping":{"algo":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[16,230,21,318,312],"tindex":"5e2235c9-dbd3-11e4-87f7-83f2507d7a6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[261,262,276,8,278,289],"tindex":"5e2235ca-dbd3-11e4-87f7-5bc24b1cd29b","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"5e2235cb-dbd3-11e4-87f7-cf356db4b31e","variableMapping":{"cap":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[],"tindex":"5e2235cc-dbd3-11e4-87f7-97588468654e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[59,72,83,84,98,111,122,123,193,206,217,218,319,320,321,322,33,254,255],"tindex":"5e2235cd-dbd3-11e4-87f7-5ba465844570","variableMapping":{"bitsForEdgeFlags":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"5e225cde-dbd3-11e4-87f7-a1782b7f0342","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"5e225cdf-dbd3-11e4-87f7-754725e49543","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"5e225ce0-dbd3-11e4-87f7-85b160d2971f","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[145,151,1,323,163,169,2,324,325,326,327,328,329,330,331],"tindex":"5e225ce1-dbd3-11e4-87f7-0b29b0fe9894","variableMapping":{"r":"minLatTmp","x":"minLatTmp","absY":"minLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[305,306,307,308],"tindex":"5e225ce2-dbd3-11e4-87f7-7d1f779ec667","variableMapping":{"high":"acceptBit","len":"acceptBit","start":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[309,310,311,332,313,333,334,335,336,337,338,339,340,314,341,342,315,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,316,365,366,317,367,368,369,370,371,372,373,374],"tindex":"5e225ce3-dbd3-11e4-87f7-a725cce3bd49","variableMapping":{"lastTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[],"tindex":"5e225ce4-dbd3-11e4-87f7-6de894d2cb88","variableMapping":{"nextTowerId":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"5e225ce5-dbd3-11e4-87f7-4df89a20246f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[309],"tindex":"5e225ce6-dbd3-11e4-87f7-db5eb28085be","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"5e225ce7-dbd3-11e4-87f7-150a3ce5a31c","variableMapping":{"oldValueIndex":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[65,68,104,107,144,159,177,188,199,202,375,228,16,21,376,260,377,278],"tindex":"5e225ce8-dbd3-11e4-87f7-690b75a5faf2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-1},{"failures":[],"tindex":"5e225ce9-dbd3-11e4-87f7-4388ba2994f1","variableMapping":{"keyIndex":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[378],"tindex":"5e225cea-dbd3-11e4-87f7-7bfdcee3782c","variableMapping":{"ret":"minutes","retBucket":"minutes","i":"minutes","bucketSize":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[13,14,17,230,261,262,3,263,264,5,265,267,268,270,271,272,273,274,6,7,8,277,278,9,280,11,289],"tindex":"5e2283fb-dbd3-11e4-87f7-e10cd11b3dbc","variableMapping":{"resultOrientation":"dist","orientation":"dist","java.lang.Math.PI":"dist"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[47,48,41,58,59,61,62,66,73,75,81,82,85,87,92,42,43,97,98,100,101,105,112,114,120,121,124,126,131,144,159,177,188,45,192,193,195,196,200,207,209,215,216,219,221,226,379,319,380,381,382,383,384,385,229,386,387,388,232,233,240,248,249,252,253,254,255,256,261,3,263,264,4,5,265,266,267,268,272,273,274,6,7,276,8,277,278,280,281,282,283,284,10,286,288,289,293,294,295,297,298,301],"tindex":"5e2283fc-dbd3-11e4-87f7-d76276cff1ac","variableMapping":{"nameIndexRef":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"5e2283fd-dbd3-11e4-87f7-6de19f8c347d","variableMapping":{"from":"indexDivisor","lonSize":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:300","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[304],"tindex":"5e2283fe-dbd3-11e4-87f7-f9c092685813","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[389,390,391],"tindex":"5e2283ff-dbd3-11e4-87f7-19d1856f8f0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"5e228400-dbd3-11e4-87f7-6fb8aac31043","variableMapping":{"flags":"flags","scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[392,324,393,325,394,326,327,330,331],"tindex":"5e228401-dbd3-11e4-87f7-49cf091758e3","variableMapping":{"weightApproximation":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"5e228402-dbd3-11e4-87f7-cde317581790","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[35],"tindex":"5e228403-dbd3-11e4-87f7-3fd32df2eb1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[47,48,395,49,50,51,52,53,40,54,55,41,396,397,56,398,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,399,82,83,84,85,86,87,88,89,90,91,92,93,42,400,94,43,401,402,95,403,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,404,121,122,123,124,125,126,127,128,129,130,131,132,139,140,141,142,405,143,144,145,146,147,148,149,150,151,152,153,1,154,155,156,157,406,158,159,160,161,162,163,164,165,166,167,168,169,170,171,2,172,173,174,175,407,176,177,178,179,180,181,408,182,183,184,185,186,409,187,188,189,45,410,411,190,412,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,413,216,217,218,219,220,221,222,223,224,225,226,227,414,379,319,415,380,381,416,417,375,382,418,228,419,420,421,320,383,422,384,423,424,425,426,427,385,428,229,321,322,386,429,387,430,431,432,433,388,434,46,12,13,14,15,16,17,435,18,19,230,20,436,232,233,234,21,22,23,24,235,25,26,27,309,28,29,30,31,33,236,237,238,239,240,241,242,243,244,245,246,247,437,248,249,438,439,440,441,442,250,251,443,444,304,445,446,252,253,254,255,256,257,447,448,332,313,333,449,334,335,336,450,451,337,338,305,339,34,258,259,452,340,314,341,342,453,315,454,455,456,343,344,345,346,457,458,347,348,306,349,350,459,460,35,461,36,37,462,38,463,39,464,465,466,467,468,376,469,260,318,377,470,471,312,472,473,353,354,355,474,356,357,358,359,475,476,360,361,307,362,363,477,364,316,365,366,478,317,479,480,481,367,368,369,370,482,483,371,372,308,373,374,484,261,262,3,263,264,4,5,265,266,267,268,269,270,271,272,273,274,6,275,7,276,8,277,278,9,279,485,280,281,282,283,284,285,10,11,286,287,288,289,290,291,292,486,293,294,295,296,297,298,299,300,301,302,487,303],"tindex":"5e22ab14-dbd3-11e4-87f7-7d087b005a1b","variableMapping":{"versionHint":"com.graphhopper.routing.util.EncodingManager.BIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[],"tindex":"5e22ab15-dbd3-11e4-87f7-771ba89e2ff5","variableMapping":{"maxTurnCosts":"maxTurnCosts","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","cost":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"5e22ab16-dbd3-11e4-87f7-f3844abb61f1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"5e22ab17-dbd3-11e4-87f7-fd7a645425be","variableMapping":{"graphHopperFolder":"location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[],"tindex":"5e22ab18-dbd3-11e4-87f7-2b88eae22719","variableMapping":{"length":"removed","factor":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:229","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[153,1,171,2,324,393,325,326,327,328,329,330,331],"tindex":"5e22ab19-dbd3-11e4-87f7-db5a2b0f33e3","variableMapping":{"maxMCSpeed":"minLatTmp","speed":"minLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[47,49,53,41,57,58,59,61,62,65,66,68,73,75,81,82,85,87,88,92,42,43,96,97,98,100,101,104,105,107,112,114,120,121,124,126,127,131,45,191,192,193,195,196,199,200,202,207,209,215,216,219,221,222,226,414,379,319,380,381,375,382,228,383,384,385,229,386,387,430,388,46,12,13,14,15,16,17,18,19,230,232,233,21,22,24,26,27,28,29,30,33,240,243,248,249,442,250,251,488,252,253,255,256,259,461,462,39,465,467,260,377,261,262,3,263,264,4,5,265,266,267,268,269,270,271,272,273,274,6,275,7,276,8,277,278,9,279,280,281,282,283,284,10,11,286,287,288,289,292,293,294,295,296,297,298,301],"tindex":"5e22ab1a-dbd3-11e4-87f7-27882f458831","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"5e22ab1b-dbd3-11e4-87f7-b56120bfafc9","variableMapping":{"value":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[16,230,21,304,318,471],"tindex":"5e22ab1c-dbd3-11e4-87f7-0d8e0ebc99a7","variableMapping":{"scDirMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[305,306,307,308],"tindex":"5e22ab1d-dbd3-11e4-87f7-094a862e3f46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[378],"tindex":"5e22ab1e-dbd3-11e4-87f7-f3b5fb88c328","variableMapping":{"str":"minStr","kmInteger":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[35],"tindex":"5e22ab1f-dbd3-11e4-87f7-25361d3a0b78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[252,256,257],"tindex":"5e22ab20-dbd3-11e4-87f7-7d0f17225bc6","variableMapping":{"i":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[21,310,488,311,339,314,350,363,316,374],"tindex":"5e22ab21-dbd3-11e4-87f7-07dbf1e80551","variableMapping":{"i":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[259],"tindex":"5e22ab22-dbd3-11e4-87f7-1bd33a830d51","variableMapping":{"tmpDegreeCounter":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"5e22ab23-dbd3-11e4-87f7-ff15119bcdc8","variableMapping":{"angle":"maxEle","com.graphhopper.util.AngleCalc.PI3_4":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"5e22ab24-dbd3-11e4-87f7-fff5c843287b","variableMapping":{"flags":"acceptBit","scDirMask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11],"tindex":"5e240ab5-dbd3-11e4-87f7-458e7ca11c90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"5e240ab6-dbd3-11e4-87f7-953aa03b31cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[259],"tindex":"5e240ab7-dbd3-11e4-87f7-a905ec3e19a6","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","flags":"flags","this":"this","maxSpeed":"maxSpeed","speed":"speedReverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[489,490,491,492,493,40,41,57,78,83,88,90,42,43,96,117,122,127,129,147,149,165,167,494,45,191,212,217,222,224,495,496,497,498,499,46,13,17,18,19,20,22,235,25,237,243,244,247,250,251,276,293,294,295,296,301],"tindex":"5e240ab8-dbd3-11e4-87f7-915bfcd3ce99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"5e240ab9-dbd3-11e4-87f7-154bdcccfa67","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","highwayValue":"highwayValue","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:114","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[47,48,395,49,50,51,52,53,40,54,55,41,396,397,56,398,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,399,82,83,84,85,86,87,88,89,90,91,92,93,42,400,94,43,401,402,95,403,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,404,121,122,123,124,125,126,127,128,129,130,131,132,139,140,141,142,405,143,144,145,146,147,148,149,150,151,152,153,1,154,155,156,157,406,158,159,160,161,162,163,164,165,166,167,168,169,170,171,2,172,173,174,175,407,176,177,178,179,180,181,408,182,183,184,185,186,409,187,188,189,45,410,411,190,412,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,413,216,217,218,219,220,221,222,223,224,225,226,227,414,379,319,415,380,381,416,417,375,382,418,228,419,420,421,320,383,422,384,423,424,425,426,427,385,428,229,321,322,386,429,387,430,431,432,433,388,434,46,12,13,14,15,16,17,435,18,19,230,20,436,232,233,234,21,22,23,24,235,25,26,27,309,28,29,30,31,33,236,237,238,239,240,241,242,243,244,245,246,247,437,248,249,438,439,440,441,442,250,251,443,444,304,500,445,446,252,253,254,255,256,257,447,448,332,313,333,449,334,335,336,450,451,337,338,305,339,34,258,259,452,340,314,341,342,453,315,454,455,456,343,344,345,346,457,458,347,348,306,349,350,459,460,35,461,36,37,462,38,463,39,464,465,466,467,468,376,469,260,318,377,470,471,312,472,473,353,354,355,474,356,357,358,359,475,476,360,361,307,362,363,477,364,316,365,366,478,317,479,480,481,367,368,369,370,482,483,371,372,308,373,374,484,261,262,3,263,264,4,5,265,266,267,268,269,270,271,272,273,274,6,275,7,276,8,277,278,9,279,485,280,281,282,283,284,285,10,11,286,287,288,289,290,291,292,486,293,294,295,296,297,298,299,300,301,302,487,303],"tindex":"5e2458da-dbd3-11e4-87f7-e1aea284dba4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[337,347,360,371],"tindex":"5e2458db-dbd3-11e4-87f7-1b1308fd346f","variableMapping":{"str":"wayTypeName","name":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:82","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"5e2458dc-dbd3-11e4-87f7-8b8e644ba2c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,40,41,42,43,494,45,495,46,17,18,19,20],"tindex":"5e2458dd-dbd3-11e4-87f7-fd1594a35d86","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"5e2458de-dbd3-11e4-87f7-add6ba423b05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"5e2458df-dbd3-11e4-87f7-3303904a103e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":82,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":275,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":141,"com.graphhopper.GraphHopperAPITest.testNoLoad":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":379,"com.graphhopper.reader.OSMReaderTest.testFerry":234,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":297,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":478,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":333,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":166,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":12,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":347,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":106,"com.graphhopper.coll.CompressedArrayTest.testCompress":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":451,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":225,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":425,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":202,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":162,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":508,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":286,"com.graphhopper.GraphHopperTest.testPrepare":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":9,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":209,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":391,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":268,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":293,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":337,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":291,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":163,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":256,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":3,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":148,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":130,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":317,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":42,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":328,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":57,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":289,"com.graphhopper.GraphHopperTest.testLoadOSM":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":154,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":149,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":444,"com.graphhopper.reader.OSMReaderTest.testSort":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":372,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":401,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":509,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":220,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":45,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":432,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":243,"com.graphhopper.storage.RAMDataAccessTest.testHeader":503,"com.graphhopper.routing.DijkstraTest.initializationError":437,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":126,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":515,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":399,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":198,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":485,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":400,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":342,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":363,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":361,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":170,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":206,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":168,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":435,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":382,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":4,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":264,"com.graphhopper.coll.OSMIDMapTest.testGetLong":498,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":110,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":116,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":74,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":41,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":76,"com.graphhopper.coll.CompressedArrayTest.testCompress2":330,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":211,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":353,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":107,"com.graphhopper.GraphHopperAPITest.testLoad":47,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":398,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":134,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":376,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":203,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":193,"com.graphhopper.storage.LevelGraphStorageTest.testClone":61,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":378,"com.graphhopper.reader.OSMReaderTest.testBarriers":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":257,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":454,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":265,"com.graphhopper.util.GHUtilityTest.testCopy":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":177,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":475,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":305,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":405,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":506,"com.graphhopper.routing.PathTest.testFindInstruction":251,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":335,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":98,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":389,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":292,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":471,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":89,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":341,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":221,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":124,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":299,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":457,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":488,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":440,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":63,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":416,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":138,"com.graphhopper.util.InstructionListTest.testWayList2":295,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":386,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":155,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":226,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":366,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":129,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":316,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":445,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":258,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":410,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":65,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":493,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":479,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":108,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":5,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":192,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":235,"com.graphhopper.routing.AStarTest.initializationError":484,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":276,"com.graphhopper.coll.OSMIDMapTest.testGet":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":105,"com.graphhopper.routing.PathBidirRefTest.testExtract":248,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":312,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":367,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":497,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":321,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":448,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":481,"com.graphhopper.storage.RAMDataAccessTest.testSegments":505,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":159,"com.graphhopper.util.GHUtilityTest.testSort2":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":273,"com.graphhopper.reader.OSMReaderTest.testMain":22,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":396,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":368,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":329,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":308,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":35,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":402,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":68,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":72,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":92,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":352,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":69,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":240,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":120,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":133,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":340,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":75,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":31,"com.graphhopper.storage.StorablePropertiesTest.testStore":494,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":492,"com.graphhopper.storage.GraphHopperStorageTest.testClone":195,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":429,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":39,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":38,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":205,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":49,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":307,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":417,"com.graphhopper.routing.PathTest.testTime":442,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":359,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":90,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":468,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":408,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":157,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":80,"com.graphhopper.reader.OSMReaderTest.testRelation":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":424,"com.graphhopper.util.GHUtilityTest.testSortDirected":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":348,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":513,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":239,"com.graphhopper.GraphHopperTest.testFootOnly":230,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":332,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":37,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":179,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":169,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":452,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":383,"com.graphhopper.search.NameIndexTest.testCreate":491,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":504,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":236,"com.graphhopper.routing.QueryGraphTest.testOneWay":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":406,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":325,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":334,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":147,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":392,"com.graphhopper.reader.OSMReaderTest.testWithBounds":30,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":507,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":306,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":501,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":128,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":241,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":426,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":472,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":310,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":58,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":397,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":473,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":458,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":339,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":119,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":188,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":112,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":191,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":262,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":223,"com.graphhopper.util.InstructionListTest.testWayList":294,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":480,"com.graphhopper.GraphHopperAPITest.testDisconnected179":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":375,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":394,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":404,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":345,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":233,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":388,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":483,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":15,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":197,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":180,"com.graphhopper.routing.util.EncodedValueTest.testSwap":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":287,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":215,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":477,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":270,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":439,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":11,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":88,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":464,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":356,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":371,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":277,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":412,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":407,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":374,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":189,"com.graphhopper.routing.PathTest.testWayList":250,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":433,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":419,"com.graphhopper.coll.OSMIDMapTest.testGet2":496,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":278,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":510,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":482,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":208,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":103,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":196,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":73,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":171,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":2,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":502,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":514,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":456,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":354,"com.graphhopper.util.GHUtilityTest.testSort":302,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":428,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":370,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":449,"com.graphhopper.search.NameIndexTest.testPut":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":131,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":403,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":142,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":164,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":182,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":185,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":453,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":242,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":259,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":94,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":474,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":446,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":470,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":252,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":137,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":229,"com.graphhopper.routing.PathTest.testFound":441,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":20,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":304,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":87,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":500,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":51,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":369,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":109,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":490,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":228,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":200,"com.graphhopper.util.InstructionListTest.testEmptyList":486,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":267,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":476,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":271,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":467,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":460,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":459,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":274,"com.graphhopper.reader.PrinctonReaderTest.testRead":232,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":222,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":167,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":104,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":418,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":414,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":343,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":450,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":358,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":314,"com.graphhopper.reader.OSMReaderTest.testFoot":21,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":385,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":153,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":327,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":447,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":1,"com.graphhopper.reader.OSMReaderTest.testOneWay":33,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":204,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":218,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":125,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":336,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":512,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":455,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":384,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":283,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":323,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":288,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":463,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":281,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":511,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":260,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":421,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":238,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":32,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":411,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":136,"com.graphhopper.routing.PathBidirRefTest.testExtract2":249,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":261,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":156,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":360,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":216,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":409,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":362,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":26,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":434,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":150,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":219,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":487,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":64,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":465,"com.graphhopper.GraphHopperTest.testFootAndCar":16,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":212,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":70,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":355,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":380,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":443,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":466,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":7,"com.graphhopper.GraphHopperTest.testPrepareOnly":46,"com.graphhopper.GraphHopperTest.testVia":13,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":319,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":28,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":53,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":296,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":413,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":377,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":422,"com.graphhopper.routing.AStarBidirectionTest.initializationError":438,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":34,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":86,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":84,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":43}}]
