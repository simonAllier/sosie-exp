[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"80dcfc58-db75-11e4-95d7-557b605eac0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"80deaa09-db75-11e4-95d7-1f809ce19d54","variableMapping":{"values":"elem","index":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:325","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return int[][int];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50],"tindex":"80deaa0a-db75-11e4-95d7-6180a3807534","variableMapping":{"sacScale":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-1},{"failures":[],"tindex":"80deaa0b-db75-11e4-95d7-31de0cee92c3","variableMapping":{"defaultUTurnCost":"len","weight":"delta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":0},{"failures":[41,42,43,44,45,46,47,51,52,53,54,55,56,57,1,58,59,60,61,62,63,64,2,65,3,4,66,5,67,68,69,6,7,70,71,72,73,74,75,8,9,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,10,96,97,98,99,100,101,102,103,11,104,105,106,107,108,109,110,12,111,13,14,112,15,113,114,115,16,17,116,117,118,119,120,121,18,19,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,20,139,140,141,142,143,144,145,21,146,22,23,147,24,148,149,150,25,26,151,152,153,154,155,156,27,28,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,29,176,177,178,179,180,181,182,30,183,31,32,184,33,185,186,187,34,35,188,189,190,191,192,193,36,37,194,195,196,197,198,199,200,201,202,48,49,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,50,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352],"tindex":"80deaa0c-db75-11e4-95d7-d79f479b5c59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"80deaa0d-db75-11e4-95d7-ef6bcd9f7349","variableMapping":{"encoderList":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":0},{"failures":[],"tindex":"80ded11e-db75-11e4-95d7-b76b018bcd7a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"80ded11f-db75-11e4-95d7-05dae7795187","variableMapping":{"str":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:420","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[],"tindex":"80ded120-db75-11e4-95d7-4180b2c88de5","variableMapping":{"i":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":0},{"failures":[41,42,43,44,45,46,353,354,212,214,215,220,221,231,238,240,355,356,247,249,256,258,266,267,276,278,289,290,299,301,306],"tindex":"80ded121-db75-11e4-95d7-a339e6018b19","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":-1},{"failures":[90,332,338,340,346,350],"tindex":"80ded122-db75-11e4-95d7-8777a33c50f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[230,231,239,249,257,265,277,288,300],"tindex":"80ded123-db75-11e4-95d7-372aa3a97a08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"80ded124-db75-11e4-95d7-4134bbf11f36","variableMapping":{"foundIndex":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[230,231,239,249,257,265,267,277,288,290,300],"tindex":"80ded125-db75-11e4-95d7-e3dff2ca389f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[],"tindex":"80ded126-db75-11e4-95d7-7b3f9402f6c5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"80ded127-db75-11e4-95d7-538b5929dbce","variableMapping":{"index":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-2},{"failures":[313,323],"tindex":"80ded128-db75-11e4-95d7-b38eecd38c1f","variableMapping":{"i":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[41,42,43,45,46,47,357,358,359,360,361,362,363,364,365,366,367,353,0,368,369,370,371,372,373,374,375,376,377,378,354,379,380,381,56,57,1,58,59,60,61,62,63,64,3,4,5,67,69,6,7,70,71,73,75,8,9,76,78,79,81,83,84,382,383,384,385,386,387,388,389,97,18,125,127,128,132,27,160,162,163,166,169,36,197,199,200,390,311,333,391,392,393],"tindex":"80ded129-db75-11e4-95d7-11ab0deceaa3","variableMapping":{"initLeafSize":"indexDivisor","maxLeafEntries":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[],"tindex":"80ded12a-db75-11e4-95d7-1ba6ee02bf47","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"start","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":0},{"failures":[394,44,47,395,357,396,358,359,360,361,362,363,364,365,366,367,353,0,56,57,1,58,59,60,61,62,63,64,2,65,3,4,66,5,67,68,69,6,7,70,71,72,73,74,75,8,9,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,10,96,97,98,99,100,101,102,103,11,104,105,106,107,108,109,110,12,111,13,14,112,15,113,114,115,16,17,116,117,118,119,120,121,18,19,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,20,139,140,141,142,143,144,145,21,146,22,23,147,24,148,149,150,25,26,151,152,153,154,155,156,27,28,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,29,176,177,178,179,180,181,182,30,183,31,32,184,33,185,186,187,34,35,188,189,190,191,192,193,36,37,194,195,196,197,198,199,200,201,202,397,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,305,398,399,306,400,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,401,402,403,404],"tindex":"80def73b-db75-11e4-95d7-ab266e481368","variableMapping":{"red":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[283,306,310,313,323],"tindex":"80def73c-db75-11e4-95d7-3141cae66ab0","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[355],"tindex":"80def73d-db75-11e4-95d7-4b8c7387ae98","variableMapping":{"start":"val","delta":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[1,3,4,6,8,9,11,13,14,16,18,19,20,22,23,25,27,28,29,31,32,34,36,37,38,40],"tindex":"80def73e-db75-11e4-95d7-e93015d79750","variableMapping":{"size":"mSize","capacity":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"80def73f-db75-11e4-95d7-4db0ecfb154e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[217],"tindex":"80def740-db75-11e4-95d7-71337c0cc639","variableMapping":{"node":"node","directionBitMask":"directionBitMask","intendedValues":"intendedValues","restrictedValues":"intendedValues","potentialBarriers":"intendedValues","restrictions":"restrictions","blockByDefault":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[245],"tindex":"80def741-db75-11e4-95d7-5f140bf46979","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"80def742-db75-11e4-95d7-e57b98818437","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"80def743-db75-11e4-95d7-51f4a784defa","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.trimToSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-2},{"failures":[],"tindex":"80def744-db75-11e4-95d7-3f9263140c48","variableMapping":{"high":"bytePos","guess":"bytePos","low":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":0},{"failures":[],"tindex":"80def745-db75-11e4-95d7-cf77dae8bdcb","variableMapping":{"tmpNo":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[405,406,407,408,409,410,90,10,100,102,103,11,105,108,109,13,14,15,113,115,16,119,121,18,19,122,125,127,129],"tindex":"80df1e56-db75-11e4-95d7-53440154c041","variableMapping":{"bit":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"80df1e57-db75-11e4-95d7-d75e62c0ad37","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"speed","speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":0},{"failures":[363,225,268,291,398],"tindex":"80df1e58-db75-11e4-95d7-37aee639fedf","variableMapping":{"nodes":"maxTurnCosts","adj":"maxTurnCosts","base":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"80df1e59-db75-11e4-95d7-778ba1c23c77","variableMapping":{"nextTowerId":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[411,412,413,414,415,416,417,418],"tindex":"80df1e5a-db75-11e4-95d7-a77f51dd4d18","variableMapping":{"factor":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"80df1e5b-db75-11e4-95d7-eb15d89d4f1a","variableMapping":{"equalNormedDelta":"lon","tmpNormedDist":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:924","type":"CtIfImpl","sourcecode":"if (double <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[],"tindex":"80df1e5c-db75-11e4-95d7-c38ff499e3de","variableMapping":{"precision":"com.graphhopper.util.AngleCalc.PI_4","lat":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"80df1e5d-db75-11e4-95d7-5b53c41e1bbe","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[],"tindex":"80df1e5e-db75-11e4-95d7-d504105f46d5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-2},{"failures":[],"tindex":"80df1e5f-db75-11e4-95d7-97daf5c358b1","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"80df1e60-db75-11e4-95d7-1f7c5ec1d635","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:472","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"80df1e61-db75-11e4-95d7-17faf9d236e1","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"80df1e62-db75-11e4-95d7-cdd28d313931","variableMapping":{"hasOther":"edgeBased","hasRel":"edgeBased"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"80df1e63-db75-11e4-95d7-15cbc973733f","variableMapping":{"cap":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"80df1e64-db75-11e4-95d7-3dd32999e082","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:118","type":"CtLocalVariableImpl","sourcecode":"T T = ((T)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[41,358,419],"tindex":"80df4575-db75-11e4-95d7-a1070e7b66d1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-1},{"failures":[],"tindex":"80df4576-db75-11e4-95d7-8551181cde42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"80df4577-db75-11e4-95d7-29e869d54173","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":0},{"failures":[],"tindex":"80df4578-db75-11e4-95d7-7d7c779902c3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[230,231,239,249,257,265,267,277,288,290,300],"tindex":"80df4579-db75-11e4-95d7-1bfc2614b5d6","variableMapping":{"acceptBit":"encoded","ferryBit":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-1},{"failures":[],"tindex":"80df457a-db75-11e4-95d7-1f44e7713a93","variableMapping":{"lastIndex":"tmp","fromIndex":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[41,44,395,396,362,363,218],"tindex":"80df457b-db75-11e4-95d7-59f317e538be","variableMapping":{"name":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"80df457c-db75-11e4-95d7-7747ab76c9d7","variableMapping":{"type":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:198","type":"CtReturnImpl","sourcecode":"return (this.int) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[210],"tindex":"80df457d-db75-11e4-95d7-33047b2f4fd2","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"80df457e-db75-11e4-95d7-552030cf71c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[1,3,4,5,6,7,8,9,11,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,40],"tindex":"80df457f-db75-11e4-95d7-d3a3e1cadc80","variableMapping":{"i":"low","child":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-1},{"failures":[],"tindex":"80df4580-db75-11e4-95d7-dd570f918776","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"80df4581-db75-11e4-95d7-df7b08fc534b","variableMapping":{"shift":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":0},{"failures":[229,231,242,247,249,250,262,266,267,280,285,289,290,303],"tindex":"80df4582-db75-11e4-95d7-b7adaf868741","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[],"tindex":"80df4583-db75-11e4-95d7-53156a2c726c","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":0},{"failures":[394,41,42,43,45,46,47,357,358,359,360,361,362,363,364,365,366,367,353,0,372,420,421,422,375,378,70,75,79,382,387,388,389,97,116,125,132,151,160,166,169,188,197,311],"tindex":"80df4584-db75-11e4-95d7-7db62bfded91","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[],"tindex":"80df4585-db75-11e4-95d7-972b752ce387","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"80df4586-db75-11e4-95d7-95facc4b7ac2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"80df6c97-db75-11e4-95d7-878458ed4166","variableMapping":{"entry":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"80df6c98-db75-11e4-95d7-b7a7afde545f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:79","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[41,42,43,46,396,358,363,0,53,375,376,377,378,57,1,60,65,67,69,73,75,76,78,79,83,90,94,97,103,11,106,111,113,115,119,121,122,124,125,129,132,138,20,141,146,148,150,154,156,157,159,160,164,166,169,175,29,178,183,185,187,191,193,194,196,197,201,48,205,207,38,423,40,424,216,219,222,226,283,310,311,313,315,316,319,323,325,328,330,332,333,334,336,337,338,340,341,342,343,344,346,347,348,350,351,352,425],"tindex":"80df6c99-db75-11e4-95d7-9b6ae94ff6c0","variableMapping":{"flags":"backwardBit","nodeFlags":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"80df6c9a-db75-11e4-95d7-fdab785b41db","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[51,52,396,0,53,54,56,57,1,64,65,73,76,79,83,97,102,103,11,110,111,119,122,125,129,132,137,138,20,145,146,154,157,160,164,166,169,174,175,29,182,183,191,194,197,201,48,38,424,426,313,314,318,321,324,326,327,336,337,340,341,346,347,348,351,352,425],"tindex":"80df6c9b-db75-11e4-95d7-0b7b581229e4","variableMapping":{"bytes":"flags","capacity":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-1},{"failures":[411,412,427,428,405,429,430,406,414,415,417,418,431],"tindex":"80df6c9c-db75-11e4-95d7-cb7f6252ad30","variableMapping":{"maxMCSpeed":"midLat","speed":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"80df6c9d-db75-11e4-95d7-8b954a8c8777","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:277","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"))"},"status":-2},{"failures":[],"tindex":"80df6c9e-db75-11e4-95d7-cf8f97cc1cbb","variableMapping":{"lastTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[],"tindex":"80df6c9f-db75-11e4-95d7-59666ab9df6b","variableMapping":{"line":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-2},{"failures":[],"tindex":"80df6ca0-db75-11e4-95d7-8b9b4c1255d2","variableMapping":{"nodeFlags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-2},{"failures":[432,433,434,319,332,334,336,346,350],"tindex":"80df6ca1-db75-11e4-95d7-bf6a5ea3a4fa","variableMapping":{"index":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"80df93b2-db75-11e4-95d7-33a58abf602e","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-2},{"failures":[],"tindex":"80e0f343-db75-11e4-95d7-83829c6184d3","variableMapping":{"freeIndex":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"80e0f344-db75-11e4-95d7-f3b0c112fa73","variableMapping":{"maxLeafEntries":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"80e0f345-db75-11e4-95d7-afc3047a1748","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"80e0f346-db75-11e4-95d7-0996cf7afc38","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-2},{"failures":[],"tindex":"80e0f347-db75-11e4-95d7-7f031f1a351c","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"80e0f348-db75-11e4-95d7-fb8cbdbb26b4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[283],"tindex":"80e0f349-db75-11e4-95d7-5b57ac63732a","variableMapping":{"factor":"decDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[394,41,45,435,46,395,358,361,362,372,373,374,436,437,375,376,377,378,354,379,380,381,75,438,387,439,388,440,441,95,97,102,116,18,125,127,132,137,151,27,160,162,166,169,174,188,36,197,199,442,282,283,311,312,333,391,425,392,393],"tindex":"80e0f34a-db75-11e4-95d7-5bd834fc881a","variableMapping":{"size":"length","capacity":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"80e11a5b-db75-11e4-95d7-df1626d1f410","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"80e11a5c-db75-11e4-95d7-b1a125b3a3b7","variableMapping":{"this":"graph"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"80e11a5d-db75-11e4-95d7-9fafa15baec8","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"allBits","id":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[394,443,41,42,43,44,45,435,46,47,51,52,396,358,360,363,364,365,366,367,0,53,54,55,375,376,377,378,354,56,57,1,59,60,63,64,65,67,69,73,75,76,78,79,83,90,94,97,102,103,11,105,106,109,110,111,113,115,119,121,122,124,125,129,132,137,138,20,140,141,144,145,146,148,150,154,156,157,159,160,164,166,169,174,175,29,177,178,181,182,183,185,187,191,193,194,196,197,201,48,205,207,38,423,40,424,216,219,222,224,226,283,399,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,346,347,348,349,350,351,352,425],"tindex":"80e11a5e-db75-11e4-95d7-01f12a2243c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-1},{"failures":[394,44,47,396,206,209,306],"tindex":"80e11a5f-db75-11e4-95d7-2b33be3c18de","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[249,262,285],"tindex":"80e11a60-db75-11e4-95d7-698d60951381","variableMapping":{"shiftSum":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[41,44,396,358,363,0,53,375,376,377,378,57,1,60,63,65,67,69,73,75,76,78,79,83,85,86,87,89,90,94,97,103,11,106,109,111,113,115,119,121,122,124,125,129,132,138,20,141,144,146,148,150,154,156,157,159,160,164,166,169,175,29,178,181,183,185,187,191,193,194,196,197,201,48,205,207,38,423,40,424,216,222,226,311,313,314,315,316,319,323,325,326,327,328,330,332,333,334,336,337,338,340,341,342,343,344,346,347,348,350,351,352,425],"tindex":"80e11a61-db75-11e4-95d7-8b7fdd5bb5e2","variableMapping":{"tmpDegreeCounter":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"80e11a62-db75-11e4-95d7-933928885f4e","variableMapping":{"size":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"80e11a63-db75-11e4-95d7-c19d292f3ab1","variableMapping":{"high":"allowed","highKey":"allowed","key":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-2},{"failures":[41,42,43,44,45,46,353,354,212,214,215,220,221,231,240,356,247,249,258,262,263,266,267,278,285,286,289,290,301,306],"tindex":"80e11a64-db75-11e4-95d7-6106e328ae82","variableMapping":{"orientation":"backSpeed","resultOrientation":"maxSpeed","baseOrientation":"maxSpeed","java.lang.Math.PI":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[216],"tindex":"80e11a65-db75-11e4-95d7-2b34b3b59edf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[],"tindex":"80e11a66-db75-11e4-95d7-c1ed6f24d854","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[313,314,333,336,351],"tindex":"80e11a67-db75-11e4-95d7-3df86666f6e9","variableMapping":{"latSize":"to","size":"skippedEdge2","lonSize":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"80e14178-db75-11e4-95d7-5b8776f297cb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":331,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":391,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":95,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":57,"com.graphhopper.reader.OSMReaderTest.testFerry":357,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":54,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":266,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":250,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":443,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":30,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":369,"com.graphhopper.coll.CompressedArrayTest.testCompress":412,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":256,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":163,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":70,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":348,"com.graphhopper.GraphHopperTest.testPrepare":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":330,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":337,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":434,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":323,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":257,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":100,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":429,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":424,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":262,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":315,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":321,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":200,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":166,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":102,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":433,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":351,"com.graphhopper.GraphHopperTest.testLoadOSM":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":439,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":50,"com.graphhopper.reader.OSMReaderTest.testSort":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":278,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":39,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":170,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":158,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":132,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":81,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":425,"com.graphhopper.routing.DijkstraTest.initializationError":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":196,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":120,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":143,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":167,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":178,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":288,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":174,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":243,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":240,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":24,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":327,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":318,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":317,"com.graphhopper.coll.OSMIDMapTest.testGetLong":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":176,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":114,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":97,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":16,"com.graphhopper.coll.CompressedArrayTest.testCompress2":411,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":183,"com.graphhopper.GraphHopperAPITest.testLoad":48,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":101,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":203,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":22,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":20,"com.graphhopper.storage.LevelGraphStorageTest.testClone":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":175,"com.graphhopper.reader.OSMReaderTest.testBarriers":360,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":426,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":320,"com.graphhopper.util.GHUtilityTest.testCopy":375,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":89,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":237,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":259,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":253,"com.graphhopper.routing.PathTest.testFindInstruction":312,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":29,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":432,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":53,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":209,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":287,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":159,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":33,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":344,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":298,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":399,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":401,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":61,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":135,"com.graphhopper.util.InstructionListTest.testWayList2":378,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":76,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":199,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":244,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":263,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":133,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":282,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":109,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":438,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":31,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":319,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":361,"com.graphhopper.routing.AStarTest.initializationError":397,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":333,"com.graphhopper.coll.OSMIDMapTest.testGet":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":182,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":210,"com.graphhopper.routing.PathBidirRefTest.testExtract":307,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":116,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":271,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":247,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":328,"com.graphhopper.reader.OSMReaderTest.testMain":358,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":272,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":431,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":279,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":171,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":111,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":15,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":129,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":13,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":191,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":285,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":115,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":353,"com.graphhopper.storage.StorablePropertiesTest.testStore":442,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":441,"com.graphhopper.storage.GraphHopperStorageTest.testClone":140,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":222,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":147,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":220,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":90,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":62,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":93,"com.graphhopper.routing.PathTest.testTime":310,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":236,"com.graphhopper.routing.util.EncodingManagerTest.testFixWayName":419,"com.graphhopper.util.BitUtilLittleTest.testToFloat":421,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":127,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":7,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":301,"com.graphhopper.GraphHopperTest.testFootOnly":47,"com.graphhopper.util.BitUtilLittleTest.testToInt":422,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":248,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":218,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":338,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":67,"com.graphhopper.search.NameIndexTest.testCreate":381,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":402,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":415,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":252,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":368,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":387,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":413,"com.graphhopper.reader.OSMReaderTest.testWithBounds":367,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":198,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":71,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":211,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":103,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":99,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":299,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":190,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":85,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":185,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":137,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":392,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":314,"com.graphhopper.util.BitUtilLittleTest.testToBitString":420,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":161,"com.graphhopper.util.InstructionListTest.testWayList":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":269,"com.graphhopper.GraphHopperAPITest.testDisconnected179":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":63,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":416,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":296,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":276,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":43,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":142,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":349,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":154,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":261,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":325,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":404,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":347,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":125,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":223,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":277,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":172,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":335,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":408,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":281,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":131,"com.graphhopper.routing.PathTest.testWayList":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":82,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":3,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":217,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":355,"com.graphhopper.coll.OSMIDMapTest.testGet2":373,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":336,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":275,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":149,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":204,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":180,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":113,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":406,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":293,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":74,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":251,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":274,"com.graphhopper.search.NameIndexTest.testPut":379,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":201,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":386,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":289,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":283,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":168,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":232,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":245,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":370,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":334,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":38,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":75,"com.graphhopper.routing.PathTest.testFound":309,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":306,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":395,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":124,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":32,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":380,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":65,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":238,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":326,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":214,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":213,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":258,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":329,"com.graphhopper.reader.PrinctonReaderTest.testRead":51,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":160,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":390,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":440,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":2,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":414,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":56,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":187,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":294,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":398,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":286,"com.graphhopper.reader.OSMReaderTest.testFoot":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":73,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":371,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":393,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":128,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":418,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":428,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":246,"com.graphhopper.reader.OSMReaderTest.testOneWay":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":405,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":23,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":28,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":195,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":254,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":69,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":343,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":340,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":350,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":341,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":205,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":66,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":134,"com.graphhopper.routing.PathBidirRefTest.testExtract2":308,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":409,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":313,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":86,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":239,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":156,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":242,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":84,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":206,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":346,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":157,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":224,"com.graphhopper.GraphHopperTest.testFootAndCar":44,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":151,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":14,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":59,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":305,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":332,"com.graphhopper.GraphHopperTest.testPrepareOnly":394,"com.graphhopper.GraphHopperTest.testVia":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":1,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":365,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":94,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":155,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":354,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":207,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":68,"com.graphhopper.routing.AStarBidirectionTest.initializationError":400,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":212,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":123,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":19,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":169}}]
