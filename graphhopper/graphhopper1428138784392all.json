[{"failures":[],"tindex":"cce766ea-daaa-11e4-9890-bd14f97b38ac","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"cce766eb-daaa-11e4-9890-5b6ff9738e75","variableMapping":{"high":"endIndexPlusOne","guess":"endIndexPlusOne","low":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"cce766ec-daaa-11e4-9890-2dcbcaa36a17","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[68,10,69,70,71,72],"tindex":"cce78dfd-daaa-11e4-9890-c3bb103c1dce","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxTurnCosts","edgeTo":"maxTurnCosts","edgeFrom":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[73,74,75,76,77,78,5,6,7,8,9,10,11,12,13,14,79,15,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,19,36,103,104,105,106,107,108,109,110,50,53,54,56,58,111,112,113,114,115],"tindex":"cce78dfe-daaa-11e4-9890-dd7512fbb604","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[],"tindex":"cce78dff-daaa-11e4-9890-592a70f7b30e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"cce78e00-daaa-11e4-9890-159d7d95a45e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"cce78e01-daaa-11e4-9890-a7b4bff50469","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"cce78e02-daaa-11e4-9890-31d3981c0b1b","variableMapping":{"a_lon_deg":"prevEle","factor":"prevEle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":0},{"failures":[76,116,117,77,118,119,120,121,122,123,124,78,4,5,6,7,8,9,10,11,125,12,13,14,79,126,15,127,128,129,130,131,132,133,134,94,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,95,160,161,162,163,164,96,165,166,167,168,97,169,170,171,172,173,98,174,175,99,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,100,201,202,203,204,205,101,206,207,208,209,102,210,211,212,213,214,215,17,30,216,47,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,103,238,239,240,241,104,105,242,243,244,245,106,246,247,248,249,250,251,107,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,108,277,278,279,280,281,109,282,283,284,285,110,286,287,288,289,290,48,49,50,51,52,53,54,55,56,57,58,59,60,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,69,312,313,314,315,70,316,317,318,319,61,62,63,320,321,322,323,324,325,326,327,328,329,71,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,72,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,111,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,64,429,430,431,65,66,432,433,67,434,435,115,436,437,438],"tindex":"cce7b513-daaa-11e4-9890-9da21dd8a670","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:211","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder)"},"status":-1},{"failures":[330,343,367,380],"tindex":"cce7b514-daaa-11e4-9890-2be6f05bbfef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[78,4,5,6,7,8,9,10,11,12,13,14,79,15,439,440,441,442,50,51,52,53,54,55,56,57,58,59,60],"tindex":"cce7b515-daaa-11e4-9890-1ddd506ceac1","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"cce7b516-daaa-11e4-9890-3f2ecae85c1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"cce7b517-daaa-11e4-9890-970b5b41aebb","variableMapping":{"byteCount":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"cce7b518-daaa-11e4-9890-5d139e9da444","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[443,444,414],"tindex":"cce7b519-daaa-11e4-9890-bdab26eb20b9","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"cce7b51a-daaa-11e4-9890-b9bae3ee8043","variableMapping":{"a_lon_deg":"maxLon","factor":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[445,446,447,448,449,450,451,452,453,18,454,455,24,456,35,457,458,41],"tindex":"cce7b51b-daaa-11e4-9890-45afe99b7e2b","variableMapping":{"res":"hash","maxBit":"hash","value":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"cce7b51c-daaa-11e4-9890-b1da52a4fcad","variableMapping":{"dX":"defaultD","dY":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[459],"tindex":"cce7b51d-daaa-11e4-9890-bf48a649b115","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[86,91,150,191,228,267],"tindex":"cce7b51e-daaa-11e4-9890-1755a60bcd17","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[52,53,56,59,405,408,414,415,419,420,421,422,423,424,425,426,427,428,64,429,431,65,66,432,433,67,435,115,436,437,438],"tindex":"cce7b51f-daaa-11e4-9890-4d92de1f122a","variableMapping":{"edge":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"cce7dc30-daaa-11e4-9890-79ac63090b9b","variableMapping":{"lazyUpdates":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"cce7dc31-daaa-11e4-9890-3561c4d1c5cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[445,446,460,447,448,449,450,451,461,78,4,5,6,7,8,9,10,11,12,13,14,79,15,452,453,16,17,18,462,19,20,21,22,454,23,455,24,25,26,27,28,29,30,456,35,463,36,37,38,39,457,40,458,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,64,65,66,67],"tindex":"cce7dc32-daaa-11e4-9890-652a9c59591c","variableMapping":{"turnCostsCount":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"cce7dc33-daaa-11e4-9890-eb3f50cca5ae","variableMapping":{"indexM":"bitsForEdgeFlags","tmp":"this","version":"com.graphhopper.routing.util.EncodingManager.WAY_ERR"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:97","type":"CtIfImpl","sourcecode":"if (int >= 0)\n    java.lang.String = java.lang.String.substring(0, int);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[],"tindex":"cce7dc34-daaa-11e4-9890-d1152b967496","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"cce7dc35-daaa-11e4-9890-2feb2a17bd8b","variableMapping":{"key":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:101","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[76,117,77,118,119,464,465,466,78,4,5,6,7,8,9,10,11,12,13,14,79,15,80,467,81,468,469,470,471,472,473,474,82,475,476,477,478,83,84,85,86,479,480,481,87,482,483,484,485,88,89,90,91,132,94,135,139,95,96,97,170,171,98,99,176,180,100,101,102,211,212,19,20,21,31,32,33,486,34,36,37,38,104,107,252,256,108,109,110,287,288,487,488,489,490,50,51,52,53,54,55,56,57,58,59,60,358,359,111,400,491,112,492,403,493,494,404,113,495,114,115],"tindex":"cce7dc36-daaa-11e4-9890-abefa85ffbc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[],"tindex":"cce7dc37-daaa-11e4-9890-cf768f66ae49","variableMapping":{"edgeCount":"from","lastEdgeIndex":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":0},{"failures":[],"tindex":"cce7dc38-daaa-11e4-9890-ef586926b9e9","variableMapping":{"edgeId":"edge","nodeId":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-2},{"failures":[4,15,459,318,359,399,420,429],"tindex":"cce7dc39-daaa-11e4-9890-513f40fba760","variableMapping":{"workerThreads":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[76,117,77,118,122,127,131,94,144,150,155,157,164,166,168,172,98,99,185,191,196,198,205,207,209,213,222,228,233,235,104,243,245,249,107,261,267,272,274,281,283,285,289,48,293,295,306,312,319,320,359,397,111,408,409,410,411,412,414,418,422,423,426,429,431,432,67,435,115,436,438],"tindex":"cce7dc3a-daaa-11e4-9890-afb9e59ecb70","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"cce8034b-daaa-11e4-9890-53bffe0df194","variableMapping":{"mSize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[78],"tindex":"cce8034c-daaa-11e4-9890-99b912bff902","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"cce8034d-daaa-11e4-9890-574c722f75d7","variableMapping":{"turnCostIndex":"allBits","NO_TURN_ENTRY":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-2},{"failures":[],"tindex":"cce8034e-daaa-11e4-9890-939935568099","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[315,316],"tindex":"cce8034f-daaa-11e4-9890-9952b2e3c405","variableMapping":{"shift":"usedBits","backwardBit":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"cce80350-daaa-11e4-9890-8b60127894bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[78,4,5,6,8,9,11,14,79,15,50,55,59,60,294,297,318],"tindex":"cce80351-daaa-11e4-9890-73cf11e1a723","variableMapping":{"i":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-1},{"failures":[327,329,338,346,354,364,366,375,382,383,391],"tindex":"cce80352-daaa-11e4-9890-7db683631fab","variableMapping":{"name":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:52","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"cce80353-daaa-11e4-9890-e5212a6773e3","variableMapping":{"size":"code","capacity":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":0},{"failures":[],"tindex":"cce80354-daaa-11e4-9890-23c3c8c19a11","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":0},{"failures":[],"tindex":"cce80355-daaa-11e4-9890-19831bcba485","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[127,129,408,414,416,419,421,425,429,66,435,436,438],"tindex":"cce80356-daaa-11e4-9890-ff1173b863c9","variableMapping":{"high":"dir","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[496,443,444],"tindex":"cce80357-daaa-11e4-9890-c187531b0a1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[298],"tindex":"cce80358-daaa-11e4-9890-d919903ffd71","variableMapping":{"nanoTime":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[],"tindex":"cce82969-daaa-11e4-9890-77adeced06b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[338,342,354,357,375,379,391,395],"tindex":"cce8296a-daaa-11e4-9890-05d80432a065","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"cce8296b-daaa-11e4-9890-5f8de49ef0a2","variableMapping":{"nodeThis":"b","nextEdgeOther":"a","nodeOther":"b","nextEdge":"a"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":0},{"failures":[],"tindex":"cce8296c-daaa-11e4-9890-b5c1663dccce","variableMapping":{"com.graphhopper.storage.DAType.MMAP":"defaultType","type":"defaultType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:166","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-2},{"failures":[327,338,344,346,354,364,375,382,383,391],"tindex":"cce8296d-daaa-11e4-9890-e1556cf14469","variableMapping":{"width":"shift","lonSimilar":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"cce8296e-daaa-11e4-9890-f128eb5999b7","variableMapping":{"max":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[445,446,460,447,497,448,449,461,452,453],"tindex":"cce8296f-daaa-11e4-9890-9fdc79cca64b","variableMapping":{"i":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"cce82970-daaa-11e4-9890-9782baa9e0a5","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[],"tindex":"cce82971-daaa-11e4-9890-8b670080f0db","variableMapping":{"latSimilar":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":0},{"failures":[341,347,378,394],"tindex":"cce82972-daaa-11e4-9890-870612a56955","variableMapping":{"lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[],"tindex":"cce82973-daaa-11e4-9890-fdf3b7d7a166","variableMapping":{"maxLat":"maxLon","minLat":"maxLon","bbox":"bbox"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"cce82974-daaa-11e4-9890-05d7594f1372","variableMapping":{"algo":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":0},{"failures":[405,414,415,422,425,426,67,435,436],"tindex":"cce82975-daaa-11e4-9890-53b1bbe512cc","variableMapping":{"node":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"cce82976-daaa-11e4-9890-37a4255d27d0","variableMapping":{"high":"dir","highKey":"scDirMask","key":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"cce82977-daaa-11e4-9890-511e3c2ba546","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[298],"tindex":"cce82978-daaa-11e4-9890-41ce83297053","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[50,51,52,53,54,56,57,58,59,61,62,63],"tindex":"cce82979-daaa-11e4-9890-69b8c80284a3","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-1},{"failures":[],"tindex":"cce8297a-daaa-11e4-9890-2d4c1a39cdf1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"cce8297b-daaa-11e4-9890-5d1bfcb99ea6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"cce8508c-daaa-11e4-9890-9b8d615caaf6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"cce8508d-daaa-11e4-9890-1770731572c9","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[0,1,498,499,76,500,501,116,117,77,118,119,120,121,122,123,124,68,78,4,5,6,7,8,9,10,11,12,13,14,79,15,502,503,504,505,506,507,508,509,92,93,510,127,128,129,130,131,132,133,134,94,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,95,160,161,162,163,164,96,165,166,167,168,97,169,170,171,172,173,98,175,99,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,100,201,202,203,204,205,101,206,207,208,209,102,210,211,212,213,214,511,512,513,514,515,215,16,17,516,18,462,19,20,21,22,454,23,455,24,25,26,27,28,29,30,517,31,32,33,486,34,518,519,520,521,522,216,35,463,36,37,38,39,457,40,458,41,42,43,44,45,46,47,228,104,251,107,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,108,277,278,279,280,281,109,282,283,284,285,110,286,287,288,289,290,48,49,50,51,52,53,54,55,56,57,58,59,60,293,319,61,62,63,320,321,358,359,398,399,111,400,401,402,491,491,112,112,523,523,492,492,403,403,493,493,494,494,404,404,113,113,524,524,495,495,114,114,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,64,429,430,431,65,66,432,433,67,434,435,115,436,437,438],"tindex":"cce8508e-daaa-11e4-9890-df4dff16e1a4","variableMapping":{"segNumber":"i","segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"cce8508f-daaa-11e4-9890-d357eb909ee2","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"cce85090-daaa-11e4-9890-fbc7a58a01b3","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:80","type":"CtLocalVariableImpl","sourcecode":"long long = (long) * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[327,329,338,354,364,366,375,382,391],"tindex":"cce85091-daaa-11e4-9890-eb7990120b7c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[381],"tindex":"cce85092-daaa-11e4-9890-d14c382de67b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"cce85093-daaa-11e4-9890-b39536dd116c","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"cce85094-daaa-11e4-9890-fb1084f113c4","variableMapping":{"red":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[],"tindex":"cce85095-daaa-11e4-9890-efbcf106954e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:366","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":0},{"failures":[],"tindex":"cce85096-daaa-11e4-9890-65fc5b27b337","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"cce85097-daaa-11e4-9890-db4e5f2131f2","variableMapping":{"currEdge":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":0},{"failures":[324,346,361],"tindex":"cce877a8-daaa-11e4-9890-b3a30979f6f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:633","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[319,321],"tindex":"cce877a9-daaa-11e4-9890-59a2b7e1fa4f","variableMapping":{"size":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[7,12,291,300,331,348,368,384],"tindex":"cce877aa-daaa-11e4-9890-416463ec0e62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[],"tindex":"cce877ab-daaa-11e4-9890-7b3dba47657a","variableMapping":{"mGarbage":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[],"tindex":"cce877ac-daaa-11e4-9890-bd6358ff23d7","variableMapping":{"java.lang.Double.NaN":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:139","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"cce877ad-daaa-11e4-9890-0943f3dcdc62","variableMapping":{"this":"tr","value":"pavementName","key":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:246","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.isEmpty()))\n    com.graphhopper.util.TranslationMap.TranslationHashMap.put(java.lang.String, java.lang.String);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-2},{"failures":[],"tindex":"cce877ae-daaa-11e4-9890-7b1a098fe880","variableMapping":{"intIndex":"nodeA","len":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"cce877af-daaa-11e4-9890-c9ff4aa34138","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":0},{"failures":[359],"tindex":"cce877b0-daaa-11e4-9890-99bd353d54b9","variableMapping":{"lastKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[15],"tindex":"cce877b1-daaa-11e4-9890-7fd6530907c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:165","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[340,356,377,393],"tindex":"cce877b2-daaa-11e4-9890-ed7d107a40ba","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"cce877b3-daaa-11e4-9890-e96c3b95f45a","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"offset","id":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[],"tindex":"cce877b4-daaa-11e4-9890-1b1d5cfc66c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:504","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[119,308,525],"tindex":"cce877b5-daaa-11e4-9890-c9e605922b33","variableMapping":{"id":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[338,354,375,391],"tindex":"cce877b6-daaa-11e4-9890-6376457c32b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"cce877b7-daaa-11e4-9890-01aedffb0990","variableMapping":{"angle":"bwFaster","com.graphhopper.util.AngleCalc.PI3_4":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"cce877b8-daaa-11e4-9890-c1cf632420e7","variableMapping":{"hasOther":"uTurnSupport","hasRel":"uTurnSupport"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[117,77,118,119,120,121,122,123,124,78,4,5,7,10,11,12,13,14,15,127,131,94,139,140,141,143,144,147,148,150,155,157,162,164,166,168,97,172,98,99,180,181,182,184,185,188,189,191,196,198,203,205,207,209,102,213,215,30,216,47,217,218,219,221,222,225,226,228,233,235,240,104,243,245,106,249,107,256,257,258,260,261,264,265,267,272,274,279,281,283,285,110,289,48,49,52,53,54,55,56,58,59,293,295,303,306,309,312,319,61,62,63,320,359,399,111,400,401,402,403,404,405,406,408,409,410,411,412,414,415,416,418,419,420,421,422,423,424,425,426,427,428,64,429,431,65,66,432,433,67,435,115,436,437,438],"tindex":"cce89ec9-daaa-11e4-9890-fbca204cabfa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[],"tindex":"cce89eca-daaa-11e4-9890-13df43584865","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"cce89ecb-daaa-11e4-9890-1ba70d71a911","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"cce89ecc-daaa-11e4-9890-3b8e3a56d302","variableMapping":{"segmentSizeInBytes":"child","indexDivisor":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":164,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":434,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":132,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":525,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":513,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":218,"com.graphhopper.reader.OSMReaderTest.testFerry":78,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":120,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":121,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":328,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":347,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":20,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":51,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":173,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":375,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":190,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":472,"com.graphhopper.coll.CompressedArrayTest.testCompress":453,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":353,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":288,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":103,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":267,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":516,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":473,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":484,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":416,"com.graphhopper.GraphHopperTest.testPrepare":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":246,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":274,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":405,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":444,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":326,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":429,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":517,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":354,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":1,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":320,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":346,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":324,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":503,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":422,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":428,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":37,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":212,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":98,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":450,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":139,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":443,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":419,"com.graphhopper.GraphHopperTest.testLoadOSM":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":42,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":506,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":38,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":317,"com.graphhopper.reader.OSMReaderTest.testSort":6,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":339,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":176,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":475,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":284,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":107,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":448,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":247,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":404,"com.graphhopper.storage.RAMDataAccessTest.testHeader":485,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":209,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":470,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":163,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":263,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":174,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":185,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":364,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":180,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":395,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":392,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":23,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":271,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":66,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":425,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":424,"com.graphhopper.coll.OSMIDMapTest.testGetLong":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":194,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":200,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":156,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":94,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":158,"com.graphhopper.coll.CompressedArrayTest.testCompress2":452,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":276,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":381,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":511,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":191,"com.graphhopper.GraphHopperAPITest.testLoad":48,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":138,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":505,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":291,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":268,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":258,"com.graphhopper.storage.LevelGraphStorageTest.testClone":143,"com.graphhopper.reader.OSMReaderTest.testBarriers":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":181,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":321,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":72,"com.graphhopper.util.GHUtilityTest.testCopy":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":30,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":389,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":356,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":90,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":350,"com.graphhopper.routing.PathTest.testFindInstruction":400,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":182,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":496,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":122,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":297,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":363,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":512,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":285,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":207,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":498,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":373,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":459,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":223,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":254,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":510,"com.graphhopper.util.InstructionListTest.testWayList2":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":243,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":43,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":289,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":186,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":211,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":325,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":396,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":358,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":147,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":474,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":71,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":476,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":232,"com.graphhopper.storage.RAMDirectoryTest.testSynched":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":192,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":31,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":426,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":8,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":115,"com.graphhopper.coll.OSMIDMapTest.testGet":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":189,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":298,"com.graphhopper.routing.PathBidirRefTest.testExtract":401,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":81,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":332,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":26,"com.graphhopper.storage.RAMDataAccessTest.testCopy":87,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":477,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":457,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":344,"com.graphhopper.storage.RAMDataAccessTest.testSegments":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":47,"com.graphhopper.util.GHUtilityTest.testSort2":499,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":432,"com.graphhopper.reader.OSMReaderTest.testMain":5,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":135,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":199,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":333,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":451,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":27,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":340,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":162,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":245,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":150,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":2,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":154,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":172,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":151,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":403,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":361,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":504,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":157,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":79,"com.graphhopper.storage.StorablePropertiesTest.testStore":471,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":481,"com.graphhopper.storage.GraphHopperStorageTest.testClone":260,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":244,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":309,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":440,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":270,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":307,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":127,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":393,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":224,"com.graphhopper.routing.PathTest.testTime":399,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":388,"com.graphhopper.util.BitUtilLittleTest.testToFloat":74,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":170,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":144,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":45,"com.graphhopper.reader.OSMReaderTest.testRelation":125,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":237,"com.graphhopper.util.GHUtilityTest.testSortDirected":501,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":376,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":442,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":85,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":492,"com.graphhopper.GraphHopperTest.testFootOnly":59,"com.graphhopper.util.BitUtilLittleTest.testToInt":75,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":345,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":305,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":454,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":423,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":360,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":233,"com.graphhopper.search.NameIndexTest.testCreate":490,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":88,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":491,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":508,"com.graphhopper.routing.QueryGraphTest.testOneWay":524,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":447,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":349,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":36,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":445,"com.graphhopper.reader.OSMReaderTest.testWithBounds":14,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":377,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":480,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":230,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":493,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":238,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":299,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":315,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":140,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":136,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":374,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":357,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":519,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":202,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":216,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":196,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":256,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":421,"com.graphhopper.util.BitUtilLittleTest.testToBitString":73,"com.graphhopper.util.InstructionListTest.testWayList":77,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":286,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":330,"com.graphhopper.GraphHopperAPITest.testDisconnected179":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":225,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":497,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":220,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":371,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":236,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":502,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":337,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":54,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":262,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":417,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":279,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":323,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":415,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":97,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":310,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":338,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":178,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":437,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":507,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":342,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":251,"com.graphhopper.routing.PathTest.testWayList":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":248,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":229,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":304,"com.graphhopper.coll.OSMIDMapTest.testGet2":467,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":438,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":478,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":166,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":464,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":201,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":336,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":273,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":187,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":261,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":455,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":24,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":482,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":368,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":382,"com.graphhopper.util.GHUtilityTest.testSort":500,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":241,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":461,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":348,"com.graphhopper.search.NameIndexTest.testPut":488,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":213,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":259,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":462,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":514,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":34,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":520,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":365,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":494,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":359,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":518,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":175,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":384,"com.graphhopper.storage.MMapDirectoryTest.testSynched":441,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":397,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":465,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":436,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":319,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":93,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":104,"com.graphhopper.routing.PathTest.testFound":398,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":60,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":318,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":168,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":129,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":334,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":193,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":489,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":228,"com.graphhopper.util.InstructionListTest.testEmptyList":116,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":265,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":479,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":64,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":390,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":65,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":312,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":301,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":300,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":355,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":433,"com.graphhopper.reader.PrinctonReaderTest.testRead":123,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":110,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":21,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":227,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":446,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":217,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":198,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":369,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":70,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":362,"com.graphhopper.reader.OSMReaderTest.testFoot":4,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":240,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":466,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":171,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":458,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":343,"com.graphhopper.reader.OSMReaderTest.testOneWay":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":41,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":269,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":282,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":208,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":351,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":84,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":235,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":411,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":456,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":408,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":418,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":409,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":521,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":293,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":231,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":523,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":126,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":253,"com.graphhopper.routing.PathBidirRefTest.testExtract2":402,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":509,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":486,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":420,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":44,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":215,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":391,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":487,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":281,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":394,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":250,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":294,"com.graphhopper.util.SimpleIntDequeTest.testPush":3,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":522,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":372,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":39,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":283,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":146,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":311,"com.graphhopper.GraphHopperTest.testFootAndCar":55,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":108,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":152,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":383,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":29,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":483,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":221,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":314,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":413,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":184,"com.graphhopper.GraphHopperTest.testPrepareOnly":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":435,"com.graphhopper.GraphHopperTest.testVia":52,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":515,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":219,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":12,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":131,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":119,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":280,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":295,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":234,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":322,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":167,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":165,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":99}}]
