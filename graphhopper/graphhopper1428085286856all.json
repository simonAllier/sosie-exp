[{"failures":[],"tindex":"3e7cbba8-da2e-11e4-89e8-93291bccc99f","variableMapping":{"bytePointer":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":0},{"failures":[],"tindex":"3e7da609-da2e-11e4-89e8-6b1ca0a7eec6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"3e7da60a-da2e-11e4-89e8-6994d7f98610","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[0],"tindex":"3e7dcd1b-da2e-11e4-89e8-4953b00fe7c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"3e7dcd1c-da2e-11e4-89e8-bd74481140b5","variableMapping":{"angle":"java.lang.Double.MAX_VALUE","com.graphhopper.util.AngleCalc.PI3_4":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[1,0,2],"tindex":"3e7dcd1d-da2e-11e4-89e8-8bcf7a7eb4b3","variableMapping":{"initializedCounter":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"3e7dcd1e-da2e-11e4-89e8-8941620f4290","variableMapping":{"high":"bytePos","guess":"bytePos","low":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":0},{"failures":[],"tindex":"3e7dcd1f-da2e-11e4-89e8-6b6514a07ef7","variableMapping":{"high":"noOfStates","len":"noOfStates","start":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[],"tindex":"3e7dcd20-da2e-11e4-89e8-7fe291a0b201","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"3e7dcd21-da2e-11e4-89e8-85ad39ef95fa","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"3e7dcd22-da2e-11e4-89e8-f5fa0f8f350b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":0},{"failures":[20,99,21,22,24,25,26,27,30,31,32,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"tindex":"3e7df433-da2e-11e4-89e8-6d7bf810b9e1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[],"tindex":"3e7f2cb4-da2e-11e4-89e8-21ac8b215a41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"3e7f2cb5-da2e-11e4-89e8-9f53b6c545da","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[5,148,149,99,31,150,151,152,153,154,155],"tindex":"3e7f2cb6-da2e-11e4-89e8-79637630b162","variableMapping":{"lastTime":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"3e7f2cb7-da2e-11e4-89e8-010665f6af3a","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"3e7f53c8-da2e-11e4-89e8-4745c5346dcc","variableMapping":{"tmp":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[156,157,13,14,15,19,158,159,160,161,1,162,163,164,0,42,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,49,182,183,184,185,186,187,188,189,190,191,192,193,50,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,64,218,219,220,75,76,221,222,223,224,225,226,227,228,229,230,231,232,86,233,234,235,236,237,238,239,240,241,242,243,244],"tindex":"3e7f53c9-da2e-11e4-89e8-13cbb96097ce","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[245,168,169,172,173,175,176,246,247,178,179,180,248,181,49,182,183,184,185,187,188,189,249,190,191,192,193],"tindex":"3e7f53ca-da2e-11e4-89e8-cfa941e10e58","variableMapping":{"a":"elem","high":"size","len":"size","start":"size","key":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:387","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-1},{"failures":[],"tindex":"3e7f53cb-da2e-11e4-89e8-a95010c6be7b","variableMapping":{"high":"flags","len":"value","start":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"3e7f53cc-da2e-11e4-89e8-a5c2328c2fbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:61","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint3D com.graphhopper.util.shapes.GHPoint3D = ((com.graphhopper.util.shapes.GHPoint3D)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"3e7f53cd-da2e-11e4-89e8-f51fa4c3c7e3","variableMapping":{"len":"value","start":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"3e7ff00e-da2e-11e4-89e8-2b8838242c9d","variableMapping":{"err":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[1,164,195,250,251,252,253,53,254,211,255,256,257,258,65,259,222,260,261,262,263,79,264,234,265,266,267,268,89,269],"tindex":"3e80171f-da2e-11e4-89e8-5de7e2c3817e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[270,271,272,273,274,275,276,277],"tindex":"3e801720-da2e-11e4-89e8-8d65607daf55","variableMapping":{"incEleSum":"midLat","eleDelta":"midLat","incDist2DSum":"midLat","decEleSum":"lat","fullDist2D":"lat","decDist2DSum":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[3,12,21],"tindex":"3e801721-da2e-11e4-89e8-c1bc2648493e","variableMapping":{"str":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:153","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_INT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"3e801722-da2e-11e4-89e8-59224885c9d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"3e801723-da2e-11e4-89e8-65456abceab2","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[278,279,280,281],"tindex":"3e801724-da2e-11e4-89e8-5ddeb22e71ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"3e801725-da2e-11e4-89e8-d7211585f6a0","variableMapping":{"name":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:161","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String + \".tif\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"3e801726-da2e-11e4-89e8-a78f514d307b","variableMapping":{"shift":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG","flags":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[],"tindex":"3e801727-da2e-11e4-89e8-c3c9429be161","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[],"tindex":"3e801728-da2e-11e4-89e8-2d77bbff493b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"3e826119-da2e-11e4-89e8-9fd9cf6ac598","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"3e82611a-da2e-11e4-89e8-01a1b155a594","variableMapping":{"toLat":"toHeight","fromLat":"fromHeight","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:40","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.toRadians((double - double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[],"tindex":"3e82611b-da2e-11e4-89e8-ddfeb3ad281b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"3e82882c-da2e-11e4-89e8-0f067557b9cb","variableMapping":{"minResolutionInMeter":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":0},{"failures":[282,152,153,283,110,123,133,145,155,167,176],"tindex":"3e82882d-da2e-11e4-89e8-55e618887648","variableMapping":{"radiusInMeter":"speed","lon":"speed","lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"3e82882e-da2e-11e4-89e8-4de7b11f7dcd","variableMapping":{"edgeId":"shift","nextEdge":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"3e82882f-da2e-11e4-89e8-1f978726552d","variableMapping":{"nodeThis":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","nextEdgeOther":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","nodeOther":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","nextEdge":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"3e828830-da2e-11e4-89e8-5d933c2c7ab8","variableMapping":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[3,8,10,12,50,284,285,286,287,288,289,290,291,292,293,294,62,210,211,295,212,213,296,297,298,214,299,300,255,301,256,215,302,216,257,258,63,303,304,217,305,64,65,259,218,306,219,66,307,308,67,220,309,75,310,76,311,312,313,314,86,315,316],"tindex":"3e828831-da2e-11e4-89e8-c14d9c05a1da","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-1},{"failures":[],"tindex":"3e828832-da2e-11e4-89e8-17eba2f653fd","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[3,5,6,7,148,8,9,10,11,12,20,99,21,22,23,24,25,26,27,28,29,30,31,32,50,284,75,76,311,313,314,86,315],"tindex":"3e828833-da2e-11e4-89e8-638d4b7f72f6","variableMapping":{"heights":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"3e828834-da2e-11e4-89e8-376f72e1c87c","variableMapping":{"ar_y":"fwdDecline","ab_y":"fwdDecline","ar_x":"fwdDecline","ab_x":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[],"tindex":"3e828835-da2e-11e4-89e8-8d6d1fb3f6e4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"3e828836-da2e-11e4-89e8-cf90fd970d2d","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"3e828837-da2e-11e4-89e8-bd891e69918a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[],"tindex":"3e828838-da2e-11e4-89e8-1b8d9b16a66c","variableMapping":{"str":"sacScale","adj":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","nodeCount":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1341","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.RuntimeException((\"Adj.node problem with edge \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[5,6,7,148,8,10,149,31,317,150,152,153,154,104,105,318,110,115,118,319,123,126,128,320,133,321,139,140,322,145,155],"tindex":"3e828839-da2e-11e4-89e8-ef685a4ae9a5","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":-1},{"failures":[167,245,184,323,324],"tindex":"3e82af4a-da2e-11e4-89e8-49f13488c7e9","variableMapping":{"size":"from","delta":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[5,149,31,317,150,152,153,104,110,123,133,139,145,155],"tindex":"3e82af4b-da2e-11e4-89e8-9d70c4a74600","variableMapping":{"r":"maxSpeed","com.graphhopper.util.AngleCalc.PI_4":"maxSpeed","x":"fwdSpeed","angle":"fwdSpeed","absY":"fwdSpeed","com.graphhopper.util.AngleCalc.PI3_4":"fwdSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"3e82af4c-da2e-11e4-89e8-3719e7c6b244","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"3e82af4d-da2e-11e4-89e8-ed7691877d3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"3e82af4e-da2e-11e4-89e8-c5243b5314aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:345","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[5,6,7,148,8,10,11,156,157,21,22,177,180,325,326,327,328,329,330,57,331,332,333,334,335,336,337,338,60,61,339,340,341,342,343,344],"tindex":"3e82af4f-da2e-11e4-89e8-e1453847e4c4","variableMapping":{"segmentsToMap":"tmpErr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-1},{"failures":[],"tindex":"3e82af50-da2e-11e4-89e8-4375e70c08ca","variableMapping":{"resultOrientation":"angle","orientation":"com.graphhopper.util.AngleCalc.PI3_4","java.lang.Math.PI":"com.graphhopper.util.AngleCalc.PI3_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"3e82af51-da2e-11e4-89e8-4927c1e9ae4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-2},{"failures":[150],"tindex":"3e82af52-da2e-11e4-89e8-affb2ac67dee","variableMapping":{"this":"this","configLocation":"tt","fileStr":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:63","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"3e82af53-da2e-11e4-89e8-1956118e39ad","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[4,5,6,7,148,8,9,10,12,149,20,99,21,22,23,24,25,26,27,28,29,30,31,345,32,150,151,152,153,346,154,155],"tindex":"3e82d664-da2e-11e4-89e8-fb736a79aad6","variableMapping":{"lastKey":"encoded","key":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[],"tindex":"3e82d665-da2e-11e4-89e8-1333bea7bb99","variableMapping":{"entry":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[103,105,109,117,122,128,132,138,140,144],"tindex":"3e82d666-da2e-11e4-89e8-931e2c9c64ff","variableMapping":{"baseUrl":"wayTypeName","fileDetails":"wayTypeName","zippedURL":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:274","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[5,149,99,31,32,150,151,152,153,346,154,101,103,104,105,109,112,113,114,115,347,348,117,118,122,125,126,128,132,134,136,138,139,140,144,147,155],"tindex":"3e82d667-da2e-11e4-89e8-dd9bd0dd4cf2","variableMapping":{"flags2":"ferryBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"ferryBit","flags1":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"3e82d668-da2e-11e4-89e8-f346247618cf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[104,105,115,118,126,128,139,140],"tindex":"3e82d669-da2e-11e4-89e8-8b8203b1ede2","variableMapping":{"factor":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"3e82d66a-da2e-11e4-89e8-29ede18fb187","variableMapping":{"keyIndex":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-2},{"failures":[],"tindex":"3e82d66b-da2e-11e4-89e8-6d36d51a3e47","variableMapping":{"entry":"entry","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","entryVal":"com.graphhopper.routing.util.EncodingManager.FOOT","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:170","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"3e82d66c-da2e-11e4-89e8-6fc084a82b0d","variableMapping":{"a":"index","b":"index","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:323","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-2},{"failures":[],"tindex":"3e83c0cd-da2e-11e4-89e8-5f31f2c9e855","variableMapping":{"entry":"name"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-2},{"failures":[],"tindex":"3e83c0ce-da2e-11e4-89e8-517a8cec0b58","variableMapping":{"nodes":"segmentsToCreate","adj":"segmentsToCreate","base":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[5,6,7,148,8,10,12,99,21,22,23,25,26,27,28,29,30,31,345,32],"tindex":"3e83c0cf-da2e-11e4-89e8-e94200d68a8e","variableMapping":{"highwayValue":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"3e83c0d0-da2e-11e4-89e8-797dd6ceeae2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-2},{"failures":[],"tindex":"3e83c0d1-da2e-11e4-89e8-513fc2b8fc02","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[349],"tindex":"3e83c0d2-da2e-11e4-89e8-39e78139a61c","variableMapping":{"str":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[20],"tindex":"3e83e6e3-da2e-11e4-89e8-19c9df354437","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[346],"tindex":"3e83e6e4-da2e-11e4-89e8-33af78c42b39","variableMapping":{"highwayValue":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"3e83e6e5-da2e-11e4-89e8-13e99c29e1ce","variableMapping":{"midLat":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"3e83e6e6-da2e-11e4-89e8-b11db494f200","variableMapping":{"index":"com.graphhopper.util.EdgeIterator.NO_EDGE","entrySize":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:294","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[74,98],"tindex":"3e83e6e7-da2e-11e4-89e8-d5c6463f528f","variableMapping":{"empty":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[156,350,158,160,161,99,32,351,1,0,2,42,45,167,245,171,174,352,247,177,184,323,185,186,190,324,191,193,50,51,194,195,198,353,201,203,54,205,62,210,211,214,354,217,218,66,220,75,76,77,221,222,225,355,228,230,80,232,86,87,233,234,237,356,240,242,90,244],"tindex":"3e83e6e8-da2e-11e4-89e8-53566fcdfde5","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[100,102,107,108,110,111,116,120,121,123,124,129,131,133,135,137,142,143,145,146],"tindex":"3e83e6e9-da2e-11e4-89e8-8dd78535b3d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:462","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"3e83e6ea-da2e-11e4-89e8-09296797840a","variableMapping":{"time":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[],"tindex":"3e840dfb-da2e-11e4-89e8-9d2f2c8fa878","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[357,358,359],"tindex":"3e840dfc-da2e-11e4-89e8-292dd4395eb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"3e840dfd-da2e-11e4-89e8-715f84cded36","variableMapping":{"encodingManager":"em"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"EncodingManager can only be null if you call loadExisting\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[360,361,362,14,15,363,38,364],"tindex":"3e840dfe-da2e-11e4-89e8-8de360b5714a","variableMapping":{"lat":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[3,4,5,6,7,148,8,9,10,11,12,149,20,99,21,22,23,24,25,26,27,28,29,30,31,32,113,114,115],"tindex":"3e840dff-da2e-11e4-89e8-135af5205f4c","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[365],"tindex":"3e840e00-da2e-11e4-89e8-df80bd24312d","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[],"tindex":"3e840e01-da2e-11e4-89e8-359f5302098f","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[],"tindex":"3e840e02-da2e-11e4-89e8-1b33c99dbe7e","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"3e840e03-da2e-11e4-89e8-ad78be228caa","variableMapping":{"high":"flags","highKey":"directionBitMask","key":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[5,7,148,10,11,39,40,41,42,43,44,45,46,366,48,173,175,247,177,180],"tindex":"3e840e04-da2e-11e4-89e8-b1c04423a6b7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-1},{"failures":[],"tindex":"3e840e05-da2e-11e4-89e8-25e17c7c4ad0","variableMapping":{"edgePointer":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[167,245,168,171,172,180,181,49,182,184,323,190,324,193],"tindex":"3e840e06-da2e-11e4-89e8-17be7585b498","variableMapping":{"store":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"3e840e07-da2e-11e4-89e8-451fb051417b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[8],"tindex":"3e840e08-da2e-11e4-89e8-7bbfa47d8479","variableMapping":{"empty":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"3e840e09-da2e-11e4-89e8-339d74733a3a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[],"tindex":"3e840e0a-da2e-11e4-89e8-037824a35bbe","variableMapping":{"equalNormedDelta":"lon","tmpNormedDist":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:924","type":"CtIfImpl","sourcecode":"if (double <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[3,12,21],"tindex":"3e840e0b-da2e-11e4-89e8-d9f7b9dcf935","variableMapping":{"str":"val","name":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:82","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":215,"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":241,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":248,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":71,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":155,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":210,"com.graphhopper.reader.OSMReaderTest.testFerry":20,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":158,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":159,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":39,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":139,"com.graphhopper.routing.QueryGraphTest.testOneWay":366,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":294,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":129,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":57,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":274,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":4,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":363,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":59,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":272,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":112,"com.graphhopper.reader.OSMReaderTest.testWithBounds":30,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":304,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":68,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":278,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":255,"com.graphhopper.coll.CompressedArrayTest.testCompress":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":303,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":320,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":55,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":187,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":63,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":353,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":92,"com.graphhopper.util.AngleCalcTest.testOrientation":360,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":318,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":191,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":282,"com.graphhopper.GraphHopperTest.testPrepare":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":307,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":51,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":323,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":245,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":359,"com.graphhopper.util.BitUtilLittleTest.testToBitString":16,"com.graphhopper.util.InstructionListTest.testWayList":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":137,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":176,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":132,"com.graphhopper.GraphHopperAPITest.testDisconnected179":157,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":330,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":0,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":128,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":298,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":60,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":161,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":220,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":322,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":7,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":87,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":229,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":193,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":61,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":201,"com.graphhopper.reader.OSMReaderTest.testSort":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":246,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":311,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":324,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":90,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":119,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":308,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":268,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":183,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":147,"com.graphhopper.routing.PathTest.testWayList":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":300,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":321,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":325,"com.graphhopper.coll.OSMIDMapTest.testGet2":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":184,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":77,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":123,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":197,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":332,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":238,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":333,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":251,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":177,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":331,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":105,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":305,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":171,"com.graphhopper.coll.OSMIDMapTest.testGetLong":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":170,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":143,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":263,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":292,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":86,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":83,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":267,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":104,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":362,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":44,"com.graphhopper.coll.CompressedArrayTest.testCompress2":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":37,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":253,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":355,"com.graphhopper.GraphHopperAPITest.testLoad":156,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":182,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":195,"com.graphhopper.storage.LevelGraphStorageTest.testClone":235,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":349,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":2,"com.graphhopper.reader.OSMReaderTest.testBarriers":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":221,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":64,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":115,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":329,"com.graphhopper.util.GHUtilityTest.testCopy":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":213,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":206,"com.graphhopper.util.AngleCalcTest.testAtan2":361,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":280,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":286,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":142,"com.graphhopper.routing.PathTest.testFindInstruction":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":222,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":260,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":354,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":198,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":348,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":175,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":102,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":204,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":247,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":351,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":317,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":230,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":261,"com.graphhopper.reader.PrinctonReaderTest.testRead":160,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":58,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":237,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":227,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":85,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":120,"com.graphhopper.util.InstructionListTest.testWayList2":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":111,"com.graphhopper.reader.OSMReaderTest.testFoot":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":218,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":342,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":91,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":340,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":205,"com.graphhopper.reader.OSMReaderTest.testOneWay":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":341,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":136,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":36,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":250,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":284,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":328,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":254,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":53,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":94,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":131,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":256,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":172,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":216,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":24,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":188,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":49,"com.graphhopper.coll.OSMIDMapTest.testGet":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":192,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":95,"com.graphhopper.routing.PathBidirRefTest.testExtract":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":186,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":326,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":88,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":141,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":335,"com.graphhopper.storage.RAMDataAccessTest.testCopy":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":65,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":126,"com.graphhopper.storage.RAMDataAccessTest.testSegments":72,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":301,"com.graphhopper.reader.OSMReaderTest.testMain":21,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":315,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":151,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":262,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":316,"com.graphhopper.routing.PathBidirRefTest.testExtract2":166,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":281,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":336,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":150,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":240,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":219,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":356,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":122,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":343,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":266,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":202,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":293,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":124,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":26,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":244,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":309,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":228,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":100,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":239,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":31,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":190,"com.graphhopper.storage.StorablePropertiesTest.testStore":313,"com.graphhopper.storage.GraphHopperStorageTest.testClone":196,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":306,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":346,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":152,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":52,"com.graphhopper.GraphHopperTest.testFootAndCar":148,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":265,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":279,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":297,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":337,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":70,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":121,"com.graphhopper.util.BitUtilLittleTest.testToFloat":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":212,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":236,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":249,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":352,"com.graphhopper.reader.OSMReaderTest.testRelation":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":223,"com.graphhopper.GraphHopperTest.testPrepareOnly":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":181,"com.graphhopper.GraphHopperTest.testVia":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":211,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":110,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":97,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":41,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":149,"com.graphhopper.util.BitUtilLittleTest.testToInt":18,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":127,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":288,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":302,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":114,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":169,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":269,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":76}}]
