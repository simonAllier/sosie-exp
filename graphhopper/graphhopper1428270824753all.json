[{"failures":[],"tindex":"3b6d5154-dbde-11e4-bb43-4dcc54dbc1df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[],"tindex":"3b6d5155-dbde-11e4-bb43-1f9a18573139","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":0},{"failures":[],"tindex":"3b6d7866-dbde-11e4-bb43-0314a392a621","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-2},{"failures":[],"tindex":"3b6d7867-dbde-11e4-bb43-83450766e944","variableMapping":{"turnCostIndex":"nodes","NO_TURN_ENTRY":"nodes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"3b6d7868-dbde-11e4-bb43-9534404379f9","variableMapping":{"systemProperty":"entryVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"3b6d7869-dbde-11e4-bb43-6f2e2cc54c5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"3b6d786a-dbde-11e4-bb43-c3d28308f473","variableMapping":{"i":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"3b6d786b-dbde-11e4-bb43-e9baebd543f7","variableMapping":{"factor":"r"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":0},{"failures":[],"tindex":"3b6d786c-dbde-11e4-bb43-9f86a29d853d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"3b6d786d-dbde-11e4-bb43-a7513546e9e6","variableMapping":{"width":"shift","lonSimilar":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"3b6d786e-dbde-11e4-bb43-61646056cd2d","variableMapping":{"nodeThis":"length","nextEdgeOther":"segmentSizePower","nodeOther":"length","nextEdge":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[24,25,26,27,28,5,29,7,30,31,8,32,10,33,12,34,14,35,16,17,18,36,37,38,19,39,21,40,23,41,42,43,44,45,46,47,48,49,50,51,2,3,52,53,54,4,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"3b6d786f-dbde-11e4-bb43-09c2e1db1184","variableMapping":{"nanoTime":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[],"tindex":"3b6d7870-dbde-11e4-bb43-b5f305a0fa25","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"speed","tmpNode":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"3b6d9f81-dbde-11e4-bb43-bb6372871aa9","variableMapping":{"deltaX":"minLat","tmp":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[25,29,33,35,40,49,50],"tindex":"3b6d9f82-dbde-11e4-bb43-adc6851bf53d","variableMapping":{"resultOrientation":"speed","orientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[71,72,73,74,75],"tindex":"3b6d9f83-dbde-11e4-bb43-d7d7228db504","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"potentialBarriers"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[],"tindex":"3b6d9f84-dbde-11e4-bb43-03ef55c30f2b","variableMapping":{"relationCodeEncoder":"wayTypeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"3b6d9f85-dbde-11e4-bb43-33e4177bf568","variableMapping":{"directionBitMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"3b6d9f86-dbde-11e4-bb43-e1192d2ba86b","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"3b6d9f87-dbde-11e4-bb43-15922c197d38","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"3b6d9f88-dbde-11e4-bb43-6d55fe41645b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-2},{"failures":[],"tindex":"3b6d9f89-dbde-11e4-bb43-b76d68f1653c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-2},{"failures":[5],"tindex":"3b6d9f8a-dbde-11e4-bb43-732f1515fbaa","variableMapping":{"osmFile":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"3b6d9f8b-dbde-11e4-bb43-0308379ecc12","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[76,77,78,79,24,80,81,82,83,84,56,85,86,87,88,89,59,63,90,64,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"3b6d9f8c-dbde-11e4-bb43-2108d124d84b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[63,127,128],"tindex":"3b6d9f8d-dbde-11e4-bb43-cb89bfc202e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"3b6d9f8e-dbde-11e4-bb43-97c9e84bde48","variableMapping":{"factor":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[71,72,73,74,75,129],"tindex":"3b6d9f8f-dbde-11e4-bb43-3d1edd3923b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[],"tindex":"3b6dc6a0-dbde-11e4-bb43-cd577dd32d46","variableMapping":{"byteCount":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"3b6dc6a1-dbde-11e4-bb43-1f3bc177cbd0","variableMapping":{"configLocation":"str","fileStr":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:64","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":0},{"failures":[],"tindex":"3b6dc6a2-dbde-11e4-bb43-6915e22da79f","variableMapping":{"WIDTH":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:250","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[(2 * (int)) * (int)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"3b6dc6a3-dbde-11e4-bb43-059bd6f5a978","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[5,6,9,10,11,13,14,15,20,21,22],"tindex":"3b6dc6a4-dbde-11e4-bb43-f97adc1f2afb","variableMapping":{"height":"wayType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:415","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = int + \": \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-1},{"failures":[130,29,131,33,132,35,133,40],"tindex":"3b6dc6a5-dbde-11e4-bb43-51a2976bc230","variableMapping":{"dX":"speed","dY":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"3b6dc6a6-dbde-11e4-bb43-2d615251df0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"3b6dc6a7-dbde-11e4-bb43-b1addaf6fca0","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"3b6dc6a8-dbde-11e4-bb43-6f6fdd8aeb57","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.routing.util.FootFlagEncoder.FERRY_SPEED","edge":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[134],"tindex":"3b6dc6a9-dbde-11e4-bb43-0f0d1e872595","variableMapping":{"neighborUpdates":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[135,53],"tindex":"3b6dc6aa-dbde-11e4-bb43-df5d5892a6b5","variableMapping":{"finishedTo":"finishedFrom","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-1},{"failures":[],"tindex":"3b6dc6ab-dbde-11e4-bb43-d5eece79c78d","variableMapping":{"freeIndex":"speed","currentIndex":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":0},{"failures":[76,136,137,138,78,80,81,83,84,56,57,86,139,140,87,88,141,142,143,144,145,58,146,89,60,61,63,64,95,97,100,102,105,106,108,109,110,112,114,115,116,147,148,149,150,151,152,153,154,155,156,157,120,122,123,124,158,159,160,161,162],"tindex":"3b6dc6ac-dbde-11e4-bb43-57326529abff","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[],"tindex":"3b6dc6ad-dbde-11e4-bb43-d763417f65fd","variableMapping":{"obj":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:69","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"3b6dc6ae-dbde-11e4-bb43-1316ead96efb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[],"tindex":"3b6dedbf-dbde-11e4-bb43-2972aa2073fa","variableMapping":{"byteCount":"todoBytes","longSegmentSize":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:116","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[163,164],"tindex":"3b6dedc0-dbde-11e4-bb43-c575eee6a6f3","variableMapping":{"cap":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[],"tindex":"3b6dedc1-dbde-11e4-bb43-a57c52bd970b","variableMapping":{"time":"nanoTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[141],"tindex":"3b6dedc2-dbde-11e4-bb43-f7787b72cdae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[165,166,167,168,4],"tindex":"3b6dedc3-dbde-11e4-bb43-9589cc0074b9","variableMapping":{"locs":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[],"tindex":"3b6dedc4-dbde-11e4-bb43-d93093741a81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[76,136,137,138,77,78,79,169,37,80,170,81,171,172,173,174,82,83,175,84,56,57,86,139,140,87,88,141,142,143,144,145,58,146,89,176,59,60,61,63,90,64,65,91,95,96,97,98,99,100,177,101,102,178,103,179,105,106,107,108,109,110,180,112,113,114,115,116,181,182,183,147,148,128,184,149,150,151,152,185,186,153,187,188,154,155,156,157,120,121,122,123,124,189,190,158,191,192,159,160,161,162],"tindex":"3b6dedc5-dbde-11e4-bb43-2d2e5bdf2bca","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"3b6dedc6-dbde-11e4-bb43-554838667cc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"3b6dedc7-dbde-11e4-bb43-4570b4f84f49","variableMapping":{"size":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[37],"tindex":"3b6dedc8-dbde-11e4-bb43-43aac98b41e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[36],"tindex":"3b6dedc9-dbde-11e4-bb43-6d3daf99a8df","variableMapping":{"res":"forwardBit","maxBit":"directionBitMask","value":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[],"tindex":"3b6dedca-dbde-11e4-bb43-e77d4c1dbff5","variableMapping":{"resultOrientation":"java.lang.Double.MAX_VALUE","orientation":"java.lang.Double.MAX_VALUE","java.lang.Math.PI":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"3b6dedcb-dbde-11e4-bb43-8d1601028f31","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[193,194,195,196,141,197],"tindex":"3b6dedcc-dbde-11e4-bb43-d5d543ad9b26","variableMapping":{"fwdFaster":"costs","incDist2DSum":"costs","fwdSlower":"costs","fullDist2D":"costs","restDist2D":"costs","speed":"costs","decDist2DSum":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[17,198],"tindex":"3b6dedcd-dbde-11e4-bb43-c1ea5ad6ca6a","variableMapping":{"high":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"3b6dedce-dbde-11e4-bb43-9747f5013323","variableMapping":{"maxMCSpeed":"bwSlower","speed":"decDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[],"tindex":"3b6e14df-dbde-11e4-bb43-f3d8d7ecc33b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[75],"tindex":"3b6e14e0-dbde-11e4-bb43-9b96631a2c3c","variableMapping":{"empty":"locked"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[30,199,194,200,36,75,42,201,43,44,202,45,203,46,129,204,47,205,206,48,207,49,50,208,209,210,196,211,51,212,213,2,3,214,215,216,217,166,218,219,220,52,221,53,54,222,223,224,225,226,167,80,168,227,4,170,228,229,230,57,231,86,139,140,87,88,141,142,143,144,145,58,146,89,62,65,91,232,233,234,235,105,236,237,106,238,239,240,241,107,242,243,244,245,246,247,248,249,250,251,67,252,253,254,255,256,257,258,259,260,108,261,262,263,264,265,109,266,267,268,269,110,270,111,180,271,272,273,112,274,275,276,277,113,278,279,280,281,282,283,284,285,286,287,68,288,289,290,291,292,293,294,295,296,114,297,298,299,300,301,115,302,303,304,305,116,306,117,181,307,308,184,309,310,311,312,313,314,315,316,317,318,69,319,320,321,322,323,324,325,326,327,149,328,329,330,331,150,151,332,333,334,335,152,336,337,185,338,339,340,341,342,343,344,119,345,346,120,347,348,349,350,121,351,352,353,354,355,356,357,358,359,360,70,361,362,363,364,365,366,367,368,369,122,370,371,372,373,374,123,375,376,377,378,124,379,125,189,380,381],"tindex":"3b6e14e1-dbde-11e4-bb43-27c913e7cd44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"3b6e14e2-dbde-11e4-bb43-3f5f3631c263","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[382,383,76,384,385,386,387,388,389,77,78,79,24,390,391,392,393,28,394,5,395,71,396,397,398,399,130,6,29,400,7,30,401,31,8,402,9,32,10,193,403,72,404,405,406,407,408,131,11,33,409,410,12,411,412,163,164,413,414,415,34,13,14,73,416,417,418,419,420,132,15,35,421,422,16,199,423,36,169,37,424,38,19,425,20,39,21,195,426,74,427,428,429,430,431,133,22,40,432,433,23,41,434,75,42,201,43,44,202,45,203,46,435,129,204,47,205,206,48,207,49,50,208,209,210,196,211,51,212,436,437,213,0,438,439,135,440,441,442,443,444,165,1,445,446,447,448,2,3,214,215,216,217,166,218,219,220,52,221,53,54,222,223,224,225,226,167,80,168,227,4,170,81,449,171,172,173,174,82,83,450,175,84,228,229,451,55,56,85,230,57,231,86,139,140,87,88,141,142,198,143,144,145,58,146,452,453,89,176,59,60,61,62,63,454,90,64,65,91,455,66,456,457,458,459,460,461,462,463,232,464,465,466,467,468,469,470,471,472,473,474,475,233,476,477,100,177,101,478,479,480,481,482,483,484,485,486,487,488,234,489,490,491,492,493,102,178,103,494,495,496,497,498,499,500,501,502,503,504,235,105,236,237,106,238,239,240,241,107,242,243,244,245,246,247,248,249,250,251,67,252,253,254,255,256,257,258,259,260,108,261,262,263,264,265,109,266,267,268,269,110,270,111,180,271,272,273,112,274,275,276,277,113,278,279,280,281,282,283,284,285,286,287,68,288,289,290,291,292,293,294,295,296,114,297,298,299,300,301,115,302,303,304,305,116,306,117,181,307,308,184,309,310,311,312,313,314,315,316,317,318,69,319,320,321,322,323,324,325,326,327,149,328,329,330,331,150,151,332,333,334,335,152,336,337,185,338,339,340,341,342,343,344,119,345,346,120,347,348,349,350,121,351,352,353,354,355,356,357,358,359,360,70,361,362,363,364,365,366,367,368,369,122,370,371,372,373,374,123,375,376,377,378,124,379,125,189,380,381],"tindex":"3b6e3bf3-dbde-11e4-bb43-7b74a1954310","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:284","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\",\"))\n    return \"destinations: \" + java.lang.String;\nelse\n    return \"destination: \" + java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[],"tindex":"3b6e3bf4-dbde-11e4-bb43-a52e5eb47426","variableMapping":{"byteCount":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"3b6e3bf5-dbde-11e4-bb43-c7d60f58185f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"3b6e3bf6-dbde-11e4-bb43-5d026eaf6e0d","variableMapping":{"weightLong":"encoded","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[505],"tindex":"3b6e3bf7-dbde-11e4-bb43-2dfe4482fba0","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-1},{"failures":[],"tindex":"3b6e3bf8-dbde-11e4-bb43-6193c2516f44","variableMapping":{"turnCostIndex":"com.graphhopper.util.EdgeIterator.NO_EDGE","NO_TURN_ENTRY":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[506,507,508,476,481,482,492,497,498,509,510,511,512,513,514,515,516],"tindex":"3b6e3bf9-dbde-11e4-bb43-adca3c7db4a6","variableMapping":{"incEleSum":"minLatTmp","incDist2DSum":"maxLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-1},{"failures":[],"tindex":"3b6e3bfa-dbde-11e4-bb43-35817a9b13b6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:200","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":0},{"failures":[411,413,414],"tindex":"3b6e3bfb-dbde-11e4-bb43-9973e593dfbc","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"nodes","edgeTo":"nodes","edgeFrom":"nodes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-1},{"failures":[71,400,30,32,403,72,409,415,73,421,39,426,74,432,75,43,45,203,47,206,48,49,208,57,231,86,139,140,87,88,141,142,143,144,145,58,517,146,89,176,59,60,61,62,63,90,64,65,91],"tindex":"3b6e3bfc-dbde-11e4-bb43-8ff7f234ec2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-1},{"failures":[],"tindex":"3b6e3bfd-dbde-11e4-bb43-972d2242f37c","variableMapping":{"algo":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":0},{"failures":[382,383,76,384,386,387,388,389,77,78,79,24,390,391,392,411,412,163,164,413,414,169,37,201,436,437,0,438,135,440,441,442,443,444,165,1,445,446,447,448,2,3,214,215,216,217,166,218,219,220,52,221,53,54,222,223,224,225,226,167,80,168,227,4,170,170,81,81,449,449,171,171,172,172,173,173,174,174,82,82,83,83,450,450,175,175,84,84,451,55,56,85,57,231,86,139,140,87,88,141,142,143,144,145,58,146,452,453,197,89,59,60,61,62,63,90,64,65,91,66,456,458,459,460,461,463,232,518,464,465,466,467,469,470,471,472,473,475,233,476,477,100,177,101,478,479,480,481,482,483,484,485,486,487,488,234,489,490,491,492,493,102,178,103,494,495,496,497,498,499,500,501,502,503,504,235,105,237,106,238,239,67,273,112,274,275,68,519,520,147,69,150,342,119,346,120,347,348,70],"tindex":"3b6e630e-dbde-11e4-bb43-052249752f3e","variableMapping":{"size":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[2,3,168,4],"tindex":"3b6e630f-dbde-11e4-bb43-a599815a17e6","variableMapping":{"size":"to","from":"skippedEdge2","end":"skippedEdge2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[43,203],"tindex":"3b6e6310-dbde-11e4-bb43-67ab26e807e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[411,413,414],"tindex":"3b6e6311-dbde-11e4-bb43-27bdd2765e99","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"start","tmpNode":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"3b6e6312-dbde-11e4-bb43-19470a8ffa55","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"3b6e6313-dbde-11e4-bb43-49b0f3ef9c34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[],"tindex":"3b6e6314-dbde-11e4-bb43-697f79ccd52c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[57],"tindex":"3b6e6315-dbde-11e4-bb43-51551a9c12c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"3b6e6316-dbde-11e4-bb43-fb85ba393faa","variableMapping":{"size":"i","capacity":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[],"tindex":"3b6e6317-dbde-11e4-bb43-47ec43c91f87","variableMapping":{"nodesContracted":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":0},{"failures":[],"tindex":"3b6e6318-dbde-11e4-bb43-bbad0a0091b5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[28,5,32,10,14,39,21],"tindex":"3b6e6319-dbde-11e4-bb43-17be2e2d213e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"3b6e631a-dbde-11e4-bb43-770ba79a79eb","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"3b6e631b-dbde-11e4-bb43-fd282eee4c3d","variableMapping":{"workerThreads":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[24,25,28,394,5,395,71,396,398,6,29,400,7,30,31,8,402,9,32,10,403,72,404,406,407,11,33,409,410,12,415,34,13,14,73,416,418,419,15,35,421,422,16,17,18,169,38,19,425,20,39,21,426,74,427,429,430,22,40,432,433,23,75,43,45,203,129,204,47,205,206,48,49,50,208,521,57,231,86,139,140,87,88,141,142,198,143,144,145,58,517,146,522,523,89,176,59,60,61,62,63,90,64,65,91],"tindex":"3b6e631c-dbde-11e4-bb43-4716eb7e87e1","variableMapping":{"name":"name","properties":"properties"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:183","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.remove(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[394,5,395,396,398,6,29,7,31,8,402,10,404,406,407,11,33,410,12,34,14,416,418,419,15,35,422,16,17,38,19,425,21,427,429,430,22,40,433,23],"tindex":"3b6e631d-dbde-11e4-bb43-a79bbf6a36e0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[],"tindex":"3b6e631e-dbde-11e4-bb43-5fa6368306df","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"segmentSizeIntsPower","nodeId":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"3b6e8a2f-dbde-11e4-bb43-f7f623ac4740","variableMapping":{"type":"com.graphhopper.storage.DAType.RAM_INT","defaultType":"com.graphhopper.storage.DAType.RAM_INT_STORE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[],"tindex":"3b6e8a30-dbde-11e4-bb43-0d1dbbd214ea","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:133","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[76,77,78,79,391,392,411,412,163,164,413,207,211,436,437,135,440,441,442,443,165,445,447,448,2,214,215,216,217,166,218,219,220,52,222,223,224,225,167,80,168,227,4,172,452,453,66,456,232,233,234,235,105,106,242,243,245,246,250,256,258,263,265,267,269,271,112,278,279,281,282,286,292,294,299,301,303,305,307,309,310,312,313,317,323,325,330,150,333,335,338,120,351,352,354,355,359,365,367,372,374,376,378,380],"tindex":"3b6e8a31-dbde-11e4-bb43-e525be4ef0d4","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-1},{"failures":[30,199,36,75,42,201,43,44,202,45,203,46,129,204,47,205,206,48,207,49,50,208,209,210,196,211,51,212,213,2,3,214,215,216,217,166,218,219,220,52,221,53,54,222,223,224,225,226,167,80,168,227,4,170,228,229,230,57,231,86,139,140,87,88,141,142,143,144,145,58,146,89,62,65,91,232,233,234,235,105,236,237,106,238,239,240,241,107,242,243,244,245,246,247,248,249,250,251,67,252,253,254,255,256,257,258,259,260,108,261,262,263,264,265,109,266,267,268,269,110,270,111,180,271,272,273,112,274,275,276,277,113,278,279,280,281,282,283,284,285,286,287,68,288,289,290,291,292,293,294,295,296,114,297,298,299,300,301,115,302,303,304,305,116,306,117,181,307,308,184,309,310,311,312,313,314,315,316,317,318,69,319,320,321,322,323,324,325,326,327,149,328,329,330,331,150,151,332,333,334,335,152,336,337,185,338,339,340,341,342,343,344,119,345,346,120,347,348,349,350,121,351,352,353,354,355,356,357,358,359,360,70,361,362,363,364,365,366,367,368,369,122,370,371,372,373,374,123,375,376,377,378,124,379,125,189,380,381],"tindex":"3b6e8a32-dbde-11e4-bb43-c3f3372d8c2d","variableMapping":{"val":"com.graphhopper.routing.util.EncodingManager.FOOT","existing":"com.graphhopper.routing.util.EncodingManager.FOOT","key":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[],"tindex":"3b6e8a33-dbde-11e4-bb43-b383a50b3c4d","variableMapping":{"str":"location","this":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:152","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg())\n    java.lang.String += \"_INT\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-2},{"failures":[],"tindex":"3b6e8a34-dbde-11e4-bb43-0f2e88fb7323","variableMapping":{"entry":"str","entryVal":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[],"tindex":"3b6e8a35-dbde-11e4-bb43-a9afe149c536","variableMapping":{"distance":"backSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[393,28,394,5,395,71,396,397,398,399,130,6,29,400,7,30,401,31,8,402,9,32,10,193,403,72,404,405,406,407,408,131,11,33,409,410,12,163,415,34,13,14,73,416,417,418,419,420,132,15,35,421,422,16,199,17,194,200,18,36,169,37,424,38,19,425,20,39,21,195,426,74,427,428,429,430,431,133,22,40,432,433,23,75,42,201,43,44,202,45,203,46,129,204,47,205,206,48,207,49,50,208,209,210,196,211,51,2,52,55,57,231,86,139,140,87,88,141,142,198,143,144,145,58,146,342],"tindex":"3b6e8a36-dbde-11e4-bb43-9904d399ddf2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:193","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"cycleway\") , 30)"},"status":-1},{"failures":[506,507,508,476,479,481,482,492,495,497,498,509,510,524,511,512,513,514,515,516],"tindex":"3b6e8a37-dbde-11e4-bb43-25fcf34c631f","variableMapping":{"ret":"i","retBucket":"allBits","i":"i","storedKey":"hash","bucketSize":"i","key":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:120","type":"CtIfImpl","sourcecode":"if (long == long) {\n    int = (int * (int)) + int;\n    break;\n} else if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":374,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":226,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":25,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":119,"com.graphhopper.GraphHopperAPITest.testNoLoad":457,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":309,"com.graphhopper.reader.OSMReaderTest.testFerry":57,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":391,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":392,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":32,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":395,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":178,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":176,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":381,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":251,"com.graphhopper.coll.CompressedArrayTest.testCompress":507,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":130,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":181,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":149,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":68,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":491,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":445,"com.graphhopper.GraphHopperTest.testPrepare":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":336,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":294,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":402,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":52,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":77,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":518,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":6,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":388,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":349,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":492,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":413,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":31,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":519,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":219,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":287,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":177,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":180,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":105,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":514,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":121,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":448,"com.graphhopper.GraphHopperTest.testLoadOSM":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":483,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":101,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":423,"com.graphhopper.reader.OSMReaderTest.testSort":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":33,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":144,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":163,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":238,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":304,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":112,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":512,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":337,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":82,"com.graphhopper.routing.DijkstraTest.initializationError":212,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":197,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":269,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":373,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":284,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":236,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":246,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":20,"com.graphhopper.reader.OSMNodeTest.testSetTags":521,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":107,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":360,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":16,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":35,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":496,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":222,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":490,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":494,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":454,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":217,"com.graphhopper.coll.OSMIDMapTest.testGetLong":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":216,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":352,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":260,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":366,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":120,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":368,"com.graphhopper.coll.CompressedArrayTest.testCompress2":506,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":296,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":34,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":67,"com.graphhopper.GraphHopperAPITest.testLoad":66,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":350,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":183,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":75,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":288,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":279,"com.graphhopper.storage.LevelGraphStorageTest.testClone":354,"com.graphhopper.reader.OSMReaderTest.testBarriers":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":242,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":414,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":489,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":195,"com.graphhopper.util.GHUtilityTest.testCopy":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":313,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":235,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":420,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":400,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":474,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":161,"com.graphhopper.routing.PathTest.testFindInstruction":85,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":397,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":243,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":45,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":390,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":379,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":425,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":471,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":305,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":267,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":255,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":346,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":431,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":200,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":213,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":356,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":314,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":128,"com.graphhopper.util.InstructionListTest.testWayList2":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":433,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":333,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":484,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":307,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":524,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":247,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":8,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":169,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":274,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":358,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":193,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":252,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":464,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":166,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":278,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":87,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":153,"com.graphhopper.routing.AStarTest.initializationError":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":80,"com.graphhopper.coll.OSMIDMapTest.testGet":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":250,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":203,"com.graphhopper.routing.PathBidirRefTest.testExtract":436,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":97,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":122,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":500,"com.graphhopper.storage.RAMDataAccessTest.testCopy":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":479,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":272,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":72,"com.graphhopper.storage.RAMDataAccessTest.testSegments":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":234,"com.graphhopper.util.GHUtilityTest.testSort2":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":223,"com.graphhopper.reader.OSMReaderTest.testMain":86,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":347,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":259,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":405,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":515,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":409,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":501,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":47,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":335,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":70,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":364,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":380,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":172,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":263,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":38,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":182,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":367,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":58,"com.graphhopper.storage.StorablePropertiesTest.testStore":104,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":126,"com.graphhopper.storage.GraphHopperStorageTest.testClone":281,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":334,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":49,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":290,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":340,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":315,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":343,"com.graphhopper.routing.PathTest.testTime":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":419,"com.graphhopper.util.BitUtilLittleTest.testToFloat":137,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":125,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":355,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":51,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":468,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":486,"com.graphhopper.reader.OSMReaderTest.testRelation":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":327,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":371,"com.graphhopper.util.GHUtilityTest.testSortDirected":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":40,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":156,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":171,"com.graphhopper.GraphHopperTest.testFootOnly":65,"com.graphhopper.util.BitUtilLittleTest.testToInt":138,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":394,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":48,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":465,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":495,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":215,"com.graphhopper.reader.OSMElementTest.testSetTags":523,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":438,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":424,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":488,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":323,"com.graphhopper.search.NameIndexTest.testCreate":94,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":159,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":170,"com.graphhopper.routing.QueryGraphTest.testOneWay":450,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":487,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":511,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":396,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":100,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":509,"com.graphhopper.reader.OSMReaderTest.testWithBounds":145,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":162,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":432,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":320,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":412,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":328,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":17,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":351,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":348,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":133,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":7,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":262,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":207,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":256,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":113,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":3,"com.graphhopper.util.BitUtilLittleTest.testToBitString":136,"com.graphhopper.util.InstructionListTest.testWayList":78,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":306,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":403,"com.graphhopper.GraphHopperAPITest.testDisconnected179":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":316,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":476,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":311,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":429,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":453,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":338,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":61,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":283,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":466,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":446,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":401,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":53,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":1,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":124,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":209,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":416,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":240,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":227,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":277,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":503,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":12,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":273,"com.graphhopper.routing.PathTest.testWayList":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":185,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":417,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":319,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":505,"com.graphhopper.coll.OSMIDMapTest.testGet2":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":4,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":376,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":261,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":408,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":293,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":248,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":282,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":365,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":497,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":498,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":191,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":157,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":499,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":74,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":13,"com.graphhopper.util.GHUtilityTest.testSort":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":480,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":26,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":516,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":407,"com.graphhopper.search.NameIndexTest.testPut":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":271,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":280,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":473,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":493,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":469,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":460,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":39,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":37,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":458,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":237,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":73,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":434,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":257,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":411,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":148,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":150,"com.graphhopper.routing.PathTest.testFound":451,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":36,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":91,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":378,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":435,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":342,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":406,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":253,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":93,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":69,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":286,"com.graphhopper.util.InstructionListTest.testEmptyList":389,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":220,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":132,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":502,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":54,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":211,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":204,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":29,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":129,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":224,"com.graphhopper.reader.PrinctonReaderTest.testRead":452,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":116,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":127,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":103,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":249,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":318,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":510,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":184,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":258,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":399,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":427,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":194,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":19,"com.graphhopper.reader.OSMReaderTest.testFoot":231,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":330,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":481,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":513,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":393,"com.graphhopper.reader.OSMReaderTest.testOneWay":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":482,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":289,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":302,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":268,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":398,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":155,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":426,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":325,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":442,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":508,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":447,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":440,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":461,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":201,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":321,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":449,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":275,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":517,"com.graphhopper.routing.PathBidirRefTest.testExtract2":437,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":520,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":467,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":15,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":485,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":301,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":462,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":422,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":141,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":339,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":463,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":165,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":478,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":303,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":385,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":357,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":210,"com.graphhopper.GraphHopperTest.testFootAndCar":62,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":114,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":362,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":14,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":504,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":192,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":312,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":444,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":245,"com.graphhopper.GraphHopperTest.testPrepareOnly":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":167,"com.graphhopper.GraphHopperTest.testVia":59,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":475,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":310,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":143,"com.graphhopper.reader.OSMElementTest.testHasTag":522,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":344,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":24,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":300,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":44,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":142,"com.graphhopper.routing.AStarBidirectionTest.initializationError":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":324,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":30,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":377,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":375,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":106}}]
