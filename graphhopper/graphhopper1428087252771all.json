[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"d1efc8f4-da32-11e4-829b-1d0b29dfc0c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[459],"tindex":"d1f176a5-da32-11e4-829b-abef04516e17","variableMapping":{"str":"minStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:200","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"d1f176a6-da32-11e4-829b-e39661717e9b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"d1f176a7-da32-11e4-829b-0daa0cc9ba8e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"d1f176a8-da32-11e4-829b-677f6319a8aa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:940","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[5,55,75],"tindex":"d1f176a9-da32-11e4-829b-fdc34af23e74","variableMapping":{"usedBits":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","nodeBitMask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"d1f176aa-da32-11e4-829b-9f789d475254","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[97],"tindex":"d1f176ab-da32-11e4-829b-ddcacc5ec246","variableMapping":{"str":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:197","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"d1f176ac-da32-11e4-829b-e154bd23615d","variableMapping":{"towerNodeDistance":"midLon","zeroCounter":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:740","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    (long)++;\n    double = 1.0E-4;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":0},{"failures":[2,165,168,169,174,175,176,179,181,193,203,318,320,329,332,333,340,355,361,363,367],"tindex":"d1f176ad-da32-11e4-829b-49b5589674c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.next()"},"status":-1},{"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"tindex":"d1f176ae-da32-11e4-829b-09165eee0fa3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-1},{"failures":[100,104],"tindex":"d1f176af-da32-11e4-829b-f141da118444","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"node","tmpNode":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"d1f19dc0-da32-11e4-829b-e39f8e044608","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"d1f19dc1-da32-11e4-829b-05ef834880ef","variableMapping":{"maxMCSpeed":"midLon","speed":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"d1f19dc2-da32-11e4-829b-19ab4db36ee8","variableMapping":{"obtained":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[2,10],"tindex":"d1f19dc3-da32-11e4-829b-b562ce012e8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"d1f19dc4-da32-11e4-829b-d9791040c4bf","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[100],"tindex":"d1f19dc5-da32-11e4-829b-25374ac724ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[],"tindex":"d1f19dc6-da32-11e4-829b-81108435f507","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[459],"tindex":"d1f19dc7-da32-11e4-829b-e18a307e7f00","variableMapping":{"message":"minStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"d1f19dc8-da32-11e4-829b-4d1e0f3f9a30","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[105],"tindex":"d1f19dc9-da32-11e4-829b-0361a29fbe05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[53],"tindex":"d1f19dca-da32-11e4-829b-a126cf04c0d3","variableMapping":{"byteCount":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"d1f19dcb-da32-11e4-829b-d507e8fa5d40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[],"tindex":"d1f19dcc-da32-11e4-829b-4b6085642841","variableMapping":{"red":"element","green":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":0},{"failures":[],"tindex":"d1f19dcd-da32-11e4-829b-836960020692","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"d1f19dce-da32-11e4-829b-815b147b930d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"d1f19dcf-da32-11e4-829b-690156731fd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"d1f1c4e0-da32-11e4-829b-f35d5c1514bc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":0},{"failures":[],"tindex":"d1f1c4e1-da32-11e4-829b-c9d01831a4af","variableMapping":{"nodeThis":"index","nextEdgeOther":"index","nodeOther":"index","nextEdge":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":0},{"failures":[100,105],"tindex":"d1f1c4e2-da32-11e4-829b-455f4bbb3232","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"d1f1c4e3-da32-11e4-829b-53e2f02c077e","variableMapping":{"carEncoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:80","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.CarFlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[],"tindex":"d1f1c4e4-da32-11e4-829b-9bcd0eb7efee","variableMapping":{"conn":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:93","type":"CtInvocationImpl","sourcecode":"java.net.HttpURLConnection.setUseCaches(true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[102],"tindex":"d1f1c4e5-da32-11e4-829b-578c5e96e815","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"d1f1c4e6-da32-11e4-829b-e930388599a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[460],"tindex":"d1f1c4e7-da32-11e4-829b-9dce8d056d5d","variableMapping":{"i":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[461,462,463,464,465,466,467,468,469,237,243,245,246,470,263,269,271,272],"tindex":"d1f1c4e8-da32-11e4-829b-7bfa4cfad1cc","variableMapping":{"r":"maxLatTmp","com.graphhopper.util.AngleCalc.PI_4":"minLatTmp","x":"maxLatTmp","angle":"maxLatTmp","absY":"maxLatTmp","com.graphhopper.util.AngleCalc.PI3_4":"minLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"d1f1c4e9-da32-11e4-829b-977a80512933","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"d1f1ebfa-da32-11e4-829b-a35fdc3218f6","variableMapping":{"min":"index","tmpSize":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[29,100,102,103,282,290,292,293,295,299,300,307,308,324,333,341,343,344,346,350,351,358,359,379,387,389,390,392,396,397,404,405,423,431,433,434,436,440,441,448,449],"tindex":"d1f1ebfb-da32-11e4-829b-dfe3de8b5550","variableMapping":{"locs":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[471],"tindex":"d1f1ebfc-da32-11e4-829b-01f542dcfbc3","variableMapping":{"latSize":"encoderCount","lonSize":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-1},{"failures":[],"tindex":"d1f1ebfd-da32-11e4-829b-077ccab9f17c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[100,103,282,292,293,299,307,308,333,343,344,350,358,359,379,389,390,396,404,405,423,433,434,440,448,449],"tindex":"d1f1ebfe-da32-11e4-829b-fd3a04225237","variableMapping":{"segmentSizeInBytes":"mSize","index":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[2,13,14,16,29,35,38,80,94,101,103,165,168,169,174,175,176,179,180,181,193,203,213,282,291,312,333,342,363,379,388,409,423,432,453],"tindex":"d1f1ebff-da32-11e4-829b-499aec1d2cce","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[22],"tindex":"d1f1ec00-da32-11e4-829b-bf906008bd5c","variableMapping":{"name":"value","properties":"properties"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:183","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.remove(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"d1f1ec01-da32-11e4-829b-5579dd50003c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"d1f1ec02-da32-11e4-829b-f56c9322d060","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"d1f21313-da32-11e4-829b-a39c1b9ff9e5","variableMapping":{"tmp":"index","initializedCounter":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"d1f21314-da32-11e4-829b-ffdce0075939","variableMapping":{"angle":"java.lang.Double.MAX_VALUE","com.graphhopper.util.AngleCalc.PI3_4":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[91,121,144],"tindex":"d1f21315-da32-11e4-829b-fdf7fe3e8228","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"d1f21316-da32-11e4-829b-a950bd15f5b8","variableMapping":{"r":"minLon","x":"java.lang.Double.MAX_VALUE","absY":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[2,3,4,6,9,10,15,17,18,19,20,21,22,23,25,26,27,28,29,31,32,34,35,36,38,39,42,48,142,143,200,207,208,209,213,472,473,474,475,239,240,241,255,256,257,259,265,266,267,326,331,352,358,363,366,476,369,372,377,398,404,409,412,416,421,442,448,453,456,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"tindex":"d1f21317-da32-11e4-829b-631c03d31bf9","variableMapping":{"id":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-1},{"failures":[0,2,3,4,6,9,10,15,17,18,19,20,21,22,23,25,26,27,28,29,32,35,36,38,39,42,48,200,208,209,493,494,495,472,473,496,474,475,239,241,265,267,280,301,306,307,312,326,331,352,358,363,497,369,372,377,398,404,409,416,421,442,448,453,478,479,480,481,482,483,484,486,487,488,489,490,491,492,498,499,500,501],"tindex":"d1f21318-da32-11e4-829b-5d91873ef80a","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"d1f21319-da32-11e4-829b-1751de628f20","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"d1f2131a-da32-11e4-829b-d5d54caecc54","variableMapping":{"equalNormedDelta":"d2","tmpNormedDist":"d2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:924","type":"CtIfImpl","sourcecode":"if (double <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-2},{"failures":[],"tindex":"d1f2131b-da32-11e4-829b-91f1207c9908","variableMapping":{"a_lon_deg":"prevEle","factor":"prevEle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":0},{"failures":[],"tindex":"d1f2131c-da32-11e4-829b-1fccdf241441","variableMapping":{"i":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[],"tindex":"d1f2131d-da32-11e4-829b-11330b20f71c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[58,59,67,109,117,125,127,137,148,150,160],"tindex":"d1f2131e-da32-11e4-829b-03e1842bcaa9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"d1f2131f-da32-11e4-829b-2d56d8e7f210","variableMapping":{"index":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[0,1,2,3,4,5,6,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,502,31,32,33,34,35,36,37,38,39,40,41,42,48,49,51,52,74,100,101,102,103,104,105,142,143,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,223,224,225,226,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,291,306,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,503,504,498,505,506,499,500,501],"tindex":"d1f23a30-da32-11e4-829b-d746ca4b8633","variableMapping":{"initLeafSize":"segmentsToCreate","maxLeafEntries":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[507],"tindex":"d1f23a31-da32-11e4-829b-aba2129f7240","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[],"tindex":"d1f23a32-da32-11e4-829b-d57588c0e337","variableMapping":{"newUniqueOsmId":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[47,48,57,73,74,76,80,84,87,94,98,100,104,107,122,143,145,168,169,170,171,172,174,178,180,181,182,183,186,190,192,193,195,197,199,200,201,203,207,208,209,213,219,220,285,291,296,298,306,309,311,316,318,322,326,336,342,347,349,357,360,362,367,369,372,382,388,393,395,403,406,408,413,416,426,432,437,439,447,450,452,457],"tindex":"d1f23a33-da32-11e4-829b-3bcdb1df32fc","variableMapping":{"directionBitMask":"backwardBit","flags":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"d1f23a34-da32-11e4-829b-e70b8e566abd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[15,16,17,18,20,21,22,23,27,28,29,460,508,55,57,58,59,61,63,64,67,68,70,71,107,108,109,110,112,114,117,118,120,122,123,124,125,126,127,131,133,134,137,138,140,141,145,146,147,148,149,150,154,156,157,160,161,163,164],"tindex":"d1f23a35-da32-11e4-829b-ff178053b93f","variableMapping":{"val":"service","existing":"highway","key":"service"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[60,72,81,111,130,153],"tindex":"d1f23a36-da32-11e4-829b-653b7d6f3fd5","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"restrictedValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[2,3,6,165,166,168,169,170,171,172,174,175,176,178,179,180,181,182,183,184,186,187,188,190,191,192,193,194,195,196,197,199,200,201,203,213,319,324],"tindex":"d1f23a37-da32-11e4-829b-d731be1bd153","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[509],"tindex":"d1f23a38-da32-11e4-829b-fbdef3c3dac5","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"d1f23a39-da32-11e4-829b-6172f62a79d5","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"d1f23a3a-da32-11e4-829b-cbf9a4ff7347","variableMapping":{"towerNodeDistance":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"d1f23a3b-da32-11e4-829b-45216cd935ec","variableMapping":{"width":"indexDivisor","latSimilar":"indexDivisor","lonSimilar":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:100","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"d1f23a3c-da32-11e4-829b-f3a8c106d572","variableMapping":{"lastTime":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[0,11],"tindex":"d1f2614d-da32-11e4-829b-0d627c45f399","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[],"tindex":"d1f2614e-da32-11e4-829b-65aaff20c012","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"d1f2614f-da32-11e4-829b-6f0bd0c08707","variableMapping":{"edgeCount":"segmentSizeInBytes","lastEdgeIndex":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":0},{"failures":[0,3,4,6,9,15,17,18,19,20,21,22,23,25,26,27,28,29,32,39,42,48,200,208,209,213,493,494,495,472,496,239,241,265,267,280,301,306,307,312,326,331,352,358,363,369,372,377,398,404,409,416,421,442,448,453,478,481,482,483,484,486,489,490,491,492,499,500],"tindex":"d1f26150-da32-11e4-829b-fd26c18d00e9","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[79],"tindex":"d1f26151-da32-11e4-829b-c546bbd495d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[168,170,171,172,174,176,178,510,511,512,513,514],"tindex":"d1f26152-da32-11e4-829b-a768faf18959","variableMapping":{"initLeafSize":"element","maxLeafEntries":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[190],"tindex":"d1f26153-da32-11e4-829b-23f1e466311d","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-1},{"failures":[],"tindex":"d1f26154-da32-11e4-829b-27370036b240","variableMapping":{"ghLocation":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"d1f26155-da32-11e4-829b-0bd2f208ebab","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[2,3,4,5,6,9,10,17,18,19,189,193,194,197,220,221,237,239,240,241,242,244,245,246,247,248,249,250,252,253,515,470,260,261,263,265,266,267,268,270,271,272,273,274,275,276,278,279],"tindex":"d1f26156-da32-11e4-829b-d9112964ef77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[516,210],"tindex":"d1f26157-da32-11e4-829b-4d4fefb93fe8","variableMapping":{"edgeCount":"kmInteger","lastEdgeIndex":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[15,90],"tindex":"d1f26158-da32-11e4-829b-b5fe49b0c819","variableMapping":{"com.graphhopper.util.Constants.VERSION":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:85","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[79],"tindex":"d1f26159-da32-11e4-829b-39bd409e1902","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"d1f2615a-da32-11e4-829b-a952bb6757de","variableMapping":{"nodeFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-2},{"failures":[0,1,2,3,4,5,6,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,502,31,32,33,34,35,36,37,38,39,40,41,42,48,49,51,52,74,100,101,102,103,104,105,142,143,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,223,224,225,226,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,291,306,318,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,498,505,499],"tindex":"d1f2886b-da32-11e4-829b-e709c18cece7","variableMapping":{"size":"segmentsToCreate","hash":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"d1f2886c-da32-11e4-829b-5530a11e1c0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"d1f2886d-da32-11e4-829b-fbaf9a7702a1","variableMapping":{"distInMeter":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[165,175,180,181,203],"tindex":"d1f2886e-da32-11e4-829b-e7350c2244fe","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"to","speed":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"d1f2886f-da32-11e4-829b-7f647361c7c0","variableMapping":{"tmp":"length","initializedCounter":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[172,174,178,189,513],"tindex":"d1f28870-da32-11e4-829b-7b953fac672a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"d1f28871-da32-11e4-829b-074de7b87cb0","variableMapping":{"mSize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"d1f28872-da32-11e4-829b-d72bee9d094b","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[461,462,463,464,465,466,467,468,469,237,243,245,246,470,263,269,271,272],"tindex":"d1f28873-da32-11e4-829b-47262477cede","variableMapping":{"res":"hash","maxBit":"hash","value":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"d1f28874-da32-11e4-829b-b5b1e995afed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[100,104,105],"tindex":"d1f28875-da32-11e4-829b-a1852c7e1487","variableMapping":{"size":"connectedId","index":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":357,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":198,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":323,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":509,"com.graphhopper.GraphHopperAPITest.testNoLoad":222,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":281,"com.graphhopper.reader.OSMReaderTest.testFerry":15,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":217,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":218,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":126,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":110,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":266,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":387,"com.graphhopper.coll.CompressedArrayTest.testCompress":469,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":116,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":456,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":170,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":301,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":432,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":262,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":477,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":176,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":165,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":439,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":514,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":190,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":207,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":117,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":205,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":329,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":263,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":104,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":188,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":431,"com.graphhopper.coll.BitSetImplTest.testCopy":507,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":240,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":412,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":127,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":369,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":466,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":331,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":513,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":179,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":241,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":54,"com.graphhopper.reader.OSMReaderTest.testSort":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":138,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":373,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":479,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":451,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":416,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":314,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":38,"com.graphhopper.routing.DijkstraTest.initializationError":43,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":408,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":497,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":356,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":428,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":370,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":148,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":377,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":71,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":68,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":270,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":436,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":194,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":261,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":268,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":184,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":333,"com.graphhopper.coll.OSMIDMapTest.testGetLong":474,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":397,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":348,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":326,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":350,"com.graphhopper.coll.CompressedArrayTest.testCompress2":468,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":441,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":57,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":388,"com.graphhopper.GraphHopperAPITest.testLoad":220,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":330,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":498,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":72,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":433,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":423,"com.graphhopper.storage.LevelGraphStorageTest.testClone":335,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":459,"com.graphhopper.reader.OSMReaderTest.testBarriers":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":378,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":187,"com.graphhopper.util.GHUtilityTest.testCopy":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":285,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":65,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":279,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":119,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":227,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":491,"com.graphhopper.routing.PathTest.testFindInstruction":49,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":113,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":379,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":510,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":78,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":219,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":364,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":147,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":224,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":452,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":437,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":406,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":172,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":158,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":50,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":286,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":419,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":501,"com.graphhopper.util.InstructionListTest.testWayList2":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":248,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":383,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":125,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":142,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":417,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":339,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":128,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":480,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":389,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":186,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":422,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":20,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":478,"com.graphhopper.routing.AStarTest.initializationError":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":200,"com.graphhopper.coll.OSMIDMapTest.testGet":472,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":386,"com.graphhopper.routing.PathBidirRefTest.testExtract":51,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":79,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":131,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":352,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":496,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":274,"com.graphhopper.storage.RAMDataAccessTest.testCopy":486,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":414,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":130,"com.graphhopper.storage.RAMDataAccessTest.testSegments":490,"com.graphhopper.util.GHUtilityTest.testSort2":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":195,"com.graphhopper.reader.OSMReaderTest.testMain":17,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":327,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":396,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":467,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":139,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":275,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":83,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":374,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":342,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":346,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":367,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":35,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":145,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":504,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":349,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":28,"com.graphhopper.storage.GraphHopperStorageTest.testClone":425,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":458,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":310,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":90,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":88,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":435,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":318,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":287,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":321,"com.graphhopper.routing.PathTest.testTime":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":64,"com.graphhopper.util.BitUtilLittleTest.testToFloat":494,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":365,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":336,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":95,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":250,"com.graphhopper.reader.OSMReaderTest.testRelation":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":300,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":354,"com.graphhopper.util.GHUtilityTest.testSortDirected":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":161,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":483,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":34,"com.graphhopper.GraphHopperTest.testFootOnly":10,"com.graphhopper.util.BitUtilLittleTest.testToInt":495,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":86,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":255,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":269,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":508,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":183,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":515,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":166,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":296,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":489,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":31,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":506,"com.graphhopper.routing.QueryGraphTest.testOneWay":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":251,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":463,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":239,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":461,"com.graphhopper.reader.OSMReaderTest.testWithBounds":27,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":492,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":162,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":485,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":410,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":302,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":460,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":332,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":159,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":120,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":400,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":87,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":393,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":421,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":181,"com.graphhopper.util.BitUtilLittleTest.testToBitString":493,"com.graphhopper.util.InstructionListTest.testWayList":208,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":454,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":129,"com.graphhopper.GraphHopperAPITest.testDisconnected179":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":288,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":283,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":156,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":299,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":503,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":316,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":427,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":404,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":121,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":445,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":444,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":192,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":91,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":363,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":137,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":202,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":420,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":277,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":505,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":141,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":415,"com.graphhopper.routing.PathTest.testWayList":48,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":315,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":292,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":516,"com.graphhopper.coll.OSMIDMapTest.testGet2":473,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":203,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":360,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":399,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":135,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":438,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":384,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":426,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":271,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":347,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":272,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":487,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":484,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":153,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":512,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":58,"com.graphhopper.util.GHUtilityTest.testSort":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":305,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":413,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":424,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":226,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":264,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":259,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":232,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":499,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":149,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":143,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":230,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":371,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":60,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":99,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":394,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":100,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":500,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":345,"com.graphhopper.routing.PathTest.testFound":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":306,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":11,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":55,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":362,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":97,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":320,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":133,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":390,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":511,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":291,"com.graphhopper.util.InstructionListTest.testEmptyList":206,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":430,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":189,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":66,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":276,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":193,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":82,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":81,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":118,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":440,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":196,"com.graphhopper.reader.PrinctonReaderTest.testRead":13,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":453,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":267,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":290,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":462,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":280,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":395,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":476,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":63,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":146,"com.graphhopper.reader.OSMReaderTest.testFoot":16,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":245,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":366,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":465,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":106,"com.graphhopper.reader.OSMReaderTest.testOneWay":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":246,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":434,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":449,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":407,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":114,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":482,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":298,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":429,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":171,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":470,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":169,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":233,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":481,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":74,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":294,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":33,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":418,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":471,"com.graphhopper.routing.PathBidirRefTest.testExtract2":52,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":180,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":67,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":249,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":447,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":70,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":22,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":317,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":242,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":450,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":215,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":92,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":442,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":344,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":59,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":278,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":488,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":284,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":381,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":199,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":282,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":25,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":322,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":210,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":446,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":76,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":23,"com.graphhopper.routing.AStarBidirectionTest.initializationError":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":297,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":96,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":361,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":359,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":372}}]
