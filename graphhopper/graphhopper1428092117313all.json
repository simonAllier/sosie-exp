[{"failures":[0,1],"tindex":"278f55d7-da3e-11e4-8fd5-e7a3fe498d39","variableMapping":{"flags":"directionBitMask","mask":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"27965ab8-da3e-11e4-8fd5-f9a7b8b6d76d","variableMapping":{"foundIndex":"v"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"27965ab9-da3e-11e4-8fd5-2f43e356ecb7","variableMapping":{"initializedCounter":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[2,3,4,5,6],"tindex":"27965aba-da3e-11e4-8fd5-230dd7f4fc0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[7,8,9,10,11,12],"tindex":"27965abb-da3e-11e4-8fd5-57959e0787be","variableMapping":{"initLeafSize":"toSize","maxLeafEntries":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"27965abc-da3e-11e4-8fd5-55bd3f8715d0","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[],"tindex":"27965abd-da3e-11e4-8fd5-ab8774f87b7b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"27965abe-da3e-11e4-8fd5-b15180803be6","variableMapping":{"entries":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"27965abf-da3e-11e4-8fd5-d5a698e95d1a","variableMapping":{"high":"size","guess":"size","low":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[51,54],"tindex":"27965ac0-da3e-11e4-8fd5-e3ef20721b14","variableMapping":{"node":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"27965ac1-da3e-11e4-8fd5-0d7970ac69ad","variableMapping":{"edgeCount":"index","lastEdgeIndex":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":0},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"27965ac2-da3e-11e4-8fd5-45b5cbf7eb3a","variableMapping":{"this":"this","unknownSpeed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[87,88,89,90,91,92,93,94,95,96],"tindex":"27965ac3-da3e-11e4-8fd5-b310f2a2f3e5","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"27965ac4-da3e-11e4-8fd5-d5f4af9d0e39","variableMapping":{"sacScale":"highwayValue","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"279681d5-da3e-11e4-8fd5-93a4002627d9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"279681d6-da3e-11e4-8fd5-55476ce07cec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"279681d7-da3e-11e4-8fd5-91b314018e66","variableMapping":{"entry":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[97,98,99,100,101,0,102,103,104,105,106,107,1,108,109,110,111,112,87,113,114,115,116,117,118,50,119,120,121,122,123,124,88,125,126,127,128,89,129,90,130,91,131,132,133,134,135,136,137,138,139,140,141,142,92,143,144,145,93,146,147,148,94,149,95,150,96,151,152],"tindex":"279681d8-da3e-11e4-8fd5-a786cd760461","variableMapping":{"flags":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"2796a8e9-da3e-11e4-8fd5-f75b6a2e3528","variableMapping":{"closestNode":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[],"tindex":"2796a8ea-da3e-11e4-8fd5-8bba37a429f5","variableMapping":{"bestPath":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:166","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-1},{"failures":[],"tindex":"2796a8eb-da3e-11e4-8fd5-1368a315b5e3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"2796a8ec-da3e-11e4-8fd5-f99796b800c7","variableMapping":{"segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":0},{"failures":[],"tindex":"2796a8ed-da3e-11e4-8fd5-c589223f02fa","variableMapping":{"flags":"maxValue","tmpValue":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"2796a8ee-da3e-11e4-8fd5-dda7b8bbdd81","variableMapping":{"dX":"currDistToGoal","dY":"currDistToGoal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[81,153,154,155,156,82,83,157,158,159,160,161,162,163,164,9,10,11,12,165],"tindex":"2796a8ef-da3e-11e4-8fd5-4daa260ee5c2","variableMapping":{"dx":"prevOrNextEdgeId","dy":"prevOrNextEdgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-1},{"failures":[],"tindex":"2796a8f0-da3e-11e4-8fd5-d758122b6d28","variableMapping":{"high":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"2796f711-da3e-11e4-8fd5-d574a668eaa0","variableMapping":{"high":"lastEdgeIndex","guess":"lastEdgeIndex","low":"lastEdgeIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"2796f712-da3e-11e4-8fd5-939b575efd1d","variableMapping":{"resultOrientation":"minLat","orientation":"minLat","java.lang.Math.PI":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"2796f713-da3e-11e4-8fd5-d91c6b2f6789","variableMapping":{"weight":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[166,167,168,169],"tindex":"2796f714-da3e-11e4-8fd5-31a8c0571488","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[170,171,172,173,174,175,176,177,178,179],"tindex":"2796f715-da3e-11e4-8fd5-67fcf8c13bba","variableMapping":{"hash":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"2796f716-da3e-11e4-8fd5-b5e704ae9629","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[180,181,59,63,67,71],"tindex":"2796f717-da3e-11e4-8fd5-015b3a06a854","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[55,182,183,184,185,57,186,14,187,188,189,190,191,58,192,16,17,18,193,194,19,20,195,196,197,21,22,198,199,60,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,97,98,99,100,102,103,105,80,81,153,154,219,155,220,221,222,223,156,224,82,83,225,157,158,159,226,160,161,162,227,163,84,228,8,164,9,229,230,231,10,85,11,12,165,86,232],"tindex":"27974538-da3e-11e4-8fd5-e942ee58ef75","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1088","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.setEdgesHeader()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"27974539-da3e-11e4-8fd5-630bc771252a","variableMapping":{"i":"b","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"b"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":0},{"failures":[],"tindex":"2797453a-da3e-11e4-8fd5-51a5fee3a4cf","variableMapping":{"size":"endNode","hash":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[110,114,2,3,233,4,5,6],"tindex":"2797453b-da3e-11e4-8fd5-8df2a145f3b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[],"tindex":"2797453c-da3e-11e4-8fd5-efc46a377ede","variableMapping":{"factor":"minLonTmp","delta_lon":"maxLonTmp","a_lon":"minLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[119,120],"tindex":"2797453d-da3e-11e4-8fd5-933d06ef9b7b","variableMapping":{"unpavedBit":"relBitMask","shift":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[97,98,99,100,101,0,102,103,104,105,106,107,1,108,109,110,111,112,87,113,114,115,116,117,118,50,119,120,121,122,123,124,88,125,126,127,128,89,129,90,130,91,131,132,133,134,135,136,137,138,139,140,141,142,92,143,144,145,93,146,147,148,94,149,95,150,96,151,152],"tindex":"2797453e-da3e-11e4-8fd5-6b54edc78415","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"2797453f-da3e-11e4-8fd5-97138918031e","variableMapping":{"allBits":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"27974540-da3e-11e4-8fd5-d18f24f19cd0","variableMapping":{"edge":"tmpPrevEdge","updatedB":"tmpPrevEdge","updatedA":"tmpPrevEdge","linkA":"edgeEntryBytes","this":"this","linkB":"edgeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.writeEdge(int, int, int, int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,181,253,254,255,256,55,257,182,183,56,258,13,259,184,260,261,185,262,57,186,14,187,188,189,190,191,58,192,15,59,16,17,263,18,193,264,194,19,20,195,265,266,196,267,197,21,22,198,268,199,60,269,200,270,201,202,271,272,273,274,275,276,277,278,279,280,281,282,61,283,23,284,285,286,287,288,62,289,24,63,25,26,290,27,291,292,293,28,29,294,295,296,297,298,299,30,31,300,301,302,64,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,203,204,332,205,333,206,207,208,209,334,210,211,212,213,214,215,216,335,217,218,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,65,359,32,360,361,362,363,364,66,365,33,67,34,35,366,36,367,368,369,37,38,370,371,372,373,374,375,39,40,376,377,378,68,379,380,381,382,383,69,384,41,385,386,387,388,389,70,390,42,71,43,44,391,45,392,393,394,46,47,395,396,397,398,399,400,48,49,401,402,403,72,404,405,406,407,408,409,410,411,412,413,97,98,99,100,101,0,102,414,103,104,105,106,415,416,417,418,419,420,421,422,423,107,1,108,109,110,111,112,87,113,424,114,115,116,117,118,50,425,425,426,426,427,427,428,428,429,429,430,430,431,431,73,73,432,432,433,433,434,434,435,435,436,437,438,439,74,75,51,440,52,53,54,441,442,76,78,80,81,153,154,219,155,220,221,222,223,156,224,82,83,225,157,158,159,226,160,161,162,227,163,84,228,8,164,9,229,230,231,10,85,11,443,12,165,444,445,86,446,447,448,449,152,450,451,452,453,232,454,455],"tindex":"27976c51-da3e-11e4-8fd5-f7168a90b1fa","variableMapping":{"obtained":"synched"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"27976c52-da3e-11e4-8fd5-ffaaf415bb0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[74,75,456,457,458,448,449,459],"tindex":"27976c53-da3e-11e4-8fd5-933c277b4349","variableMapping":{"dist":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-1},{"failures":[],"tindex":"27976c54-da3e-11e4-8fd5-5de4a857ab73","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[107],"tindex":"27976c55-da3e-11e4-8fd5-63a05c6d6e7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[88,91,93,96],"tindex":"27976c56-da3e-11e4-8fd5-173553910334","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"27976c57-da3e-11e4-8fd5-53498379e871","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"length","nodeId":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"27976c58-da3e-11e4-8fd5-5bd235861444","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[316,333,170,171,172,173,174,175,176,177,178,179],"tindex":"27976c59-da3e-11e4-8fd5-d31530c9ff58","variableMapping":{"factor":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[],"tindex":"27976c5a-da3e-11e4-8fd5-dddef9c2c009","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"27976c5b-da3e-11e4-8fd5-5789c14372b5","variableMapping":{"node":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"2797936c-da3e-11e4-8fd5-d5950a618f63","variableMapping":{"tmp":"tmp","initializedCounter":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"2797936d-da3e-11e4-8fd5-c775f451dfe6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[97,0,105,1,140,141,142],"tindex":"2797936e-da3e-11e4-8fd5-0d9e14851ba6","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"2797936f-da3e-11e4-8fd5-db3f4d8a4d83","variableMapping":{"size":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"27979370-da3e-11e4-8fd5-f7644f674e15","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"27979371-da3e-11e4-8fd5-9145d241a2fb","variableMapping":{"nodeId":"length","mainNodes":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"27979372-da3e-11e4-8fd5-83d28a6e08f3","variableMapping":{"this":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.isShortcut())\n    throw new java.lang.IllegalStateException((\"Cannot call setName on shortcut \" + com.graphhopper.storage.GraphHopperStorage.EdgeIterable.(getEdge())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[],"tindex":"27979373-da3e-11e4-8fd5-d1a4ea28057b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[14,16,17,19,21,22,23,25,26,28,30,31,32,34,35,37,39,40,41,43,44,46,48,49,51,53],"tindex":"27979374-da3e-11e4-8fd5-616bb48a01e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[105,141],"tindex":"27979375-da3e-11e4-8fd5-db615e742d53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53],"tindex":"27979376-da3e-11e4-8fd5-a3ea7469a787","variableMapping":{"size":"mSize","index":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"27979377-da3e-11e4-8fd5-99a58f74dff1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"27979378-da3e-11e4-8fd5-3b7f8ae4a816","variableMapping":{"acceptedRailways":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"27979379-da3e-11e4-8fd5-5b19d7e25c42","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[99,100,101,0,102,104,117,121,122,123,460,461,126,89,129,462,463,132,464,133,137,138,144,465,466,94,149,467,468,152],"tindex":"2797937a-da3e-11e4-8fd5-4313cbed0d1d","variableMapping":{"val":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:336","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"2797937b-da3e-11e4-8fd5-0b1cf797d446","variableMapping":{"distance":"longTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"2797937c-da3e-11e4-8fd5-65290b9875b6","variableMapping":{"level":"locs","lg":"g","polledNode":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:348","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.setLevel(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-2},{"failures":[55,10,12],"tindex":"2797937d-da3e-11e4-8fd5-79894e0996f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[424,119,123,127,129,147,149],"tindex":"2797ba8e-da3e-11e4-8fd5-634ead0c1360","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:286","type":"CtIfImpl","sourcecode":"if (int < int)\n    return com.graphhopper.routing.util.EncodedValue.setValue(0, int);\n"},"status":-1},{"failures":[],"tindex":"2797ba8f-da3e-11e4-8fd5-71c9dc7d1c5d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[],"tindex":"2797ba90-da3e-11e4-8fd5-bbdc50ac96d3","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"biggestStart","nextEdge":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-2},{"failures":[],"tindex":"2797ba91-da3e-11e4-8fd5-6d2646f0d866","variableMapping":{"calcMean":"blockByDefault","eleCalcMean":"blockByDefault"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:75","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[51,441],"tindex":"2797ba92-da3e-11e4-8fd5-9946e813dfa7","variableMapping":{"i":"removed","child":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"2797ba93-da3e-11e4-8fd5-172d83001824","variableMapping":{"dijkstra":"this","finishedFrom":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:280","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.routing.DijkstraBidirectionRef.boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":0},{"failures":[],"tindex":"2797ba94-da3e-11e4-8fd5-ad4720f6b281","variableMapping":{"fromNode":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":0},{"failures":[],"tindex":"2797ba95-da3e-11e4-8fd5-7dd7e4f4b56c","variableMapping":{"flags":"directionBitMask","nodeFlags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[234,235,55,257,182,183,56,13,259,184,185,57,186,14,187,188,189,190,191,58,192,15,59,16,17,263,18,193,264,194,19,20,195,265,266,196,197,21,22,198,268,199,60,269,200,270,201,202,275,277,278,281,61,283,23,284,285,286,287,288,62,289,24,63,25,26,290,27,291,292,293,28,29,294,295,296,297,299,30,31,300,301,302,64,303,304,305,306,307,469,470,471,472,473,474,475,476,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,203,204,332,205,333,206,207,208,209,334,210,211,212,213,214,215,216,217,218,337,338,339,340,342,343,344,345,346,348,349,353,354,357,65,359,32,360,361,362,363,364,66,365,33,67,34,35,366,36,367,368,369,37,38,370,371,372,373,375,39,40,376,377,378,68,379,380,381,382,383,71,400,97,99,100,101,0,102,103,104,105,106,416,422,423,107,1,108,109,110,111,112,87,113,114,115,116,117,50,425,426,427,428,429,430,431,73,432,433,434,435,436,437,74,75,51,440,52,53,54,441,442,76,78,80,81,153,154,219,155,220,221,222,223,156,224,82,83,225,157,158,159,226,160,161,162,227,163,84,228,8,164,9,229,230,231,10,85,11,443,12,165,444,445,86,447,448,449,152,450,451,452,453,232,454,455],"tindex":"2797ba96-da3e-11e4-8fd5-1584388b172d","variableMapping":{"i":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"2797ba97-da3e-11e4-8fd5-23357954ff11","variableMapping":{"hasOther":"uTurnSupport","hasRel":"uTurnSupport"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"2797ba98-da3e-11e4-8fd5-cd03c7b32782","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":0},{"failures":[],"tindex":"2797ba99-da3e-11e4-8fd5-454a95a5c23b","variableMapping":{"counter":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"2797ba9a-da3e-11e4-8fd5-0d84aa99071d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"2797ba9b-da3e-11e4-8fd5-5dd4796449c2","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"2797ba9c-da3e-11e4-8fd5-5b04c7525f45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[123,124,128,129,130,143,144,145,148,149,150],"tindex":"2797e1ad-da3e-11e4-8fd5-e56f182f2095","variableMapping":{"encoded":"encoded","backwardBit":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[],"tindex":"2797e1ae-da3e-11e4-8fd5-65ad9720f45a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:50","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState))"},"status":-2},{"failures":[1],"tindex":"2797e1af-da3e-11e4-8fd5-3bca526a96d2","variableMapping":{"id":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"2797e1b0-da3e-11e4-8fd5-5be6790a6b2a","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"2797e1b1-da3e-11e4-8fd5-71dd2e4469fa","variableMapping":{"bytePointer":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:80","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[257,13,99,100,102,80,81,153,154,219,220,221,222,156,224,82,83,225,157,158,159,160,161,162,163,84,228,8,164,9,229,230,10,85,11,12,165,232],"tindex":"279808c2-da3e-11e4-8fd5-b538189b00d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[107,1,108,109,111,112,87,113,116,117,50,119,120,121,122,123,124,125,127,128,89,129,130,131,143,144,145,146,147,148,94,149,150,151],"tindex":"279808c3-da3e-11e4-8fd5-63356a21fe1e","variableMapping":{"eleDelta":"speed","decEleSum":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"279808c4-da3e-11e4-8fd5-b76aad007e07","variableMapping":{"edgePointer":"encoded","edgeEntryBytes":"com.graphhopper.routing.util.PriorityWeighting.KEY","nextEdge":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:763","type":"CtAssignmentImpl","sourcecode":"this.long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-2},{"failures":[122,123,89,129,144,94,149],"tindex":"279808c5-da3e-11e4-8fd5-61017ca86240","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[52,53],"tindex":"279808c6-da3e-11e4-8fd5-213677f0a0c4","variableMapping":{"strLen":"maxCount","bLen":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[],"tindex":"279808c7-da3e-11e4-8fd5-e10694367d9c","variableMapping":{"dist":"minLon","com.graphhopper.util.DistanceCalcEarth.R":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"279808c8-da3e-11e4-8fd5-19d12fe86cff","variableMapping":{"factor":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[97,0,105,1,112,87,88,89,90,91,135,136,139,140,141,142,92,93,94,95,96],"tindex":"279808c9-da3e-11e4-8fd5-5103ac9efe87","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[234,184,57,186,14,192,59,193,196,198,60,201,275,278,61,283,23,289,63,291,297,300,64,306,354,65,359,32,365,67,367,373,376,68,382,69,384,41,390,71,392,398,401,72,407,99,100,101,0,102,104,422,423,107,1,108,110,87,113,114,116,50,429,73,74,51,440,53,54,78,80,81,153,154,155,220,221,222,156,82,83,225,157,158,159,160,162,227,163,84,8,164,9,229,230,10,85,11,12,165,86,447,448,449,232],"tindex":"279808ca-da3e-11e4-8fd5-eb3115f109fa","variableMapping":{"segmentSizeInBytes":"i","capacity":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":226,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":426,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":132,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":258,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":384,"com.graphhopper.reader.OSMReaderTest.testFerry":107,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":450,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":451,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":94,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":207,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":98,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":459,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":24,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":240,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":418,"com.graphhopper.coll.CompressedArrayTest.testCompress":179,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":460,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":381,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":9,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":395,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":67,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":332,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":241,"com.graphhopper.util.AngleCalcTest.testOrientation":456,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":11,"com.graphhopper.GraphHopperTest.testPrepare":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":404,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":84,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":156,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":447,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":336,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":124,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":445,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":185,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":205,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":54,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":123,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":469,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":153,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":318,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":305,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":149,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":275,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":165,"com.graphhopper.GraphHopperTest.testLoadOSM":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":325,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":472,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":319,"com.graphhopper.reader.OSMReaderTest.testSort":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":468,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":52,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":115,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":279,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":377,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":354,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":405,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":73,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":302,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":267,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":364,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":276,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":128,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":146,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":466,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":210,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":36,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":209,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":414,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":390,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":155,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":219,"com.graphhopper.coll.OSMIDMapTest.testGetLong":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":290,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":284,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":264,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":184,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":19,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":458,"com.graphhopper.coll.CompressedArrayTest.testCompress2":178,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":38,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":63,"com.graphhopper.GraphHopperAPITest.testLoad":234,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":262,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":471,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":4,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":34,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":32,"com.graphhopper.storage.LevelGraphStorageTest.testClone":188,"com.graphhopper.reader.OSMReaderTest.testBarriers":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":283,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":441,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":221,"com.graphhopper.util.GHUtilityTest.testCopy":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":387,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":246,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":218,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":88,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":312,"com.graphhopper.routing.PathTest.testFindInstruction":75,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":23,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":86,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":141,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":269,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":309,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":378,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":300,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":230,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":259,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":190,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":388,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":476,"com.graphhopper.util.InstructionListTest.testWayList2":449,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":401,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":326,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":382,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":148,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":352,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":304,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":442,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":58,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":242,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":169,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":45,"com.graphhopper.storage.RAMDirectoryTest.testSynched":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":25,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":220,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":359,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":111,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":161,"com.graphhopper.coll.OSMIDMapTest.testGet":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":289,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":142,"com.graphhopper.routing.PathBidirRefTest.testExtract":436,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":195,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":411,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":214,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":248,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":48,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":122,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":331,"com.graphhopper.util.GHUtilityTest.testSort2":453,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":157,"com.graphhopper.reader.OSMReaderTest.testMain":108,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":260,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":28,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":96,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":215,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":133,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":403,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":59,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":18,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":201,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":16,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":297,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":470,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":194,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":117,"com.graphhopper.storage.StorablePropertiesTest.testStore":350,"com.graphhopper.storage.GraphHopperStorageTest.testClone":361,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":402,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":139,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":254,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":137,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":366,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":93,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":389,"com.graphhopper.routing.PathTest.testTime":439,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":200,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":189,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":47,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":266,"com.graphhopper.reader.OSMReaderTest.testRelation":424,"com.graphhopper.util.GHUtilityTest.testSortDirected":455,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":272,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":463,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":252,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":428,"com.graphhopper.GraphHopperTest.testFootOnly":105,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":136,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":338,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":334,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":392,"com.graphhopper.search.NameIndexTest.testCreate":239,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":425,"com.graphhopper.routing.QueryGraphTest.testOneWay":433,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":329,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":173,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":317,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":170,"com.graphhopper.reader.OSMReaderTest.testWithBounds":116,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":180,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":303,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":430,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":396,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":119,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":186,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":261,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":462,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":125,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":296,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":77,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":291,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":65,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":432,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":81,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":379,"com.graphhopper.util.InstructionListTest.testWayList":448,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":95,"com.graphhopper.GraphHopperAPITest.testDisconnected179":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":70,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":174,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":385,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":273,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":423,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":407,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":467,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":101,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":363,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":443,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":373,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":85,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":150,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":227,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":358,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":335,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":151,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":353,"com.graphhopper.routing.PathTest.testWayList":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":43,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":135,"com.graphhopper.coll.OSMIDMapTest.testGet2":410,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":163,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":249,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":198,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":295,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":288,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":362,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":193,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":211,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":212,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":181,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":3,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":143,"com.graphhopper.util.GHUtilityTest.testSort":454,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":399,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":177,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":2,"com.graphhopper.search.NameIndexTest.testPut":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":306,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":360,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":311,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":333,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":342,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":345,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":89,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":431,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":76,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":343,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":277,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":5,"com.graphhopper.storage.MMapDirectoryTest.testSynched":271,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":292,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":51,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":475,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":400,"com.graphhopper.routing.PathTest.testFound":438,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":106,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":121,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":199,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":243,"com.graphhopper.util.AngleCalcTest.testAtan2":457,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":182,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":26,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":7,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":238,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":71,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":365,"com.graphhopper.util.InstructionListTest.testEmptyList":446,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":223,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":465,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":83,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":464,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":233,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":461,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":158,"com.graphhopper.reader.PrinctonReaderTest.testRead":422,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":68,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":208,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":42,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":171,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":69,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":293,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":166,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":127,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":398,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":421,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":435,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":176,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":323,"com.graphhopper.reader.OSMReaderTest.testOneWay":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":324,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":35,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":40,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":301,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":251,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":90,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":394,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":12,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":164,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":250,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":346,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":78,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":391,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":427,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":118,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":356,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":274,"com.graphhopper.routing.PathBidirRefTest.testExtract2":437,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":473,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":80,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":145,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":327,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":236,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":375,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":347,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":87,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":408,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":320,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":376,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":191,"com.graphhopper.GraphHopperTest.testFootAndCar":0,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":370,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":17,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":144,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":285,"com.graphhopper.storage.StorablePropertiesTest.testLoad":351,"com.graphhopper.GraphHopperTest.testPrepareOnly":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":160,"com.graphhopper.GraphHopperTest.testVia":99,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":41,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":114,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":56,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":152,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":374,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":79,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":393,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":126,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":268,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":22,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":278}}]
