[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"c7db2094-db2f-11e4-a170-9780eab6c2af","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[9,10,11,12,13,14,15,16],"tindex":"c7dbe3e5-db2f-11e4-a170-716f97872085","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:448","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"c7dc0af6-db2f-11e4-a170-77fcb00c7855","variableMapping":{"y":"defaultD","angle":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":0},{"failures":[],"tindex":"c7dc0af7-db2f-11e4-a170-f1cbd76483b1","variableMapping":{"edgePointer":"internalFlags","maxEdges":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"c7dc0af8-db2f-11e4-a170-559d50f18a13","variableMapping":{"acceptBit":"defaultL","ferryBit":"defaultL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"c7dc0af9-db2f-11e4-a170-59c3e57dc380","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[],"tindex":"c7dc0afa-db2f-11e4-a170-55da399562d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:244","type":"CtLocalVariableImpl","sourcecode":"java.util.List<gnu.trove.list.array.TIntArrayList> java.util.List<gnu.trove.list.array.TIntArrayList> = new com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm(com.graphhopper.storage.GraphStorage , com.graphhopper.routing.util.EdgeFilter).findComponents()"},"status":-2},{"failures":[],"tindex":"c7dc0afb-db2f-11e4-a170-c7fbb66c66a7","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":0},{"failures":[],"tindex":"c7dc0afc-db2f-11e4-a170-4b4cb4ecd9e1","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[],"tindex":"c7dc0afd-db2f-11e4-a170-ef8b5d7d1241","variableMapping":{"wayIndex":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:263","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"c7dc0afe-db2f-11e4-a170-87599a81cfd0","variableMapping":{"wayIndex":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:263","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"c7dc0aff-db2f-11e4-a170-03fb7e6548eb","variableMapping":{"endIndexPlusOne":"high","frontIndex":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-2},{"failures":[104,105,106,107,108,109,110,111,112],"tindex":"c7dc0b00-db2f-11e4-a170-15edf2700f3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"c7dc0b01-db2f-11e4-a170-0309ea3e3b6a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"c7dc3212-db2f-11e4-a170-6506d1b78b02","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"c7dc3213-db2f-11e4-a170-67794ef8f05e","variableMapping":{"size":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"c7dc3214-db2f-11e4-a170-c96921b37a7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[17,19,20,21,113,22,23,24,25,114,115,27,28,29,30,31,33,34,36,116,117,118,119,39,40,41,42,43,120,44,45,121,46,47,122,48,49,50,51,52,53,123,54,55,56,57,58,59,60,61,67,68,69,124,70,71,72,73,74,125,75,77,78,79,80,81,82,126,83,84,85,86,87,88,127,89,128,129],"tindex":"c7dc3215-db2f-11e4-a170-dd0cdf391635","variableMapping":{"turnCostsCount":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"c7dc3216-db2f-11e4-a170-c971a46cb3cb","variableMapping":{"factor":"x"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":0},{"failures":[],"tindex":"c7dc8037-db2f-11e4-a170-f3220624f978","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"c7dc8038-db2f-11e4-a170-7981b47b3485","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 5))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 5), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"c7dc8039-db2f-11e4-a170-53c6084196e3","variableMapping":{"res":"capacity","value":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":0},{"failures":[17,18,19,20,22,23,25,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,50,159,160,161,162,163,164],"tindex":"c7dcce5a-db2f-11e4-a170-431f17a26020","variableMapping":{"minResolutionInMeter":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"c7dcf56b-db2f-11e4-a170-5bc0b1abe1ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[138,139,140,50,159,161],"tindex":"c7dcf56c-db2f-11e4-a170-490fec025202","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"c7dcf56d-db2f-11e4-a170-65e1c20fe098","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"nodes","nextEdge":"nodes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-2},{"failures":[165,166],"tindex":"c7dcf56e-db2f-11e4-a170-91f19ed79680","variableMapping":{"cap":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[32],"tindex":"c7dcf56f-db2f-11e4-a170-9d3bf529618b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"c7dcf570-db2f-11e4-a170-591fc074f090","variableMapping":{"d":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"c7dcf571-db2f-11e4-a170-0f25e10b4d7d","variableMapping":{"index":"minNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"c7dcf572-db2f-11e4-a170-5702e15740ce","variableMapping":{"red":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-2},{"failures":[],"tindex":"c7dcf573-db2f-11e4-a170-33d348b2ffcd","variableMapping":{"oldValueIndex":"bits","lastKey":"bits","key":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[17,18,19,20,21,113,22,23,24,25,114,167,168,26,115,27,28,29,30,31,32,33,34,35,36,37,38,169,39,39,40,40,170,170,41,41,42,42,43,43,120,120,44,44,45,45,171,171,121,121,46,46,172,173,47,122,174,175,176,165,177,178,179,166,180,48,49,130,181,131,182,132,183,184,185,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,50,159,160,161,186,187,188,51,52,53,123,189,190,54,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,59,60,61,212,213,214,215,216,217,218,219,220,221,222,223,62,63,64,65,66,162,224,225,226,227,67,68,69,228,229,230,231,232,233,234,235,236,237,238,239,124,240,241,242,163,243,244,164,245,70,246,247,248,71,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,72,269,270,271,272,273,73,274,275,276,277,74,278,125,75,279,280,77,281,78,282,283,284,79,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,80,305,306,307,308,309,81,310,311,312,313,82,314,126,83,315,316,317,84,318,319,320,85,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,86,341,342,343,344,345,87,346,347,348,349,88,350,127,89,351,352,353,354,355,356,357,358,359,360,361,362,363],"tindex":"c7dd1c84-db2f-11e4-a170-f104744428bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"c7dd1c85-db2f-11e4-a170-a551777c65ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-2},{"failures":[38,165,178,179,364,365,366,367,368,369,370,250,258,260,261,267,73,274,286,294,296,297,303,81,310,322,330,332,333,339,87,346],"tindex":"c7dd1c86-db2f-11e4-a170-53e81f2f5492","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-1},{"failures":[],"tindex":"c7dd1c87-db2f-11e4-a170-e10934a6ec0d","variableMapping":{"baseUrl":"_location","fileDetails":"_location","zippedURL":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:274","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"c7dd1c88-db2f-11e4-a170-791b96e24156","variableMapping":{"line":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[1,2,371,372,373,374,5,375,376,7,377,378],"tindex":"c7dd1c89-db2f-11e4-a170-db1cfceaf9c0","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[379,380,381,6,8],"tindex":"c7dd1c8a-db2f-11e4-a170-9b4654c21ba3","variableMapping":{"encoded":"value","backwardBit":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"c7dd1c8b-db2f-11e4-a170-9546423507c7","variableMapping":{"high":"guess","guess":"low","low":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"c7dd1c8c-db2f-11e4-a170-13136f2f6183","variableMapping":{"segmentsToMap":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[],"tindex":"c7dd1c8d-db2f-11e4-a170-af59773db9b1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[17,113,25,115,382,383],"tindex":"c7dd1c8e-db2f-11e4-a170-ed4bd38397e1","variableMapping":{"name":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"c7dd1c8f-db2f-11e4-a170-89bc48f427f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"c7dd1c90-db2f-11e4-a170-83f708173660","variableMapping":{"da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[384,372,385,374,5,386,376,7,387,378],"tindex":"c7dd1c91-db2f-11e4-a170-71d5c791a02d","variableMapping":{"baseUrl":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[17,19,20,21,113,22,23,24,25,114,115,27,28,29,30,31,32,33,34,35,36,38,178],"tindex":"c7dd1c92-db2f-11e4-a170-35438e485f40","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"c7dd43a3-db2f-11e4-a170-4ba746cd96a7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"c7dd43a4-db2f-11e4-a170-1f7ac8d39b9e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[17,114,27],"tindex":"c7dd43a5-db2f-11e4-a170-236606abe2bf","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:274","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[17,18,19,20,21,113,22,388,23,24,25,114,389,167,168,26,115,27,28,29,30,31,32,33,0,34,35,36,37,38,390,39,40,170,41,42,43,120,44,45,171,121,46,391,392,393,172,173,47,122,394,174,175,395,396,380,397,398,399,3,400,9,371,10,401,402,403,384,404,405,406,372,407,408,176,382,409,410,411,383,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,165,177,178,179,166,180,432,433,11,4,434,435,12,373,436,437,438,385,439,440,374,441,442,5,443,444,445,6,446,447,448,13,375,14,449,450,451,386,452,453,454,376,48,49,455,456,7,457,458,459,8,460,461,462,15,377,16,463,464,465,387,466,467,468,378,130,181,469,131,182,132,183,184,185,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,50,159,160,161,186,187,188,51,52,53,123,189,190,54,191,470,192,193,194,195,196,197,471,198,199,200,201,472,202,203,204,205,206,207,473,208,209,210,211,59,60,61,212,213,214,215,216,217,218,219,220,474,221,222,62,63,64,65,475,66,162,224,225,226,227,67,68,69,228,229,230,231,232,233,234,235,236,476,237,238,477,478,364,479,480,481,482,483,484,485,365,239,366,367,486,487,488,489,490,368,491,492,493,494,495,496,124,369,370,497,498,499,500,501,502,503,504,505,240,241,242,163,243,244,164,245,70,246,247,248,506,71,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,72,269,270,271,272,273,73,274,275,276,277,74,278,125,75,279,280,77,507,281,78,282,283,284,508,79,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,80,305,306,307,308,309,81,310,311,312,313,82,314,126,83,315,316,317,84,318,319,320,509,85,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,86,341,342,343,344,345,87,346,347,348,349,88,350,127,89,351,352],"tindex":"c7dd43a6-db2f-11e4-a170-bfa2aa1c5fc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":-1},{"failures":[32,379],"tindex":"c7dd43a7-db2f-11e4-a170-8508c0ae5f86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[510,511,512],"tindex":"c7dd43a8-db2f-11e4-a170-c91ca6ee6311","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[383],"tindex":"c7dd43a9-db2f-11e4-a170-a99bc693a13e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"c7dd43aa-db2f-11e4-a170-03d2cbbc996e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[26,37,173,47,380,398,3,404,408,382,409,411,412,415,418,420,421,427,428,430,433,4,439,442,445,6,452,49,456,459,8,466,513,139,140,149,151,161,123,239,259,295,331],"tindex":"c7dd43ab-db2f-11e4-a170-6756669808cd","variableMapping":{"turnCosts":"speedVal","weight":"speedVal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"c7dd6abc-db2f-11e4-a170-ff1ca6a9fc52","variableMapping":{"name":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"c7dd6abd-db2f-11e4-a170-cd1608fd11cf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:336","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[104,105,514,106,108,109,515,111,112],"tindex":"c7dd6abe-db2f-11e4-a170-1f0e2aa82fa5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setWorldBounds()"},"status":-1},{"failures":[104,105,106,108,109,516,515,110,111,112,210,213,215,216,517,226,229,231,232],"tindex":"c7dd6abf-db2f-11e4-a170-af7824318103","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"c7dd6ac0-db2f-11e4-a170-01a2fe7412f5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:151","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"c7dd6ac1-db2f-11e4-a170-2f038a0c9419","variableMapping":{"latSize":"i","size":"size","lonSize":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[518],"tindex":"c7dd6ac2-db2f-11e4-a170-15aee7b74030","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[],"tindex":"c7dd6ac3-db2f-11e4-a170-cdabc69962de","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed","unknownSpeed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[],"tindex":"c7dd6ac4-db2f-11e4-a170-cbad821ab1ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[11,434,12,436,385,439,374],"tindex":"c7dd6ac5-db2f-11e4-a170-277345725d5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[133,511,512],"tindex":"c7dd6ac6-db2f-11e4-a170-9d7c6811b957","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"c7dd6ac7-db2f-11e4-a170-7387c48374f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"c7dd6ac8-db2f-11e4-a170-cd3222063371","variableMapping":{"flags":"encoded","tmpValue":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[165,179,364,365,366,367,487,368,491,369,370,250,258,260,261,263,267,268,73,274,286,294,296,297,299,303,304,81,310,322,330,332,333,335,339,340,87,346],"tindex":"c7dd6ac9-db2f-11e4-a170-b5a36d886d7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[17,18,19,20,21,113,22,23,24,25,114,26,115,27,28,29,30,31,32,33,34,35,36,37,38,519,520,521,116,117,118,119,39,40,41,42,43,120,44,45,121,46,47,122,48,49,50,51,52,53,123,54,55,56,522,57,58,59,60,61,67,68,69,124,244,70,246,71,72,73,74,125,75,523,77,78,282,79,80,81,82,126,83,84,318,85,86,87,88,127,89,524,128,90,91,525,526,94,95,96,527,129,97,98,528,529,101,102,103,530],"tindex":"c7dd91da-db2f-11e4-a170-8b2eef0007c2","variableMapping":{"currentEntry":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[104,105,514,106,107,108,109,110,111,112],"tindex":"c7dd91db-db2f-11e4-a170-2ff3aab333a3","variableMapping":{"hash":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"c7dd91dc-db2f-11e4-a170-61f57cd7bbee","variableMapping":{"storedKey":"hash","key":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":0},{"failures":[113,26,115,173,47,1,531,2,380,409,421,430,431,442,445,6,49,456,459,8,513,139,140,149,151,161,123],"tindex":"c7dd91dd-db2f-11e4-a170-55ddade9b148","variableMapping":{"tmp":"shift","initializedCounter":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"c7dd91de-db2f-11e4-a170-e3c4b37f2fc2","variableMapping":{"pointIndex":"x1","index":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-2},{"failures":[429],"tindex":"c7dd91df-db2f-11e4-a170-5f6012511109","variableMapping":{"str":"key","d":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:276","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String.trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[],"tindex":"c7dd91e0-db2f-11e4-a170-3fcf78724590","variableMapping":{"daType":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:121","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[17,18,19,20,21,113,22,23,24,25,114,115,27,28,29,30,31,32,33,34,35,36,38,177,178,179,148,152,153,156,532,186,187,196,197,210,59,60,61,212,214,216,217,218,219,220,221,222,62,63,64,65,66,162,224,226,67,68,69,228,230,232,233,234,235,236,237,238],"tindex":"c7dd91e1-db2f-11e4-a170-6d119e1721e9","variableMapping":{"i":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"c7dd91e2-db2f-11e4-a170-c38ad296a34d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[405,440,453,467],"tindex":"c7dd91e3-db2f-11e4-a170-efaf5fcfec10","variableMapping":{"newUniqueOsmId":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"c7dd91e4-db2f-11e4-a170-43a8fb66200b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:59","type":"CtLocalVariableImpl","sourcecode":"final java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState> java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState> = new java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>()"},"status":-2},{"failures":[],"tindex":"c7dd91e5-db2f-11e4-a170-29d61ed5f53c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:53","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Create DataAccess object via its corresponding Directory!\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-2},{"failures":[],"tindex":"c7dd91e6-db2f-11e4-a170-7b0c4659d8fc","variableMapping":{"width":"maxCount","lonSimilar":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":0},{"failures":[],"tindex":"c7ddb8f7-db2f-11e4-a170-090cd32382c9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"c7ddb8f8-db2f-11e4-a170-8f5cb3fa70e8","variableMapping":{"edgeState":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[420],"tindex":"c7ddb8f9-db2f-11e4-a170-c1770e94b4a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[26,418,422],"tindex":"c7ddb8fa-db2f-11e4-a170-316b5f8c5775","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-1},{"failures":[],"tindex":"c7ddb8fb-db2f-11e4-a170-417010d19d8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[17,18,19,20,21,113,22,23,24,25,114,167,168,26,115,27,28,29,30,31,32,33,34,35,36,37,38,169,39,39,40,40,170,170,41,41,42,42,43,43,120,120,44,44,45,45,171,171,121,121,46,46,172,173,47,122,174,175,176,165,177,178,179,166,180,48,49,130,181,131,182,132,183,184,185,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,50,159,160,161,186,187,188,51,52,53,123,189,190,54,191,192,193,194,195,196,197,198,199,200,201,472,202,203,204,205,206,207,473,208,209,210,211,59,60,61,212,213,214,215,216,217,218,219,220,474,221,222,223,62,63,64,65,475,66,162,224,225,226,227,67,68,69,228,229,230,231,232,233,234,235,236,476,237,238,477,478,364,479,480,481,482,483,484,485,365,239,366,367,486,487,488,489,490,368,491,492,493,494,495,496,124,369,370,497,498,499,500,501,502,503,504,505,240,241,242,163,243,244,164,245,70,246,247,248,71,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,72,269,270,271,272,273,73,274,275,276,277,74,278,125,75,279,280,77,507,281,78,282,283,284,79,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,80,305,306,307,308,309,81,310,311,312,313,82,314,126,83,315,316,317,84,318,319,320,85,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,86,341,342,343,344,345,87,346,347,348,349,88,350,127,89,351,352,533],"tindex":"c7ddb8fc-db2f-11e4-a170-1161580e0cbd","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"c7ddb8fd-db2f-11e4-a170-67cd74fc1e4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:143","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"c7ddb8fe-db2f-11e4-a170-cfcfaa3aa7e8","variableMapping":{"lat":"len"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[],"tindex":"c7ddb8ff-db2f-11e4-a170-83c6a7727ddd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[383],"tindex":"c7ddb900-db2f-11e4-a170-9327566f406b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"c7ddb901-db2f-11e4-a170-f39c42a3ddbc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"c7ddb902-db2f-11e4-a170-01c68efd5c9a","variableMapping":{"shift":"bits","tmpValue":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[49],"tindex":"c7ddb903-db2f-11e4-a170-1964b0204089","variableMapping":{"orientation":"incEleSum","resultOrientation":"eleDelta","baseOrientation":"decEleSum","java.lang.Math.PI":"decEleSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[405,440],"tindex":"c7dde014-db2f-11e4-a170-f166f1cdbe52","variableMapping":{"size":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"c7dde015-db2f-11e4-a170-674c092a3c31","variableMapping":{"directionBitMask":"oldRelationFlags","flags":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"c7dde016-db2f-11e4-a170-6567c2554eea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"c7dde017-db2f-11e4-a170-5d3b3fc22920","variableMapping":{"this":"this","y":"fromHeight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":273,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":157,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":244,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":513,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":200,"com.graphhopper.GraphHopperAPITest.testNoLoad":471,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":478,"com.graphhopper.reader.OSMReaderTest.testFerry":26,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":193,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":194,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":445,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":434,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":68,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":18,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":494,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":294,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":524,"com.graphhopper.coll.CompressedArrayTest.testCompress":112,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":438,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":132,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":492,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":331,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":225,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":528,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":135,"com.graphhopper.GraphHopperTest.testPrepare":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":501,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":130,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":338,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":512,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":443,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":149,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":223,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":385,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":187,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":226,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":166,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":442,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":147,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":330,"com.graphhopper.coll.BitSetImplTest.testCopy":518,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":60,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":77,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":516,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":71,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":511,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":138,"com.graphhopper.GraphHopperTest.testLoadOSM":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":217,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":61,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":396,"com.graphhopper.reader.OSMReaderTest.testSort":28,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":452,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":178,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":282,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":348,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":84,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":502,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":44,"com.graphhopper.storage.RAMDataAccessTest.testHeader":529,"com.graphhopper.routing.DijkstraTest.initializationError":391,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":313,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":523,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":272,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":327,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":241,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":507,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":289,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":79,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":372,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":230,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":153,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":224,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":228,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":388,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":485,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":144,"com.graphhopper.coll.OSMIDMapTest.testGetLong":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":143,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":250,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":304,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":265,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":70,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":267,"com.graphhopper.coll.CompressedArrayTest.testCompress2":111,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":340,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":398,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":295,"com.graphhopper.GraphHopperAPITest.testLoad":196,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":506,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":356,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":407,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":332,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":322,"com.graphhopper.storage.LevelGraphStorageTest.testClone":252,"com.graphhopper.reader.OSMReaderTest.testBarriers":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":285,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":460,"com.graphhopper.util.GHUtilityTest.testCopy":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":481,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":238,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":402,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":440,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":472,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":102,"com.graphhopper.routing.PathTest.testFindInstruction":122,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":373,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":286,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":510,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":195,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":411,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":278,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":199,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":457,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":349,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":336,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":311,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":184,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":464,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":531,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":394,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":254,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":482,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":363,"com.graphhopper.util.InstructionListTest.testWayList2":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":468,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":497,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":218,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":351,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":514,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":290,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":444,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":533,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":126,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":430,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":48,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":318,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":256,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":446,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":487,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":296,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":145,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":321,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":30,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":90,"com.graphhopper.routing.AStarTest.initializationError":392,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":50,"com.graphhopper.coll.OSMIDMapTest.testGet":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":293,"com.graphhopper.routing.PathBidirRefTest.testExtract":174,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":383,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":13,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":72,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":522,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":234,"com.graphhopper.storage.RAMDataAccessTest.testCopy":97,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":525,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":369,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":433,"com.graphhopper.storage.RAMDataAccessTest.testSegments":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":448,"com.graphhopper.util.GHUtilityTest.testSort2":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":154,"com.graphhopper.reader.OSMReaderTest.testMain":27,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":246,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":303,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":375,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":515,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":235,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":453,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":271,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":499,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":259,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":263,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":279,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":42,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":307,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":456,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":266,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":37,"com.graphhopper.storage.StorablePropertiesTest.testStore":530,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":129,"com.graphhopper.storage.GraphHopperStorageTest.testClone":324,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":498,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":422,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":334,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":420,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":240,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":405,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":483,"com.graphhopper.routing.PathTest.testTime":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":401,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":125,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":253,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":427,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":475,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":220,"com.graphhopper.reader.OSMReaderTest.testRelation":0,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":491,"com.graphhopper.util.GHUtilityTest.testSortDirected":192,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":466,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":95,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":41,"com.graphhopper.GraphHopperTest.testFootOnly":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":11,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":63,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":229,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":181,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":455,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":488,"com.graphhopper.search.NameIndexTest.testCreate":119,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":100,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":39,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":359,"com.graphhopper.routing.QueryGraphTest.testOneWay":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":474,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":106,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":59,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":104,"com.graphhopper.reader.OSMReaderTest.testWithBounds":36,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":103,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":467,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":367,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":493,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":1,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":249,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":247,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":397,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":465,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":374,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":306,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":209,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":300,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":85,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":140,"com.graphhopper.util.InstructionListTest.testWayList":52,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":350,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":447,"com.graphhopper.GraphHopperAPITest.testDisconnected179":197,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":484,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":308,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":479,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":16,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":168,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":179,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":368,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":504,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":21,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":326,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":64,"com.graphhopper.routing.util.EncodedValueTest.testSwap":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":136,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":343,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":441,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":151,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":134,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":423,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":386,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":160,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":509,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":476,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":376,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":317,"com.graphhopper.routing.PathTest.testWayList":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":503,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":366,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":417,"com.graphhopper.coll.OSMIDMapTest.testGet2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":161,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":526,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":275,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":519,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":305,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":450,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":337,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":291,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":325,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":231,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":264,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":232,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":98,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":96,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":462,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":399,"com.graphhopper.util.GHUtilityTest.testSort":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":496,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":110,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":435,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":449,"com.graphhopper.search.NameIndexTest.testPut":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":315,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":508,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":201,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":227,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":66,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":206,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":459,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":49,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":204,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":281,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":400,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":431,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":520,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":410,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":301,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":165,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":362,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":124,"com.graphhopper.routing.PathTest.testFound":172,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":114,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":380,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":277,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":429,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":242,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":14,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":297,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":118,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":239,"com.graphhopper.util.InstructionListTest.testEmptyList":188,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":329,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":527,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":148,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":403,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":152,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":426,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":414,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":413,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":439,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":155,"com.graphhopper.reader.PrinctonReaderTest.testRead":167,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":88,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":69,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":292,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":58,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":477,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":302,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":437,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":76,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":379,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":7,"com.graphhopper.reader.OSMReaderTest.testFoot":115,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":495,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":521,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":75,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":215,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":432,"com.graphhopper.reader.OSMReaderTest.testOneWay":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":216,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":333,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":346,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":312,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":436,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":94,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":341,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":461,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":490,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":183,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":517,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":137,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":421,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":182,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":207,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":176,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":486,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":170,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":319,"com.graphhopper.routing.PathBidirRefTest.testExtract2":175,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":360,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":139,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":219,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":384,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":116,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":345,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":473,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":406,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":32,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":505,"com.graphhopper.util.SimpleIntDequeTest.testPush":532,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":208,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":133,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":463,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":212,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":347,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":470,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":255,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":424,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":86,"com.graphhopper.GraphHopperTest.testFootAndCar":113,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":261,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":237,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":99,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":480,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":425,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":288,"com.graphhopper.GraphHopperTest.testPrepareOnly":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":158,"com.graphhopper.GraphHopperTest.testVia":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":202,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":454,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":364,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":34,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":243,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":123,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":344,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":409,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":33,"com.graphhopper.routing.AStarBidirectionTest.initializationError":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":489,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":428,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":276,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":274,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":78}}]
