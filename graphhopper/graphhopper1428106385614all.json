[{"failures":[],"tindex":"5e29231e-da5f-11e4-af0f-e3250a832599","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"5e294a2f-da5f-11e4-af0f-a13c84933722","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:80","type":"CtLocalVariableImpl","sourcecode":"long long = (long) * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"5e294a30-da5f-11e4-af0f-a1981510429f","variableMapping":{"size":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[],"tindex":"5e294a31-da5f-11e4-af0f-99bf96758308","variableMapping":{"index":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-2},{"failures":[],"tindex":"5e294a32-da5f-11e4-af0f-2dfa0db019ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"5e294a33-da5f-11e4-af0f-e968f3681aba","variableMapping":{"bits":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"5e294a34-da5f-11e4-af0f-0fe5643ba7ed","variableMapping":{"elem":"a","size":"low","keys":"a","i":"key","key":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (int[][(int / 2)]) > int ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-1},{"failures":[],"tindex":"5e294a35-da5f-11e4-af0f-3fcdf360a39f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"5e294a36-da5f-11e4-af0f-c119a852a9dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"5e294a37-da5f-11e4-af0f-3da9c2d7c14c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[34,35,36,37,38,39,40,41,42,43],"tindex":"5e297148-da5f-11e4-af0f-e1abe20aad8e","variableMapping":{"resultOrientation":"midLon","orientation":"midLon","java.lang.Math.PI":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[44,45,46,47],"tindex":"5e297149-da5f-11e4-af0f-d78d09a6b2ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[48],"tindex":"5e29714a-da5f-11e4-af0f-5f085fe595cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"5e29714b-da5f-11e4-af0f-e3bb175142b9","variableMapping":{"newValue":"i","values":"elem","index":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[49],"tindex":"5e29714c-da5f-11e4-af0f-b19abf64b3d9","variableMapping":{"i":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,49,95,0,96,97,1,98,99,100,101,102,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,2,161,162,163,164,165,166,167,168,169,3,4,170,5,171,172,173,6,7,174,175,176,177,178,179,8,9,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,18,251,252,253,254,255,256,257,258,259,19,20,260,21,261,262,263,22,23,264,265,266,267,268,269,24,25,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,26,290,291,292,293,294,295,296,297,298,27,28,299,29,300,301,302,30,31,303,304,305,306,307,308,32,33,309,310,311,312,313,314,315,316,317],"tindex":"5e29bf6d-da5f-11e4-af0f-fd01fd5bafef","variableMapping":{"heights":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[34,35,36,37,39,41,42,318,319,43,320,192,198,200,201,227,233,235,236],"tindex":"5e29bf6e-da5f-11e4-af0f-a764664453b4","variableMapping":{"nameIndexRef":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[],"tindex":"5e29bf6f-da5f-11e4-af0f-c98f746f9b58","variableMapping":{"res":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[],"tindex":"5e29bf70-da5f-11e4-af0f-ab9b128fe6e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(5, 5, 0)"},"status":-2},{"failures":[],"tindex":"5e29e681-da5f-11e4-af0f-9dd5ea15b9b1","variableMapping":{"y1":"maxTurnCosts","y2":"maxTurnCosts","x1":"maxTurnCosts","x2":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-2},{"failures":[],"tindex":"5e29e682-da5f-11e4-af0f-ebe6dd64efb7","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"resultOrientation","java.lang.Double.POSITIVE_INFINITY":"resultOrientation","weight":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[321],"tindex":"5e29e683-da5f-11e4-af0f-43ec7891c896","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:424","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[322,144,146,150,152,154,155],"tindex":"5e29e684-da5f-11e4-af0f-23274dfb9ee0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-1},{"failures":[],"tindex":"5e29e685-da5f-11e4-af0f-85359bc6b598","variableMapping":{"c":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:228","type":"CtReturnImpl","sourcecode":"return int > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-2},{"failures":[],"tindex":"5e29e686-da5f-11e4-af0f-8d8f861cc588","variableMapping":{"line":"encoderList"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[55,80,81,87,323,324,119,141],"tindex":"5e29e687-da5f-11e4-af0f-511c116020e0","variableMapping":{"size":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"5e29e688-da5f-11e4-af0f-973a42910ef6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-2},{"failures":[],"tindex":"5e29e689-da5f-11e4-af0f-457ec9b7f579","variableMapping":{"keyIndex":"delta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-2},{"failures":[],"tindex":"5e2a34aa-da5f-11e4-af0f-3b115567bea4","variableMapping":{"cap":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-2},{"failures":[],"tindex":"5e2a34ab-da5f-11e4-af0f-df96ab2a7a49","variableMapping":{"graph":"graph"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1043","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[52,53,54,55,56,325,60,65,66,67,68,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,144,147,148,150,151,155],"tindex":"5e2a34ac-da5f-11e4-af0f-dbebd9597bef","variableMapping":{"iterState":"iterState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-1},{"failures":[50,51,52,53,54,56,58,325,59,326,65,66,67,327,328,329,72,80,82,83,84,85,86,87,88,89,90,91,92,93,330,331,332,333,334,94,49,102,104,105,107,108,109,110,111,112,114,115,138,335,159,174,8,183,186,194,195,196,229,230,231,336,337,245,16,338,339,340,341,342,343,344,345,346,347,348,349,249,264,24,273,276,350,351,352,353,354,355,288,303,32,312,315,356,357,358,359,360,361,362,363,364],"tindex":"5e2a34ad-da5f-11e4-af0f-e5427188a1c4","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,325,59,326,365,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,366,367,368,369,77,370,371,372,373,374,78,79,80,81,82,83,84,85,86,87,88,375,89,90,91,92,376,93,330,331,332,333,334,94,49,95,0,96,97,1,98,99,100,101,102,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,335,377,157,158,378,159,160,2,161,162,163,164,165,166,167,168,169,3,4,170,5,171,172,173,6,7,174,175,176,177,178,179,8,9,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,379,213,214,215,216,217,218,219,380,220,221,222,223,224,381,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,336,382,10,383,384,385,386,387,388,389,390,244,11,12,391,13,392,393,394,14,15,337,395,396,397,398,245,16,17,399,400,401,338,402,403,339,404,405,348,406,246,349,407,247,248,408,249,250,18,251,252,253,254,255,256,257,258,259,19,20,260,21,261,262,263,22,23,264,265,266,267,268,269,24,25,270,271,272,273,274,275,276,277,278,409,410,411,412,413,279,280,281,282,283,414,284,285,355,415,286,287,416,288,289,26,290,291,292,293,294,295,296,297,298,27,28,299,29,300,301,302,30,31,303,304,305,306,307,308,32,33,309,310,311,312,313,314,315,316,317,417,418],"tindex":"5e2a34ae-da5f-11e4-af0f-11a33713f508","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[],"tindex":"5e2a5bbf-da5f-11e4-af0f-e59b3831b69a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"5e2a5bc0-da5f-11e4-af0f-0f66e0e35a77","variableMapping":{"intVal":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":0},{"failures":[419],"tindex":"5e2a5bc1-da5f-11e4-af0f-6d28cce22b4c","variableMapping":{"mGarbage":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"5e2a5bc2-da5f-11e4-af0f-5b7717e26691","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[52,53,56,59,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,137,138,139,140,141,142,144,150,151,155],"tindex":"5e2a5bc3-da5f-11e4-af0f-05cf26adf45b","variableMapping":{"this":"this","edgeState":"mainEdgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"5e2a5bc4-da5f-11e4-af0f-d39eb97420bd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"5e2a5bc5-da5f-11e4-af0f-9962a2547cd1","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"5e2a5bc6-da5f-11e4-af0f-257f7c7a18fb","variableMapping":{"nextTowerId":"a"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[50,51,52,53,56,58,59,69,70,72,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,189,190,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,282,283,355,287,288,289,26,290,291,292,293,294,295,296,27,28,299,29,300,302,30,31,303,304,306,308,32,33,309,310,311,312,314,315,316,317],"tindex":"5e2a5bc7-da5f-11e4-af0f-23fb76796f4a","variableMapping":{"size":"edgeCount","hash":"edgeCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"5e2a82d8-da5f-11e4-af0f-6d40e3017deb","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"5e2a82d9-da5f-11e4-af0f-43b2fcfc244e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[34,35,37,38,39,40,41,42],"tindex":"5e2a82da-da5f-11e4-af0f-698d80bd8bd8","variableMapping":{"fwdFaster":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"5e2aa9eb-da5f-11e4-af0f-6fd7193d6db2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:59","type":"CtLocalVariableImpl","sourcecode":"final java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState> java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState> = new java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>()"},"status":-2},{"failures":[],"tindex":"5e2aa9ec-da5f-11e4-af0f-5198b30e3f3e","variableMapping":{"intVal":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:85","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"5e2ad0fd-da5f-11e4-af0f-b595108fc53f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"5e2ad0fe-da5f-11e4-af0f-1fff9a5553a5","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"5e2ad0ff-da5f-11e4-af0f-a1bc64548942","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"5e2ad100-da5f-11e4-af0f-7d95a8e7285a","variableMapping":{"byteCount":"bytePos","longSegmentSize":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:116","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"5e2ad101-da5f-11e4-af0f-c3877a8a72e9","variableMapping":{"frontIndex":"maxTurnCosts","endIndexPlusOne":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[52,119,121,130,134,137,138,139,141,144,150,154],"tindex":"5e2ad102-da5f-11e4-af0f-ef21c20e6160","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[420],"tindex":"5e2ad103-da5f-11e4-af0f-b5401f30ace3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTBitSet:103","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Not supported yet.\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"5e2ad104-da5f-11e4-af0f-efb9b399ac4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[118,119,138,139,141,155],"tindex":"5e2ad105-da5f-11e4-af0f-8b8809e80681","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"5e2ad106-da5f-11e4-af0f-8ff07287a1da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"5e2ad107-da5f-11e4-af0f-83d585c42cd0","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[34,35,36,37,38,39,40,41,42],"tindex":"5e2ad108-da5f-11e4-af0f-5513dcd57711","variableMapping":{"oldValueIndex":"spatialKey","lastKey":"bits","key":"spatialKey"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"5e2ad109-da5f-11e4-af0f-1574984e9086","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"5e2ad10a-da5f-11e4-af0f-2dc026abbf34","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"5e2ad10b-da5f-11e4-af0f-81f385589252","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.KM_MILE":"maxLatTmp","distInMeter":"minLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:76","type":"CtLocalVariableImpl","sourcecode":"double double = (double / 1000) / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"5e2ad10c-da5f-11e4-af0f-b718db0783c8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[421,422],"tindex":"5e2ad10d-da5f-11e4-af0f-6be31b28f4ba","variableMapping":{"osmFile":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[80,48],"tindex":"5e2ad10e-da5f-11e4-af0f-558189586f11","variableMapping":{"red":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"5e2ad10f-da5f-11e4-af0f-bbb573a48657","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"5e2af820-da5f-11e4-af0f-ddcade43cad9","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"5e2af821-da5f-11e4-af0f-41fce2d941de","variableMapping":{"eleDelta":"lastPrio","decEleSum":"lastPrio","fullDist2D":"lastPrio","decDist2DSum":"lastPrio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"5e2af822-da5f-11e4-af0f-9531e94efa44","variableMapping":{"speed":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[93,97],"tindex":"5e2be283-da5f-11e4-af0f-491018073a12","variableMapping":{"size":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[],"tindex":"5e2be284-da5f-11e4-af0f-a32977a60e61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[],"tindex":"5e2be285-da5f-11e4-af0f-ab4b12b3afaa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[48],"tindex":"5e2be286-da5f-11e4-af0f-551549396cbe","variableMapping":{"index":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"5e2c0997-da5f-11e4-af0f-d3fa36430956","variableMapping":{"high":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[],"tindex":"5e2c0998-da5f-11e4-af0f-9736b90871b9","variableMapping":{"shiftSum":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[0,1,2,168,3,4,5,6,7,8,9,10,390,11,12,13,14,15,16,17,18,258,19,20,21,22,23,24,25,284,26,297,27,28,29,30,31,32,33],"tindex":"5e2c0999-da5f-11e4-af0f-a39630e4e960","variableMapping":{"freeIndex":"len"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-1},{"failures":[],"tindex":"5e2c099a-da5f-11e4-af0f-211dbed3181c","variableMapping":{"tmp":"shift","initializedCounter":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"5e2c099b-da5f-11e4-af0f-2fb5e42e5bc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:342","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"5e2c099c-da5f-11e4-af0f-5d31d3696d62","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[52,423,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,147,150,152,154,155],"tindex":"5e2c099d-da5f-11e4-af0f-bf995cc3b4dd","variableMapping":{"lat":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[0,98],"tindex":"5e2c099e-da5f-11e4-af0f-67a9da78b8e1","variableMapping":{"index":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[424,323,425,426],"tindex":"5e2c099f-da5f-11e4-af0f-8511fc6db8a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[50,51,52,53,54,55,56,58,325,59,326,68,80,81,82,83,84,85,86,87,88,89,90,91,92,376,93,427,428,429,430,431,432,433,434,424,421,435,436,437,438,439,440,441,442,443,444,44,445,323,419,446,447,448,449,425,450,451,452,453,454,455,45,456,457,458,459,460,461,462,463,464,46,426,422,465,466,467,468,469,470,471,472,473,474,47,475],"tindex":"5e2c09a0-da5f-11e4-af0f-fbce1814ad78","variableMapping":{"properties":"properties"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:107","type":"CtReturnImpl","sourcecode":"return !(java.util.Map<java.lang.String, java.lang.Object>.isEmpty())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-1},{"failures":[],"tindex":"5e2c09a1-da5f-11e4-af0f-d955ba0ff52f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:972","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot initialize locationIndex twice!\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-2},{"failures":[],"tindex":"5e2c09a2-da5f-11e4-af0f-e9c0a6e1f07f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"5e2c09a3-da5f-11e4-af0f-e1a8584d3aa1","variableMapping":{"directionBitMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"5e2c09a4-da5f-11e4-af0f-e3109b0b4d1c","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"index","speed":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":0},{"failures":[],"tindex":"5e2c09a5-da5f-11e4-af0f-2f69df424041","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[50,51,52,53,54,55,56,58,325,59,326,60,61,64,65,66,67,68,69,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,375,89,90,91,92,376,93,427,476,428,429,430,431,477,432,478,433,479,480,481,482,483,434,484,485,94,49,486,424,421,435,487,436,437,488,438,439,440,489,441,442,490,491,443,444,44,445,492,493,494,495,420,496,497,323,419,498,95,446,324,499,447,448,500,449,425,501,502,450,451,503,452,453,504,505,454,455,45,456,506,507,508,457,458,459,460,461,509,462,510,511,463,464,46,512,0,96,97,1,98,99,513,426,422,465,514,466,467,515,468,469,470,516,471,472,517,518,473,474,47,475,519,520,100,101,102,103,108,111,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,521,144,145,146,147,148,149,150,151,152,153,154,155,156,335,377,157,158,378,159,160,2,161,162,163,164,165,166,167,168,169,3,4,170,5,171,172,173,6,7,174,175,176,177,178,179,8,9,180,181,182,183,184,185,186,187,188,190,208,214,226,243,336,382,10,383,384,385,386,387,388,389,390,244,11,12,391,13,392,393,394,14,15,337,395,396,397,398,245,16,17,399,400,401,338,402,403,339,404,405,348,406,246,349,407,247,248,408,249,250,18,251,252,253,254,255,256,257,258,259,19,20,260,21,261,262,263,22,23,264,265,266,267,268,269,24,25,270,271,272,273,274,275,276,277,278,279,280,281,282,283,414,284,285,355,415,286,287,416,288,289,26,290,291,292,293,294,295,296,297,298,27,28,299,29,300,301,302,30,31,303,304,305,306,307,308,32,33,309,310,311,312,313,314,315,316,317],"tindex":"5e2c30b6-da5f-11e4-af0f-2b62764a7420","variableMapping":{"encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1003","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    throw new java.lang.IllegalArgumentException(((\"Contraction hierarchies preparation \" + \"requires (at the moment) only one vehicle. But was:\") + (com.graphhopper.routing.util.EncodingManager)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[],"tindex":"5e2c30b7-da5f-11e4-af0f-0947417551de","variableMapping":{"tmpNo":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[481,488,495,515],"tindex":"5e2c30b8-da5f-11e4-af0f-0f27043006a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[496],"tindex":"5e2dde69-da5f-11e4-af0f-a9a816bd1e01","variableMapping":{"bits":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"5e2dde6a-da5f-11e4-af0f-7540c2dd0647","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"5e2dde6b-da5f-11e4-af0f-9ddefbb5db4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:114","type":"CtLocalVariableImpl","sourcecode":"int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int))"},"status":-2},{"failures":[487,437,443,501,502,454,458,463,514,467,473],"tindex":"5e2dde6c-da5f-11e4-af0f-d166ebf3ef15","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:255","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"5e2dde6d-da5f-11e4-af0f-bbaae23ca0ce","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"5e2dde6e-da5f-11e4-af0f-6b024431e897","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:472","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"5e2dde6f-da5f-11e4-af0f-a516243e2609","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"5e2e0580-da5f-11e4-af0f-dfe0ab2434f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"5e2e0581-da5f-11e4-af0f-43be93db86a5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":308,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":136,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":414,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":520,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":382,"com.graphhopper.reader.OSMReaderTest.testFerry":80,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":75,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":466,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":459,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":195,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":51,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":492,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":258,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":374,"com.graphhopper.coll.CompressedArrayTest.testCompress":35,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":511,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":146,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":337,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":169,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":191,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":356,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":152,"com.graphhopper.GraphHopperTest.testPrepare":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":402,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":142,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":173,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":465,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":128,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":215,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":463,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":63,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":192,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":98,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":458,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":426,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":126,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":230,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":467,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":348,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":318,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":288,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":155,"com.graphhopper.GraphHopperTest.testLoadOSM":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":231,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":497,"com.graphhopper.reader.OSMReaderTest.testSort":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":474,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":90,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":97,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":407,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":181,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":335,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":403,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":111,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":272,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":364,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":307,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":165,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":521,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":406,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":487,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":249,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":297,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":506,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":455,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":199,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":132,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":190,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":197,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":57,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":437,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":389,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":123,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":122,"com.graphhopper.coll.OSMIDMapTest.testGetLong":333,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":251,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":301,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":322,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":355,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":30,"com.graphhopper.coll.CompressedArrayTest.testCompress2":34,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":7,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":425,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":259,"com.graphhopper.GraphHopperAPITest.testLoad":60,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":416,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":351,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":419,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":3,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":2,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":48,"com.graphhopper.storage.LevelGraphStorageTest.testClone":291,"com.graphhopper.reader.OSMReaderTest.testBarriers":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":488,"com.graphhopper.util.GHUtilityTest.testCopy":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":385,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":208,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":504,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":46,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":379,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":346,"com.graphhopper.routing.PathTest.testFindInstruction":103,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":509,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":18,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":69,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":447,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":313,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":435,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":182,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":171,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":148,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":490,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":420,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":293,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":386,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":354,"com.graphhopper.util.InstructionListTest.testWayList2":67,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":399,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":238,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":187,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":254,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":514,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":275,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":422,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":484,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":94,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":377,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":515,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":19,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":124,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":160,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":85,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":138,"com.graphhopper.coll.OSMIDMapTest.testGet":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":257,"com.graphhopper.routing.PathBidirRefTest.testExtract":116,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":448,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":303,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":332,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":470,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":203,"com.graphhopper.storage.RAMDataAccessTest.testCopy":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":16,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":508,"com.graphhopper.storage.RAMDataAccessTest.testSegments":345,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":469,"com.graphhopper.util.GHUtilityTest.testSort2":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":133,"com.graphhopper.reader.OSMReaderTest.testMain":82,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":415,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":516,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":319,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":47,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":204,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":306,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":401,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":298,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":29,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":316,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":27,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":267,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":424,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":302,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":92,"com.graphhopper.storage.StorablePropertiesTest.testStore":411,"com.graphhopper.storage.GraphHopperStorageTest.testClone":162,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":400,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":433,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":409,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":170,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":432,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":279,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":45,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":387,"com.graphhopper.routing.PathTest.testTime":101,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":453,"com.graphhopper.util.BitUtilLittleTest.testToFloat":328,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":314,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":292,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":483,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":380,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":15,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":305,"com.graphhopper.reader.OSMReaderTest.testRelation":375,"com.graphhopper.util.GHUtilityTest.testSortDirected":74,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":444,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":362,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":107,"com.graphhopper.GraphHopperTest.testFootOnly":59,"com.graphhopper.util.BitUtilLittleTest.testToInt":329,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":457,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":217,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":431,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":410,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":198,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":496,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":486,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":392,"com.graphhopper.search.NameIndexTest.testCreate":369,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":344,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":104,"com.graphhopper.routing.QueryGraphTest.testOneWay":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":241,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":461,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":229,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":36,"com.graphhopper.reader.OSMReaderTest.testWithBounds":91,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":347,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":44,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":96,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":395,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":500,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":494,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":289,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":286,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":491,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":512,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":266,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":226,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":477,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":261,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":159,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":119,"com.graphhopper.util.BitUtilLittleTest.testToBitString":327,"com.graphhopper.util.InstructionListTest.testWayList":66,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":184,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":468,"com.graphhopper.GraphHopperAPITest.testDisconnected179":61,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":388,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":268,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":383,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":441,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":79,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":518,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":54,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":164,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":153,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":513,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":151,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":312,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":479,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":451,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":473,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":140,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":378,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":519,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":156,"com.graphhopper.routing.PathTest.testWayList":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":339,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":503,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":11,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":430,"com.graphhopper.coll.OSMIDMapTest.testGet2":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":141,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":309,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":517,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":172,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":498,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":255,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":200,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":300,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":201,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":342,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":363,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":439,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":501,"com.graphhopper.util.GHUtilityTest.testSort":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":398,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":460,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":472,"com.graphhopper.search.NameIndexTest.testPut":367,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":408,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":193,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":212,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":220,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":223,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":436,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":49,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":246,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":325,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":450,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":371,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":485,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":499,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":262,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":0,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":353,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":299,"com.graphhopper.routing.PathTest.testFound":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":245,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":323,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":326,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":311,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":321,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":281,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":471,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":20,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":423,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":368,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":244,"com.graphhopper.util.InstructionListTest.testEmptyList":64,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":127,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":505,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":482,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":476,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":427,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":464,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":134,"com.graphhopper.reader.PrinctonReaderTest.testRead":78,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":183,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":196,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":256,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":37,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":336,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":263,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":440,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":510,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":495,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":452,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":421,"com.graphhopper.reader.OSMReaderTest.testFoot":81,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":115,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":397,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":235,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":315,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":507,"com.graphhopper.reader.OSMReaderTest.testOneWay":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":236,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":4,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":9,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":271,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":462,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":361,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":175,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":438,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":394,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":147,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":320,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":154,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":478,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":145,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":224,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":360,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":95,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":391,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":106,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":157,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":376,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":418,"com.graphhopper.routing.PathBidirRefTest.testExtract2":117,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":118,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":239,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":454,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":366,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":179,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":381,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":456,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":405,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":446,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":232,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":180,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":294,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":480,"com.graphhopper.GraphHopperTest.testFootAndCar":55,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":174,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":28,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":502,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":207,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":384,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":493,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":481,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":252,"com.graphhopper.storage.StorablePropertiesTest.testLoad":412,"com.graphhopper.GraphHopperTest.testPrepareOnly":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":137,"com.graphhopper.GraphHopperTest.testVia":52,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":10,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":89,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":283,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":68,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":178,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":324,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":393,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":434,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":310,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":33,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":349}}]
