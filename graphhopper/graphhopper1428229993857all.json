[{"failures":[],"tindex":"2b003265-db7f-11e4-b2f2-ef33c984a175","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:200","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":0},{"failures":[],"tindex":"2b003266-db7f-11e4-b2f2-112468ecde21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:566","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return com.graphhopper.routing.util.EncodedValue.setValue(long, long);\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setLong(long, int, long);\n}"},"status":-2},{"failures":[0,1],"tindex":"2b003267-db7f-11e4-b2f2-89ca49285657","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-1},{"failures":[],"tindex":"2b003268-db7f-11e4-b2f2-a34649b3349d","variableMapping":{"flags":"wayBitMask","mask":"wayBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"2b003269-db7f-11e4-b2f2-b7b3c5d4bb95","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"2b00597a-db7f-11e4-b2f2-cb70f3425508","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"2b00597b-db7f-11e4-b2f2-8b658f1a4a93","variableMapping":{"freeIndex":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-2},{"failures":[],"tindex":"2b00597c-db7f-11e4-b2f2-19670aea6727","variableMapping":{"err":"b"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"2b00597d-db7f-11e4-b2f2-fd1c8ffd4a76","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,0,40,41,42,43,44,45,46,47,48],"tindex":"2b00597e-db7f-11e4-b2f2-f9dcbbafd0bf","variableMapping":{"this":"this","unknownSpeed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"2b00597f-db7f-11e4-b2f2-672ddfe0037e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[],"tindex":"2b005980-db7f-11e4-b2f2-a9b97d190a35","variableMapping":{"baseNode":"frontIndex","id":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:360","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[73,74,4,13,75,76,77,78,79,80,81,82,83,84],"tindex":"2b005981-db7f-11e4-b2f2-03213108641c","variableMapping":{"initialized":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:130","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[4,5,13,76,77,78,79,80,81,82,83],"tindex":"2b005982-db7f-11e4-b2f2-65935c2bfae3","variableMapping":{"byteCount":"flags","longSegmentSize":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:116","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"2b005983-db7f-11e4-b2f2-e3fe930094e5","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[],"tindex":"2b005984-db7f-11e4-b2f2-d7d7dc77e048","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,18,99,100,101,102,103,104,105,106,19,107,108,109,110,111,112,113,20,114,115,21,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,22,136,137,138,139,140,141,142,143,144,145,23,146,147,148,24,149,150,151,152,153,154,155,156,25,157,158,159,160,161,162,163,26,164,165,27,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,28,186,187,188,189,190,191,192,193,194,195,196,29,197,198,199,200,201,202,203,30,204,205,31,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,32,226,227,228,229,230,231,67,232,233,234,235,236,237,33,238,239,240,241,242,243,244,34,245,246,35,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,36,267,268,269,270,271,272,273,274,275,37,276,38,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,39,294,295,296,297,298,299,300,301,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,302,303,304,75,305,76,306,307,308,309,310,311,312,77,313,314,315,316,317,318,319,78,320,79,321,322,323,324,325,326,327,328,329,80,330,331,332,333,334,0,335,336,337,338,81,339,82,340,341,342,343,344,345,346,347,348,83,349,350,351,352,353,354,84,355,356,357,358,40,41,42,43,359,360,361,362,363,364,365,366,1,367,44,45,368,369,370,371,372,373,374,375,376,377,46,378,379,380,381,382,383,384,385,386,47,387,388,389,390,391,48],"tindex":"2b008095-db7f-11e4-b2f2-a9675429b4ee","variableMapping":{"baseUrl":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[85,86,87,88,89,90,91,392,92,93,94,95,393,96,97,394,73,395,396,397,398,74,399,400,98,401,402,403,404,405,18,99,100,406,407,101,408,409,410,102,103,104,105,106,411,412,19,107,108,109,110,111,112,113,20,114,115,21,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,22,136,137,138,139,140,413,414,415,416,417,418,141,419,420,421,422,423,424,142,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,143,447,144,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,145,23,146,147,148,24,149,150,151,152,153,154,155,156,25,157,158,159,160,161,162,163,26,164,165,27,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,28,186,187,188,189,190,191,192,193,194,195,196,29,197,198,199,200,201,202,203,30,204,205,31,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,32,226,227,228,229,230,231,67,232,233,234,235,236,237,33,238,239,240,241,242,243,244,34,245,246,35,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,36,267,268,269,270,271,272,273,465,466,274,275,37,276,38,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,39,294,295,296,297,298,299,300,301,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,467,302,303,304,75,305,76,306,307,308,309,310,311,312,77,313,314,315,316,317,318,319,78,320,79,321,322,323,324,325,326,327,328,329,80,330,331,332,333,334,0,335,336,337,338,81,339,82,340,341,342,343,344,345,346,347,348,83,349,350,351,352,353,354,84,355,356,357,358,40,41,468,42,43,359,360,361,362,363,364,365,366,1,367,44,45,368,369,370,371,372,373,374,375,376,377,46,378,379,380,381,382,383,384,385,386,47,387,388,389,390,469,470,471,472,473,391,474,475,48,476,477,478,479,480,481],"tindex":"2b008096-db7f-11e4-b2f2-fd3a6d4fbad3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[],"tindex":"2b00a7a7-db7f-11e4-b2f2-2f33db0404fd","variableMapping":{"high":"dir","len":"dir","start":"dir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":0},{"failures":[482,483],"tindex":"2b00a7a8-db7f-11e4-b2f2-55b1df8a750e","variableMapping":{"nanoTime":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"2b00a7a9-db7f-11e4-b2f2-95b9e98c4c22","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[],"tindex":"2b00a7aa-db7f-11e4-b2f2-2d2834c929f4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:625","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"2b00a7ab-db7f-11e4-b2f2-bb2bb8eebfc5","variableMapping":{"minLon":"d1","maxLon":"d1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:94","type":"CtIfImpl","sourcecode":"if ((double) >= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-2},{"failures":[],"tindex":"2b00a7ac-db7f-11e4-b2f2-03879dab75de","variableMapping":{"length":"i","factor":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"2b00a7ad-db7f-11e4-b2f2-cf781ced1963","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[3,317,336,84],"tindex":"2b00a7ae-db7f-11e4-b2f2-bfc75b9b91a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[],"tindex":"2b00a7af-db7f-11e4-b2f2-1bd65fda0d30","variableMapping":{"flags":"directionBitMask","tmpValue":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[87,88,89,90,94,95,394,73,395,397,398,74,400,401,402,403,405,274,288,292,6,307,323,342],"tindex":"2b00a7b0-db7f-11e4-b2f2-55e511900af7","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[85,86,87,88,89,90,91,92,93,94,95,394,73,395,396,397,398,74,399,400,401,402,403,404,405,484,485,486,487,488,489,490,491,101,103,104,105,106,492,493,494,495,130,496,49,50,497,498,499,500,501,52,53,502,503,425,426,427,428,430,433,434,435,451,452,453,504,58,59,505,506,507,508,509,61,62,510,511,149,152,153,25,175,181,28,187,188,192,193,29,215,221,32,227,228,231,233,234,33,256,262,36,268,269,512,513,334,0,40,41,374,470,471,473,391,474,475,48,476,478,479],"tindex":"2b00a7b1-db7f-11e4-b2f2-e3415c8832c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[86,87,88,89,91,92,93,94,394,395,396,397,398,74,399,400,401,402,403,404,405,514,515,484,485,486,487,488,489,490,491,101,103,104,105,106,493,494,495,19,107,108,109,110,111,112,113,20,114,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,22,136,137,138,139,140,496,503,425,426,427,428,430,433,435,451,453,504,511,152,25,175,181,28,187,192,29,215,221,32,227,231,67,233,33,256,262,36,268,516,517,40,41,374,471,476,479],"tindex":"2b00a7b2-db7f-11e4-b2f2-ebc8b8d02ab4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[],"tindex":"2b00cdc3-db7f-11e4-b2f2-bd14ec8ef7f1","variableMapping":{"map":"map"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":0},{"failures":[],"tindex":"2b00cdc4-db7f-11e4-b2f2-87bd45b01fe8","variableMapping":{"shiftSum":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":0},{"failures":[],"tindex":"2b00cdc5-db7f-11e4-b2f2-0580cc885cad","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[281,286],"tindex":"2b00cdc6-db7f-11e4-b2f2-4d0e8acccf8b","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"i","tmpNode":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[],"tindex":"2b00cdc7-db7f-11e4-b2f2-772ff5735f5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:394","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[],"tindex":"2b00cdc8-db7f-11e4-b2f2-4fd29d032e71","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"2b00cdc9-db7f-11e4-b2f2-5f31b13dfb0d","variableMapping":{"edgeId":"endIndexPlusOne","lastEdgeIndex":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:169","type":"CtReturnImpl","sourcecode":"return (int) > (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[],"tindex":"2b00cdca-db7f-11e4-b2f2-09064348e1e0","variableMapping":{"size":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-2},{"failures":[85,94],"tindex":"2b00cdcb-db7f-11e4-b2f2-3915b25f6ae8","variableMapping":{"shift":"encoded","flags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"2b00cdcc-db7f-11e4-b2f2-effe01ce73fb","variableMapping":{"size":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"2b00cdcd-db7f-11e4-b2f2-1369b6691e76","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[42,43,1,44,377],"tindex":"2b00cdce-db7f-11e4-b2f2-796ed92bb9ca","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"2b00cdcf-db7f-11e4-b2f2-cf9863e9fabd","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[394,518],"tindex":"2b00cdd0-db7f-11e4-b2f2-158e0c04a731","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"2b00cdd1-db7f-11e4-b2f2-fbc3a6743364","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"2b00cdd2-db7f-11e4-b2f2-ab941da5b6bf","variableMapping":{"i":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[],"tindex":"2b00f4e3-db7f-11e4-b2f2-b5317b2c00f0","variableMapping":{"value":"weightLong"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[42,43,374,375,377,390],"tindex":"2b00f4e4-db7f-11e4-b2f2-2d984c2fad73","variableMapping":{"reverse":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:618","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Not yet supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[519],"tindex":"2b00f4e5-db7f-11e4-b2f2-bb5a7babf0ac","variableMapping":{"id":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[],"tindex":"2b00f4e6-db7f-11e4-b2f2-1bc570b9085f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"2b00f4e7-db7f-11e4-b2f2-a7330c987046","variableMapping":{"properties":"properties"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:76","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.lang.Object>.isEmpty())\n    return \"<empty>\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[],"tindex":"2b00f4e8-db7f-11e4-b2f2-f1e3e6b4c7a1","variableMapping":{"line":"location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[],"tindex":"2b00f4e9-db7f-11e4-b2f2-a77f989edb43","variableMapping":{"cap":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":0},{"failures":[],"tindex":"2b00f4ea-db7f-11e4-b2f2-6f6c141827aa","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.BIKE2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"2b00f4eb-db7f-11e4-b2f2-4f98d7715add","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.Arrays.java.util.Arrays.asList(com.graphhopper.routing.util.FlagEncoder[]))"},"status":-2},{"failures":[],"tindex":"2b00f4ec-db7f-11e4-b2f2-19eb73a3ee23","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[4,5,13,76,77,318,78,79,80,337,81,82,83,482,483],"tindex":"2b00f4ed-db7f-11e4-b2f2-07ede4b991d3","variableMapping":{"initialized":"partOfCycleRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:241","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call loadExisting only once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[353],"tindex":"2b00f4ee-db7f-11e4-b2f2-f9519bcd7549","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[394,293],"tindex":"2b00f4ef-db7f-11e4-b2f2-b9204f32774b","variableMapping":{"y1":"shortTripsSpeed","x1":"shortTripsSpeed","y2":"longTripsSpeed","x2":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[84],"tindex":"2b00f4f0-db7f-11e4-b2f2-6dc9a138c55c","variableMapping":{"factor":"speed","value":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"2b00f4f1-db7f-11e4-b2f2-b75d3c589cf7","variableMapping":{"i":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[87,447,368,371],"tindex":"2b00f4f2-db7f-11e4-b2f2-03ca26783175","variableMapping":{"bitsForEdgeFlags":"nodeA"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[42,43,1,44,377],"tindex":"2b00f4f3-db7f-11e4-b2f2-7118a7314cbc","variableMapping":{"encoded":"millis","backwardBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"2b011c04-db7f-11e4-b2f2-3917df2afc14","variableMapping":{"includeWay":"relationFlags","relationFlags":"flags","encoder":"encoder","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"2b011c05-db7f-11e4-b2f2-d30dd497216e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[42,43,377,46,47],"tindex":"2b011c06-db7f-11e4-b2f2-05fd97458239","variableMapping":{"edgeId":"tmp","nextEdge":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[21,503,511,27,31,35],"tindex":"2b011c07-db7f-11e4-b2f2-611c9e34c9a4","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[],"tindex":"2b014318-db7f-11e4-b2f2-330e27bb8495","variableMapping":{"err":"from","dLat":"from","tmpErr":"from","x1":"from","sLon":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":0},{"failures":[],"tindex":"2b014319-db7f-11e4-b2f2-07c5b94b5884","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"2b01431a-db7f-11e4-b2f2-f3a2bbca8662","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"2b01431b-db7f-11e4-b2f2-f377c190a301","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"2b01431c-db7f-11e4-b2f2-410412877952","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":0},{"failures":[],"tindex":"2b01431d-db7f-11e4-b2f2-0988b19c5b2b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[520,104,105,106,521,522,523,524,40,41],"tindex":"2b01431e-db7f-11e4-b2f2-a99d70f1e049","variableMapping":{"deltaX":"angle","maxX":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[85,86,87,88,89,90,91,92,93,94,95,394,73,395,396,397,398,74,399,400,401,402,403,404,405,487,488,490,491,101,103,104,105,106,492,493,494,495,130,50,426,427,428,430,433,434,435,451,452,453,59,149,152,153,25,175,181,28,187,188,192,193,29,215,221,32,227,228,231,233,234,33,256,262,36,268,269,513,334,0,40,41,374,470,471,473,391,474,475,48,476,478,479],"tindex":"2b01431f-db7f-11e4-b2f2-4d3fb76997d1","variableMapping":{"edgeCount":"bufferIndex","lastEdgeIndex":"delta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[279],"tindex":"2b014320-db7f-11e4-b2f2-89fdcc84d5df","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[399,525,299,321,340,526],"tindex":"2b016a31-db7f-11e4-b2f2-1dfd9e1ee892","variableMapping":{"endIndexPlusOne":"maxTurnCosts","frontIndex":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[],"tindex":"2b016a32-db7f-11e4-b2f2-895f646b04dd","variableMapping":{"high":"flags","highKey":"flags","key":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"2b016a33-db7f-11e4-b2f2-e981e935769a","variableMapping":{"high":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":0},{"failures":[90,95,73,74,399,106,295,527],"tindex":"2b016a34-db7f-11e4-b2f2-b9d4edf48d78","variableMapping":{"cap":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[0],"tindex":"2b016a35-db7f-11e4-b2f2-8b184cac0514","variableMapping":{"midLat":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"2b016a36-db7f-11e4-b2f2-adbc456d8482","variableMapping":{"flags2":"flags","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"unpavedBit","flags1":"unpavedBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"2b016a37-db7f-11e4-b2f2-693d7703a629","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[0,84,358,42,1],"tindex":"2b016a38-db7f-11e4-b2f2-eb5903604072","variableMapping":{"high":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[86,87,88,91,92,406,101,144,449,450,452,453,454,455,456,457,458,459,460,461,462,464,145,152,25,157,167,169,170,172,173,178,180,181,182,183,28,189,42,43,359,360,361,362,363,364,366,1,367,44,45,368,369,370,371,372,373,374,375,376,377,46,378,380,381,382,383,384,385,386,47,387,388,389,390],"tindex":"2b016a39-db7f-11e4-b2f2-4d83fc99d0e9","variableMapping":{"initLeafSize":"lastEdgeIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[528,529,530,531,532,386,389],"tindex":"2b016a3a-db7f-11e4-b2f2-79eef7ef6cca","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[3,317,336,84],"tindex":"2b016a3b-db7f-11e4-b2f2-ef1c7d7467f2","variableMapping":{"size":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[106,519],"tindex":"2b016a3c-db7f-11e4-b2f2-79ff00b8fca9","variableMapping":{"param":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:66","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"_\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-1},{"failures":[405,56,150,158,165,166,167,173,181,182,198,205,206,207,213,221,222,239,246,247,248,254,262,263,283,284],"tindex":"2b016a3d-db7f-11e4-b2f2-efdbb4b8a7e5","variableMapping":{"segmentCount":"remainingSegments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:163","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[int][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"2b016a3e-db7f-11e4-b2f2-bf3472c04bd0","variableMapping":{"size":"high","hash":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"2b016a3f-db7f-11e4-b2f2-0d70cc260872","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"2b019150-db7f-11e4-b2f2-2d3c799592ec","variableMapping":{"lastTime":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"2b019151-db7f-11e4-b2f2-51c26bd30e64","variableMapping":{"edgeId":"nodeId","nodeId":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-2},{"failures":[85,87,88,91,92,94,18,406,101,447,144,449,450,451,452,453,454,455,456,457,458,459,460,461,462,464,145,23,147,148,24,151,152,155,25,157,158,160,161,162,163,26,164,166,167,168,169,170,172,173,174,175,176,177,178,180,181,182,183,184,185,28,186,187,188,189,190,42,43,359,360,361,362,363,364,365,366,1,367,44,45,368,369,370,371,372,373,374,375,376,377,46,378,380,381,382,383,384,385,386,47,387,388,389,390],"tindex":"2b019152-db7f-11e4-b2f2-0522ac9bd3dd","variableMapping":{"turnCostsCount":"b"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[],"tindex":"2b019153-db7f-11e4-b2f2-0765d456f7cd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-2},{"failures":[530,533],"tindex":"2b019154-db7f-11e4-b2f2-ff06980668a8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-1},{"failures":[],"tindex":"2b019155-db7f-11e4-b2f2-fbf595725b30","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"2b019156-db7f-11e4-b2f2-1b8a072d0870","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[276,279],"tindex":"2b019157-db7f-11e4-b2f2-87d687c509df","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":372,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":471,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":149,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":527,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":421,"com.graphhopper.GraphHopperAPITest.testNoLoad":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":107,"com.graphhopper.reader.OSMReaderTest.testFerry":394,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":99,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":100,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":320,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":306,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":452,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":86,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":520,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":352,"com.graphhopper.storage.MMapDataAccessTest.testSegments":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":246,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":496,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":515,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":312,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":228,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":125,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":31,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":448,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":49,"com.graphhopper.util.AngleCalcTest.testOrientation":521,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":508,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":387,"com.graphhopper.GraphHopperTest.testPrepare":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":371,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":46,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":212,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":532,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":1,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":103,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":77,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":412,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":449,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":285,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":317,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":359,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":365,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":434,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":79,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":231,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":25,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":530,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":390,"com.graphhopper.GraphHopperTest.testLoadOSM":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":441,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":435,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":354,"com.graphhopper.reader.OSMReaderTest.testSort":396,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":330,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":283,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":234,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":498,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":224,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":137,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":48,"com.graphhopper.storage.RAMDataAccessTest.testHeader":509,"com.graphhopper.routing.DijkstraTest.initializationError":480,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":525,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":266,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":512,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":179,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":203,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":67,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":33,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":165,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":17,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":14,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":456,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":209,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":368,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":454,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":362,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":361,"com.graphhopper.coll.OSMIDMapTest.testGetLong":490,"com.graphhopper.coll.IntIntBinHeapTest.testSize":533,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":249,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":255,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":171,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":152,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":173,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":523,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":214,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":3,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":35,"com.graphhopper.GraphHopperAPITest.testLoad":272,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":156,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":274,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":206,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":198,"com.graphhopper.storage.LevelGraphStorageTest.testClone":160,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":518,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":238,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":286,"com.graphhopper.reader.OSMReaderTest.testBarriers":397,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":66,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":447,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":340,"com.graphhopper.util.GHUtilityTest.testCopy":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":364,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":11,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":145,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":314,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":423,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":510,"com.graphhopper.routing.PathTest.testFindInstruction":41,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":309,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":239,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":528,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":18,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":278,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":338,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":420,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":225,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":210,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":264,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":406,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":384,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":347,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":469,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":112,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":195,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":71,"com.graphhopper.util.InstructionListTest.testWayList2":105,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":442,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":243,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":268,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":302,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":318,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":334,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":26,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":321,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":499,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":247,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":425,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":363,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":398,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":497,"com.graphhopper.routing.AStarTest.initializationError":466,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":374,"com.graphhopper.coll.OSMIDMapTest.testGet":487,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":245,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":279,"com.graphhopper.routing.PathBidirRefTest.testExtract":355,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":175,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":324,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":489,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":460,"com.graphhopper.storage.RAMDataAccessTest.testCopy":505,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":500,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":437,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":271,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":131,"com.graphhopper.storage.RAMDataAccessTest.testSegments":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":323,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":143,"com.graphhopper.util.GHUtilityTest.testSort2":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":369,"com.graphhopper.reader.OSMReaderTest.testMain":395,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":153,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":254,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":325,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":331,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":461,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":235,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":27,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":169,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":189,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":166,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":336,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":172,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":404,"com.graphhopper.storage.StorablePropertiesTest.testStore":513,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":59,"com.graphhopper.storage.GraphHopperStorageTest.testClone":200,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":134,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":296,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":294,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":23,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":113,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":148,"com.graphhopper.routing.PathTest.testTime":358,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":10,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":187,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":161,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":301,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":429,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":444,"com.graphhopper.reader.OSMReaderTest.testRelation":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":124,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":177,"com.graphhopper.util.GHUtilityTest.testSortDirected":410,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":531,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":349,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":502,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":473,"com.graphhopper.GraphHopperTest.testFootOnly":94,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":305,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":293,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":426,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":455,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":70,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":483,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":378,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":335,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":120,"com.graphhopper.search.NameIndexTest.testCreate":495,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":61,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":470,"com.graphhopper.routing.QueryGraphTest.testOneWay":477,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":445,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":308,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":514,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":433,"com.graphhopper.reader.OSMReaderTest.testWithBounds":403,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":511,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":64,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":267,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":282,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":126,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":280,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":482,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":157,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":154,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":348,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":315,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":258,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":39,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":251,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":29,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":476,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":43,"com.graphhopper.util.InstructionListTest.testWayList":104,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":226,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":516,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":322,"com.graphhopper.GraphHopperAPITest.testDisconnected179":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":20,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":431,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":345,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":329,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":89,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":202,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":388,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":218,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":316,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":44,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":481,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":47,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":28,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":297,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":80,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":236,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":463,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":333,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":191,"com.graphhopper.routing.PathTest.testWayList":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":116,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":292,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":519,"com.graphhopper.coll.OSMIDMapTest.testGet2":488,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":377,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":501,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":183,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":484,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":328,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":211,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":275,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":244,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":170,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":457,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":458,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":506,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":503,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":459,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":342,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":529,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":4,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":69,"com.graphhopper.util.GHUtilityTest.testSort":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":438,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":327,"com.graphhopper.search.NameIndexTest.testPut":493,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":270,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":422,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":450,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":430,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":415,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":57,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":339,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":475,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":413,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":232,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":6,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":303,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":485,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":375,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":281,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":130,"com.graphhopper.routing.PathTest.testFound":357,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":84,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":95,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":51,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":185,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":467,"com.graphhopper.util.AngleCalcTest.testAtan2":522,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":147,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":326,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":248,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":63,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":494,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":21,"com.graphhopper.util.InstructionListTest.testEmptyList":102,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":204,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":504,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":366,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":12,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":462,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":45,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":300,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":289,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":288,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":313,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":370,"com.graphhopper.reader.PrinctonReaderTest.testRead":96,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":32,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":517,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":453,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":115,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":491,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":19,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":253,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":311,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":343,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":526,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":337,"com.graphhopper.reader.OSMReaderTest.testFoot":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":128,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":479,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":486,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":439,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":304,"com.graphhopper.reader.OSMReaderTest.testOneWay":405,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":440,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":207,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":222,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":265,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":310,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":53,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":341,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":383,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":380,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":389,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":381,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":416,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":37,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":65,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":118,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":472,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":194,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":56,"com.graphhopper.routing.PathBidirRefTest.testExtract2":356,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":428,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":42,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":443,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":492,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":220,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":417,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":16,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":140,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":276,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":346,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":386,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":436,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":223,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":409,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":163,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":298,"com.graphhopper.GraphHopperTest.testFootAndCar":90,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":215,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":167,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":464,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":507,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":110,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":353,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":68,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":299,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":241,"com.graphhopper.GraphHopperTest.testPrepareOnly":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":373,"com.graphhopper.GraphHopperTest.testVia":87,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":424,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":108,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":401,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":24,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":106,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":219,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":38,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":121,"com.graphhopper.routing.AStarBidirectionTest.initializationError":468,"com.graphhopper.util.AngleCalcTest.testCombined":524,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":287,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":184,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":182,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":233}}]
