[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"tindex":"3ecd7d86-db48-11e4-85b6-411934c0fd62","variableMapping":{"currentBucket":"segmentSizeInBytes","retBucket":"segmentSizeInBytes","currentIndex":"segmentSizeInBytes","bucketSize":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[],"tindex":"3ecedd17-db48-11e4-85b6-d7ca702dfa62","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[187,188,189],"tindex":"3ecf0428-db48-11e4-85b6-e513fd16865c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[190,191,128,148,192,193,194,195,196,197,198,199],"tindex":"3ecf0429-db48-11e4-85b6-c10a6e31c2c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[],"tindex":"3ecf042a-db48-11e4-85b6-2d65deeb473e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"3ed0b1db-db48-11e4-85b6-af80d20d1521","variableMapping":{"todoBytes":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":0},{"failures":[40,50],"tindex":"3ed0b1dc-db48-11e4-85b6-9df21e9223fb","variableMapping":{"bits":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"3ed0b1dd-db48-11e4-85b6-753adb822360","variableMapping":{"maxMCSpeed":"incDist2DSum","speed":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"3ed0b1de-db48-11e4-85b6-e5cd5bbb1cd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:472","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,77,78,79,80,81,82,83,84,85,86,87,88,200,89,90,91,92,201,93,94,95,96,202,203,204,205,206,97,207,98,99,100,101,102,208,103,104,105,106,209,107,108,210,211,212,213,214,215,216,217,218,109,110,111,112,219,113,114,115,116,117,118,119,220,120,121,122,123,124,221,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,222,223,224,164,225,165,166,167,168,226,227,228,229,230,231,232,233,234,235,236,237,238,169,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,170,171,172,173,267,268,269,270,271,272,273,274,275,276,277,278,279,174,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,178,319,320,321,322,323,324,325,326,327,328,329,330,331,332,179,333,334,335,336,337,338,339,340,341,342,343,344,345,180,346,347,181,348,182,183,184,185,349,350,351,352,353,354,355,356,357,358,359,360,361,186,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387],"tindex":"3ed0d8ef-db48-11e4-85b6-83bb0923347b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[],"tindex":"3ed0d8f0-db48-11e4-85b6-570ba7b4a0e7","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[],"tindex":"3ed0d8f1-db48-11e4-85b6-6f5d3bad9e7a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"3ed0d8f2-db48-11e4-85b6-311243efae04","variableMapping":{"i":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[0,2,12,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,97,207,98,99,102,103,105,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,344,180,346,347,182,183,349,351,352,353,354,355,356,357,358,359,360,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387],"tindex":"3ed0d8f3-db48-11e4-85b6-493e1ae14806","variableMapping":{"size":"I_SKIP_EDGE2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[63],"tindex":"3ed0d8f4-db48-11e4-85b6-5bad31c9991c","variableMapping":{"dist":"toHeight","com.graphhopper.util.DistanceCalcEarth.R":"fromHeight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-1},{"failures":[],"tindex":"3ed0d8f5-db48-11e4-85b6-1db307b2ec23","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":0},{"failures":[],"tindex":"3ed0d8f6-db48-11e4-85b6-9734909906e9","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"speed","speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":0},{"failures":[],"tindex":"3ed0d8f7-db48-11e4-85b6-ffe488c6936f","variableMapping":{"maxLeafEntries":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"3ed0d8f8-db48-11e4-85b6-cf402563765a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"3ed10009-db48-11e4-85b6-0f0c6407860c","variableMapping":{"high":"nanoTime","guess":"lastTime","low":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[],"tindex":"3ed1000a-db48-11e4-85b6-b3f3dad996b4","variableMapping":{"segmentSizeInBytes":"to","length":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[],"tindex":"3ed1000b-db48-11e4-85b6-2d67fd7f5924","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[],"tindex":"3ed1000c-db48-11e4-85b6-db6822c59918","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[388,389,390,391,392,393,394,87],"tindex":"3ed1271d-db48-11e4-85b6-a5b916499b03","variableMapping":{"directionBitMask":"turnRestrictionBit","blockByDefault":"restricted"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[17,81,82,83,84,85,86,87,88,89,90,91,93,97,207,98,99,100,101,102,103,104,105,106],"tindex":"3ed1271e-db48-11e4-85b6-aff62d47bccc","variableMapping":{"minResolutionInMeter":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-1},{"failures":[],"tindex":"3ed1271f-db48-11e4-85b6-6d6fcdcf5430","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[395,396,397,398,399,400,401,402,403,404,405],"tindex":"3ed12720-db48-11e4-85b6-d1dddc6cdad0","variableMapping":{"str":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"3ed12721-db48-11e4-85b6-29aa149d68f8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"3ed12722-db48-11e4-85b6-f797b3bfcf71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[406],"tindex":"3ed12723-db48-11e4-85b6-1b356a4aa027","variableMapping":{"encoded":"flags","backwardBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"3ed12724-db48-11e4-85b6-f90ec8028ed1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"3ed12725-db48-11e4-85b6-dd8b48b26024","variableMapping":{"initialized":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:241","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call loadExisting only once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[],"tindex":"3ed12726-db48-11e4-85b6-8d34d7340c4a","variableMapping":{"size":"segmentSizePower","i":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:151","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[15,230,238,239,240,242,246,247,254,255,271,279,280,281,283,287,288,295,296,310,318,319,320,322,326,327,333,334,348,353,361,362,363,365,369,370,377,378],"tindex":"3ed12727-db48-11e4-85b6-bf332d1a63a0","variableMapping":{"parentNodes":"mKeys","endNode":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"3ed12728-db48-11e4-85b6-85d3749e323c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"3ed12729-db48-11e4-85b6-6f52259aa841","variableMapping":{"high":"defaultValue","len":"flags","start":"defaultValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[11,406,407,408,409,410,411,92,98],"tindex":"3ed1272a-db48-11e4-85b6-b55756750538","variableMapping":{"y":"maxSpeed","angle":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-1},{"failures":[],"tindex":"3ed14e3b-db48-11e4-85b6-55c2ef7f689d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[28,30,31,32,34,36,38],"tindex":"3ed14e3c-db48-11e4-85b6-637c36ac1e67","variableMapping":{"frontIndex":"size","endIndexPlusOne":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-1},{"failures":[],"tindex":"3ed14e3d-db48-11e4-85b6-cb16609b5800","variableMapping":{"indexWithMaxDist":"child","lastIndex":"child","fromIndex":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":0},{"failures":[],"tindex":"3ed14e3e-db48-11e4-85b6-9dc384c08c15","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":0},{"failures":[412],"tindex":"3ed14e3f-db48-11e4-85b6-5f5782a267fe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:201","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No vehicle encoder set.\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"3ed14e40-db48-11e4-85b6-95834124c0cd","variableMapping":{"calcPoints":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:127","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[413,414],"tindex":"3ed14e41-db48-11e4-85b6-4599c6043f3d","variableMapping":{"encoderList":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"3ed14e42-db48-11e4-85b6-77142cf538d0","variableMapping":{"weight":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-2},{"failures":[],"tindex":"3ed14e43-db48-11e4-85b6-95060eda2189","variableMapping":{"fullyLoaded":"found"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:658","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":0},{"failures":[87],"tindex":"3ed14e44-db48-11e4-85b6-77afda381281","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-1},{"failures":[5,6,415,416],"tindex":"3ed14e45-db48-11e4-85b6-fdde474284b8","variableMapping":{"edgeId":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"3ed14e46-db48-11e4-85b6-094c881d40af","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:652","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"3ed14e47-db48-11e4-85b6-4144c233e04b","variableMapping":{"value":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"3ed14e48-db48-11e4-85b6-152f54da301e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"3ed14e49-db48-11e4-85b6-e7aa16de261b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"3ed14e4a-db48-11e4-85b6-2f63779fe761","variableMapping":{"size":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:152","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[26,27,28,30,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,97,207,98,99,102,103,105,144,146,345,346,348],"tindex":"3ed1755b-db48-11e4-85b6-7f6a6695be3c","variableMapping":{"size":"I_LEVEL","index":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[],"tindex":"3ed1755c-db48-11e4-85b6-f943bcd641d8","variableMapping":{"str":"com.graphhopper.routing.util.EncodingManager.ERR","kmInteger":"bitsForEdgeFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[],"tindex":"3ed1c37d-db48-11e4-85b6-83c8c36a99ec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"3ed1c37e-db48-11e4-85b6-e5a24851be0d","variableMapping":{"resultOrientation":"angle","orientation":"com.graphhopper.util.AngleCalc.PI_4","java.lang.Math.PI":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"3ed1c37f-db48-11e4-85b6-436d961fd0d3","variableMapping":{"intIndex":"noOfStates","len":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[],"tindex":"3ed1c380-db48-11e4-85b6-3dc613dd268b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:282","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"3ed1c381-db48-11e4-85b6-c3a6d711724b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:62","type":"CtReturnImpl","sourcecode":"return \"FASTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"status":0},{"failures":[],"tindex":"3ed1c382-db48-11e4-85b6-6f8a7e3cc5f3","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"minElem","id":"minElem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"3ed1c383-db48-11e4-85b6-4996ad921a8d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"3ed1c384-db48-11e4-85b6-35271cd9616a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[417,418,419,420,421,23,422,423,424,425,426,427,428,429,409,430,431,432,433,410,411,434,393,435,394,436,437,438,439,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,440,441,442,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,101,105,106,114,126,143,163,164,225,165,166,167,168,226,227,228,229,230,231,232,233,234,235,236,237,238,169,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,170,171,172,173,267,268,269,270,271,272,273,274,275,276,277,278,279,174,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,308,309,310,311,312,313,314,315,316,317,318,178,319,320,321,322,323,324,325,326,327,328,329,330,331,332,179,333,334,335,336,337,338,339,340,341,342,343,344,345,180,346,347,181,348,182,183,184,185,349,350,351,352,353,354,355,356,357,358,359,360,361,186,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387],"tindex":"3ed1c385-db48-11e4-85b6-9990a9c8d9ad","variableMapping":{"line":"entry","key":"entryVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[12,13,14,443,444,445,395,446,447,448,449,450,451,452,396,453,454,455,417,388,456,413,457,397,407,398,389,458,459,460,461,462,463,464,465,399,466,467,468,469,470,471,400,401,472,473,474,475,476,477,478,402,479,480,481,482,418,483,419,21,22,391,484,414,485,403,408,404,392,486,487,488,489,490,491,492,493,405,494,495,496,497,498,499,420,421,23,422,423,424,425,426,427,428,429,409,430,431,432,433,410,411,434,393,435,394,436,437,24,25,26,27,500,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,76,77,78,79,94,95,98,99,100,101,102,104,105,107,108,114,126,143,145,163,164,225,165,166,167,168,226,227,228,229,230,231,232,233,234,235,236,237,238,169,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,170,171,172,173,267,268,269,270,271,272,273,274,275,276,277,278,279,174,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,308,309,310,311,312,313,314,315,316,317,318,178,319,320,321,322,323,324,325,326,327,328,329,330,331,332,179,333,334,335,336,337,338,339,340,341,342,343,344,345,180,346,347,181,348,182,183,184,185,349,350,351,352,353,354,355,356,357,358,359,360,361,186,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387],"tindex":"3ed1ea96-db48-11e4-85b6-0102187a555d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:229","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n        return com.graphhopper.routing.util.AbstractFlagEncoder;\n    \n}"},"status":-1},{"failures":[395,396,397,398,399,400,401,402,403,404,405],"tindex":"3ed1ea97-db48-11e4-85b6-eb1430b4b1fc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"3ed1ea98-db48-11e4-85b6-bdf818174c66","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"3ed1ea99-db48-11e4-85b6-f962ecf109c1","variableMapping":{"distance":"lon","speed":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:140","type":"CtReturnImpl","sourcecode":"return com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[26,28,29,30,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,97,207,98,99,102,103,105],"tindex":"3ed1ea9a-db48-11e4-85b6-035028d111bf","variableMapping":{"tmp":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[],"tindex":"3ed1ea9b-db48-11e4-85b6-31ca4bdaf591","variableMapping":{"silent":"uTurnSupport"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"3ed1ea9c-db48-11e4-85b6-233208002076","variableMapping":{"newUniqueOsmId":"scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[447,459,472,487,420,428,84,89],"tindex":"3ed1ea9d-db48-11e4-85b6-9dd53ad37231","variableMapping":{"nanoTime":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[26,35,40,63],"tindex":"3ed1ea9e-db48-11e4-85b6-d7b237cfd30d","variableMapping":{"initLeafSize":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"3ed25fcf-db48-11e4-85b6-ddc2a361d2b5","variableMapping":{"width":"val","lonSimilar":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"3ed25fd0-db48-11e4-85b6-3554e40f1c30","variableMapping":{"high":"nodeBitMask","guess":"nodeBitMask","low":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"3ed25fd1-db48-11e4-85b6-692014dc05d6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[],"tindex":"3ed25fd2-db48-11e4-85b6-1dc039d39a9f","variableMapping":{"bytesForFlags":"bytesForFlags","acceptStr":"flagEncodersStr","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1400","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = new com.graphhopper.routing.util.EncodingManager(java.lang.String , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"3ed25fd3-db48-11e4-85b6-297e03cd139f","variableMapping":{"capacity":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[444,395,396,455,413,397,407,398,399,469,400,401,402,482,501,502,419,414,403,408,404,405,497,80,81,82,83,85,86,87,88,91,92,93],"tindex":"3ed25fd4-db48-11e4-85b6-11d69f9c9afd","variableMapping":{"versionHint":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"3ed25fd5-db48-11e4-85b6-194f8653b5d8","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"3ed25fd6-db48-11e4-85b6-e5672f9a50d6","variableMapping":{"remainingSegNo":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","segmentSizeInBytes":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED","capacity":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:418","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[],"tindex":"3ed25fd7-db48-11e4-85b6-c7101aa47689","variableMapping":{"red":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":0},{"failures":[11,501,502,419,80,81,82,84,87,88,89,90,91,92,93,98,99,100,101,102,104,105],"tindex":"3ed25fd8-db48-11e4-85b6-2db4c3babef2","variableMapping":{"high":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[53,54,57,107,503,127,135,137,138,139,140,142,147,155,158,159,160,162],"tindex":"3ed286e9-db48-11e4-85b6-31a8ee4b3e67","variableMapping":{"size":"dLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-1},{"failures":[432,434,80],"tindex":"3ed286ea-db48-11e4-85b6-1fd8dd40385c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"3ed286eb-db48-11e4-85b6-47fc7718b9ec","variableMapping":{"val":"str","defaultD":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[],"tindex":"3ed286ec-db48-11e4-85b6-1ba6b759967c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"3ed286ed-db48-11e4-85b6-710424bbf44f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"3ed286ee-db48-11e4-85b6-0d9f653e3311","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"3ed286ef-db48-11e4-85b6-dff3050e1209","variableMapping":{"high":"scDirMask","highKey":"dir","key":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[419,22,40,50,77],"tindex":"3ed286f0-db48-11e4-85b6-9b96f34c007a","variableMapping":{"speedEncoder":"reverseSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-1},{"failures":[504,432,80],"tindex":"3ed286f1-db48-11e4-85b6-177dab716f92","variableMapping":{"intVal":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[389,392,394],"tindex":"3ed286f2-db48-11e4-85b6-2108465da1c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[],"tindex":"3ed286f3-db48-11e4-85b6-cff380717cf1","variableMapping":{"allowed":"flags","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"3ed286f4-db48-11e4-85b6-8fa30fb6fec7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[190,191,505,127,133,135,136,147,153,155,156,192,193,195,197,198,506,507,199],"tindex":"3ed286f5-db48-11e4-85b6-d598926ede3d","variableMapping":{"lastTime":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"3ed286f6-db48-11e4-85b6-5544788850f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[190,191,133,135,136,153,155,156,192,193,195,197,198,506,507,199],"tindex":"3ed286f7-db48-11e4-85b6-53277b77b69d","variableMapping":{"factor":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":58,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":65,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":181,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":406,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":309,"com.graphhopper.reader.OSMReaderTest.testFerry":80,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":407,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":446,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":503,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":150,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":207,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":497,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":238,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":203,"com.graphhopper.coll.CompressedArrayTest.testCompress":191,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":452,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":30,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":328,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":174,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":36,"com.graphhopper.GraphHopperTest.testPrepare":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":339,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":26,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":286,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":457,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":50,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":115,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":396,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":6,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":349,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":147,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":395,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":456,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":48,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":130,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":398,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":164,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":506,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":351,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":39,"com.graphhopper.GraphHopperTest.testLoadOSM":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":131,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":483,"com.graphhopper.reader.OSMReaderTest.testSort":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":466,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":17,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":167,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":298,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":171,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":340,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":71,"com.graphhopper.routing.DijkstraTest.initializationError":438,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":258,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":375,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":276,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":225,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":228,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":361,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":482,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":479,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":154,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":145,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":152,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":44,"com.graphhopper.coll.OSMIDMapTest.testGetLong":217,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":353,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":247,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":367,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":183,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":369,"com.graphhopper.coll.CompressedArrayTest.testCompress2":190,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":288,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":471,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":169,"com.graphhopper.GraphHopperAPITest.testLoad":107,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":350,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":420,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":280,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":271,"com.graphhopper.storage.LevelGraphStorageTest.testClone":355,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":504,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":20,"com.graphhopper.reader.OSMReaderTest.testBarriers":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":229,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":144,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":392,"com.graphhopper.util.GHUtilityTest.testCopy":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":313,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":163,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":477,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":221,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":454,"com.graphhopper.routing.PathTest.testFindInstruction":79,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":449,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":372,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":230,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":12,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":425,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":383,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":485,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":299,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":284,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":32,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":492,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":412,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":439,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":357,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":314,"com.graphhopper.util.InstructionListTest.testWayList2":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":496,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":335,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":138,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":304,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":397,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":261,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":413,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":498,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":21,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":172,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":239,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":46,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":270,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":85,"com.graphhopper.routing.AStarTest.initializationError":442,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":60,"com.graphhopper.coll.OSMIDMapTest.testGet":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":237,"com.graphhopper.routing.PathBidirRefTest.testExtract":24,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":426,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":216,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":371,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":460,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":333,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":444,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":459,"com.graphhopper.util.GHUtilityTest.testSort2":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":55,"com.graphhopper.reader.OSMReaderTest.testMain":82,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":184,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":461,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":507,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":159,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":467,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":374,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":337,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":186,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":365,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":415,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":386,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":68,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":484,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":368,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":92,"com.graphhopper.storage.StorablePropertiesTest.testStore":222,"com.graphhopper.storage.GraphHopperStorageTest.testClone":273,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":336,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":434,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":306,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":282,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":410,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":344,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":480,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":315,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":346,"com.graphhopper.routing.PathTest.testTime":77,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":476,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":384,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":356,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":437,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":140,"com.graphhopper.reader.OSMReaderTest.testRelation":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":327,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":373,"com.graphhopper.util.GHUtilityTest.testSortDirected":4,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":494,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":67,"com.graphhopper.GraphHopperTest.testFootOnly":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":445,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":117,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":432,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":307,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":153,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":502,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":391,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":323,"com.graphhopper.search.NameIndexTest.testCreate":213,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":64,"com.graphhopper.routing.QueryGraphTest.testOneWay":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":141,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":195,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":448,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":129,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":192,"com.graphhopper.reader.OSMReaderTest.testWithBounds":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":495,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":16,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":329,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":427,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":501,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":352,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":185,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":470,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":493,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":455,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":250,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":114,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":433,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":243,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":269,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":41,"com.graphhopper.util.InstructionListTest.testWayList":9,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":301,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":458,"com.graphhopper.GraphHopperAPITest.testDisconnected179":108,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":316,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":311,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":490,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":95,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":342,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":465,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":100,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":275,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":37,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":292,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":388,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":52,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":440,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":35,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":382,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":393,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":473,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":226,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":370,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":62,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":268,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":469,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":170,"com.graphhopper.routing.PathTest.testWayList":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":341,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":319,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":431,"com.graphhopper.coll.OSMIDMapTest.testGet2":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":63,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":379,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":464,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":285,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":235,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":274,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":155,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":156,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":487,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":400,"com.graphhopper.util.GHUtilityTest.testSort":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":332,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":199,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":463,"com.graphhopper.search.NameIndexTest.testPut":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":263,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":272,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":124,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":148,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":120,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":111,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":408,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":22,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":109,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":165,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":472,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":205,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":499,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":424,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":244,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":15,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":364,"com.graphhopper.routing.PathTest.testFound":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":179,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":106,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":419,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":381,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":180,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":462,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":240,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":212,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":178,"com.graphhopper.util.InstructionListTest.testEmptyList":7,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":49,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":478,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":436,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":429,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":428,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":453,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":56,"com.graphhopper.reader.PrinctonReaderTest.testRead":94,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":300,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":151,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":236,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":193,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":308,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":245,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":451,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":488,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":390,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":475,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":414,"com.graphhopper.reader.OSMReaderTest.testFoot":81,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":75,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":135,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":198,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":385,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":443,"com.graphhopper.reader.OSMReaderTest.testOneWay":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":136,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":281,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":296,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":257,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":450,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":486,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":325,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":31,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":505,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":411,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":29,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":112,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":23,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":321,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":66,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":173,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":201,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":266,"com.graphhopper.routing.PathBidirRefTest.testExtract2":25,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":176,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":139,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":402,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":210,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":294,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":219,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":481,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":343,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":422,"com.graphhopper.util.SimpleIntDequeTest.testPush":416,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":491,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":132,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":297,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":358,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":435,"com.graphhopper.GraphHopperTest.testFootAndCar":101,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":289,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":363,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":401,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":312,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":418,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":394,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":51,"com.graphhopper.storage.StorablePropertiesTest.testLoad":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":59,"com.graphhopper.GraphHopperTest.testPrepareOnly":97,"com.graphhopper.GraphHopperTest.testVia":98,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":125,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":468,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":310,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":89,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":347,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":11,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":293,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":423,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":324,"com.graphhopper.routing.AStarBidirectionTest.initializationError":441,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":417,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":380,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":378,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":166}}]
