[{"failures":[],"tindex":"b1d83d29-db51-11e4-ab9f-71717c012c85","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-2},{"failures":[],"tindex":"b1d9eada-db51-11e4-ab9f-6db8c6b1cfac","variableMapping":{"towerNodeDistance":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"b1d9eadb-db51-11e4-ab9f-8f59fb2d2cbb","variableMapping":{"high":"defaultL","highKey":"defaultL","key":"defaultL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":0},{"failures":[],"tindex":"b1d9eadc-db51-11e4-ab9f-f5dc5972dc4d","variableMapping":{"i":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"b1d9eadd-db51-11e4-ab9f-cd047a5d4ba0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-2},{"failures":[],"tindex":"b1d9eade-db51-11e4-ab9f-91a6080820b8","variableMapping":{"from":"size","end":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[],"tindex":"b1d9eadf-db51-11e4-ab9f-bffd54114f83","variableMapping":{"high":"speed","guess":"speed","low":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"b1da11f0-db51-11e4-ab9f-894af3a1d79e","variableMapping":{"force":"force","maxSpeed":"speed","speed":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[],"tindex":"b1da11f1-db51-11e4-ab9f-0bd44ba3fb29","variableMapping":{"r":"orientation","angle":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[30,31,32],"tindex":"b1da11f2-db51-11e4-ab9f-85e522bf3f62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[],"tindex":"b1da11f3-db51-11e4-ab9f-3d5a79f54c78","variableMapping":{"newUniqueOsmId":"defaultValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"b1da11f4-db51-11e4-ab9f-a587ec4e7cc7","variableMapping":{"name":"wayTypeName","location":"pavementName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:66","type":"CtReturnImpl","sourcecode":"return (java.lang.String) + (java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"b1da11f5-db51-11e4-ab9f-9dda38460cfe","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"b1da11f6-db51-11e4-ab9f-11079297f4aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"b1da11f7-db51-11e4-ab9f-d9dbf289e321","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":0},{"failures":[31],"tindex":"b1da11f8-db51-11e4-ab9f-21abd8615993","variableMapping":{"elem":"nodeLowLink","i":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[31],"tindex":"b1da11f9-db51-11e4-ab9f-c7c1a978fc90","variableMapping":{"segmentsToMap":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"b1da11fa-db51-11e4-ab9f-2966a37b1bd8","variableMapping":{"shift":"dLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[33],"tindex":"b1da11fb-db51-11e4-ab9f-ed263fc82925","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"delta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:245","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-1},{"failures":[34,35,36],"tindex":"b1da11fc-db51-11e4-ab9f-7b406426ec2d","variableMapping":{"x1":"child","sLon":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"b1da11fd-db51-11e4-ab9f-9dee30a41221","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,30,96,97,98,31,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,33,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"b1da390e-db51-11e4-ab9f-bd135715e622","variableMapping":{"oldValueIndex":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[34,132,35,36],"tindex":"b1da390f-db51-11e4-ab9f-43e340eac148","variableMapping":{"edgeId":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2},{"failures":[],"tindex":"b1da3910-db51-11e4-ab9f-3df8fbab44b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"b1da3911-db51-11e4-ab9f-67047a52ceec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[133,41,134,135,136,137,55,138,139,140,141,68,142,143,144,145,80,146,147,148,149],"tindex":"b1da3912-db51-11e4-ab9f-f7a08c36dc78","variableMapping":{"currentEntry":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[150,151,152,153,154],"tindex":"b1da3913-db51-11e4-ab9f-93d89b3a3f1a","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[155,156,157,158,159,160,161,162,163,164,165],"tindex":"b1da3914-db51-11e4-ab9f-f10e5c484980","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[166],"tindex":"b1da3915-db51-11e4-ab9f-1548e0009aa5","variableMapping":{"key":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:101","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[99,167,33,168,169],"tindex":"b1da3916-db51-11e4-ab9f-5d7fb8e73681","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[37,38,170,171,172,173,174,175,176,177,178,179,180,181,133,182,39,183,184,185,186,187,40,41,188,42,43,189,190,191,44,134,192,135,193,194,195,45,196,46,136,197,198,199,200,47,201,48,137,202,49,203,50,204,205,206,207,51,208,209,210,52,211,212,53,213,214,215,216,217,54,55,218,56,57,219,220,221,58,138,222,139,223,224,225,59,226,60,140,227,228,229,230,61,231,62,141,232,63,233,64,234,235,236,237,65,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,66,301,302,303,304,305,67,68,306,69,70,307,308,309,71,142,310,143,311,312,313,72,314,73,144,315,316,317,318,74,319,75,145,320,76,321,77,322,323,324,325,78,326,327,79,80,328,81,82,329,330,331,83,146,332,147,333,334,335,84,336,85,148,337,338,339,340,86,341,87,149,342,88,343,89,344,345,346,347,90,348,349,350,351,352,353,354,0,1,2,3,4,5,355,6,7,356,8,357,358,359,360,361,362,363,91,92,9,10,11,12,13,14,15,16,17,364,18,19,20,21,22,23,365,365,366,366,367,367,368,368,93,93,369,369,370,370,371,371,372,372,373,373,374,374,375,375,94,95,376,377,378,379,30,96,97,98,31,32,380,381,382,99,167,100,101,102,103,104,105,106,107,108,383,384,385,109,110,111,112,386,113,114,115,116,33,168,387,117,118,119,120,121,388,122,169,123,389,124,125,390,391,392,393,126,127,128,394,129,130,395,396,131,397,398],"tindex":"b1da6027-db51-11e4-ab9f-19ee85d7f221","variableMapping":{"type":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:178","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-1},{"failures":[30,32],"tindex":"b1da6028-db51-11e4-ab9f-a532c192307c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"b1da6029-db51-11e4-ab9f-3d0c9b730a00","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"b1da602a-db51-11e4-ab9f-7be6eec725aa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"b1da602b-db51-11e4-ab9f-4fdfffa4153f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"b1da602c-db51-11e4-ab9f-2389910c7389","variableMapping":{"from":"size","hash":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[155,156,157,158,159,160,161,162,163,164,165],"tindex":"b1da602d-db51-11e4-ab9f-43400c10ab2f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[96,97,98,390,391,399,400],"tindex":"b1da602e-db51-11e4-ab9f-f946273f65af","variableMapping":{"index":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"b1da602f-db51-11e4-ab9f-c3c82c6416ca","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[401,402,403,404,405,406,407,408,409,410,39,198,137,204,52,53,228,141,234,411,412,248,268,66,316,145,322,338,87,149,344,349,351,354,2,3,5,7,9,11,12,13,14,15,16,17,18,19,20,21,23,366,372,375,378,114,127,413,414,415,131],"tindex":"b1da6030-db51-11e4-ab9f-3bf5aaca52e0","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[0,1,2,5,6,167,100,101,102,103,104,105,106,107,108,383,384,385,109,110,111,112,386,113,114,115,116,33,387,117,118,119,120,121,388,122,123,389,124,125],"tindex":"b1da8741-db51-11e4-ab9f-6348350f80dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-1},{"failures":[],"tindex":"b1da8742-db51-11e4-ab9f-63f791c2d779","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[176,177,178,179,180,181,133,182,39,183,184,185,186,187,40,41,188,42,43,189,190,191,44,134,192,135,193,194,195,45,196,46,136,197,198,199,200,47,201,48,137,202,49,203,50,204,205,206,207,51,208,52,211,212,53,213,214,215,216,217,54,55,218,56,57,219,220,221,58,138,222,139,223,224,225,59,226,60,140,227,228,229,230,61,231,62,141,232,63,233,64,234,235,236,237,65,238,245,262,282,296,300,66,301,302,303,304,305,67,68,306,69,70,307,308,309,71,142,310,143,311,312,313,72,314,73,144,315,316,317,318,74,319,75,145,320,76,321,77,322,323,324,325,78,326,327,79,80,328,81,82,329,330,331,83,146,332,147,333,334,335,84,336,85,148,337,338,339,340,86,341,87,149,342,88,343,89,344,345,346,347,90,348,354,4,356,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,365,416,417,418,419,420,421,24,422,423,26,27,424,425,426,427,428,28,429,430,431,432,433,152,434,382,435,436,437,438,439,440,441,99,167,100,101,102,103,104,105,106,107,108,383,384,385,109,110,111,112,386,113,114,115,116,33],"tindex":"b1da8743-db51-11e4-ab9f-41e58e4f4910","variableMapping":{"line":"entryVal","key":"entryVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[100,103,104,112,113,115,168,122,169],"tindex":"b1dafc74-db51-11e4-ab9f-8316c48b3230","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:89","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[],"tindex":"b1db2385-db51-11e4-ab9f-475e304436af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:95","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl = new com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[],"tindex":"b1db2386-db51-11e4-ab9f-012babc29f2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:337","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[442,443,444,445,446,447,448,449,450],"tindex":"b1db2387-db51-11e4-ab9f-9ffa26689aad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setWorldBounds()"},"status":-1},{"failures":[420,380,381,451,452,453,454,157,25,158,455,456,151,457,458,459,460,461,462,159,463,464,465,466,467,468,469,470,163,29,164,471,472,154,473,474,475,476,477,478,165,479,480,481,482],"tindex":"b1db2388-db51-11e4-ab9f-7b2bcdb759b2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[],"tindex":"b1db2389-db51-11e4-ab9f-6b8565408856","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[483,484,453,469],"tindex":"b1db238a-db51-11e4-ab9f-3b162370322e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[],"tindex":"b1db238b-db51-11e4-ab9f-33b0ed4eddb7","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[364,483,484,155,453,158,161,469,164],"tindex":"b1db238c-db51-11e4-ab9f-a386a05443bc","variableMapping":{"segmentSizeInBytes":"code","index":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"b1db71ad-db51-11e4-ab9f-2ba50425c340","variableMapping":{"i":"len","mainNodes":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:439","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[483,484,453,469],"tindex":"b1db71ae-db51-11e4-ab9f-b1806e585dca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[],"tindex":"b1db71af-db51-11e4-ab9f-ddfed859a08a","variableMapping":{"prepareAlgo":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[37,38,170,171,172,173,485,174,486,175,176,177,178,179,180,181,133,182,39,183,184,185,186,187,40,41,188,42,43,189,190,191,44,134,192,135,193,194,195,45,196,46,136,197,198,199,200,47,201,48,137,202,49,203,50,204,205,206,207,51,208,487,488,52,212,53,213,214,215,216,217,54,55,218,56,57,219,220,221,58,138,222,139,223,224,225,59,226,60,140,227,228,229,230,61,231,62,141,232,63,233,64,234,235,236,237,65,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,66,301,302,303,304,305,67,68,306,69,70,307,308,309,71,142,310,143,311,312,313,72,314,73,144,315,316,317,318,74,319,75,145,320,76,321,77,322,323,324,325,78,326,332,87,349,350,351,352,353,354,0,1,2,3,4,5,355,6,7,356,8,357,358,361,362,363,91,92,9,10,11,12,13,14,15,16,17,364,18,19,20,21,22,23,365,365,366,366,367,367,368,368,93,93,369,369,370,370,371,371,372,372,373,373,374,374,375,375,94,95,376,377,378,379,30,96,97,98,31,32,380,381,382,99,167,100,101,102,103,104,105,106,107,108,383,384,385,109,110,111,112,386,113,114,115,116,33,168,387,117,118,119,120,121,388,122,169,123,389,124,125,390,391,392,393,126,127,128,394,129,130,395,396,131,397,398],"tindex":"b1db71b0-db51-11e4-ab9f-e7a8facc2f98","variableMapping":{"val":"name","existing":"location","key":"location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[37,39,43,192,45,46,48,49,50,51,52,53,57,222,59,60,62,63,64,65,66,70,310,72,73,75,76,77,78,82,332,84,85,87,88,89,90,1,2,3,4,5,7,356,91,92,9,10,11,13,16,17,18,19,20,23,93,371,421,30,31,32,151,27,28,432,154,99,167,100,101,104,384,110,112,113,114,115,33,168,117,118,122,169,123,125,392,394,129],"tindex":"b1db98c1-db51-11e4-ab9f-3d93dfc5e354","variableMapping":{"usedBits":"shift","nodeBitMask":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[],"tindex":"b1db98c2-db51-11e4-ab9f-9d52c89ba9a6","variableMapping":{"nodeFlags":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-2},{"failures":[101,104,105,107,111,386,113,115,116],"tindex":"b1db98c3-db51-11e4-ab9f-67424d6eb862","variableMapping":{"foundIndex":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-1},{"failures":[37,176,180,39,187,40,41,42,43,191,44,192,45,46,47,48,49,50,204,51,52,53,217,54,55,56,57,221,58,222,59,60,61,62,63,64,234,65,66,305,67,68,69,70,309,71,310,72,73,74,75,76,77,322,78,327,79,80,81,82,331,83,332,84,85,86,87,88,89,344,90,354,0,1,2,5,6,356,91,93,371,94,95,377,378,379,30,31,381,27,426,432,382,436,99,167,100,101,102,103,104,105,106,107,108,383,384,385,109,110,111,112,386,113,114,115,116,33,168,387,117,118,119,120,121,122,169,123,389,124,125,392,126,127,128,129,130,131],"tindex":"b1db98c4-db51-11e4-ab9f-931539a7f136","variableMapping":{"high":"flags","len":"flags","start":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"b1db98c5-db51-11e4-ab9f-fd6739835bdb","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","speed":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"b1db98c6-db51-11e4-ab9f-97cff0c36d6f","variableMapping":{"high":"allowed","highKey":"allowed","key":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"b1db98c7-db51-11e4-ab9f-6f7e557ce85f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[176,178,180,187,189,191,192,203,204,217,219,221,222,233,234,245,262,264,282,296,305,307,309,310,321,322,327,329,331,332,343,344,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,371,377,378,379,483,484,421,489,490,491,155,156,492,493,24,380,381,452,453,157,25,158,159,463,466,494,495,26,27,425,426,427,428,28,433,434,382,436,496,160,161,162,497,498,468,469,163,29,164,165,479,482,99,167,108,384,385,168,169,392,394],"tindex":"b1db98c8-db51-11e4-ab9f-619ff931bd6f","variableMapping":{"high":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"b1db98c9-db51-11e4-ab9f-655eec050ca4","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"to","speed":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"b1db98ca-db51-11e4-ab9f-41572623e6b3","variableMapping":{"directionBitMask":"flags","blockByDefault":"backward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[30,32],"tindex":"b1db98cb-db51-11e4-ab9f-af483ee75f09","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"i","nextEdge":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[37,176,180,39,187,40,41,42,43,191,44,192,45,46,47,48,49,50,204,51,52,53,217,54,55,56,57,221,58,222,59,60,61,62,63,64,234,65,66,305,67,68,69,70,309,71,310,72,73,74,75,76,77,322,78,327,79,80,81,82,331,83,332,84,85,86,87,88,89,344,90,354,0,1,2,3,4,5,6,7,356,91,92,10,11,13,16,17,18,19,20,23,93,371,94,95,377,378,379,499,30,96,98,31,381,27,426,28,430,432,382,436,99,167,100,101,102,103,104,105,106,107,108,383,384,385,109,110,111,112,386,113,114,115,116,33,168,387,117,118,119,120,121,122,169,123,389,124,125,392,126,127,128,394,129,130,131],"tindex":"b1db98cc-db51-11e4-ab9f-4d1a543aed62","variableMapping":{"hash":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[483,484],"tindex":"b1db98cd-db51-11e4-ab9f-67bda72cec56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[500,492,462,463,501,497,478,479],"tindex":"b1dbbfde-db51-11e4-ab9f-cb9e839038f7","variableMapping":{"val":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:109","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"b1dbbfdf-db51-11e4-ab9f-93536e0ed63e","variableMapping":{"next":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:424","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-2},{"failures":[],"tindex":"b1dbbfe0-db51-11e4-ab9f-d543cf0a3b17","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"segmentSizeIntsPower","flags":"cap","roundaboutBit":"cap","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"length","forwardBit":"todoBytes","key":"length","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"segmentsToCreate","backwardBit":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"b1dbbfe1-db51-11e4-ab9f-9fdd63e97ec3","variableMapping":{"cap":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"b1dbbfe2-db51-11e4-ab9f-4d6dfad35fa2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"b1dbbfe3-db51-11e4-ab9f-63eed5babd28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[381],"tindex":"b1dbbfe4-db51-11e4-ab9f-cd2a34e359ca","variableMapping":{"eleDelta":"incEleSum","decEleSum":"incEleSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"b1dbbfe5-db51-11e4-ab9f-613d9980b1cc","variableMapping":{"longSegmentSize":"weightLong","bufferStart":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[],"tindex":"b1dbbfe6-db51-11e4-ab9f-e7b290e6cc8d","variableMapping":{"nextTowerId":"a"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"b1dbbfe7-db51-11e4-ab9f-f9832ba7d50d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"b1dbbfe8-db51-11e4-ab9f-fd876d9e0a31","variableMapping":{"str":"str","edgeEncoders":"edgeEncoders"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:291","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[],"tindex":"b1dbbfe9-db51-11e4-ab9f-9f89f5d3a45a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[],"tindex":"b1dbbfea-db51-11e4-ab9f-27f6e8113470","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":0},{"failures":[],"tindex":"b1dbbfeb-db51-11e4-ab9f-072ee30788c8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"b1dbbfec-db51-11e4-ab9f-a3055fae8e07","variableMapping":{"defaultUTurnCost":"currDistToGoal","weight":"currDistToGoal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[37,38,176,180,39,187,40,41,42,43,191,44,192,45,46,47,48,49,50,204,51,52,53,217,54,55,56,57,221,58,222,59,60,61,62,63,64,234,65,66,305,67,68,69,70,309,71,310,72,73,74,75,76,77,322,78,327,79,80,81,82,331,83,332,84,85,86,87,88,89,344,90,354,0,1,2,5,6,356,91,92,93,371,94,95,377,378,379,489,30,96,97,98,31,491,452,27,426,432,434,382,436,440,496,468,99,167,100,101,102,103,104,105,106,107,108,383,384,385,109,110,111,112,386,113,114,115,116,33,168,387,117,118,119,120,121,122,169,123,389,124,125,392,126,127,128,129,130,131],"tindex":"b1dbbfed-db51-11e4-ab9f-e9b5682bd3db","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:273","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, boolean), com.graphhopper.routing.util.FlagEncoder.int, boolean)"},"status":-1},{"failures":[502],"tindex":"b1dbbfee-db51-11e4-ab9f-278d5d30c62a","variableMapping":{"sayText":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:450","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) <= 0)) {\n    return java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[16,377,483,484,421,491,155,150,156,503,493,381,453,157,25,158,456,151,159,464,466,504,160,161,153,162,505,498,469,163,29,164,472,154,165,480,482,99,108],"tindex":"b1dbe6ff-db51-11e4-ab9f-1dfae58bee7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:192","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[1,2,3,4,5,7,10,11,13,16,17,18,19,20,23,27,28,394],"tindex":"b1dbe700-db51-11e4-ab9f-d722fdd1e836","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"b1dbe701-db51-11e4-ab9f-d310a2bc8950","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[],"tindex":"b1dbe702-db51-11e4-ab9f-e513786cbcf3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":0},{"failures":[],"tindex":"b1dbe703-db51-11e4-ab9f-fbd7b91e393b","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[155,506,452,25,158,465,496,161,507,468,29,164,481],"tindex":"b1dbe704-db51-11e4-ab9f-afd2889a88bf","variableMapping":{"edgeId":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"b1dbe705-db51-11e4-ab9f-7d42ca69fc53","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:255","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-2},{"failures":[],"tindex":"b1dd1f86-db51-11e4-ab9f-2be27366abbf","variableMapping":{"i":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:141","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[1,10,23],"tindex":"b1dd1f87-db51-11e4-ab9f-dded3ab24958","variableMapping":{"lastKey":"forwardBit","key":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"b1dd1f88-db51-11e4-ab9f-11d59c32bb24","variableMapping":{"angle":"java.lang.Double.MAX_VALUE","com.graphhopper.util.AngleCalc.PI3_4":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"b1dd1f89-db51-11e4-ab9f-fb3549de81cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[10,15,421,491,155,156,157,158,159,160,162,163,164,165],"tindex":"b1dd1f8a-db51-11e4-ab9f-ef17776004d8","variableMapping":{"eof":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:162","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"EOF reached\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"b1dd1f8b-db51-11e4-ab9f-c1fbeac15650","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":48,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":386,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":181,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":494,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":79,"com.graphhopper.reader.OSMReaderTest.testFerry":9,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":129,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":130,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":506,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":269,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":0,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":159,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":466,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":138,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":360,"com.graphhopper.coll.CompressedArrayTest.testCompress":450,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":500,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":325,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":119,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":338,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":310,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":123,"com.graphhopper.GraphHopperTest.testPrepare":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":345,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":168,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":470,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":108,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":126,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":283,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":156,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":391,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":185,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":266,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":31,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":155,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":468,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":106,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":249,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":164,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":52,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":187,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":125,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":250,"com.graphhopper.reader.OSMReaderTest.testSort":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":479,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":213,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":321,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":66,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":346,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":371,"com.graphhopper.routing.DijkstraTest.initializationError":416,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":64,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":201,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":308,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":211,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":57,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":495,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":157,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":498,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":497,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":273,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":109,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":264,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":271,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":103,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":102,"com.graphhopper.coll.OSMIDMapTest.testGetLong":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":224,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":227,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":196,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":39,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":136,"com.graphhopper.coll.CompressedArrayTest.testCompress2":449,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":315,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":496,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":222,"com.graphhopper.GraphHopperAPITest.testLoad":37,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":186,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":152,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":143,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":68,"com.graphhopper.storage.LevelGraphStorageTest.testClone":42,"com.graphhopper.reader.OSMReaderTest.testBarriers":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":263,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":105,"com.graphhopper.util.GHUtilityTest.testCopy":131,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":282,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":243,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":503,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":404,"com.graphhopper.routing.PathTest.testFindInstruction":379,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":199,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":55,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":392,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":438,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":205,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":240,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":454,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":77,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":63,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":395,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":121,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":461,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":499,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":419,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":189,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":329,"com.graphhopper.util.InstructionListTest.testWayList2":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":257,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":78,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":219,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":163,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":236,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":469,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":489,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":301,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":380,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":191,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":471,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":335,"com.graphhopper.storage.RAMDirectoryTest.testSynched":485,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":139,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":284,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":104,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":14,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":406,"com.graphhopper.routing.AStarTest.initializationError":441,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":114,"com.graphhopper.coll.OSMIDMapTest.testGet":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":58,"com.graphhopper.routing.PathBidirRefTest.testExtract":94,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":439,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":198,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":351,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":473,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":277,"com.graphhopper.storage.RAMDataAccessTest.testCopy":401,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":149,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":491,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":154,"com.graphhopper.storage.RAMDataAccessTest.testSegments":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":262,"com.graphhopper.util.GHUtilityTest.testSort2":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":110,"com.graphhopper.reader.OSMReaderTest.testMain":11,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":183,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":474,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":448,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":278,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":480,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":26,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":214,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":192,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":195,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":399,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":51,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":93,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":61,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":452,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":46,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":21,"com.graphhopper.storage.StorablePropertiesTest.testStore":297,"com.graphhopper.storage.GraphHopperStorageTest.testClone":69,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":343,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":28,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":174,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":312,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":427,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":176,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":505,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":330,"com.graphhopper.routing.PathTest.testTime":377,"com.graphhopper.util.BitUtilLittleTest.testToFloat":414,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":206,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":43,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":433,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":288,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":259,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":337,"com.graphhopper.reader.OSMReaderTest.testRelation":364,"com.graphhopper.util.GHUtilityTest.testSortDirected":398,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":463,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":409,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":368,"com.graphhopper.GraphHopperTest.testFootOnly":356,"com.graphhopper.util.BitUtilLittleTest.testToInt":415,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":285,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":425,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":175,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":272,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":484,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":451,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":84,"com.graphhopper.search.NameIndexTest.testCreate":173,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":402,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":365,"com.graphhopper.routing.QueryGraphTest.testOneWay":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":260,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":445,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":359,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":248,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":442,"com.graphhopper.reader.OSMReaderTest.testWithBounds":20,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":464,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":333,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":339,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":440,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":483,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":40,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":184,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":504,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":462,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":493,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":230,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":296,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":59,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":305,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":167,"com.graphhopper.util.BitUtilLittleTest.testToBitString":413,"com.graphhopper.util.InstructionListTest.testWayList":127,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":472,"com.graphhopper.GraphHopperAPITest.testDisconnected179":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":331,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":328,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":488,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":459,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":478,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":3,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":307,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":389,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":74,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":467,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":384,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":418,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":169,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":204,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":429,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":165,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":116,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":280,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":482,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":300,"com.graphhopper.routing.PathTest.testWayList":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":147,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":424,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":166,"com.graphhopper.coll.OSMIDMapTest.testGet2":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":33,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":49,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":229,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":477,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":314,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":434,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":220,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":45,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":274,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":275,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":410,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":151,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":132,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":160,"com.graphhopper.util.GHUtilityTest.testSort":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":341,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":476,"com.graphhopper.search.NameIndexTest.testPut":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":216,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":306,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":242,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":267,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":289,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":292,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":25,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":370,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":381,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":153,"com.graphhopper.storage.MMapDirectoryTest.testSynched":487,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":362,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":490,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":226,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":30,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":412,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":87,"com.graphhopper.routing.PathTest.testFound":376,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":8,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":421,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":50,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":502,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":475,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":223,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":172,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":332,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":71,"com.graphhopper.util.InstructionListTest.testEmptyList":393,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":107,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":501,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":385,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":432,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":423,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":422,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":492,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":111,"com.graphhopper.reader.PrinctonReaderTest.testRead":91,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":322,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":270,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":146,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":353,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":327,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":60,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":457,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":486,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":453,"com.graphhopper.reader.OSMReaderTest.testFoot":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":86,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":363,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":375,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":254,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":447,"com.graphhopper.reader.OSMReaderTest.testOneWay":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":255,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":311,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":320,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":233,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":408,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":85,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":309,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":124,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":428,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":118,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":293,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":407,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":334,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":367,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":22,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":302,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":210,"com.graphhopper.routing.PathBidirRefTest.testExtract2":95,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":99,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":162,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":258,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":170,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":75,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":507,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":348,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":435,"com.graphhopper.util.SimpleIntDequeTest.testPush":400,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":460,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":251,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":76,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":430,"com.graphhopper.GraphHopperTest.testFootAndCar":4,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":316,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":193,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":161,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":81,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":420,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":388,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":56,"com.graphhopper.storage.StorablePropertiesTest.testLoad":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":113,"com.graphhopper.GraphHopperTest.testPrepareOnly":354,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":244,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":481,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":80,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":18,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":180,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":319,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":394,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":436,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":336,"com.graphhopper.routing.AStarBidirectionTest.initializationError":417,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":24,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":203,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":202,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":53}}]
