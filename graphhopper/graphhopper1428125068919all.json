[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"de7acfa6-da8a-11e4-9d9c-4f9dc403bd84","variableMapping":{"bytes":"hash","capacity":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"de7ccb77-da8a-11e4-9d9c-fb2e08412034","variableMapping":{"initLeafSize":"y1","maxLeafEntries":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[18],"tindex":"de7ccb78-da8a-11e4-9d9c-edb35d792760","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"de7ccb79-da8a-11e4-9d9c-51042b506d66","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"de7ccb7a-da8a-11e4-9d9c-4dde8c617f9a","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"maxTurnCosts","flags":"turnRestrictionBit","roundaboutBit":"turnRestrictionBit","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"maxTurnCosts","value":"restricted","forwardBit":"turnRestrictionBit","key":"maxTurnCosts","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"maxTurnCosts","backwardBit":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-2},{"failures":[],"tindex":"de7ccb7b-da8a-11e4-9d9c-f321b601c48d","variableMapping":{"directionBitMask":"relBitMask","flags":"relBitMask","dir":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"de7ccb7c-da8a-11e4-9d9c-43e706084550","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,18,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,10,288,289,290,291,292,11,293,12,13,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,14,321,322,323,324,325,15,326,16,17,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468],"tindex":"de7cf28d-da8a-11e4-9d9c-9d2ab42033fa","variableMapping":{"fileDetails":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":-1},{"failures":[],"tindex":"de7cf28e-da8a-11e4-9d9c-9753b9941c1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[68,96,111,124,141,167],"tindex":"de7cf28f-da8a-11e4-9d9c-2b466924200c","variableMapping":{"flags":"directionBitMask","tmpValue":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"de7cf290-da8a-11e4-9d9c-cb9d0d238752","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"de7cf291-da8a-11e4-9d9c-319f6b699963","variableMapping":{"edgeId":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":0},{"failures":[],"tindex":"de7cf292-da8a-11e4-9d9c-cd433a41ed44","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[19,20,21,22,23,24,25,27,28,29,30,53,54,55,56,57,58,59,60,61,63,64,65,66,469,67,70,71,75,18,82,88,89,90,91,93,97,99,100,103,104,106,107,470,471,110,114,117,121,122,123,125,127,128,131,132,134,135,137,138,139,140,142,144,147,148,150,159,160,161,162,164,168,170,171,174,175,177,178],"tindex":"de7cf293-da8a-11e4-9d9c-e7e1297a6aea","variableMapping":{"weight":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,472,9,10,11,12,13,14,15,16,17],"tindex":"de7d19a4-da8a-11e4-9d9c-4dc1ba08d56b","variableMapping":{"eleDelta":"minLonTmp","decEleSum":"lon","fullDist2D":"minLonTmp","decDist2DSum":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"de7d19a5-da8a-11e4-9d9c-11b85c200fc9","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"length","nodeType":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[],"tindex":"de7d19a6-da8a-11e4-9d9c-1fc72cf60122","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[106,134,140,177],"tindex":"de7d19a7-da8a-11e4-9d9c-bfb950c65533","variableMapping":{"id":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[],"tindex":"de7d19a8-da8a-11e4-9d9c-f1b82dff36f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"de7d19a9-da8a-11e4-9d9c-21ab1b7f07d1","variableMapping":{"value":"size","numberOfBits":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":0},{"failures":[],"tindex":"de7d19aa-da8a-11e4-9d9c-4dc5c0c416c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:342","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[19,20,21,22,23,24,25,27,28,29,30,41,53,54,55,56,57,58,59,60,61,63,64,65,66,469,67,110],"tindex":"de7d19ab-da8a-11e4-9d9c-e130cd410fc2","variableMapping":{"lastKey":"includeWay","key":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":-1},{"failures":[],"tindex":"de7d19ac-da8a-11e4-9d9c-1587bda9cd3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"de7d19ad-da8a-11e4-9d9c-7d3982cb4a47","variableMapping":{"high":"oldRelationFlags","highKey":"oldRelationFlags","key":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"de7d19ae-da8a-11e4-9d9c-3f73b2dfbc25","variableMapping":{"edge":"tmpPrevEdge","updatedB":"edgeEntryBytes","updatedA":"tmpPrevEdge","linkA":"edgeEntryBytes","this":"this","linkB":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.writeEdge(int, int, int, int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[],"tindex":"de7d19af-da8a-11e4-9d9c-1fd5b91a3d05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"de7d19b0-da8a-11e4-9d9c-0b2751d5b870","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[88,92,93,106,121,123,134,137,139,140,159,163,164,177],"tindex":"de7d19b1-da8a-11e4-9d9c-c7ffc680472e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"de7d19b2-da8a-11e4-9d9c-1b78ea82caec","variableMapping":{"maxTurnCosts":"maxTurnCosts","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","cost":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"de7d19b3-da8a-11e4-9d9c-557a8b062da1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"de7d40c4-da8a-11e4-9d9c-d78d0fdb0ef9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":0},{"failures":[92,163],"tindex":"de7d40c5-da8a-11e4-9d9c-ad58983fbba6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"de7d40c6-da8a-11e4-9d9c-b3369882e0f0","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[76,473,474],"tindex":"de7d40c7-da8a-11e4-9d9c-d962a2107cd7","variableMapping":{"cap":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"de7d40c8-da8a-11e4-9d9c-bd33154890cf","variableMapping":{"counts":"y2","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:38","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.max(1, ((int) / 3))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"de7d40c9-da8a-11e4-9d9c-032f65e15ca8","variableMapping":{"line":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"de7d40ca-da8a-11e4-9d9c-15e2ebebbc3d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[19,21,25,27,28,30,38,39,40,41,45,475,476,477,55,58,59,478,479,480,481,482,181,182,187,193,194,197,222,242,247,268,274,279,281,289,291,322,324,483,372,375,380,401,407,412,414,484,423,426,431,452,458,463,465,485],"tindex":"de7d40cb-da8a-11e4-9d9c-8fc2c014156c","variableMapping":{"strLen":"index","bLen":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[19,30,55],"tindex":"de7d40cc-da8a-11e4-9d9c-799eec38cbff","variableMapping":{"com.graphhopper.util.Constants.VERSION":"val","tmp":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"de7d40cd-da8a-11e4-9d9c-f38107fa11ef","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[21,22,23,24,25,28,41,54,55,57,60,61,63,64,65,67,71,18],"tindex":"de7d40ce-da8a-11e4-9d9c-a5c7fcf18648","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"de7d40cf-da8a-11e4-9d9c-513d839030bf","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"de7d40d0-da8a-11e4-9d9c-ad3535740e1a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"de7d40d1-da8a-11e4-9d9c-675e96861678","variableMapping":{"store":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"de7d40d2-da8a-11e4-9d9c-27b8e7bc64dc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[202],"tindex":"de7d40d3-da8a-11e4-9d9c-67ec947aa460","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeFlagEncoder.reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"de7d67e4-da8a-11e4-9d9c-cf5ea739f02b","variableMapping":{"lastKey":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG","key":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[41,473],"tindex":"de7d67e5-da8a-11e4-9d9c-2702133b1535","variableMapping":{"cp":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:122","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"de7d67e6-da8a-11e4-9d9c-e73cb8d0e4f2","variableMapping":{"high":"high","len":"high","start":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-2},{"failures":[19,20,21,22,23,24,25,27,28,29,30,38,39,40,41,45,486,475,476,477,487,488,489,53,54,55,56,57,58,59,60,61,63,64,65,66,67,478,479,480,481,482,85,86,181,182,186,187,189,190,191,192,193,194,196,197,222,242,243,247,251,268,273,274,279,281,282,289,290,291,308,309,310,311,313,322,323,324,360,490,491,483,492,493,494,495,496,497,498,499,500,372,375,376,380,384,401,406,407,412,414,415,501,484,423,426,427,431,435,452,458,463,465,466,502,503,485,504,505,506,507,508,509,510,511,512,513],"tindex":"de7d67e7-da8a-11e4-9d9c-adb39c3838fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-1},{"failures":[152,155,249,259,260,266,274,275,336,346,347,353,361,362,382,392,393,399,407,408,433,443,444,450,458,459],"tindex":"de7d67e8-da8a-11e4-9d9c-1d90783871d1","variableMapping":{"neighborUpdates":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[152,157],"tindex":"de7d67e9-da8a-11e4-9d9c-0dd3058b95d2","variableMapping":{"size":"removed","from":"removed","end":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"de7d67ea-da8a-11e4-9d9c-99e626ce258a","variableMapping":{"incEleSum":"minLon","incDist2DSum":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"de7d67eb-da8a-11e4-9d9c-cbceeedee63f","variableMapping":{"dist":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[105,133,149,176],"tindex":"de7d67ec-da8a-11e4-9d9c-9d68ed594e13","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"de7d67ed-da8a-11e4-9d9c-5f8b7264399a","variableMapping":{"flags":"flags","nodeFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[],"tindex":"de7d67ee-da8a-11e4-9d9c-f18aa7c000a2","variableMapping":{"mask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-2},{"failures":[],"tindex":"de7d67ef-da8a-11e4-9d9c-ffb74bc34f4a","variableMapping":{"newName":"this","name":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[32,38,39,40,45,152,156,202,204,205,208,212,217,219,221,222,223,225,229,230,231,232,233,235,239,242,252,263,265,273,276,278,283,339,350,352,360,363,365,370,372,375,385,396,398,406,409,411,416,426,436,447,449,457,460,462,467],"tindex":"de7d8f00-da8a-11e4-9d9c-3b81b45c7e3f","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"de7d8f01-da8a-11e4-9d9c-cbcf5d6979ef","variableMapping":{"turnCostIndex":"nextWayBit","NO_TURN_ENTRY":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":-2},{"failures":[],"tindex":"de7d8f02-da8a-11e4-9d9c-9338748a2aef","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"de7d8f03-da8a-11e4-9d9c-6f8e372ada28","variableMapping":{"oldValueIndex":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[],"tindex":"de7d8f04-da8a-11e4-9d9c-37e65f5de59c","variableMapping":{"weightApproximation":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"de7d8f05-da8a-11e4-9d9c-07c0d167dbe6","variableMapping":{"bitsForEdgeFlags":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"de7d8f06-da8a-11e4-9d9c-e1c7d82f5cd9","variableMapping":{"resultOrientation":"x","orientation":"absY","java.lang.Math.PI":"x"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[],"tindex":"de7d8f07-da8a-11e4-9d9c-4dc5d28d4635","variableMapping":{"nanoTime":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[19,20,21,22,23,24,25,27,28,29,30,32,33,37,38,39,40,41,42,45,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,469,67,68,69,70,71,72,73,74,75,76,18,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,470,514,471,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,190,193,198,199,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,300,307,320,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468],"tindex":"de7db618-da8a-11e4-9d9c-d19a9ea44575","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:211","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder)"},"status":-1},{"failures":[41,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,18,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,470,514,471,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,474,180,181,202,203,215,225,258,345,391,442],"tindex":"de7db619-da8a-11e4-9d9c-5526c71080f8","variableMapping":{"start":"shift","delta":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,18,77,78,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,470,514,515,471,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,154,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,202,212,420],"tindex":"de7db61a-da8a-11e4-9d9c-c9c23961e0ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:193","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"cycleway\") , 30)"},"status":-1},{"failures":[],"tindex":"de7ddd2b-da8a-11e4-9d9c-6d801e8ae51d","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"de7ddd2c-da8a-11e4-9d9c-f185b032d702","variableMapping":{"bit":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"de7ddd2d-da8a-11e4-9d9c-fd5888c9d15c","variableMapping":{"silent":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"de7ddd2e-da8a-11e4-9d9c-6d370e967c9d","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[21,29,211,219,285],"tindex":"de7e043f-da8a-11e4-9d9c-c5e0561d21a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[0,1,2,3,4,516,5,6,472],"tindex":"de7e0440-da8a-11e4-9d9c-4f6d34492802","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"de7e0441-da8a-11e4-9d9c-a9c065999265","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"de7e0442-da8a-11e4-9d9c-f3526857e801","variableMapping":{"tmpNo":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[155],"tindex":"de7e0443-da8a-11e4-9d9c-e7a9748da3a8","variableMapping":{"cap":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":-1},{"failures":[60],"tindex":"de7e0444-da8a-11e4-9d9c-8da5e2aaa9df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:470","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n        return true;\n    \n}"},"status":-1},{"failures":[],"tindex":"de7e0445-da8a-11e4-9d9c-67eb71baf32b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"de7e0446-da8a-11e4-9d9c-517882d7ec6f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:61","type":"CtReturnImpl","sourcecode":"return \"PREPARE+\" + (com.graphhopper.routing.util.Weighting.toString())"},"status":0},{"failures":[],"tindex":"de7e0447-da8a-11e4-9d9c-157b212d60d9","variableMapping":{"nanoTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"de7e0448-da8a-11e4-9d9c-eb9f8f1663ac","variableMapping":{"value":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[21,29,211,219,285],"tindex":"de7e0449-da8a-11e4-9d9c-c3942c4dd0f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"de7e044a-da8a-11e4-9d9c-31092d653450","variableMapping":{"foundIndex":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":0},{"failures":[],"tindex":"de7e044b-da8a-11e4-9d9c-09a0ba61f179","variableMapping":{"daType":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:121","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[517,518],"tindex":"de7e044c-da8a-11e4-9d9c-2b0ae1ef9ba0","variableMapping":{"strLen":"i","bLen":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"de7e044d-da8a-11e4-9d9c-079a50092617","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"de7e044e-da8a-11e4-9d9c-af0d76b85c85","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"de7e2b5f-da8a-11e4-9d9c-c522f6e7f38a","variableMapping":{"newAdjIndex":"speed","newBaseIndex":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"de7e2b60-da8a-11e4-9d9c-cd50351fb3f7","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"de7e2b61-da8a-11e4-9d9c-fb5da7470fd8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"de7eeeb2-da8a-11e4-9d9c-19ffe5a042bd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[88,139,159],"tindex":"de7eeeb3-da8a-11e4-9d9c-83b5be83e7a9","variableMapping":{"high":"speed","guess":"speed","low":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"de7eeeb4-da8a-11e4-9d9c-6bb0d10d8f68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"de7eeeb5-da8a-11e4-9d9c-873384c7c1e5","variableMapping":{"len":"indexDivisor","start":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[139],"tindex":"de7eeeb6-da8a-11e4-9d9c-19e673605dfd","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"de7eeeb7-da8a-11e4-9d9c-41455181885c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":457,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":220,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":423,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":474,"com.graphhopper.GraphHopperAPITest.testNoLoad":34,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":335,"com.graphhopper.reader.OSMReaderTest.testFerry":53,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":49,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":163,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":140,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":290,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":20,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":468,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":103,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":390,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":502,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":146,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":231,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":355,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":287,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":503,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":495,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":237,"com.graphhopper.GraphHopperTest.testPrepare":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":367,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":226,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":161,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":212,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":147,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":36,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":156,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":210,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":323,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":415,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":164,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":372,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":7,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":240,"com.graphhopper.GraphHopperTest.testLoadOSM":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":327,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":324,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":109,"com.graphhopper.reader.OSMReaderTest.testSort":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":175,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":376,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":505,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":277,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":242,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":368,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":193,"com.graphhopper.storage.RAMDataAccessTest.testHeader":496,"com.graphhopper.routing.DijkstraTest.initializationError":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":411,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":513,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":456,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":254,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":419,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":373,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":380,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":441,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":135,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":132,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":293,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":216,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":292,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":206,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":433,"com.graphhopper.coll.OSMIDMapTest.testGetLong":481,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":400,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":448,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":426,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":450,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":267,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":121,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":391,"com.graphhopper.GraphHopperAPITest.testLoad":32,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":430,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":111,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":259,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":249,"com.graphhopper.storage.LevelGraphStorageTest.testClone":435,"com.graphhopper.reader.OSMReaderTest.testBarriers":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":94,"com.graphhopper.util.GHUtilityTest.testCopy":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":339,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":129,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":300,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":149,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":305,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":499,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":143,"com.graphhopper.routing.PathTest.testFindInstruction":182,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":382,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":42,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":117,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":464,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":90,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":302,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":278,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":263,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":409,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":395,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":101,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":515,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":185,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":437,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":340,"com.graphhopper.util.InstructionListTest.testWayList2":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":363,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":328,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":386,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":162,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":414,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":85,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":243,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":439,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":485,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":165,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":506,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":392,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":208,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":248,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":58,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":504,"com.graphhopper.routing.AStarTest.initializationError":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":222,"com.graphhopper.coll.OSMIDMapTest.testGet":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":389,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":118,"com.graphhopper.routing.PathBidirRefTest.testExtract":198,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":168,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":452,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":480,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":295,"com.graphhopper.storage.RAMDataAccessTest.testCopy":492,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":507,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":417,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":361,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":167,"com.graphhopper.storage.RAMDataAccessTest.testSegments":498,"com.graphhopper.util.GHUtilityTest.testSort2":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":217,"com.graphhopper.reader.OSMReaderTest.testMain":55,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":427,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":399,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":176,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":296,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":70,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":377,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":442,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":446,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":467,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":190,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":404,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":88,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":449,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":66,"com.graphhopper.storage.StorablePropertiesTest.testStore":484,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":483,"com.graphhopper.storage.GraphHopperStorageTest.testClone":251,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":364,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":18,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":75,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":261,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":418,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":341,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":421,"com.graphhopper.routing.PathTest.testTime":180,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":128,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":465,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":436,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":81,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":330,"com.graphhopper.reader.OSMReaderTest.testRelation":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":354,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":454,"com.graphhopper.util.GHUtilityTest.testSortDirected":48,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":518,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":104,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":511,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":189,"com.graphhopper.GraphHopperTest.testFootOnly":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":73,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":309,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":501,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":11,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":471,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":350,"com.graphhopper.search.NameIndexTest.testCreate":477,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":497,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":186,"com.graphhopper.routing.QueryGraphTest.testOneWay":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":331,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":4,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":322,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":2,"com.graphhopper.reader.OSMReaderTest.testWithBounds":65,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":500,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":105,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":491,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":153,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":413,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":356,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":470,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":432,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":428,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":102,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":150,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":403,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":74,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":396,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":247,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":203,"com.graphhopper.util.InstructionListTest.testWayList":39,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":280,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":166,"com.graphhopper.GraphHopperAPITest.testDisconnected179":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":342,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":516,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":405,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":337,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":99,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":353,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":370,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":23,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":253,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":407,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":238,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":158,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":271,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":214,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":77,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":463,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":125,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":378,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":451,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":224,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":246,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":178,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":241,"com.graphhopper.routing.PathTest.testWayList":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":369,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":346,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":473,"com.graphhopper.coll.OSMIDMapTest.testGet2":479,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":225,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":508,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":460,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":487,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":402,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":172,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":264,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":112,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":12,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":447,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":13,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":493,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":512,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":96,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":517,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":122,"com.graphhopper.util.GHUtilityTest.testSort":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":359,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":472,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":171,"com.graphhopper.search.NameIndexTest.testPut":475,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":288,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":304,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":313,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":92,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":192,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":86,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":314,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":374,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":124,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":84,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":488,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":397,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":152,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":445,"com.graphhopper.routing.PathTest.testFound":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":360,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":30,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":110,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":462,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":151,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":420,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":170,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":393,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":476,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":345,"com.graphhopper.util.InstructionListTest.testEmptyList":37,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":256,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":490,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":211,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":130,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":297,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":215,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":69,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":148,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":218,"com.graphhopper.reader.PrinctonReaderTest.testRead":51,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":279,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":291,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":388,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":344,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":334,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":97,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":398,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":514,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":89,"com.graphhopper.reader.OSMReaderTest.testFoot":54,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":358,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":489,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":16,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":466,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":17,"com.graphhopper.reader.OSMReaderTest.testOneWay":67,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":260,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":275,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":410,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":144,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":510,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":95,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":352,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":232,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":9,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":230,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":317,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":509,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":113,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":348,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":188,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":244,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":469,"com.graphhopper.routing.PathBidirRefTest.testExtract2":199,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":131,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":307,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":329,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":486,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":273,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":318,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":134,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":60,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":371,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":325,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":276,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":47,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":438,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":78,"com.graphhopper.GraphHopperTest.testFootAndCar":24,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":268,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":444,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":123,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":299,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":494,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":384,"com.graphhopper.GraphHopperTest.testPrepareOnly":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":221,"com.graphhopper.GraphHopperTest.testVia":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":306,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":336,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":63,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":422,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":41,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":272,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":115,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":61,"com.graphhopper.routing.AStarBidirectionTest.initializationError":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":351,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":82,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":461,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":459,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":375}}]
