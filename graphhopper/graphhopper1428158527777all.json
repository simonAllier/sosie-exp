[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"c4ed6261-dad8-11e4-9dbb-5b365be9a657","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-1},{"failures":[],"tindex":"c4ed6262-dad8-11e4-9dbb-9b4f4e04f645","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:354","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHTBitSet(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[],"tindex":"c4ed6263-dad8-11e4-9dbb-67da8b9a6798","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"c4ed6264-dad8-11e4-9dbb-977d706b9724","variableMapping":{"radiusInMeter":"baseOrientation","lon":"resultOrientation","lat":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"c4ed6265-dad8-11e4-9dbb-eb54075f7e71","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"c4ed6266-dad8-11e4-9dbb-5beec2083c1f","variableMapping":{"width":"allBits","lonSimilar":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"c4ed8977-dad8-11e4-9dbb-7fa83462afdd","variableMapping":{"latlon":"service"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"c4ed8978-dad8-11e4-9dbb-110bea157c67","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"c4ed8979-dad8-11e4-9dbb-3bcb03167591","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"c4ed897a-dad8-11e4-9dbb-fd1815304bff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"c4ed897b-dad8-11e4-9dbb-934fa344889c","variableMapping":{"size":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[32],"tindex":"c4ed897c-dad8-11e4-9dbb-253bd60219ad","variableMapping":{"arrayLength":"minutes","maxGeoRef":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"c4ed897d-dad8-11e4-9dbb-bb957548c7f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"c4ed897e-dad8-11e4-9dbb-5995b1551eed","variableMapping":{"maxTurnCosts":"maxTurnCosts","costs":"costs","turnRestrictionBit":"turnRestrictionBit","restricted":"restricted"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":0},{"failures":[],"tindex":"c4ed897f-dad8-11e4-9dbb-1bb896ddd5d3","variableMapping":{"distance":"shortTripsSpeed","speed":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"c4ed8980-dad8-11e4-9dbb-1d7605e96f41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[33],"tindex":"c4ed8981-dad8-11e4-9dbb-654b9e86aa7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"c4ed8982-dad8-11e4-9dbb-01cfb4a7e9fd","variableMapping":{"str":"str","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:80","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":0},{"failures":[],"tindex":"c4ed8983-dad8-11e4-9dbb-97801e8e6f46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[34,35,36,37,38,39],"tindex":"c4edb094-dad8-11e4-9dbb-e1001058d718","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"c4edd7a5-dad8-11e4-9dbb-1d5daec0f17b","variableMapping":{"shift":"flags","flags":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"c4edd7a6-dad8-11e4-9dbb-d9767f4c98fb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"c4edd7a7-dad8-11e4-9dbb-23faad8c9414","variableMapping":{"size":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[40,41],"tindex":"c4ee25c8-dad8-11e4-9dbb-459d8f063a4e","variableMapping":{"foundIndex":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"c4ee25c9-dad8-11e4-9dbb-8fa4a1acc409","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[42],"tindex":"c4ee25ca-dad8-11e4-9dbb-e3982f801f5f","variableMapping":{"directionBitMask":"otherValue","flags":"otherValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"c4ee25cb-dad8-11e4-9dbb-1905c13c7b98","variableMapping":{"bytesForFlags":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[43,44,45,46,47,48],"tindex":"c4ee25cc-dad8-11e4-9dbb-f9c03dacc285","variableMapping":{"compressionLevel":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[49,50,51,52,53,33],"tindex":"c4ee73ed-dad8-11e4-9dbb-612da36ce921","variableMapping":{"sacScale":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"c4ee73ee-dad8-11e4-9dbb-c7436e7afe96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[54,55,1,56,57,58,4,59,60,61,6,62,63,9,64,65],"tindex":"c4ee73ef-dad8-11e4-9dbb-470b6572cb17","variableMapping":{"defaultUTurnCost":"speed","weight":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:769","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"c4ee73f0-dad8-11e4-9dbb-0b8a91a19be1","variableMapping":{"nodeId":"hash","nodeIdOffset":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"c4ee73f1-dad8-11e4-9dbb-4718b376ca39","variableMapping":{"bits":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[40,41],"tindex":"c4ee73f2-dad8-11e4-9dbb-bb57d8ed7516","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[66,51,67,13,68,69,37,38,70,71,72,73,74,75,76,77,78],"tindex":"c4ee73f3-dad8-11e4-9dbb-c1661a28c6e6","variableMapping":{"strLen":"index","bLen":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[54],"tindex":"c4ee73f4-dad8-11e4-9dbb-a7bf64a4b12c","variableMapping":{"line":"highwayValue","key":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"c4ee73f5-dad8-11e4-9dbb-97f425fa0367","variableMapping":{"nodesContracted":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":0},{"failures":[],"tindex":"c4ee73f6-dad8-11e4-9dbb-756b93b8636f","variableMapping":{"flags":"oldRelationFlags","mask":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[49,50,51,79,80,52,81,82,83,84,85,86,87,88,58,53,89],"tindex":"c4ee9b07-dad8-11e4-9dbb-53a9b48fbb27","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[90,91,92,33,93,94,95],"tindex":"c4ee9b08-dad8-11e4-9dbb-5159767df760","variableMapping":{"sacScale":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[2,5,61,6,7,10],"tindex":"c4ee9b09-dad8-11e4-9dbb-25a8d38de0e7","variableMapping":{"prepared":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[80,90,91],"tindex":"c4ee9b0a-dad8-11e4-9dbb-93e6ba119f89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[96,97,50,98,51,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,43,120,121,122,123,124,80,52,81,82,125,83,84,44,85,126,127,128,86,87,129,88,130,131,132,133,134,135,136,137,40,138,139,140,41,141,142,143,144,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,159,34,35,160,161,162,163,67,164,165,13,166,167,168,169,68,170,171,172,173,69,36,37,174,38,175,70,71,176,72,177,178,179,73,180,74,181,182,39,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,75,24,227,228,229,230,231,25,232,26,27,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,28,258,259,260,261,262,29,263,30,31,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,76,319,77,320,78,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364],"tindex":"c4eec21b-dad8-11e4-9dbb-a90dae0238c3","variableMapping":{"heights":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"c4eec21c-dad8-11e4-9dbb-010a925c2483","variableMapping":{"message":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"c4eee92d-dad8-11e4-9dbb-03f76d42a119","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[40,41,141],"tindex":"c4eee92e-dad8-11e4-9dbb-852647a7a9bc","variableMapping":{"segmentsToMap":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-1},{"failures":[],"tindex":"c4eee92f-dad8-11e4-9dbb-473b993a6c28","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"c4eee930-dad8-11e4-9dbb-838e099547c0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[365,90,91,366,92,33,367,93,368,94,369,95],"tindex":"c4eee931-dad8-11e4-9dbb-2f003e0b7e7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-1},{"failures":[370,66,96,371,372,373,35,160,161,162,163,67,164,165,13,166,167,168,169,68,170,171,172,173,69,36,37,174,38,70,71,176,72,177,178,179,73,74,181,182,39],"tindex":"c4eee932-dad8-11e4-9dbb-9355f5b3ed10","variableMapping":{"workerThreads":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"c4eee933-dad8-11e4-9dbb-dd9eaebad15d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[99,108,114,123,124,52,88,374,40,41,141,150,153,34,35,163,165,167,169,68,38,175,71,176,73,180,74,39,375,187,188,189,196,198,211,216,219,223,376,377,378,379,270,380,381,382,383,384,385,276,277,278,285,287,300,305,308,312,386,325,326,327,334,336,349,354,357,361],"tindex":"c4eee934-dad8-11e4-9dbb-81383816bf69","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[49,370,66,96,97,371,372,387,51,80,81,82,125,83,84,44,85,127,128,86,87,88,130,131,132,133,134,388,389,390,391,392,393,394,395,384,396,397,398,399,400,401,402,403,404],"tindex":"c4eee935-dad8-11e4-9dbb-331c5c9e20b7","variableMapping":{"ref":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:218","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-1},{"failures":[],"tindex":"c4ef1046-dad8-11e4-9dbb-e185a4250b91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-2},{"failures":[405,0,1,2,58,406,3,5,6,7,407,8,9,10],"tindex":"c4ef1047-dad8-11e4-9dbb-db304fd9d1d3","variableMapping":{"location":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[],"tindex":"c4ef1048-dad8-11e4-9dbb-9b4ba26160f1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[],"tindex":"c4ef1049-dad8-11e4-9dbb-0d7d98711aea","variableMapping":{"freeIndex":"dLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-2},{"failures":[408],"tindex":"c4ef104a-dad8-11e4-9dbb-23ae36ebcb54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[80,32],"tindex":"c4ef104b-dad8-11e4-9dbb-87dc1e99506e","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"minutes","speed":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[40],"tindex":"c4ef104c-dad8-11e4-9dbb-eb3971b61f55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[11,12,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"c4ef104d-dad8-11e4-9dbb-a1d4af31bf32","variableMapping":{"width":"allBits","lonSimilar":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[0,1,2,8,9,10],"tindex":"c4ef104e-dad8-11e4-9dbb-9706fc13872f","variableMapping":{"sacScale":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[],"tindex":"c4ef104f-dad8-11e4-9dbb-cdf995dcdab9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":0},{"failures":[136],"tindex":"c4ef1050-dad8-11e4-9dbb-67084813ccd0","variableMapping":{"fwdFaster":"eleDelta","incDist2DSum":"incEleSum","fwdSlower":"incEleSum","fullDist2D":"incEleSum","restDist2D":"incEleSum","speed":"eleDelta","decDist2DSum":"incEleSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[34,35,36,38,39],"tindex":"c4ef1051-dad8-11e4-9dbb-a30459154d14","variableMapping":{"prepared":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"c4ef1052-dad8-11e4-9dbb-d9bb4edc5a5d","variableMapping":{"visitedCountFrom":"shift","visitedCountTo":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[198,270,287,409,336],"tindex":"c4ef1053-dad8-11e4-9dbb-53aee4d0b3a8","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[66,96,97,50,371,387,51,99,100,81,82,125,11,12,13,169,68,172,14,15,16,17,410,18,19,20,21,22,23,225,226,24,227,228,229,230,231,25,232,26,27,233,234,235,236,237,238,28,258,259,260,261,262,29,263,30,31,264,265,266,267,268,269],"tindex":"c4ef1054-dad8-11e4-9dbb-7dcfd3fede27","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = com.graphhopper.util.shapes.BBox.clone()"},"status":-1},{"failures":[],"tindex":"c4ef1055-dad8-11e4-9dbb-2f7ae8c98f88","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[107,411],"tindex":"c4ef1056-dad8-11e4-9dbb-794b6919f8b6","variableMapping":{"neighborUpdates":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[],"tindex":"c4ef3767-dad8-11e4-9dbb-c3474bd039af","variableMapping":{"intVal":"i","degree":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":0},{"failures":[49,51,412],"tindex":"c4ef3768-dad8-11e4-9dbb-75a8dece0eb1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[80,52,81,82,83,84,44,85,86,87,88,405,413,0,414,1,2,415,416,417,418,58,406,3,4,5,419,420,61,6,421,7,422,407,423,8,424,9,10,425,426],"tindex":"c4ef3769-dad8-11e4-9dbb-513f82aadc19","variableMapping":{"indexM":"speed","tmp":"s","version":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:97","type":"CtIfImpl","sourcecode":"if (int >= 0)\n    java.lang.String = java.lang.String.substring(0, int);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"c4ef376a-dad8-11e4-9dbb-c57c466737f1","variableMapping":{"maxSpeed":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"c4ef376b-dad8-11e4-9dbb-5de1196c1b63","variableMapping":{"tmp":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[427,428,73],"tindex":"c4ef376c-dad8-11e4-9dbb-8922cc76aa2f","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"c4ef376d-dad8-11e4-9dbb-7f7c50d9b631","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"c4ef376e-dad8-11e4-9dbb-e78b031e196d","variableMapping":{"tmpDegreeCounter":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[11,12,14,15,16,17,410,18,19,22],"tindex":"c4ef376f-dad8-11e4-9dbb-93b954800a04","variableMapping":{"edgePointer":"initialBits","edgeEntryBytes":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"c4ef3770-dad8-11e4-9dbb-f36d1f1cc77b","variableMapping":{"angle":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"c4ef3771-dad8-11e4-9dbb-7b6ea0effb49","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[11,12,14,15,17,410,18,19,22],"tindex":"c4ef3772-dad8-11e4-9dbb-c94baff37f08","variableMapping":{"flags":"bits","nodeFlags":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"c4ef3773-dad8-11e4-9dbb-a76957f78764","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[40,41,141],"tindex":"c4ef3774-dad8-11e4-9dbb-65aed6517d42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[413,416,417,418,420,422,423,426],"tindex":"c4ef3775-dad8-11e4-9dbb-a146a11154bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"c4ef3776-dad8-11e4-9dbb-c1d3dfd6063a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[405,414,1,415,406,4,419,61,6,421,407,424,9,425],"tindex":"c4ef3777-dad8-11e4-9dbb-df07ace81ff8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[],"tindex":"c4ef3778-dad8-11e4-9dbb-11ddba8d86a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"c4ef3779-dad8-11e4-9dbb-5b4378e0e81d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"c4ef5e8a-dad8-11e4-9dbb-af140cd40c90","variableMapping":{"distInMeter":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"c4ef5e8b-dad8-11e4-9dbb-6f8cd68cbdd1","variableMapping":{"usedBits":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","nextRelBit":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","encoder":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"c4ef5e8c-dad8-11e4-9dbb-51104da7667e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":0},{"failures":[],"tindex":"c4ef5e8d-dad8-11e4-9dbb-495072649a62","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-1},{"failures":[],"tindex":"c4ef5e8e-dad8-11e4-9dbb-610208188b95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:66","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"c4ef5e8f-dad8-11e4-9dbb-6197c9188a37","variableMapping":{"value":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[66,50,107,80,52,87,88,54,429,90,408,430,91,431,55,432,433,136,405,413,0,414,1,2,57,416,417,418,58,434,435,406,3,4,5,60,420,61,6,7,63,422,407,423,8,424,9,10,65,426,436,143,144,34,35,166,168,169,195,198,238,244,257,269,437,270,284,287,333,336],"tindex":"c4ef84a0-dad8-11e4-9dbb-1b1ae0cb5690","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[49,370,66,96,97,50,371,372,387,51,79,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,43,123,124,80,52,81,82,125,83,84,44,85,127,128,86,87,88,135,136,137,40,138,139,140,41,141,142,143,144,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,159,34,35,160,161,162,163,67,164,165,13,166,167,168,169,68,170,171,172,173,69,36,37,174,38,175,70,71,176,72,177,178,179,73,180,74,181,182,39,183,375,438,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,75,24,227,228,229,230,231,25,232,26,27,233,234,235,236,439,237,238,239,240,241,242,440,243,244,245,246,247,248,249,250,251,252,253,254,255,441,256,257,28,258,259,260,261,262,29,263,30,31,264,265,266,267,442,268,269,376,377,378,443,444,445,446,447,437,379,448,270,449,450,451,452,453,454,455,456,457,458,459,460,380,461,271,462,463,381,464,465,382,466,467,468,383,469,384,470,272,385,471,273,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,317,318,76,319,77,320,472,78,321,386,473,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362],"tindex":"c4ef84a1-dad8-11e4-9dbb-7b9a731d991b","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"c4ef84a2-dad8-11e4-9dbb-ff57a0f02245","variableMapping":{"ab_rb":"lat","ab_ar":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":351,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":173,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":436,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":472,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":377,"com.graphhopper.reader.OSMReaderTest.testFerry":80,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":114,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":424,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":421,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":229,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":370,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":286,"com.graphhopper.coll.CompressedArrayTest.testCompress":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":62,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":72,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":458,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":198,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":75,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":396,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":392,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":74,"com.graphhopper.GraphHopperTest.testPrepare":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":466,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":175,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":205,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":428,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":166,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":245,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":102,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":323,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":41,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":165,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":260,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":311,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":384,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":20,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":325,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":427,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":39,"com.graphhopper.GraphHopperTest.testLoadOSM":371,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":261,"com.graphhopper.reader.OSMReaderTest.testSort":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":65,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":128,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":139,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":471,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":217,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":375,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":467,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":153,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":307,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":404,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":350,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":194,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":470,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":276,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":335,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":420,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":60,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":232,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":68,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":226,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":231,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":163,"com.graphhopper.coll.OSMIDMapTest.testGetLong":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":162,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":327,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":296,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":342,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":412,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":386,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":344,"com.graphhopper.coll.CompressedArrayTest.testCompress2":11,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":207,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":406,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":287,"com.graphhopper.GraphHopperAPITest.testLoad":99,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":324,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":199,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":189,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":32,"com.graphhopper.storage.LevelGraphStorageTest.testClone":329,"com.graphhopper.reader.OSMReaderTest.testBarriers":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":277,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":46,"com.graphhopper.util.GHUtilityTest.testCopy":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":238,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":367,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":94,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":440,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":394,"com.graphhopper.routing.PathTest.testFindInstruction":145,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":278,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":89,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":108,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":358,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":240,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":218,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":203,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":305,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":291,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":366,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":331,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":446,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":409,"com.graphhopper.util.InstructionListTest.testWayList2":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":381,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":265,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":223,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":310,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":423,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":432,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":135,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":438,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":48,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":399,"com.graphhopper.storage.RAMDirectoryTest.testSynched":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":288,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":67,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":188,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":83,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":397,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":36,"com.graphhopper.coll.OSMIDMapTest.testGet":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":285,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":33,"com.graphhopper.routing.PathBidirRefTest.testExtract":158,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":132,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":346,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":234,"com.graphhopper.storage.RAMDataAccessTest.testCopy":389,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":313,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":462,"com.graphhopper.util.GHUtilityTest.testSort2":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":170,"com.graphhopper.reader.OSMReaderTest.testMain":81,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":473,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":295,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":95,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":235,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":54,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":465,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":336,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":340,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":361,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":150,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":405,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":343,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":87,"com.graphhopper.storage.GraphHopperStorageTest.testClone":191,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":464,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":91,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":201,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":408,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":318,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":93,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":447,"com.graphhopper.routing.PathTest.testTime":143,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":359,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":330,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":431,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":250,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":267,"com.graphhopper.reader.OSMReaderTest.testRelation":126,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":457,"com.graphhopper.util.GHUtilityTest.testSortDirected":113,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":57,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":402,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":149,"com.graphhopper.GraphHopperTest.testFootOnly":51,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":247,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":25,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":418,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":453,"com.graphhopper.search.NameIndexTest.testCreate":119,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":393,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":146,"com.graphhopper.routing.QueryGraphTest.testOneWay":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":442,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":259,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":14,"com.graphhopper.reader.OSMReaderTest.testWithBounds":86,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":395,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":92,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":388,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":138,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":459,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":417,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":326,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":56,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":422,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":299,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":292,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":187,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":35,"com.graphhopper.util.InstructionListTest.testWayList":105,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":220,"com.graphhopper.GraphHopperAPITest.testDisconnected179":100,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":437,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":443,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":364,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":456,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":383,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":97,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":193,"com.graphhopper.routing.util.EncodedValueTest.testSwap":42,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":181,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":211,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":180,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":357,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":274,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":174,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":186,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":439,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":426,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":183,"com.graphhopper.routing.PathTest.testWayList":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":468,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":449,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":411,"com.graphhopper.coll.OSMIDMapTest.testGet2":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":38,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":354,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":369,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":204,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":434,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":283,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":26,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":341,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":27,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":390,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":403,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":233,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":3,"com.graphhopper.util.GHUtilityTest.testSort":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":461,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":22,"com.graphhopper.search.NameIndexTest.testPut":117,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":227,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":242,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":251,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":254,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":414,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":136,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":272,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":387,"com.graphhopper.storage.MMapDirectoryTest.testSynched":363,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":121,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":433,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":293,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":40,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":339,"com.graphhopper.routing.PathTest.testFound":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":271,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":58,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":79,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":356,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":319,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":289,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":373,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":118,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":270,"com.graphhopper.util.InstructionListTest.testEmptyList":103,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":13,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":59,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":169,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":374,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":63,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":171,"com.graphhopper.reader.PrinctonReaderTest.testRead":123,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":219,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":230,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":284,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":15,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":376,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":294,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":368,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":47,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":413,"com.graphhopper.reader.OSMReaderTest.testFoot":52,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":122,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":380,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":30,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":360,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":31,"com.graphhopper.reader.OSMReaderTest.testOneWay":88,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":200,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":215,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":306,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":209,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":455,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":177,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":182,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":430,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":176,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":255,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":401,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":451,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":148,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":129,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":184,"com.graphhopper.routing.PathBidirRefTest.testExtract2":159,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":34,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":266,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":116,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":213,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":441,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":419,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":44,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":469,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":262,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":216,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":332,"com.graphhopper.GraphHopperTest.testFootAndCar":50,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":208,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":338,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":237,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":444,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":280,"com.graphhopper.storage.StorablePropertiesTest.testLoad":316,"com.graphhopper.GraphHopperTest.testPrepareOnly":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":69,"com.graphhopper.GraphHopperTest.testVia":66,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":243,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":378,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":127,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":320,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":107,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":212,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":435,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":454,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":55,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":355,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":353,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":385}}]
