[{"failures":[],"tindex":"dfa3ae49-db75-11e4-82c6-adf23d32c946","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"dfa534ea-db75-11e4-82c6-7b40608a82e0","variableMapping":{"sacScale":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[6,7,8,9,10,11],"tindex":"dfa534eb-db75-11e4-82c6-37a40f8724c5","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"dfa534ec-db75-11e4-82c6-a7d6dbecb0e8","variableMapping":{"initLeafSize":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,6,8,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,9,10,44,11,45],"tindex":"dfa534ed-db75-11e4-82c6-1f8a3307319c","variableMapping":{"E_ADDITIONAL":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1455","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[],"tindex":"dfa534ee-db75-11e4-82c6-2d45fb165915","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"dfa55bff-db75-11e4-82c6-9180949f1223","variableMapping":{"lon1":"d2","lon2":"epsilon","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:99","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) > 180.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-2},{"failures":[],"tindex":"dfa55c00-db75-11e4-82c6-81615e742dc5","variableMapping":{"start":"hash","prevConnectedId":"hash","this":"this","nodeLowLink":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":-2},{"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,35],"tindex":"dfa55c01-db75-11e4-82c6-c9b092a799cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":-1},{"failures":[],"tindex":"dfa69482-db75-11e4-82c6-b1956443d419","variableMapping":{"lat":"prio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"dfa69483-db75-11e4-82c6-b9fb30815167","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":0},{"failures":[],"tindex":"dfa69484-db75-11e4-82c6-2b0bd7658bc6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[0,72,1,2,3,4,5],"tindex":"dfa69485-db75-11e4-82c6-89bc1225ed81","variableMapping":{"tt":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[73],"tindex":"dfa69486-db75-11e4-82c6-dbe51212ef09","variableMapping":{"ghLocation":"trackType","osmFile":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"dfa69487-db75-11e4-82c6-5b2ed104a988","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"dfa69488-db75-11e4-82c6-57ae71164451","variableMapping":{"weightLong":"backwardBit","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":0},{"failures":[],"tindex":"dfa69489-db75-11e4-82c6-a3fd2716c005","variableMapping":{"size":"segmentSizeInBytes","from":"segmentSizeInBytes","end":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":0},{"failures":[],"tindex":"dfa6948a-db75-11e4-82c6-05ac68103e57","variableMapping":{"pos":"I_LEVEL","mSize":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":0},{"failures":[47,74,50,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,65,92,93,94,95,96,97,98,99,69,100,101,102,103,104,105,106,107,108,109,110],"tindex":"dfa6bb9b-db75-11e4-82c6-3f4f740acab3","variableMapping":{"size":"start","delta":"len"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-1},{"failures":[111,112,113,114,115,116,117],"tindex":"dfa6bb9c-db75-11e4-82c6-ed36d656fb74","variableMapping":{"frontIndex":"index","endIndexPlusOne":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-1},{"failures":[],"tindex":"dfa6bb9d-db75-11e4-82c6-4fd94fc4740a","variableMapping":{"mGarbage":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"dfa7f41e-db75-11e4-82c6-4119b5de124c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"dfa7f41f-db75-11e4-82c6-f9d66b9c1317","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:366","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":0},{"failures":[],"tindex":"dfa7f420-db75-11e4-82c6-eda314877d3a","variableMapping":{"segmentSizeInBytes":"guess","indexDivisor":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-2},{"failures":[],"tindex":"dfa7f421-db75-11e4-82c6-659e9c2c6d67","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[3,4,5],"tindex":"dfa7f422-db75-11e4-82c6-2975798bc6ac","variableMapping":{"lastKey":"encoded","key":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[118],"tindex":"dfa81a33-db75-11e4-82c6-5d23ff408cc9","variableMapping":{"fromNode":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[119,120,121,122,123,124,125],"tindex":"dfa81a34-db75-11e4-82c6-7b32d6317fd2","variableMapping":{"i":"tmpErr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"dfa81a35-db75-11e4-82c6-553f9168227b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:108","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.BikeFlagEncoder.flagsDefault(boolean, boolean)"},"status":-2},{"failures":[],"tindex":"dfa81a36-db75-11e4-82c6-39fd9f5f7978","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"dfa81a37-db75-11e4-82c6-e71ac3ad4b6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:430","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[126,127,128,129,130,131,132,133],"tindex":"dfa81a38-db75-11e4-82c6-899f8de00fa6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"dfa81a39-db75-11e4-82c6-2dd968065a6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[134],"tindex":"dfa81a3a-db75-11e4-82c6-fdf4e0f4f3e7","variableMapping":{"r":"bwSlower","x":"bwSlower","absY":"bwSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[135,136,7,8,11],"tindex":"dfa81a3b-db75-11e4-82c6-dbaabf59eecd","variableMapping":{"id":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"dfa81a3c-db75-11e4-82c6-756d09cfc6b8","variableMapping":{"size":"element","hash":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[119,137,120,138,121,122,123,124,125],"tindex":"dfa81a3d-db75-11e4-82c6-09564169ba65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"dfa81a3e-db75-11e4-82c6-bd345755fddc","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[139,140,141,142,143,144],"tindex":"dfa81a3f-db75-11e4-82c6-3bfb87571197","variableMapping":{"initLeafSize":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[],"tindex":"dfa81a40-db75-11e4-82c6-6b5681a5df34","variableMapping":{"edgePointer":"roundaboutBit","edgeEntryBytes":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[14,16],"tindex":"dfa81a41-db75-11e4-82c6-05a8c0d8e7c7","variableMapping":{"i":"i","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"dfa81a42-db75-11e4-82c6-7526a4441630","variableMapping":{"retBucket":"shift","bucketSize":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[14,16,24,26,8,28,31,32,33,37,39,40,42,43,10,44,11],"tindex":"dfa81a43-db75-11e4-82c6-67efd81193c2","variableMapping":{"maxTurnCosts":"i","costs":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[145,146,147,148,149,73,150,151,152,153],"tindex":"dfa84154-db75-11e4-82c6-7b06a3f943cb","variableMapping":{"dir":"wayTypeName","tr":"tr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:260","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"slight_left\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[],"tindex":"dfa84155-db75-11e4-82c6-cf093c73904b","variableMapping":{"high":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","low":"com.graphhopper.routing.util.FootFlagEncoder.FERRY_SPEED","guess":"com.graphhopper.routing.util.PriorityWeighting.KEY","guessedKey":"relationFlags","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:477","type":"CtIfImpl","sourcecode":"if (long < long) {\n    int = int;\n} else {\n    int = int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"dfa84156-db75-11e4-82c6-13c3bac5c4b2","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":0},{"failures":[134],"tindex":"dfa84157-db75-11e4-82c6-9d050d1e77ba","variableMapping":{"distance":"speed","speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"dfa84158-db75-11e4-82c6-3b3ab89057fa","variableMapping":{"mGarbage":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"dfa84159-db75-11e4-82c6-31a4b0ded025","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"dfa8415a-db75-11e4-82c6-a7f55d870221","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[154,145,146,147,148,155,149,73,150,156,151,152,153,157,158],"tindex":"dfa8415b-db75-11e4-82c6-ff49f219a7c6","variableMapping":{"is3D":"partOfCycleRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"dfa8415c-db75-11e4-82c6-c78aaa3e22d9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"dfa8415d-db75-11e4-82c6-cdd670aa7751","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"dfa8415e-db75-11e4-82c6-81a3ae80ccf3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[126,127,128,129,130,131,132,133],"tindex":"dfa8415f-db75-11e4-82c6-f5748a99149d","variableMapping":{"lat":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"dfa84160-db75-11e4-82c6-09d66a0e9c99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"dfa84161-db75-11e4-82c6-b7753c3f3194","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":0},{"failures":[159,160,146,161,162,155,163,164,73,165,166,167,152,168],"tindex":"dfa84162-db75-11e4-82c6-ef80b55f020c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-1},{"failures":[169,170,171,172,173,1,174],"tindex":"dfa84163-db75-11e4-82c6-e507edde1ec4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"dfa84164-db75-11e4-82c6-2b34843af4a6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[],"tindex":"dfa84165-db75-11e4-82c6-779528a3ce84","variableMapping":{"index":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[175,176,177,178,179,47,180,181,182,183,184,74,185,186,187,188,189,190,191,50,192,75,76,193,77,194,195,196,78,79,197,198,51,199,200,80,81,201,202,203,204,205,206,207,208,209,111,112,113,210,114,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,53,54,56,59,60,62,258,259,260,261,262,263,264,91,265,266,267,268,269,270,271,65,272,92,93,273,94,274,275,276,95,96,277,278,66,279,280,97,98,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,99,296,297,298,299,300,301,302,69,303,100,101,304,102,305,306,307,103,104,308,309,70,310,311,105,106,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,127,128,327,328,329,330,331,332,107,333,108,109,334,335,336,337,134,132,133,135,338,18,19,20,21,22,23,24,136,25,339,26,6,7,8,27,28,29,30,31,32,340,33,34,35,36,37,38,39,40,41,42,43,9,10,44,11,341,342,343,344,345,346,347,348,349,350,351,352,353,354,2,45,355,356,3,357,358,359,4,360,143,361,5,362,363,364,365,366,144,367,368,369,370,371,110,372,373,374,375],"tindex":"dfa86876-db75-11e4-82c6-73d20ec8b8ef","variableMapping":{"pos":"indexDivisor","mSize":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[376,377,378,379,380,381,382,383,384,385],"tindex":"dfa86877-db75-11e4-82c6-2757a9b695c7","variableMapping":{"maxMCSpeed":"midLat","speed":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"dfa86878-db75-11e4-82c6-a5be805f1a77","variableMapping":{"size":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"dfa86879-db75-11e4-82c6-f96bd7faef57","variableMapping":{"width":"start","lonSimilar":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-2},{"failures":[181,183,197,80,204,207,111,112,113,210,114,216,217,218,232,233,234,386,261,263,277,97,284,287,387,388,389,390,391,392,393,290,292,294,308,105,315,318,394,395,396,397,398,399,400,323,326,127,128,401,402,403,404,337,134,132,9,343,344,346,347,348,350,351,354,2,405,45,355,356,357,358,359,4,361,362,363,364,365,366,144,367,368,369,370,371,110],"tindex":"dfa8687a-db75-11e4-82c6-63085f2f4c8f","variableMapping":{"freeIndex":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[0,406,3,4],"tindex":"dfa8687b-db75-11e4-82c6-bfe91399b03b","variableMapping":{"flags":"encoded","nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"dfa8687c-db75-11e4-82c6-b7605cd42fb2","variableMapping":{"value":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"dfa8687d-db75-11e4-82c6-95b1f3492330","variableMapping":{"i":"skippedEdge1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-2},{"failures":[],"tindex":"dfa8687e-db75-11e4-82c6-c9ea3aaee05d","variableMapping":{"newAdjIndex":"usedBits","newBaseIndex":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-2},{"failures":[108,2,45,355,356,3,357,358,359,4,360,5,362,363,364,365,366,144,367,368,369,370,110],"tindex":"dfa88f8f-db75-11e4-82c6-1710c6624099","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"dfa88f90-db75-11e4-82c6-8fa2c6439db1","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"dfa88f91-db75-11e4-82c6-251f123c4ab7","variableMapping":{"str":"pavementName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:76","type":"CtReturnImpl","sourcecode":"return java.lang.String.trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-2},{"failures":[3,4,5],"tindex":"dfa88f92-db75-11e4-82c6-4b5de54f30da","variableMapping":{"newUniqueOsmId":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[159,162,166,406],"tindex":"dfa88f93-db75-11e4-82c6-07d5134f022d","variableMapping":{"intVal":"speed","degree":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-1},{"failures":[327,407,160,408,409,410,167,45,371],"tindex":"dfa88f94-db75-11e4-82c6-4b991538dfa8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"dfa88f95-db75-11e4-82c6-bba52845a3a1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[137,120,121,122,123,125,211,214,217,219,221,222,223,224,225,226,227,228,229,230,233,234,237,238,239,240,241,242,243,244,37,38,41,45,355,356,3,357,359,4,362,363,374,375],"tindex":"dfa88f96-db75-11e4-82c6-a5155fefb580","variableMapping":{"segmentsToMap":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"dfa88f97-db75-11e4-82c6-59b8e30a133f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[411,412,413,414],"tindex":"dfa88f98-db75-11e4-82c6-075ea32e806d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:457","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"dfa88f99-db75-11e4-82c6-f755467888a4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[46,181,48,183,197,80,204,206,207,111,112,113,210,114,216,217,218,232,233,234,259,261,63,263,277,97,284,286,287,415,416,290,292,67,294,308,105,315,317,318,417,323,326,127,128,327,401,402,403,404,337,134,132,133,9,343,344,346,347,348,349,350,351,353,354,2,405,45,355,356,3,357,358,359,4,360,361,5,362,363,364,365,366,144,367,368,369,370,371,110,418,419,420,421],"tindex":"dfa88f9a-db75-11e4-82c6-23a13df75df8","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"dfa88f9b-db75-11e4-82c6-89f10bfdfd8c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[154,156],"tindex":"dfa8b6ac-db75-11e4-82c6-6964a389ecca","variableMapping":{"systemProperty":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[175,176,177,178,179,46,47,180,181,48,49,182,422,183,184,74,185,186,187,188,189,190,191,50,192,75,76,193,77,194,195,196,78,79,197,198,51,199,423,200,80,81,201,202,203,204,205,206,207,208,209,424,111,112,113,210,425,114,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,426,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,427,244,245,246,247,248,249,428,250,251,252,253,254,255,429,256,257,430,431,82,432,433,434,435,436,437,438,83,258,84,85,439,86,440,441,442,87,88,443,444,445,446,447,259,89,90,448,449,450,451,452,453,454,455,456,260,261,63,64,262,457,263,264,91,265,266,267,268,269,270,271,65,272,92,93,273,94,274,275,276,95,96,277,278,66,279,458,280,97,98,281,282,283,284,285,286,287,288,289,416,459,460,461,462,290,463,291,292,67,68,293,464,294,295,99,296,297,298,299,300,301,302,69,303,100,101,304,102,305,306,307,103,104,308,309,70,310,465,311,105,106,312,313,314,315,316,317,318,319,320,466,467,321,322,323,324,325,71,326,127,128,327,328,329,330,331,332,401,402,468,403,404,107,333,108,109,334,335,336,337,134,469,470,132,133,135,338,18,19,20,21,22,23,24,136,25,339,26,6,7,8,27,28,29,30,31,32,340,33,34,35,36,37,38,39,40,41,42,43,9,10,44,11,341,342,343,343,344,344,345,345,346,346,347,347,348,348,349,349,350,350,351,351,352,352,353,353,354,354,2,405,45,355,356,3,357,471,358,359,4,360,472,143,361,5,362,363,364,365,366,144,367,473,368,369,370,371,474,110,475,476,477,478,479,372,373,374,375,418,419,420,421],"tindex":"dfa8b6ad-db75-11e4-82c6-69d9c4f2cb2f","variableMapping":{"type":"defaultType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[407],"tindex":"dfa8b6ae-db75-11e4-82c6-23ad4bae497c","variableMapping":{"bits":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[107,335],"tindex":"dfa8b6af-db75-11e4-82c6-8b7174259d40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"dfa8b6b0-db75-11e4-82c6-01831c28db85","variableMapping":{"latSize":"low","size":"low","lonSize":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":0},{"failures":[],"tindex":"dfa8b6b1-db75-11e4-82c6-f93e13070e01","variableMapping":{"high":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"dfa8b6b2-db75-11e4-82c6-0f9b1cc7679c","variableMapping":{"foundIndex":"lastElem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[135,18,24,136,6,7,8,27,28,29,30,31,32,340,33,34,36,37,38,39,40,41,43,9,10,44,11,45,355,357,4],"tindex":"dfa8b6b3-db75-11e4-82c6-7b81788e1912","variableMapping":{"edge":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[480,164,413,73,165,481,482,483,484,485,486,150,487,171,488],"tindex":"dfa8ddc4-db75-11e4-82c6-75ef0647437d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-1},{"failures":[],"tindex":"dfa8ddc5-db75-11e4-82c6-5b397edd5028","variableMapping":{"y1":"endNode","y2":"endNode","x1":"edgeId","x2":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[],"tindex":"dfa8ddc6-db75-11e4-82c6-d1c0c4b380df","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"dfa8ddc7-db75-11e4-82c6-2faf163a7ce5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[181,184,74,185,186,187,189,191,76,194,196,78,199,200,201,203,207,208,229,245,251,257,431,82,432,433,434,436,438,85,440,442,87,446,259,448,450,454,455,261,264,91,265,266,267,269,271,93,274,276,95,279,280,281,283,287,288,290,292,295,99,296,297,298,300,302,101,305,307,103,310,311,312,314,318,319,321,322,323,324,325,326,127,128,330,331,332,107,333,108,109,334,335,338,18,19,20,21,22,24,25,26,6,7,27,28,29,30,31,32,340,33,34,35,38,39,40,41,43,9,10,44,11,341,342,347,352,372,373,374,375],"tindex":"dfa8ddc8-db75-11e4-82c6-f1747241640f","variableMapping":{"allowWrites":"backward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1085","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Writes are not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"dfa92be9-db75-11e4-82c6-c90c57bdc75a","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"dfa92bea-db75-11e4-82c6-1bd271fb93cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"dfa92beb-db75-11e4-82c6-ab9567e39d75","variableMapping":{"name":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":42,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":344,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":46,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":407,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":431,"com.graphhopper.reader.OSMReaderTest.testFerry":361,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":331,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":332,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":160,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":119,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":165,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":217,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":405,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":126,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":69,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":476,"com.graphhopper.coll.CompressedArrayTest.testCompress":377,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":486,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":287,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":20,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":443,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":213,"com.graphhopper.util.AngleCalcTest.testOrientation":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":25,"com.graphhopper.GraphHopperTest.testPrepare":355,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":452,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":135,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":276,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":34,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":326,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":424,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":150,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":330,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":182,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":214,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":159,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":27,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":340,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":233,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":146,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":472,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":290,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":183,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":6,"com.graphhopper.GraphHopperTest.testLoadOSM":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":240,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":234,"com.graphhopper.reader.OSMReaderTest.testSort":363,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":108,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":67,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":388,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":282,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":261,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":453,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":350,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":314,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":137,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":423,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":269,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":463,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":298,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":151,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":221,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":38,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":219,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":471,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":438,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":29,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":74,"com.graphhopper.coll.OSMIDMapTest.testGetLong":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":304,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":296,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":195,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":181,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":78,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":131,"com.graphhopper.coll.CompressedArrayTest.testCompress2":376,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":162,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":303,"com.graphhopper.GraphHopperAPITest.testLoad":374,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":422,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":55,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":92,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":91,"com.graphhopper.storage.LevelGraphStorageTest.testClone":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":295,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":335,"com.graphhopper.reader.OSMReaderTest.testBarriers":364,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":32,"com.graphhopper.util.GHUtilityTest.testCopy":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":434,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":229,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":120,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":171,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":429,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":399,"com.graphhopper.routing.PathTest.testFindInstruction":133,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":483,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":198,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":99,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":72,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":328,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":205,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":253,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":283,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":312,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":321,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":102,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":180,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":188,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":435,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":62,"com.graphhopper.util.InstructionListTest.testWayList2":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":448,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":241,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":288,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":145,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":460,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":317,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":63,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":337,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":190,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":415,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":139,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":100,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":31,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":264,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":365,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":9,"com.graphhopper.coll.OSMIDMapTest.testGet":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":302,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":1,"com.graphhopper.routing.PathBidirRefTest.testExtract":341,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":197,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":468,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":225,"com.graphhopper.storage.RAMDataAccessTest.testCopy":394,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":89,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":164,"com.graphhopper.storage.RAMDataAccessTest.testSegments":398,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":245,"com.graphhopper.util.GHUtilityTest.testSort2":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":39,"com.graphhopper.reader.OSMReaderTest.testMain":362,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":48,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":169,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":226,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":199,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":450,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":192,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":77,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":208,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":75,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":310,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":166,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":196,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":371,"com.graphhopper.storage.StorablePropertiesTest.testStore":416,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":417,"com.graphhopper.storage.GraphHopperStorageTest.testClone":266,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":449,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":173,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":461,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":273,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":409,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":175,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":170,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":436,"com.graphhopper.routing.PathTest.testTime":470,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":206,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":187,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":425,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":243,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":88,"com.graphhopper.reader.OSMReaderTest.testRelation":473,"com.graphhopper.util.GHUtilityTest.testSortDirected":325,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":16,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":466,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":392,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":346,"com.graphhopper.GraphHopperTest.testFootOnly":4,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":125,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":413,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":112,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":172,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":462,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":220,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":28,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":338,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":440,"com.graphhopper.search.NameIndexTest.testCreate":421,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":397,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":343,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":58,"com.graphhopper.routing.QueryGraphTest.testOneWay":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":427,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":381,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":482,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":475,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":232,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":378,"com.graphhopper.reader.OSMReaderTest.testWithBounds":370,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":400,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":316,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":333,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":444,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":157,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":184,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":49,"com.graphhopper.coll.GHTBitSetTest.testEnsureCapacity":117,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":488,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":70,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":305,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":263,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":8,"com.graphhopper.util.InstructionListTest.testWayList":127,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":285,"com.graphhopper.GraphHopperAPITest.testDisconnected179":375,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":437,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":465,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":432,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":414,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":373,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":109,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":455,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":356,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":268,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":339,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":279,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":136,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":204,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":147,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":44,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":457,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":426,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":57,"com.graphhopper.coll.GHTBitSetTest.testClear":115,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":260,"com.graphhopper.routing.PathTest.testWayList":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":454,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":84,"com.graphhopper.coll.OSMIDMapTest.testGet2":402,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":11,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":201,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":477,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":309,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":275,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":300,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":194,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":222,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":223,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":395,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":393,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":224,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":14,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":148,"com.graphhopper.util.GHUtilityTest.testSort":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":447,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":385,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":481,"com.graphhopper.search.NameIndexTest.testPut":419,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":215,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":255,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":114,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":248,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":60,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":167,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":134,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":291,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":359,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":478,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":306,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":107,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":61,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":259,"com.graphhopper.routing.PathTest.testFound":469,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":360,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":406,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":203,"com.graphhopper.util.AngleCalcTest.testAtan2":130,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":411,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":101,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":13,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":420,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":258,"com.graphhopper.util.InstructionListTest.testEmptyList":71,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":33,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":487,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":40,"com.graphhopper.reader.PrinctonReaderTest.testRead":372,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":218,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":83,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":379,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":430,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":307,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":485,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":386,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":156,"com.graphhopper.reader.OSMReaderTest.testFoot":5,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":446,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":479,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":238,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":384,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":480,"com.graphhopper.reader.OSMReaderTest.testOneWay":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":239,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":93,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":98,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":313,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":484,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":391,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":278,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":442,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":21,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":26,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":410,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":19,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":121,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":249,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":390,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":439,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":345,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":64,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":474,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":467,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":59,"com.graphhopper.routing.PathBidirRefTest.testExtract2":342,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":7,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":242,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":257,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":418,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":280,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":428,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":163,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":122,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":144,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":456,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":235,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":281,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":189,"com.graphhopper.GraphHopperTest.testFootAndCar":3,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":277,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":76,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":228,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":433,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":297,"com.graphhopper.storage.StorablePropertiesTest.testLoad":459,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":43,"com.graphhopper.GraphHopperTest.testVia":45,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":82,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":368,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":179,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":327,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":458,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":441,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":202,"com.graphhopper.coll.GHTBitSetTest.testCopy":116,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":81,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":292}}]
