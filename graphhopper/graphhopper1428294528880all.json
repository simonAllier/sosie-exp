[{"failures":[],"tindex":"6c67c01d-dc15-11e4-90e8-f51a108cda72","variableMapping":{"res":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":0},{"failures":[],"tindex":"6c68aa7e-dc15-11e4-90e8-298735e7285f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[],"tindex":"6c68aa7f-dc15-11e4-90e8-3300fae57170","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1063","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:62","type":"CtReturnImpl","sourcecode":"return \"FASTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"6c68aa80-dc15-11e4-90e8-f9930440e2cb","variableMapping":{"gridCellWidth":"y","this":"this","x1":"y","x2":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / java.lang.Math.(java.lang.Math.abs((double - double)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-1},{"failures":[10,11,12,13,14,15,16,4,5,6,17,18,19,20,21,22,23,24,25,26,27,28,8,9,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"6c68d191-dc15-11e4-90e8-b52b076e8f33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[],"tindex":"6c68d192-dc15-11e4-90e8-530962d57706","variableMapping":{"node":"index","lg":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:299","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraphStorage.getLevel(int)) != 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[],"tindex":"6c68d193-dc15-11e4-90e8-a19f5bf24233","variableMapping":{"distance":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[61,62,63],"tindex":"6c68d194-dc15-11e4-90e8-d705c2520936","variableMapping":{"osmFile":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"6c68d195-dc15-11e4-90e8-4d6686943802","variableMapping":{"byteCount":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[11,64,65,66,12,14,67,68,69,21,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,40,85,41,86,87,88,89,90,91,92,93,94,95,96,42,97,43,98,99,100,101,102,103,104,105,106,107],"tindex":"6c68d196-dc15-11e4-90e8-7120b6eefdfe","variableMapping":{"i":"dLon","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"x1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"6c68d197-dc15-11e4-90e8-4d787fbcbe68","variableMapping":{"mainEdgeState":"mainEdgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"6c68d198-dc15-11e4-90e8-07e025350351","variableMapping":{"entries":"mKeys"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":0},{"failures":[],"tindex":"6c68d199-dc15-11e4-90e8-619e641ae3a7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[11,64,65,66,12,14,67,68,16,4,5,6,108,109,110,111,112,113,21,71,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,8,9,131,30,132,133,134,135,136,137,138,139,140,141,142,72,143,144,73,74,145,146,75,147,33,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,34,35,163,164,165,166,167,168,169,170,171,172,173,174,175,38,176,95,177,178,107,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,45,46,47,195,196,197,198,199,200,201,202,203,204,205,206,207,50,208,209,210,54,55,211,212,213,214,215,216,217,218,219,220,221,222,223,58,224],"tindex":"6c691fba-dc15-11e4-90e8-bbd6b6dd54a8","variableMapping":{"edgePointer":"flags","maxEdges":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[134,135,150,151,159],"tindex":"6c691fbb-dc15-11e4-90e8-9db1658810a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[225],"tindex":"6c691fbc-dc15-11e4-90e8-1f5c10d425a7","variableMapping":{"r":"key","com.graphhopper.util.AngleCalc.PI_4":"key","x":"key","angle":"key","absY":"key","com.graphhopper.util.AngleCalc.PI3_4":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-1},{"failures":[10,226,11,64,65,66,12,13,14,67,15,6,227,113,21,70,71,22,23,114,115,116,117,118,228,119,229,230,231],"tindex":"6c691fbd-dc15-11e4-90e8-03ff88247ac8","variableMapping":{"value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"6c691fbe-dc15-11e4-90e8-5d9a2821016b","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[11,227,113,71,116,119,232,233,122,234,235,236,237,238,239,240,231,241,242,243,61,62,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259],"tindex":"6c696ddf-dc15-11e4-90e8-c1980e35ee4c","variableMapping":{"sacScale":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-1},{"failures":[],"tindex":"6c696de0-dc15-11e4-90e8-cf81279f0476","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6c696de1-dc15-11e4-90e8-5df04feaacfe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[120],"tindex":"6c696de2-dc15-11e4-90e8-4516fe9add30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[260,235,261,236,239,262,62,63,246,263,264,249,251,265,266,254,267,255,258,268],"tindex":"6c6994f3-dc15-11e4-90e8-59eeb4394467","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"6c6994f4-dc15-11e4-90e8-672586fe86a1","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[10,226,11,64,65,66,12,13,14,67,15,227,113,21,70,71,22,23,114,115,116,117,118,228,269,119,270,271,233,272,122,273,261,274,237,240,241,242,275,243,276,244,247,250,252,267,277,256,259],"tindex":"6c6994f5-dc15-11e4-90e8-ef09a7e790fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-1},{"failures":[278,229,230],"tindex":"6c6994f6-dc15-11e4-90e8-69f261c67d07","variableMapping":{"oldValueIndex":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[10,226,11,64,65,12,13,14,67,227,21,70,71,22,23,114,115,116,117,118,228,119,24,25,26,27,28,279,280,281,45,282,283,284],"tindex":"6c6994f7-dc15-11e4-90e8-fbfea3457d19","variableMapping":{"numTiles":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:218","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-1},{"failures":[],"tindex":"6c6994f8-dc15-11e4-90e8-3b27263b22af","variableMapping":{"empty":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[114,278,285,260,235,236,286,287,239,262,229,288,230,62,63,289,246,263,249,290,251,265,266,254,255,291,292,258,268,293],"tindex":"6c6994f9-dc15-11e4-90e8-392e093b01d3","variableMapping":{"flags":"value","nodeFlags":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[134,135,150,151,159],"tindex":"6c6994fa-dc15-11e4-90e8-470295822a55","variableMapping":{"i":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[],"tindex":"6c6994fb-dc15-11e4-90e8-67298f676cb9","variableMapping":{"hasOther":"defaultB","hasRel":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"6c6994fc-dc15-11e4-90e8-ef6f7f38de47","variableMapping":{"shift":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","backwardBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[234,294,238,295,296,297,61,245,298,299,300,301,302,303,253,304,257,305,306,307],"tindex":"6c6994fd-dc15-11e4-90e8-f5ff6b35c15f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:462","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[10,66,67,15,227,113,21,70,71,22,23,114,115,116,117,118,228,119,232,308,270,120,271,233,121,272,309,122,310,311,285,123,312,273,313,288,314,231,241,315,125,242,126,316,275,243,317,318,319,320,321,322,323,134,135,136,137,138,139,140,141,142,72,143,324,144,73,74,145,146,75,325,147,33,148,149,150,326,34,327,328,329,330,35,163,164,331,165,166,332,333,167,168,334,169,335,336,337,338,170,339,171,340,341,36,342,343,172,344,173,37,345,174,346,175,38,347,39,348,176,349,95,177,178,107,179,180,181,350,182,183,351,352,184,185,353,186,354,355,356,357,187,358,188,359,360,361,362,363,189,364,190,365,366,191,367,192,193,368,369,370,194,371,45,372,373,46,374,375,376,377,47,195,196,378,197,198,379,380,199,200,381,201,382,383,384,385,202,386,203,387,388,48,389,390,204,391,205,49,392,206,393,207,50,394,51,395,208,396,209,397,398,399,210,53,400,401,54,402,403,404,405,55,211,212,406,213,214,407,408,215,216,409,217,410,411,412,413,218,414,219,415,416,56,417,418,220,419,221,57,420,222,421,223,58,422,59,423,224,424],"tindex":"6c69bc0e-dc15-11e4-90e8-3d26a880f09b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , com.graphhopper.routing.util.FootFlagEncoder.int , com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"6c69bc0f-dc15-11e4-90e8-0d2a7b3537b5","variableMapping":{"highwayValue":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":0},{"failures":[],"tindex":"6c69bc10-dc15-11e4-90e8-6b59d6f93711","variableMapping":{"nodeFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[],"tindex":"6c69bc11-dc15-11e4-90e8-219105b531fe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"6c69bc12-dc15-11e4-90e8-b7c951dc9df5","variableMapping":{"res":"flags","maxBit":"flags","value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[],"tindex":"6c69bc13-dc15-11e4-90e8-63aa6d799e20","variableMapping":{"hasOther":"defaultB","hasRel":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"6c69bc14-dc15-11e4-90e8-7f2f4f607727","variableMapping":{"factor":"x"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[278,260,236,229,266,255],"tindex":"6c69bc15-dc15-11e4-90e8-f9b1ee82377a","variableMapping":{"initLeafSize":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"6c69bc16-dc15-11e4-90e8-af134889e23c","variableMapping":{"str":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[235,236,239,62,63,246,249,251,254,255,258],"tindex":"6c69e327-dc15-11e4-90e8-55ab93f02fbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:488","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-1},{"failures":[272],"tindex":"6c69e328-dc15-11e4-90e8-43b1f44801ba","variableMapping":{"fwdFaster":"maxSpeed","incDist2DSum":"maxSpeed","fwdSlower":"maxSpeed","fullDist2D":"maxSpeed","restDist2D":"maxSpeed","speed":"maxSpeed","decDist2DSum":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"6c69e329-dc15-11e4-90e8-2fd224f87d88","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6c69e32a-dc15-11e4-90e8-097efd2f6610","variableMapping":{"fromNode":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"6c69e32b-dc15-11e4-90e8-c52499a7a615","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"6c69e32c-dc15-11e4-90e8-a5aa9e987e25","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[11,64,12,69,135,136,137,138,139,141,142,143,324,144,73,74,145,146,75,33,149,150,153,158,162],"tindex":"6c69e32d-dc15-11e4-90e8-5f0c35448123","variableMapping":{"is3D":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[119,127,128,425,164,334,335,336,338,340,341,37,345,181,353,354,355,357,359,360,365,366,196,381,382,383,385,387,388,49,392,400,212,409,410,411,413,415,416,57,420],"tindex":"6c69e32e-dc15-11e4-90e8-5b8d604bfc3c","variableMapping":{"size":"index","keys":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:68","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum key.\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"6c69e32f-dc15-11e4-90e8-67d85e0e9671","variableMapping":{"directionBitMask":"directionBitMask","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[],"tindex":"6c69e330-dc15-11e4-90e8-4f5d3d58ef65","variableMapping":{"acceptedRailways":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[426,427,428,429,430,431,432,433,434,79,83,84,435,41,86,436,87,88,89,96,437,43,98,438,99,100,101],"tindex":"6c69e331-dc15-11e4-90e8-199a45e71b11","variableMapping":{"speedVal":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"6c6a0a42-dc15-11e4-90e8-03309e7c9fde","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[426,427,428,429,430,431,432,433,434,439,79,84,436,88,89,96,438,100,101],"tindex":"6c6a0a43-dc15-11e4-90e8-09c8f1e0e7a5","variableMapping":{"weightApproximation":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"6c6a0a44-dc15-11e4-90e8-97aa707d6924","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-2},{"failures":[],"tindex":"6c6a0a45-dc15-11e4-90e8-01adc32c0b4a","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfDecoder:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.pbf.PbfDecoder.waitForUpdate()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[274,276,277],"tindex":"6c6a0a46-dc15-11e4-90e8-d9c9c567941f","variableMapping":{"tt":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[227,233],"tindex":"6c6a0a47-dc15-11e4-90e8-bdd0377555a2","variableMapping":{"orientation":"durationInHours","resultOrientation":"durationInHours","baseOrientation":"durationInHours","java.lang.Math.PI":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"6c6a0a48-dc15-11e4-90e8-fda27486ed27","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"6c6a0a49-dc15-11e4-90e8-1b43909339b7","variableMapping":{"size":"locs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[127,425,164,335,336,340,37,345,181,354,355,359,365,366,196,382,383,387,49,392,212,410,411,415,57,420],"tindex":"6c6a0a4a-dc15-11e4-90e8-f126fca174fb","variableMapping":{"segmentSizeInBytes":"i","index":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"6c6a0a4b-dc15-11e4-90e8-61dbbd5e3fa8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"6c6a0a4c-dc15-11e4-90e8-a57133e97a25","variableMapping":{"this":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:232","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.isShortcut())\n    throw new java.lang.IllegalStateException((\"Cannot call fetchWayGeometry on shortcut \" + com.graphhopper.storage.GraphHopperStorage.EdgeIterable.(getEdge())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-2},{"failures":[],"tindex":"6c6a0a4d-dc15-11e4-90e8-1db376b8316d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"6c6a0a4e-dc15-11e4-90e8-a3dd4909d7d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[440,441,442,443,444,137,140,141,72,146,325,147,33,148,149,150,157,158,161],"tindex":"6c6a0a4f-dc15-11e4-90e8-8f6b325937c0","variableMapping":{"originalEdgesCount":"minElem","edgeDifference":"minElem","contractedNeighbors":"minElem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[10,226,11,64,65,66,12,13,14,67,15,68,69,445,446,447,16,4,5,6,108,448,449,17,450,451,109,110,452,111,112,227,113,21,70,71,22,23,114,115,116,117,118,228,119,453,124,125,127,454,128,425,129,455,8,9,321,29,456,457,131,458,459,30,31,460,461,32,132,133,134,135,136,137,138,139,140,141,142,72,143,324,144,73,74,145,146,75,325,147,33,148,149,150,151,152,153,154,155,156,157,462,158,159,160,463,161,162,326,34,327,328,329,35,163,164,331,165,166,332,333,167,168,334,169,335,336,337,338,170,339,171,340,341,36,342,343,172,344,173,37,345,174,346,175,38,347,39,348,176,349,82,83,464,84,435,40,85,41,86,436,87,88,89,90,91,92,93,94,95,465,466,467,468,469,177,470,471,472,473,474,475,476,477,478,479,178,96,437,42,97,43,98,438,99,100,101,102,103,104,105,106,107,186,190,45,373,46,374,375,376,47,195,196,378,197,198,379,380,199,200,381,201,382,383,384,385,202,386,203,387,388,48,389,390,204,391,205,49,392,206,393,207,50,394,51,395,208,396,480,481,482,483,484,485,486,487,488,489,490,209,397,398,399,210,53,400,401,54,402,403,404,55,211,212,406,213,214,407,408,215,216,409,217,410,411,412,413,218,414,219,415,416,56,417,418,220,419,221,57,420,222,421,223,58,422,59,423,224,424],"tindex":"6c6a3160-dc15-11e4-90e8-83ca5d92f6c5","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"6c6a3161-dc15-11e4-90e8-55d2732754e2","variableMapping":{"systemProperty":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[119,128],"tindex":"6c6a3162-dc15-11e4-90e8-175ace9c2921","variableMapping":{"initializedCounter":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[271,233,122,491,240,243,492,247,493,252,494,259],"tindex":"6c6a3163-dc15-11e4-90e8-09676d59e973","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-1},{"failures":[],"tindex":"6c6a3164-dc15-11e4-90e8-dfe1ef1e861f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[309,495,496],"tindex":"6c6a3165-dc15-11e4-90e8-afe76b678e16","variableMapping":{"s":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[243],"tindex":"6c6a3166-dc15-11e4-90e8-e9d79013690f","variableMapping":{"highwayValue":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"6c6a3167-dc15-11e4-90e8-c9ae25a397dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[270],"tindex":"6c6a3168-dc15-11e4-90e8-5f2d731b1ff9","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[278,260,236,229,230,63,249,266,255],"tindex":"6c6a3169-dc15-11e4-90e8-5f326fd577ba","variableMapping":{"bytesForFlags":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[443,444,158],"tindex":"6c6a316a-dc15-11e4-90e8-3dd842c1ba06","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"6c6a316b-dc15-11e4-90e8-5d5fe88f8174","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"6c6a316c-dc15-11e4-90e8-75ee6be7e3ca","variableMapping":{"edgeId":"x1","nextEdge":"sLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[127,455],"tindex":"6c6a316d-dc15-11e4-90e8-bfeca3381f98","variableMapping":{"graph":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:398","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage) == null)\n    throw new java.lang.IllegalStateException(\"Graph not initialized\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":-1},{"failures":[],"tindex":"6c6a316e-dc15-11e4-90e8-fd887562ccf5","variableMapping":{"tmp":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":0},{"failures":[10,226,11,64,65,66,12,13,14,67,15,68,69,445,446,447,16,4,5,6,108,448,449,17,450,451,109,110,452,111,112,227,113,21,70,71,22,23,114,115,116,117,118,228,119,453,124,125,127,454,128,425,129,455,497,130,8,9,321,321,29,29,456,456,457,457,131,131,458,458,459,459,30,30,31,31,460,460,461,461,32,32,132,133,134,135,136,137,138,139,140,141,142,72,143,324,144,73,74,145,146,75,325,147,33,148,149,150,151,152,153,154,155,156,157,462,158,159,160,463,161,162,326,34,327,328,329,35,163,164,331,165,166,332,333,167,168,334,169,335,336,337,338,170,339,171,340,341,36,342,343,172,344,173,37,345,174,346,175,38,347,39,348,176,349,82,83,464,84,435,40,85,41,86,436,87,88,89,90,91,92,93,94,95,465,466,467,468,469,177,498,470,471,472,473,474,475,476,477,478,479,178,96,437,42,97,43,98,438,99,100,101,102,103,104,105,106,107,186,190,45,373,46,374,375,376,47,195,196,378,197,198,379,380,199,200,381,201,382,383,384,385,202,386,203,387,388,48,389,390,204,391,205,49,392,206,393,207,50,394,51,395,208,396,480,481,482,483,484,485,487,488,489,490,209,397,398,399,210,53,400,401,54,402,403,404,55,211,212,406,213,214,407,408,215,216,409,217,410,411,412,413,218,414,219,415,416,56,417,418,220,419,221,57,420,222,421,223,58,422,59,423,224,424],"tindex":"6c6a587f-dc15-11e4-90e8-f752b125d5a4","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"6c6a5880-dc15-11e4-90e8-597d4f4fbb9f","variableMapping":{"s":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[425,336,345,355,366,383,392,411,420],"tindex":"6c6a5881-dc15-11e4-90e8-afb54359043b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"6c6a5882-dc15-11e4-90e8-4fc86ee24067","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"6c6a5883-dc15-11e4-90e8-2d0ea0656fd9","variableMapping":{"this":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:232","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.isShortcut())\n    throw new java.lang.IllegalStateException((\"Cannot call fetchWayGeometry on shortcut \" + com.graphhopper.storage.GraphHopperStorage.EdgeIterable.(getEdge())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[],"tindex":"6c6a5884-dc15-11e4-90e8-2fb968f5c037","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"6c6a5885-dc15-11e4-90e8-ffcb293bd70c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[10,226,11,64,65,66,12,13,14,67,15,68,69,445,446,447,16,4,5,6,108,448,449,17,450,451,109,110,452,111,112,227,113,21,70,71,22,23,114,115,116,117,118,228,119,453,124,125,127,454,128,425,129,455,497,130,8,9,321,321,29,29,456,456,457,457,131,131,458,458,459,459,30,30,31,31,460,460,461,461,32,32,132,133,134,135,136,137,138,139,140,141,142,72,143,324,144,73,74,145,146,75,325,147,33,148,149,150,151,152,153,154,155,156,157,462,158,159,160,463,161,162,326,34,327,328,329,35,163,164,331,165,166,332,333,167,168,334,169,335,336,337,338,170,339,171,340,341,36,342,343,172,344,173,37,345,174,346,175,38,347,39,348,176,349,82,83,464,84,435,40,85,41,86,436,87,88,89,90,91,92,93,499,94,95,465,466,467,468,469,177,498,470,471,472,473,474,475,476,477,478,479,178,96,437,42,97,43,98,438,99,100,101,102,103,104,105,500,106,107,186,190,45,373,46,374,375,376,47,195,196,378,197,198,379,380,199,200,381,201,382,383,384,385,202,386,203,387,388,48,389,390,204,391,205,49,392,206,393,207,50,394,51,395,208,396,480,481,501,482,483,502,484,485,486,487,488,489,490,209,397,398,399,210,53,400,401,54,402,403,404,55,211,212,406,213,214,407,408,215,216,409,217,410,411,412,413,218,414,219,415,416,56,417,418,220,419,221,57,420,222,421,223,58,422,59,423,224,424],"tindex":"6c6a5886-dc15-11e4-90e8-7b2ff20a81eb","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"segmentSizeIntsPower","speed":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[21,70,22,114,115,118,260,235,236,287,239,262,229,230,62,63,289,246,263,249,290,251,265,266,254,255,292,258,268],"tindex":"6c6a7f97-dc15-11e4-90e8-41bc69418b85","variableMapping":{"wayTypeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"6c6a7f98-dc15-11e4-90e8-e50f6e07459f","variableMapping":{"distance":"java.lang.Double.POSITIVE_INFINITY","maxSpeed":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[12],"tindex":"6c6a7f99-dc15-11e4-90e8-792c51c2fef0","variableMapping":{"mGarbage":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"6c6aa6aa-dc15-11e4-90e8-37fe1ba584e2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:140","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"unsupported shape\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":0},{"failures":[],"tindex":"6c6aa6ab-dc15-11e4-90e8-818e6d79ca90","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"6c6aa6ac-dc15-11e4-90e8-9179e9d1be2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[11,134,135,136,137,139,140,141,72,143,144,73,74,146,75,147,33,148,149,150,151,158,159,162],"tindex":"6c6aa6ad-dc15-11e4-90e8-87a978d26cf6","variableMapping":{"size":"endNode","newSize":"tmpEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[],"tindex":"6c6aa6ae-dc15-11e4-90e8-ef87130354a5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[136,139,140,75,147,148,151,158,159],"tindex":"6c6aa6af-dc15-11e4-90e8-410967caf2fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:89","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[495],"tindex":"6c6aa6b0-dc15-11e4-90e8-cb4073034a58","variableMapping":{"currentEntry":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":221,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":325,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":53,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":496,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":467,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":180,"com.graphhopper.reader.OSMReaderTest.testFerry":227,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":109,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":110,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":267,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":76,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":85,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":226,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":7,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":381,"com.graphhopper.coll.CompressedArrayTest.testCompress":427,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":155,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":361,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":169,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":464,"com.graphhopper.util.AngleCalcTest.testOrientation":0,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":160,"com.graphhopper.GraphHopperTest.testPrepare":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":368,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":151,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":171,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":444,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":304,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":143,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":498,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":251,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":446,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":129,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":253,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":481,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":142,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":334,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":97,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":395,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":45,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":433,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":55,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":443,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":162,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":102,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":484,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":43,"com.graphhopper.reader.OSMReaderTest.testSort":70,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":306,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":374,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":346,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":34,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":431,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":369,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":30,"com.graphhopper.routing.DijkstraTest.initializationError":322,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":207,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":419,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":502,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":333,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":372,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":47,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":409,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":263,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":87,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":74,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":83,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":139,"com.graphhopper.coll.OSMIDMapTest.testGetLong":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":138,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":384,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":388,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":414,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":54,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":415,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":2,"com.graphhopper.coll.CompressedArrayTest.testCompress2":426,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":341,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":61,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":465,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":201,"com.graphhopper.GraphHopperAPITest.testLoad":68,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":405,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":483,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":241,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":335,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":164,"com.graphhopper.storage.LevelGraphStorageTest.testClone":213,"com.graphhopper.reader.OSMReaderTest.testBarriers":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":195,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":455,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":286,"com.graphhopper.util.GHUtilityTest.testCopy":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":183,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":95,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":492,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":77,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":252,"com.graphhopper.routing.PathTest.testFindInstruction":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":290,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":196,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":440,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":108,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":275,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":294,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":466,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":175,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":206,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":448,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":385,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":491,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":314,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":320,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":407,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":351,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":490,"com.graphhopper.util.InstructionListTest.testWayList2":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":103,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":379,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":51,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":266,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":80,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":327,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":453,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":215,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":291,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":382,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":470,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":140,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":163,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":22,"com.graphhopper.routing.AStarTest.initializationError":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":33,"com.graphhopper.coll.OSMIDMapTest.testGet":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":200,"com.graphhopper.routing.PathBidirRefTest.testExtract":132,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":243,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":26,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":438,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":396,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":365,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":107,"com.graphhopper.util.GHUtilityTest.testSort2":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":145,"com.graphhopper.reader.OSMReaderTest.testMain":21,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":402,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":120,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":387,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":434,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":259,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":220,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":375,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":217,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":413,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":224,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":293,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":131,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":234,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":482,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":219,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":228,"com.graphhopper.storage.StorablePropertiesTest.testStore":52,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":44,"com.graphhopper.storage.GraphHopperStorageTest.testClone":165,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":367,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":122,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":272,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":337,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":209,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":352,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":399,"com.graphhopper.routing.PathTest.testTime":130,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":298,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":59,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":214,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":105,"com.graphhopper.reader.OSMReaderTest.testRelation":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":360,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":418,"com.graphhopper.util.GHUtilityTest.testSortDirected":451,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":296,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":457,"com.graphhopper.GraphHopperTest.testFootOnly":67,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":81,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":248,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":233,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":471,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":436,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":137,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":187,"com.graphhopper.search.NameIndexTest.testCreate":20,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":281,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":321,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":486,"com.graphhopper.routing.QueryGraphTest.testOneWay":460,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":500,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":42,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":428,"com.graphhopper.reader.OSMReaderTest.testWithBounds":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":240,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":394,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":454,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":458,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":362,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":229,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":211,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":403,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":276,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":265,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":390,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":121,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":202,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":35,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":135,"com.graphhopper.util.InstructionListTest.testWayList":4,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":347,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":277,"com.graphhopper.GraphHopperAPITest.testDisconnected179":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":184,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":391,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":238,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":112,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":359,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":480,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":194,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":65,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":332,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":472,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":463,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":172,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":144,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":159,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":58,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":310,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":376,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":416,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":149,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":330,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":499,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":485,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":501,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":268,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":326,"com.graphhopper.routing.PathTest.testWayList":8,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":370,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":354,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":495,"com.graphhopper.coll.OSMIDMapTest.testGet2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":150,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":389,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":494,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":339,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":315,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":88,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":218,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":90,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":237,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":442,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":62,"com.graphhopper.util.GHUtilityTest.testSort":450,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":364,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":439,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":250,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":305,"com.graphhopper.search.NameIndexTest.testPut":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":208,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":435,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":468,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":474,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":477,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":488,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":261,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":459,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":124,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":475,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":373,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":244,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":386,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":127,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":489,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":190,"com.graphhopper.routing.PathTest.testFound":497,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":15,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":231,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":223,"com.graphhopper.util.AngleCalcTest.testAtan2":1,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":398,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":257,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":383,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":441,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":19,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":186,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":168,"com.graphhopper.util.InstructionListTest.testEmptyList":447,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":72,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":73,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":308,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":232,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":303,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":146,"com.graphhopper.reader.PrinctonReaderTest.testRead":111,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":38,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":41,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":199,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":353,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":179,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":203,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":493,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":288,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":245,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":260,"com.graphhopper.reader.OSMReaderTest.testFoot":113,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":100,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":423,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":432,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":101,"com.graphhopper.reader.OSMReaderTest.testOneWay":119,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":336,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":345,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":393,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":302,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":342,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":274,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":156,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":161,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":309,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":154,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":284,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":478,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":125,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":356,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":456,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":269,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":328,"com.graphhopper.routing.PathBidirRefTest.testExtract2":133,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":487,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":473,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":104,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":177,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":246,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":300,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":114,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":371,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":479,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":158,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":98,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":174,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":408,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":311,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":36,"com.graphhopper.GraphHopperTest.testFootAndCar":66,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":411,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":63,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":94,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":182,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":313,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":285,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":462,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":197,"com.graphhopper.GraphHopperTest.testPrepareOnly":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":147,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":469,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":181,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":116,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":210,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":6,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":344,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":126,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":115,"com.graphhopper.util.AngleCalcTest.testCombined":3,"com.graphhopper.routing.AStarBidirectionTest.initializationError":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":358,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":273,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":421,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":420,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":46}}]
