[{"failures":[],"tindex":"2db39961-db7c-11e4-aed8-3d9df4ba2256","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"2db3c072-db7c-11e4-aed8-f1e38dac93df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[],"tindex":"2db3c073-db7c-11e4-aed8-df952f63bc48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"2db3c074-db7c-11e4-aed8-d558547d85ce","variableMapping":{"i":"x1","lastIndex":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"2db3c075-db7c-11e4-aed8-61dfa1290f11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"2db3c076-db7c-11e4-aed8-576b566a7f73","variableMapping":{"r":"fwdSlower","angle":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"2db3c077-db7c-11e4-aed8-211745309d78","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"2db3c078-db7c-11e4-aed8-4d52459f8cc8","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:437","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.gc()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[],"tindex":"2db3c079-db7c-11e4-aed8-45f6a74a0ccd","variableMapping":{"originalEdgesCount":"shift","edgeDifference":"shift","contractedNeighbors":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"2db3c07a-db7c-11e4-aed8-1d4a38f6a93e","variableMapping":{"gradient":"minLonTmp","yend":"maxLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-1},{"failures":[67,68,69,70,86,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"2db3e78b-db7c-11e4-aed8-a75083ba4683","variableMapping":{"res":"hash","value":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"2db3e78c-db7c-11e4-aed8-9540f8e08d58","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"2db3e78d-db7c-11e4-aed8-b133050358a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[67,68,69,70,86,71,87,72,73,76,88,89],"tindex":"2db3e78e-db7c-11e4-aed8-45d348c74d92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[90,91,92,93,94,95,96,97,98],"tindex":"2db3e78f-db7c-11e4-aed8-85ec759c6431","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:89","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[99],"tindex":"2db3e790-db7c-11e4-aed8-2b5bb4ebb294","variableMapping":{"force":"force","maxSpeed":"speed","speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[],"tindex":"2db3e791-db7c-11e4-aed8-0deda1a18a60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[100,101,102,103,16,104,27],"tindex":"2db3e792-db7c-11e4-aed8-1b8de5afdd3f","variableMapping":{"r":"r","x":"r","absY":"absY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-1},{"failures":[],"tindex":"2db3e793-db7c-11e4-aed8-f7f5ddf7ce3b","variableMapping":{"segmentsToMap":"x2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[105],"tindex":"2db3e794-db7c-11e4-aed8-37bfb260be36","variableMapping":{"ret":"minutes","retBucket":"minutes","i":"minutes","bucketSize":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[106,107,108,109,110,39,111,112,113,114,115,116,117,118,119,120,121,55,122,123,124,125,126,127,63,128],"tindex":"2db3e795-db7c-11e4-aed8-c31f3a2cbab4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[16,129],"tindex":"2db3e796-db7c-11e4-aed8-01cb0c6ef4be","variableMapping":{"cp":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"2db3e797-db7c-11e4-aed8-b58385a92cf4","variableMapping":{"directionBitMask":"encoded","flags":"encoded","dir":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[1,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"2db3e798-db7c-11e4-aed8-f7e70d18179f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"2db40ea9-db7c-11e4-aed8-01f79a66404e","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"sidewalks","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[153],"tindex":"2db40eaa-db7c-11e4-aed8-9fa569786cdf","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":-1},{"failures":[154,155,156],"tindex":"2db40eab-db7c-11e4-aed8-1708375f0821","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-1},{"failures":[],"tindex":"2db40eac-db7c-11e4-aed8-474dea8a33f7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[157,158,159],"tindex":"2db40ead-db7c-11e4-aed8-9f3f717238e7","variableMapping":{"pointIndex":"speed","index":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"2db40eae-db7c-11e4-aed8-b3e708708079","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"2db40eaf-db7c-11e4-aed8-49cfaa18d9e3","variableMapping":{"baseUrl":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":0},{"failures":[],"tindex":"2db40eb0-db7c-11e4-aed8-373028144adf","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[160,129,161],"tindex":"2db54731-db7c-11e4-aed8-f1b15da5a430","variableMapping":{"k":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:80","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(\"graphhopper.\".length())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[162,163,90,91,92,93,94,35,95,164,96,97,98,165],"tindex":"2db54732-db7c-11e4-aed8-0b73333aa5fa","variableMapping":{"mainEdgeState":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-1},{"failures":[],"tindex":"2db54733-db7c-11e4-aed8-9701b40300bd","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.EMPTY_PARENT":"i","n":"i","parents":"elem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:131","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"2db54734-db7c-11e4-aed8-5919cae4b006","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"2db54735-db7c-11e4-aed8-bdc66f87ef31","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[166,167,168,169,170],"tindex":"2db54736-db7c-11e4-aed8-934fb55e0987","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[7,171,172,173,8,10,16,174,20,175,1,176,177,178,179,180,181,182],"tindex":"2db54737-db7c-11e4-aed8-ad3ad57b0037","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"2db54738-db7c-11e4-aed8-8fef9b29d787","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[6,8,9,10,12,36,51,52,183,59,60],"tindex":"2db56e49-db7c-11e4-aed8-97efea127f19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[157,130,133,184,185,186,159,147,150,187],"tindex":"2db56e4a-db7c-11e4-aed8-759e83defff1","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[131,133,134,139,141,144,145,148,150,151],"tindex":"2db56e4b-db7c-11e4-aed8-87bd29615e31","variableMapping":{"dir":"wayTypeName","tr":"tr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:263","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"slight_right\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[],"tindex":"2db56e4c-db7c-11e4-aed8-2d3b7e96f1e8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"2db56e4d-db7c-11e4-aed8-7ff9b043a82e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"2db56e4e-db7c-11e4-aed8-57be4b796e87","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"2db56e4f-db7c-11e4-aed8-4b10a5c99b25","variableMapping":{"time":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[78,79,80,81,82,83,84,85],"tindex":"2db56e50-db7c-11e4-aed8-21c25d6cf8bb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"2db56e51-db7c-11e4-aed8-cf099b3f0672","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"2db56e52-db7c-11e4-aed8-bd1d5035e75d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"2db56e53-db7c-11e4-aed8-bb96e208656e","variableMapping":{"allBits":"dLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"2db56e54-db7c-11e4-aed8-6511c883db25","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"2db56e55-db7c-11e4-aed8-83ad85ed17ca","variableMapping":{"initializedCounter":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":0},{"failures":[],"tindex":"2db56e56-db7c-11e4-aed8-cb9152561fcb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"2db56e57-db7c-11e4-aed8-cd9e228226ce","variableMapping":{"retBucket":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[6,188,7,171,172,173,8,9,10,11,12,189,190,191,192,193,13,14,15,16,194,195,196,197,198,199,200,201,0,202,203,204,174,20,205,175,21,22,1,176,177,178,179,206,180,207,208,209,154,210,211,106,155,156,212,213,27,28,214,214,29,29,215,215,216,216,30,30,31,31,217,217,32,32,33,33,218,218,219,219,34,34,220,221,162,163,90,222,223,91,92,224,225,226,153,227,228,229,230,231,232,93,233,94,35,95,234,164,96,235,236,237,238,239,240,241,97,98,242,243,244,165,245,36,246,247,248,37,249,107,250,251,252,253,254,255,256,108,166,109,110,257,258,259,260,261,262,263,38,264,265,266,267,268,39,111,269,270,271,40,272,41,273,274,275,276,277,278,78,88,42,279,43,280,79,281,80,81,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,44,45,46,298,47,299,300,301,302,303,304,305,82,89,48,306,49,307,83,308,84,85,309,310,311,312,313,314,315,316,317,112,318,319,320,321,322,323,324,113,167,114,115,325,326,327,328,329,330,331,332,333,334,335,336,337,116,117,338,339,340,341,342,343,344,345,346,51,347,348,52,349,350,351,53,352,118,353,354,355,356,357,358,359,119,168,120,121,360,361,362,363,364,365,366,54,367,368,369,370,371,55,122,372,373,374,56,375,57,376,377,378,183,379,380,381,382,383,59,123,384,60,385,386,387,61,388,124,389,390,391,392,393,394,395,125,170,126,127,396,397,398,399,400,401,402,62,403,404,405,406,407,63,128,408,409,410,64,411,65,412,413,414],"tindex":"2db59568-db7c-11e4-aed8-a14ad9d612b7","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"2db59569-db7c-11e4-aed8-a1ca73ebd05d","variableMapping":{"cap":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-2},{"failures":[],"tindex":"2db5956a-db7c-11e4-aed8-9fe3921950b7","variableMapping":{"directionBitMask":"defaultValue","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-2},{"failures":[204,174,20,205,21,22,1,176,179,206,180,157,130,415,131,132,133,416,417,418,134,184,419,135,136,137,138,158,139,140,420,421,422,141,185,423,142,143,424,144,425,426,427,145,186,146,159,147,428,148,149,150,429,430,431,151,187,432,152],"tindex":"2db5956b-db7c-11e4-aed8-1d3ec52b1749","variableMapping":{"versionHint":"service"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"2db5956c-db7c-11e4-aed8-cd1a709009b7","variableMapping":{"this":"g","iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1330","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.getAllEdges()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"2db5956d-db7c-11e4-aed8-7fb576036908","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"weight","java.lang.Double.POSITIVE_INFINITY":"weight","weight":"weight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[433,158,139,140,434,420,435,421,422,436,437,141,185,438,423,142],"tindex":"2db5956e-db7c-11e4-aed8-07532e29127b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-1},{"failures":[157,131,133,134,138,158,139,141,144,145,159,148,150,151],"tindex":"2db5956f-db7c-11e4-aed8-c33d0c9048f4","variableMapping":{"location":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[],"tindex":"2db59570-db7c-11e4-aed8-fb19a6f8f568","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"2db59571-db7c-11e4-aed8-1de64c8612ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[6,188,7,171,172,173,8,9,10,11,189,13,14,15,16,194,197,200,201,202,203,174,20,175,1,176,177,178,179,180,181,439,182,440,441,208,442,209,443,154,210,106,155,213,27,28,30,32,220,221,162,163,90,222,223,91,92,224,225,226,153,227,228,229,230,231,232,93,233,94,35,95,234,164,96,235,236,237,238,239,240,97,98,242,243,244,165,36,37,249,107,251,252,255,256,166,259,261,266,268,269,271,40,274,316,317,112,319,320,323,324,167,327,329,335,337,338,340,341,345,51,52,53,352,118,354,355,358,359,168,362,364,369,371,372,374,56,377,379,383,60,61,388,124,390,391,394,395,170,398,400,405,407,408,410,64,413],"tindex":"2db5bc82-db7c-11e4-aed8-798515b8e3cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"2db5bc83-db7c-11e4-aed8-93358dfbdf43","variableMapping":{"endX":"maxTurnCosts","reachedX":"restricted","x":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:88","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    boolean = true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":0},{"failures":[],"tindex":"2db5bc84-db7c-11e4-aed8-13440a91a2bd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[444,136,137],"tindex":"2db5bc85-db7c-11e4-aed8-6da49626ea15","variableMapping":{"nameIndexRef":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[],"tindex":"2db5bc86-db7c-11e4-aed8-ef35ed5decda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"2db5bc87-db7c-11e4-aed8-09e6aace1ebb","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[138],"tindex":"2db5bc88-db7c-11e4-aed8-8f9d72234483","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"2db5bc89-db7c-11e4-aed8-1d12e312609a","variableMapping":{"str":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:188","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[20,445],"tindex":"2db5bc8a-db7c-11e4-aed8-536c0194a8c4","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:274","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.substring(0, ((java.lang.String.length()) - 2))) + \":\") + (java.lang.String.substring(((java.lang.String.length()) - 2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-1},{"failures":[160,129,161],"tindex":"2db5bc8b-db7c-11e4-aed8-b3e42a5f1b09","variableMapping":{"str":"str","kmInteger":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[133,138,143,144,150],"tindex":"2db5bc8c-db7c-11e4-aed8-cf56ffd257d3","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[],"tindex":"2db5bc8d-db7c-11e4-aed8-ad2435fa4ae5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"2db5bc8e-db7c-11e4-aed8-6d93134d85ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[173,12,191,192,446,174,175,22,1,177,210,211,106,297,44,45,47],"tindex":"2db5bc8f-db7c-11e4-aed8-e9d291e4a108","variableMapping":{"size":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"2db5bc90-db7c-11e4-aed8-47e90c7701e2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[447],"tindex":"2db5bc91-db7c-11e4-aed8-9dfd73050816","variableMapping":{"node":"node","directionBitMask":"directionBitMask","intendedValues":"intendedValues","restrictedValues":"intendedValues","potentialBarriers":"intendedValues","restrictions":"restrictions","blockByDefault":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[162,163,35,95,164,165],"tindex":"2db5bc92-db7c-11e4-aed8-37d33643264a","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"2db5bc93-db7c-11e4-aed8-31fd8bbdf823","variableMapping":{"high":"ferryBit","len":"acceptBit","start":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"2db5e3a4-db7c-11e4-aed8-b5d76772bbd9","variableMapping":{"nodeB":"key","edgeId":"key","nodeA":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[154,155,156],"tindex":"2db5e3a5-db7c-11e4-aed8-dbd604cf39b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[],"tindex":"2db5e3a6-db7c-11e4-aed8-05c1efbdb1b6","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"2db5e3a7-db7c-11e4-aed8-357da61f66e2","variableMapping":{"type":"com.graphhopper.storage.DAType.RAM_INT_STORE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[208],"tindex":"2db5e3a8-db7c-11e4-aed8-239c677c99a2","variableMapping":{"i":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[97,244,379],"tindex":"2db5e3a9-db7c-11e4-aed8-b14d9d749083","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[154,156],"tindex":"2db5e3aa-db7c-11e4-aed8-d3c087a82c49","variableMapping":{"lat":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"2db5e3ab-db7c-11e4-aed8-4701e5e65d15","variableMapping":{"strLen":"com.graphhopper.routing.util.PriorityWeighting.KEY","bLen":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"2db5e3ac-db7c-11e4-aed8-c7635381b26f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"2db5e3ad-db7c-11e4-aed8-05145384fdb4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[],"tindex":"2db5e3ae-db7c-11e4-aed8-39c9347d5865","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[154,155,156],"tindex":"2db5e3af-db7c-11e4-aed8-113bc2574900","variableMapping":{"i":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[67,68,69,70,86,71,87,72,73,76],"tindex":"2db5e3b0-db7c-11e4-aed8-3300dcd8108d","variableMapping":{"time":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[6,188,7,171,8,9,11,163,90,222,223,91,92,224,225,226,153,227,228,229,230,231,232,93,233,94,35,95,234,164,236,238,97,242,243,244,165],"tindex":"2db5e3b1-db7c-11e4-aed8-496f8ac342b1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1},{"failures":[],"tindex":"2db5e3b2-db7c-11e4-aed8-5bd7962e97af","variableMapping":{"newUniqueOsmId":"defaultL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"2db5e3b3-db7c-11e4-aed8-91c954ba81d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":407,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":233,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":59,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":161,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":317,"com.graphhopper.reader.OSMReaderTest.testFerry":204,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":200,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":201,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":149,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":425,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":279,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":188,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":104,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":414,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":119,"com.graphhopper.coll.CompressedArrayTest.testCompress":68,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":273,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":332,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":166,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":278,"com.graphhopper.util.AngleCalcTest.testOrientation":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":242,"com.graphhopper.GraphHopperTest.testPrepare":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":342,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":96,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":261,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":428,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":153,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":296,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":145,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":192,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":155,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":144,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":90,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":306,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":376,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":51,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":74,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":165,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":49,"com.graphhopper.reader.OSMReaderTest.testSort":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":187,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":178,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":349,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":270,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":36,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":343,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":32,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":374,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":406,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":254,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":347,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":53,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":185,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":281,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":230,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":277,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":91,"com.graphhopper.coll.OSMIDMapTest.testGetLong":25,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":223,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":366,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":399,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":60,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":401,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":102,"com.graphhopper.coll.CompressedArrayTest.testCompress2":67,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":263,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":158,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":168,"com.graphhopper.GraphHopperAPITest.testLoad":189,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":109,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":107,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":105,"com.graphhopper.storage.LevelGraphStorageTest.testClone":390,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":156,"com.graphhopper.reader.OSMReaderTest.testBarriers":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":352,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":3,"com.graphhopper.util.GHUtilityTest.testCopy":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":320,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":288,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":436,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":293,"com.graphhopper.routing.PathTest.testFindInstruction":28,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":118,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":194,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":411,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":415,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":271,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":259,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":372,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":361,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":384,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":442,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":392,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":321,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":169,"com.graphhopper.util.InstructionListTest.testWayList2":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":338,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":310,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":274,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":356,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":148,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":207,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":246,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":394,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":120,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":92,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":249,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":35,"com.graphhopper.coll.OSMIDMapTest.testGet":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":359,"com.graphhopper.routing.PathBidirRefTest.testExtract":220,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":116,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":143,"com.graphhopper.util.GHUtilityTest.testSort2":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":231,"com.graphhopper.reader.OSMReaderTest.testMain":20,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":385,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":365,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":75,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":284,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":99,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":350,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":170,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":397,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":413,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":30,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":369,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":157,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":400,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":206,"com.graphhopper.storage.StorablePropertiesTest.testStore":58,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":50,"com.graphhopper.storage.GraphHopperStorageTest.testClone":251,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":339,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":182,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":257,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":379,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":438,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":322,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":382,"com.graphhopper.routing.PathTest.testTime":213,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":422,"com.graphhopper.routing.util.EncodingManagerTest.testFixWayName":445,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":65,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":391,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":331,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":404,"com.graphhopper.reader.OSMReaderTest.testRelation":444,"com.graphhopper.util.GHUtilityTest.testSortDirected":199,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":184,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":216,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":424,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":44,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":79,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":327,"com.graphhopper.search.NameIndexTest.testCreate":19,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":214,"com.graphhopper.routing.QueryGraphTest.testOneWay":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":313,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":71,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":426,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":48,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":69,"com.graphhopper.reader.OSMReaderTest.testWithBounds":179,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":333,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":136,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":388,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":386,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":433,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":146,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":368,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":305,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":362,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":37,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":163,"com.graphhopper.util.InstructionListTest.testWayList":14,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":272,"com.graphhopper.GraphHopperAPITest.testDisconnected179":190,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":323,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":417,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":203,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":345,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":172,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":253,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":243,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":266,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":98,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":64,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":420,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":351,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":402,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":286,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":152,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":245,"com.graphhopper.routing.PathTest.testWayList":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":344,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":435,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":114,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":447,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":129,"com.graphhopper.coll.OSMIDMapTest.testGet2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":164,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":408,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":367,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":260,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":357,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":80,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":398,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":81,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":282,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":139,"com.graphhopper.util.GHUtilityTest.testSort":198,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":336,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":431,"com.graphhopper.search.NameIndexTest.testPut":17,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":88,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":292,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":47,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":301,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":132,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":208,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":299,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":348,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":434,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":363,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":154,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":396,"com.graphhopper.routing.PathTest.testFound":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":337,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":138,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":410,"com.graphhopper.util.AngleCalcTest.testAtan2":101,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":381,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":430,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":121,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":18,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":167,"com.graphhopper.util.InstructionListTest.testEmptyList":193,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":437,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":229,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":441,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":186,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":232,"com.graphhopper.reader.PrinctonReaderTest.testRead":202,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":40,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":43,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":358,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":26,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":316,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":364,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":416,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":4,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":421,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":130,"com.graphhopper.reader.OSMReaderTest.testFoot":174,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":335,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":84,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":412,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":85,"com.graphhopper.reader.OSMReaderTest.testOneWay":180,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":110,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":111,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":373,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":427,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":264,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":329,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":239,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":237,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":302,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":209,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":325,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":215,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":247,"com.graphhopper.routing.PathBidirRefTest.testExtract2":221,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":162,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":141,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":311,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":268,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":303,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":423,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":346,"com.graphhopper.util.SimpleIntDequeTest.testPush":446,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":418,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":307,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":269,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":393,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":440,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":38,"com.graphhopper.GraphHopperTest.testFootAndCar":173,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":127,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":140,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":319,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":354,"com.graphhopper.GraphHopperTest.testPrepareOnly":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":94,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":294,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":112,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":177,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":383,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":16,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":267,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":443,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":176,"com.graphhopper.util.AngleCalcTest.testCombined":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":328,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":409,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":128,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":52}}]
