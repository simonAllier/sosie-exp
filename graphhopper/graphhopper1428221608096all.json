[{"failures":[],"tindex":"a47349e3-db6b-11e4-850b-9d30fc9374d1","variableMapping":{"mask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[],"tindex":"a47349e4-db6b-11e4-850b-f35273382b89","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"a47349e5-db6b-11e4-850b-e9c97d1a35f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.next()"},"status":-1},{"failures":[],"tindex":"a47349e6-db6b-11e4-850b-cdd0a5f0415a","variableMapping":{"keys":"keys","i":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":0},{"failures":[],"tindex":"a47370f7-db6b-11e4-850b-172936ceafd3","variableMapping":{"graph":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:398","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage) == null)\n    throw new java.lang.IllegalStateException(\"Graph not initialized\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":0},{"failures":[],"tindex":"a47370f8-db6b-11e4-850b-5b3bf77816ab","variableMapping":{"fromX":"maxLon","toX":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"a47370f9-db6b-11e4-850b-1dc655b7bab8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,10,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,19,98,99,100,101,102,103,104,105,106],"tindex":"a47370fa-db6b-11e4-850b-2d772b128cd9","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"a47370fb-db6b-11e4-850b-97dcbbe64739","variableMapping":{"cap":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"a47370fc-db6b-11e4-850b-c5231c78bae8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[107,108,109,110,111,112,113],"tindex":"a47370fd-db6b-11e4-850b-25ad299a1bc6","variableMapping":{"sacScale":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"a47370fe-db6b-11e4-850b-896ff7632af2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"a47370ff-db6b-11e4-850b-59952e84beef","variableMapping":{"maxTurnCosts":"maxTurnCosts","costs":"costs","turnRestrictionBit":"turnRestrictionBit","restricted":"restricted"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":0},{"failures":[],"tindex":"a4737100-db6b-11e4-850b-8129b509e219","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"factor","turnRestrictionBit":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:595","type":"CtReturnImpl","sourcecode":"return (long & (long)) == 0 ? 0 : java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-2},{"failures":[],"tindex":"a4737101-db6b-11e4-850b-3f39c07b04f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"a4737102-db6b-11e4-850b-ff46801346a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"a4737103-db6b-11e4-850b-a5cd952c023f","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":0},{"failures":[114,37],"tindex":"a4739814-db6b-11e4-850b-d97f988f555e","variableMapping":{"maxLeafEntries":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[],"tindex":"a4739815-db6b-11e4-850b-f5115f073e6f","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[21,22,23,24,115,27,29,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,116,117,118,119,120,121,10,51,52,53,54,55,56,122,123,57,58,124,59,60,61,62,63,64,65,66,68,69,71,125,73,126,74,75,76,77,78,127,80,81,82,83,84,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,93,94,95,96,97,19,164,106],"tindex":"a4739816-db6b-11e4-850b-15b7b1f9ac49","variableMapping":{"workerThreads":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[],"tindex":"a4739817-db6b-11e4-850b-65fc9f08fda5","variableMapping":{"nodeId":"index","mainNodes":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"a4739818-db6b-11e4-850b-97629b91cb83","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"a4739819-db6b-11e4-850b-a74a50c0e4c9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,113,37,216,38,39,40,41,42,43,44,45,46,47,48,217,49,50,121,10,51,52,218,53,54,55,56,219],"tindex":"a473981a-db6b-11e4-850b-53ff3b0e808f","variableMapping":{"weight":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[214],"tindex":"a473981b-db6b-11e4-850b-bff38acd9c4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-1},{"failures":[],"tindex":"a473981c-db6b-11e4-850b-0d497d76c853","variableMapping":{"remainingSegNo":"segmentSizeInBytes","segmentSizeInBytes":"segmentsToCreate","capacity":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:418","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":0},{"failures":[167,176,179,197,201,204,220],"tindex":"a473bf2d-db6b-11e4-850b-0f3f6d615f5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:643","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[167,171],"tindex":"a473bf2e-db6b-11e4-850b-755c2ab49414","variableMapping":{"str":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[221,21,222,0,223,1,2,224,225,226,227,3,4,5,228,229,6,230,7,231,232,233,234,235,236,237,238,239,240,241,8,242,243,244,245,246,247,27,248,249,9,50,121,10,51,53,54,56,250,251,252,253,69,70,71,254,255,256,257,258,259,260,261,262,263,264,265,266,94,13,95,14,15,267,268,269,270,271,272,16,273,274,275,276,277,278,279,280,96,281,17,282,97,283,284,18,285,19,164,98,20,286],"tindex":"a473bf2f-db6b-11e4-850b-0fae1cf8ec72","variableMapping":{"lat":"edgeCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[287,288],"tindex":"a473bf30-db6b-11e4-850b-07183633f063","variableMapping":{"allBits":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[287,289],"tindex":"a473bf31-db6b-11e4-850b-99b00a0cad97","variableMapping":{"latSize":"node","size":"node","lonSize":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[115,290],"tindex":"a473bf32-db6b-11e4-850b-69252dea36bd","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"a473bf33-db6b-11e4-850b-e9c84a0f731b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[3,7,8,248],"tindex":"a473bf34-db6b-11e4-850b-3f136777a5d3","variableMapping":{"this":"this","finishedFrom":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-1},{"failures":[291,292,49],"tindex":"a473bf35-db6b-11e4-850b-a95e506bb37b","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[293],"tindex":"a473bf36-db6b-11e4-850b-a5005dc4cc5d","variableMapping":{"time":"otherValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[214],"tindex":"a473bf37-db6b-11e4-850b-5baae1597612","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"a473bf38-db6b-11e4-850b-256b26af3352","variableMapping":{"res":"obj"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.storage.index.QueryResult.getSnappedPoint()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[287,291,292,49,294,295,296,297,298,299,300,77,301,302,303,304,305,306,307,308,83,309,131,310,139,140,142,146,147,153,154,311,15,312,273,274,276,279,280,97,283],"tindex":"a473bf39-db6b-11e4-850b-1ff77493ff4d","variableMapping":{"oldPriorities":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[21,22,23,24,222,287,313,292,289,26,314,315,215,316,113,317,0,223,1,2,224,225,226,3,4,5,229,6,230,231,232,235,239,241,243,245,247,27,248,9,31,33,318,36,216,38,43,49,10,51,52,55,319,73,74,320,294,321,322,323,324,325,326,327,328,78,329,80,330,302,331,332,333,334,335,336,337,338,84,339,130,131,134,340,143,145,151,152,155,157,158,162,11,266,94,14,15,269,341,277,278,17,282,284,285,19,20],"tindex":"a473e64a-db6b-11e4-850b-3da9982f0aea","variableMapping":{"high":"backwardBit","guess":"backwardBit","low":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[265,281],"tindex":"a473e64b-db6b-11e4-850b-6363b011c9fb","variableMapping":{"tmpNo":"I_SKIP_EDGE2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[221,342,21,343,344,345,346,347,22,23,24,115,222,348,349,287,313,291,292,289,288,25,26,314,350,351,0,223,1,2,224,225,226,227,3,4,5,228,229,6,230,7,231,232,233,234,235,236,237,238,239,240,241,8,242,243,244,245,246,247,27,248,249,9,28,28,29,29,352,352,30,30,31,31,32,32,353,353,33,33,34,34,354,354,355,355,35,35,356,318,36,357,37,216,38,39,40,41,42,43,44,45,46,47,48,49,358,359,360,50,10,51,52,218,53,54,55,56,219,319,361,362,363,364,365,366,367,368,61,62,63,64,65,369,370,371,372,373,374,375,376,66,67,68,377,378,379,380,381,382,383,384,385,386,387,250,251,388,252,253,69,70,71,254,255,256,257,258,259,260,261,262,263,264,73,389,74,390,391,392,75,320,294,393,394,321,395,396,397,398,295,322,296,297,399,298,323,400,324,299,300,76,401,402,325,403,326,77,301,327,404,328,78,405,127,79,329,406,407,80,408,409,410,81,330,302,411,412,331,413,414,415,416,303,332,304,305,417,306,333,418,334,307,308,82,419,420,335,421,336,83,309,337,422,338,84,423,128,85,339,424,425,426,427,428,429,430,431,432,433,434,435,340,152,11,436,12,265,266,437,311,438,94,439,440,13,95,14,15,267,268,269,270,271,272,16,312,341,273,274,275,276,277,441,278,279,280,96,281,442,17,443,282,97,283,284,18,285,19,444,164,98,20,286],"tindex":"a473e64c-db6b-11e4-850b-21b691c1ec9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[215],"tindex":"a473e64d-db6b-11e4-850b-79037dcba329","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[114],"tindex":"a473e64e-db6b-11e4-850b-bb6b57b349de","variableMapping":{"i":"index","to":"index","lonSize":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[221,342,21,343,344,345,346,347,22,23,24,115,222,348,349,287,313,291,292,289,288,25,26,314,350,351,0,223,1,2,224,225,226,227,3,4,5,228,229,6,230,7,231,232,233,234,235,236,237,238,239,240,241,8,242,243,244,245,246,247,27,248,249,9,28,28,29,29,352,352,30,30,31,31,32,32,353,353,33,33,34,34,354,354,355,355,35,35,356,318,36,357,37,216,38,39,40,41,42,43,44,45,46,47,48,49,358,359,360,50,121,10,51,52,218,53,54,55,56,219,319,361,362,363,364,365,366,367,368,61,62,63,64,65,369,370,371,372,373,374,375,376,66,67,68,377,378,379,380,381,382,383,384,385,445,386,387,250,251,388,252,253,69,70,71,254,255,256,257,258,259,260,261,262,446,263,264,73,389,74,390,391,392,75,320,294,393,394,321,395,396,397,398,295,322,296,297,399,298,323,400,324,299,300,76,401,402,325,403,326,77,301,327,404,328,78,405,127,79,329,406,407,80,408,409,410,81,330,302,411,412,331,413,414,415,416,303,332,304,305,417,306,333,418,334,307,308,82,419,420,335,421,336,83,309,337,422,338,84,423,128,85,339,424,425,426,447,427,428,430,431,448,432,433,434,435,340,152,11,436,12,265,266,437,311,438,94,439,440,13,95,14,15,267,268,269,270,271,272,16,312,341,273,274,275,276,277,441,278,279,280,96,281,442,17,443,282,97,283,284,18,285,19,444,164,98,20,286],"tindex":"a4740d5f-db6b-11e4-850b-359b7274f4cf","variableMapping":{"err":"segmentSizeInBytes","dLat":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[436,311],"tindex":"a4740d60-db6b-11e4-850b-a12fb02ad917","variableMapping":{"fromNode":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"a4740d61-db6b-11e4-850b-4b27dd91694b","variableMapping":{"defaultUTurnCost":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","turnCosts":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","edgeId":"val","prevOrNextEdgeId":"val","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"a4740d62-db6b-11e4-850b-5991c316606e","variableMapping":{"high":"i","len":"i","start":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"a4740d63-db6b-11e4-850b-31b5af272e13","variableMapping":{"dX":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","dY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"a4740d64-db6b-11e4-850b-8528ba35ee92","variableMapping":{"strLen":"shift","res":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:192","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"a4740d65-db6b-11e4-850b-3915f2fc7fa7","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":0},{"failures":[],"tindex":"a4740d66-db6b-11e4-850b-135fee820f8e","variableMapping":{"high":"encoded","highKey":"encoded","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"a4740d67-db6b-11e4-850b-032cc22a5e46","variableMapping":{"factor":"maxLatTmp","delta_lon":"maxLatTmp","a_lon":"minLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"a4743478-db6b-11e4-850b-15c46a71f8ab","variableMapping":{"i":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-2},{"failures":[],"tindex":"a4765759-db6b-11e4-850b-8ff2d40e5ee5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"a476575a-db6b-11e4-850b-198540557ad1","variableMapping":{"firstLon":"longTripsSpeed","lastLon":"durationInHours","firstLat":"longTripsSpeed","lastLat":"durationInHours","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:365","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMWay.setTag(\"estimated_center\", new com.graphhopper.util.shapes.GHPoint(((double + double) / 2) , ((double + double) / 2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":0},{"failures":[171,183,193,208],"tindex":"a476575b-db6b-11e4-850b-f197ba08a067","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:110","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"a476575c-db6b-11e4-850b-753331f2e3e5","variableMapping":{"from":"segmentSizePower","end":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"a476575d-db6b-11e4-850b-5596f94a99e7","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":0},{"failures":[],"tindex":"a476575e-db6b-11e4-850b-b74b674b23d1","variableMapping":{"finishedTo":"synched","finishedFrom":"synched"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"a476575f-db6b-11e4-850b-170ac740db9f","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","flags":"flags","roundaboutBit":"flags","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","value":"backward","forwardBit":"flags","key":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","backwardBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:273","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, boolean), com.graphhopper.routing.util.FlagEncoder.int, boolean)"},"status":-2},{"failures":[],"tindex":"a4765760-db6b-11e4-850b-d31c91a3fd0c","variableMapping":{"size":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[287],"tindex":"a4767e71-db6b-11e4-850b-f92af9c9f0d6","variableMapping":{"i":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"a4767e72-db6b-11e4-850b-bdaa5d1d777f","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[],"tindex":"a4767e73-db6b-11e4-850b-f153c228d845","variableMapping":{"file":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.lastIndexOf(\".\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"a4767e74-db6b-11e4-850b-2b1c9c1658a2","variableMapping":{"maxLatTmp":"lon","minLatTmp":"lon","lat":"midLon","hash":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-2},{"failures":[],"tindex":"a4767e75-db6b-11e4-850b-bf4b5b080a43","variableMapping":{"distance":"lon","speed":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:140","type":"CtReturnImpl","sourcecode":"return com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[],"tindex":"a4767e76-db6b-11e4-850b-fbe34b5975e6","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"mSize","entityType":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[199,212,213,216,50,218,56],"tindex":"a4767e77-db6b-11e4-850b-3957add96c52","variableMapping":{"nanoTime":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"a4767e78-db6b-11e4-850b-2dfc6a2636d1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[23,24,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,10,51,52,53,55,56,57,58,59,60,62,63,64,65,66,68,69,71,72,73,74,75,76,77,78,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,19,99,100,101,102,103,104,105,106],"tindex":"a4767e79-db6b-11e4-850b-cf936eba11ab","variableMapping":{"retBucket":"bufferIndex","bucketSize":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-1},{"failures":[],"tindex":"a4767e7a-db6b-11e4-850b-9ba17ac3d8f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"a4767e7b-db6b-11e4-850b-ad7f4ddf8b07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"a4771abc-db6b-11e4-850b-8777edd824dd","variableMapping":{"c":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:228","type":"CtReturnImpl","sourcecode":"return int > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":0},{"failures":[],"tindex":"a4771abd-db6b-11e4-850b-27d53e12750c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[287,288],"tindex":"a4771abe-db6b-11e4-850b-ef48c07bb6d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"a4771abf-db6b-11e4-850b-8f34c79a6ac6","variableMapping":{"cap":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[167,176,179,197,201,204,220],"tindex":"a47741d0-db6b-11e4-850b-b59dab020e5d","variableMapping":{"err":"code","tmpErr":"code","y1":"code","dLon":"code","sLat":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"a47741d1-db6b-11e4-850b-c57a7c431424","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[287,292,294,296,297,298,299,300,77,301,302,304,305,306,307,308,83,309,131,139,140,142,146,147,153,154,15,273,274,276,279,280,97,283],"tindex":"a47741d2-db6b-11e4-850b-49a7807a633f","variableMapping":{"red":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[38,50,219],"tindex":"a47741d3-db6b-11e4-850b-13cf2d854ebf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"a47741d4-db6b-11e4-850b-3be62a7c812e","variableMapping":{"value":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"a47741d5-db6b-11e4-850b-53339396a868","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"a47741d6-db6b-11e4-850b-a15702857b27","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[242,245,10,51,53,250,251,261],"tindex":"a47741d7-db6b-11e4-850b-f517b37ab4fb","variableMapping":{"lastIndex":"nodeB","fromIndex":"nodeA"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"a47741d8-db6b-11e4-850b-13d1f5d49dda","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"a47741d9-db6b-11e4-850b-771a295936b8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[221,342,21,343,449,344,345,346,347,22,23,24,115,222,348,349,450,165,166,167,168,451,169,452,170,453,454,171,172,107,173,174,455,175,176,177,178,456,179,457,458,459,180,460,181,182,461,462,183,184,108,185,186,287,313,291,292,289,288,463,187,188,189,464,190,465,191,192,466,467,193,194,109,195,196,468,469,199,25,26,470,200,201,202,203,471,204,472,473,474,205,475,206,207,476,477,208,209,110,210,211,478,479,480,481,314,212,315,482,213,111,483,484,485,486,214,215,487,112,316,488,489,113,490,491,492,317,493,494,350,351,495,0,223,496,1,2,224,225,226,227,3,4,5,228,229,6,230,7,231,232,233,234,235,236,237,238,239,240,241,8,242,243,244,245,246,247,27,248,249,9,28,29,352,30,31,32,353,33,34,354,355,35,497,498,356,318,36,357,499,37,216,38,39,40,41,42,43,44,220,45,46,47,48,49,358,359,50,121,10,51,52,218,53,500,54,55,56,219,501,319,361,502,362,363,364,365,503,366,367,61,62,63,64,504,65,369,370,371,372,505,373,374,375,376,66,67,68,377,378,379,380,381,382,383,384,385,445,386,387,250,251,388,252,253,69,70,71,254,255,256,257,258,259,260,261,262,446,263,264,73,126,389,74,390,391,392,506,75,320,294,393,394,321,395,396,397,398,295,322,296,297,399,298,323,400,324,299,300,76,401,402,325,403,326,77,301,327,404,328,78,405,127,79,329,406,407,80,408,409,410,507,81,330,302,411,412,331,413,414,415,416,303,332,304,305,417,306,333,418,334,307,308,82,419,420,335,421,336,83,309,337,422,338,84,423,128,85,339,424,129,130,131,132,133,134,135,136,137,138,310,340,139,140,141,142,143,144,145,146,147,148,149,150,151,508,152,153,154,155,156,157,158,159,160,161,162,163,11,436,12,265,266,437,311,438,94,439,440,13,509,95,14,15,267,268,269,270,271,272,16,312,341,273,274,275,276,277,441,278,279,280,96,281,442,17,443,282,97,283,284,18,285,19,444,164,98,20,286],"tindex":"a47768ea-db6b-11e4-850b-f5afebf54b80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[230,7,239,241,9],"tindex":"a47768eb-db6b-11e4-850b-a3600dfa8e7e","variableMapping":{"path":"this","fullMillis":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:52","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.getMillis()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"a47768ec-db6b-11e4-850b-5f07a68645e1","variableMapping":{"map":"map"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":0},{"failures":[510,511,512,23,24,115,513,36,357],"tindex":"a47768ed-db6b-11e4-850b-0738a809616e","variableMapping":{"java.lang.Double.MAX_VALUE":"lat1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:372","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-1},{"failures":[0,1,3,4,6,230,7,231,232,233,234,235,236,237,238,239,240,241,8,242,243,244,245,246,247,27,248,249,9,10,51,52,218,53,55,56,319,361],"tindex":"a47768ee-db6b-11e4-850b-115c1a7cde95","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-1},{"failures":[514,515],"tindex":"a47768ef-db6b-11e4-850b-9f07ddfc4bce","variableMapping":{"tmp":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[21,22,23,24,115,25,26,27,28,29,30,31,32,353,33,34,355,35,36,357,37,216,38,39,40,41,42,43,44,45,46,47,48,49,118,119,120,50,121,10,51,52,218,53,54,55,56,219,516,122,517,123,57,58,124,59,60,61,62,63,64,65,66,67,68,69,70,71,518,519,73,74,390,75,76,77,78,127,79,80,408,81,82,83,84,128,85,152,520,86,521,87,88,89,522,523,90,91,92,93,437,94,439,95,96,97,19,164,98,524,99,525,100,101,102,526,527,103,104,105,106],"tindex":"a47768f0-db6b-11e4-850b-07b8af4d07db","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[],"tindex":"a47768f1-db6b-11e4-850b-c9f1db35a2c8","variableMapping":{"lastTime":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[],"tindex":"a47768f2-db6b-11e4-850b-7fa7d6ee9a75","variableMapping":{"capacity":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":0},{"failures":[345,346,528,529],"tindex":"a4779003-db6b-11e4-850b-a3e1ad6e8470","variableMapping":{"edgeId":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"a4779004-db6b-11e4-850b-6b1a71fa39a7","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"a4779005-db6b-11e4-850b-3de4997c5698","variableMapping":{"angle":"fwdSlower","com.graphhopper.util.AngleCalc.PI3_4":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[167,197],"tindex":"a4779006-db6b-11e4-850b-c1d0b56ca555","variableMapping":{"factor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":282,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":246,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":437,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":371,"com.graphhopper.GraphHopperAPITest.testNoLoad":502,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":130,"com.graphhopper.reader.OSMReaderTest.testFerry":37,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":348,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":456,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":168,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":70,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":121,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":513,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":295,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":117,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":520,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":454,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":224,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":148,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":332,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":388,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":86,"com.graphhopper.util.AngleCalcTest.testOrientation":510,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":526,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":5,"com.graphhopper.GraphHopperTest.testPrepare":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":334,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":177,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":239,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":368,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":171,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":346,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":13,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":252,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":289,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":167,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":175,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":426,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":237,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":303,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":67,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":79,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":179,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":501,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":73,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":6,"com.graphhopper.GraphHopperTest.testLoadOSM":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":382,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":68,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":469,"com.graphhopper.reader.OSMReaderTest.testSort":39,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":184,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":46,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":291,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":390,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":422,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":160,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":33,"com.graphhopper.storage.RAMDataAccessTest.testHeader":527,"com.graphhopper.routing.DijkstraTest.initializationError":494,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":328,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":518,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":443,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":429,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":414,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":436,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":496,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":126,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":75,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":312,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":196,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":194,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":256,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":242,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":251,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":254,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":500,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":234,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":15,"com.graphhopper.coll.OSMIDMapTest.testGetLong":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":233,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":393,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":441,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":94,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":279,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":511,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":308,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":187,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":322,"com.graphhopper.GraphHopperAPITest.testLoad":319,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":509,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":428,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":480,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":304,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":302,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":114,"com.graphhopper.storage.LevelGraphStorageTest.testClone":268,"com.graphhopper.reader.OSMReaderTest.testBarriers":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":320,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":250,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":472,"com.graphhopper.util.GHUtilityTest.testCopy":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":236,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":264,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":466,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":107,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":505,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":105,"com.graphhopper.routing.PathTest.testFindInstruction":357,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":452,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":294,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":213,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":222,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":444,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":202,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":370,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":338,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":333,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":327,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":298,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":438,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":476,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":495,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":135,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":410,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":435,"com.graphhopper.util.InstructionListTest.testWayList2":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":383,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":395,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":176,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":478,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":25,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":408,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":272,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":521,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":457,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":296,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":235,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":330,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":41,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":87,"com.graphhopper.routing.AStarTest.initializationError":499,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":27,"com.graphhopper.coll.OSMIDMapTest.testGet":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":398,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":111,"com.graphhopper.routing.PathBidirRefTest.testExtract":350,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":96,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":124,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":180,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":260,"com.graphhopper.storage.RAMDataAccessTest.testCopy":100,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":522,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":153,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":165,"com.graphhopper.storage.RAMDataAccessTest.testSegments":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":459,"com.graphhopper.util.GHUtilityTest.testSort2":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":243,"com.graphhopper.reader.OSMReaderTest.testMain":38,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":439,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":460,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":108,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":261,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":391,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":341,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":276,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":528,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":20,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":31,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":200,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":427,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":278,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":48,"com.graphhopper.storage.StorablePropertiesTest.testStore":519,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":525,"com.graphhopper.storage.GraphHopperStorageTest.testClone":412,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":156,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":113,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":417,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":488,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":11,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":136,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":265,"com.graphhopper.routing.PathTest.testTime":318,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":192,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":164,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":269,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":493,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":504,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":147,"com.graphhopper.reader.OSMReaderTest.testRelation":220,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":442,"com.graphhopper.util.GHUtilityTest.testSortDirected":344,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":209,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":92,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":30,"com.graphhopper.GraphHopperTest.testFootOnly":56,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":166,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":112,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":255,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":223,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":470,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":143,"com.graphhopper.search.NameIndexTest.testCreate":123,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":103,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":28,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":448,"com.graphhopper.routing.QueryGraphTest.testOneWay":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":445,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":169,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":66,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":514,"com.graphhopper.reader.OSMReaderTest.testWithBounds":47,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":106,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":110,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":140,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":149,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":483,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":197,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":14,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":440,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":463,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":477,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":173,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":402,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":316,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":323,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":81,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":7,"com.graphhopper.util.InstructionListTest.testWayList":23,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":423,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":458,"com.graphhopper.GraphHopperAPITest.testDisconnected179":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":137,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":515,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":206,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":359,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":146,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":162,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":462,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":52,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":413,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":63,"com.graphhopper.routing.util.EncodedValueTest.testSwap":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":228,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":335,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":455,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":241,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":497,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":4,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":490,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":190,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":183,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":392,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":249,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":507,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":446,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":431,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":186,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":407,"com.graphhopper.routing.PathTest.testWayList":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":139,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":487,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":290,"com.graphhopper.coll.OSMIDMapTest.testGet2":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":9,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":523,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":284,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":461,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":418,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":481,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":396,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":257,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":277,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":258,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":101,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":93,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":474,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":188,"com.graphhopper.util.GHUtilityTest.testSort":343,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":508,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":182,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":451,"com.graphhopper.search.NameIndexTest.testPut":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":329,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":506,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":253,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":372,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":65,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":364,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":433,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":471,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":26,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":362,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":389,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":464,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":119,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":479,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":482,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":400,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":287,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":434,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":152,"com.graphhopper.routing.PathTest.testFound":356,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":199,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":219,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":285,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":484,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":181,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":297,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":517,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":340,"com.graphhopper.util.InstructionListTest.testEmptyList":347,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":416,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":524,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":238,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":467,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":317,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":486,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":172,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":485,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":244,"com.graphhopper.reader.PrinctonReaderTest.testRead":358,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":84,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":125,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":71,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":397,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":129,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":267,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":324,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":453,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":72,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":191,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":201,"com.graphhopper.reader.OSMReaderTest.testFoot":216,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":35,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":151,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":380,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":450,"com.graphhopper.reader.OSMReaderTest.testOneWay":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":381,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":305,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":309,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":404,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":170,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":91,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":419,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":145,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":415,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":229,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":489,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":2,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":90,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":365,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":141,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":352,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":217,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":409,"com.graphhopper.routing.PathBidirRefTest.testExtract2":351,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":432,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":230,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":193,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":384,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":516,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":336,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":503,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":195,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":163,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":212,"com.graphhopper.util.SimpleIntDequeTest.testPush":529,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":366,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":377,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":337,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":449,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":271,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":491,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":82,"com.graphhopper.GraphHopperTest.testFootAndCar":218,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":274,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":189,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":263,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":133,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":468,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":492,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":394,"com.graphhopper.GraphHopperTest.testPrepareOnly":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":247,"com.graphhopper.GraphHopperTest.testVia":10,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":373,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":131,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":45,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":266,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":115,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":421,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":315,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":144,"com.graphhopper.routing.AStarBidirectionTest.initializationError":498,"com.graphhopper.util.AngleCalcTest.testCombined":512,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":174,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":18,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":283,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":74}}]
