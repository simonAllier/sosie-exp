[{"failures":[],"tindex":"5cb2f0d4-dc07-11e4-bc95-69e06fb81654","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"5cb317e5-dc07-11e4-bc95-63e9be0074b3","variableMapping":{"mSize":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"5cb317e6-dc07-11e4-bc95-498b76093224","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-1},{"failures":[],"tindex":"5cb317e7-dc07-11e4-bc95-f94f955d516c","variableMapping":{"a_lon_deg":"minLat","factor":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"5cb317e8-dc07-11e4-bc95-b5af4eefffc8","variableMapping":{"angle":"dist","com.graphhopper.util.AngleCalc.PI3_4":"dist"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"5cb33ef9-dc07-11e4-bc95-83514f9d6d29","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"5cb33efa-dc07-11e4-bc95-e1dbb42f6660","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"5cb33efb-dc07-11e4-bc95-0b8d15034b53","variableMapping":{"ret":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","retBucket":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","i":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","storedKey":"encoded","bucketSize":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:120","type":"CtIfImpl","sourcecode":"if (long == long) {\n    int = (int * (int)) + int;\n    break;\n} else if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[],"tindex":"5cb33efc-dc07-11e4-bc95-79e5306e1213","variableMapping":{"high":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","len":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","start":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"5cb3660d-dc07-11e4-bc95-6bb790543501","variableMapping":{"d":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[8,32,33,34,35,36,37,38,39,40,20,23,24,27,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"5cb3660e-dc07-11e4-bc95-c345910db287","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"5cb3660f-dc07-11e4-bc95-ef0c7610ae08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"5cb36610-dc07-11e4-bc95-53538742b09a","variableMapping":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"prevConnectedId","tmp":"prevConnectedId","segmentSizeInBytes":"prevConnectedId","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[7],"tindex":"5cb36611-dc07-11e4-bc95-a136345ec953","variableMapping":{"hash":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[32,35,23,24,27,59,60,62,64,66,69,70,71,72,73],"tindex":"5cb36612-dc07-11e4-bc95-1338a0f88e91","variableMapping":{"nodeId":"nodeB","mainNodes":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"5cb36613-dc07-11e4-bc95-5784cd43c541","variableMapping":{"i":"x1","lastIndex":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"5cb36614-dc07-11e4-bc95-799b6df72370","variableMapping":{"size":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"5cb36615-dc07-11e4-bc95-73db6ff3e4fb","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"5cb36616-dc07-11e4-bc95-39cbb4ed7557","variableMapping":{"nodeId":"encoded","nodeIdOffset":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[75,76],"tindex":"5cb38d27-dc07-11e4-bc95-17a36bd3856d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[],"tindex":"5cb38d28-dc07-11e4-bc95-b713f8e72952","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"5cb38d29-dc07-11e4-bc95-5f5ad2af88dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:130","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"5cb38d2a-dc07-11e4-bc95-9dc1e1c8474a","variableMapping":{"a_lat_deg":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:223","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[77,78],"tindex":"5cb3b43b-dc07-11e4-bc95-614478bdf84e","variableMapping":{"lastInBoundsPillarNode":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:660","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[77,79,80],"tindex":"5cb3b43c-dc07-11e4-bc95-511612608d65","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-1},{"failures":[],"tindex":"5cb3b43d-dc07-11e4-bc95-bd0b01e98da3","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[81,82,83,84,85,86],"tindex":"5cb3b43e-dc07-11e4-bc95-ff0be43c2bde","variableMapping":{"line":"highway","key":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"5cb3b43f-dc07-11e4-bc95-f585ac73154f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:55","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"5cb3da50-dc07-11e4-bc95-190847ce5916","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[87,88],"tindex":"5cb3da51-dc07-11e4-bc95-c9fe5e2e4c44","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"5cb3da52-dc07-11e4-bc95-af2b12ea77f4","variableMapping":{"other":"this","memRef":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:201","type":"CtIfImpl","sourcecode":"if ((this.com.graphhopper.storage.DAType.MemRef) != (com.graphhopper.storage.DAType.com.graphhopper.storage.DAType.MemRef))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[89,90,91],"tindex":"5cb3da53-dc07-11e4-bc95-a5d0e38e0d3d","variableMapping":{"autoRemoveTemporary":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:85","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"5cb40164-dc07-11e4-bc95-8360db2daad5","variableMapping":{"byteCount":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[34,38,39,24,27,42,43,46,48,49,50,51,52,53,54,55,92,93,94,59,61,65,66,67,68,70,71,72,73],"tindex":"5cb40165-dc07-11e4-bc95-1733fd987eb8","variableMapping":{"numTiles":"y2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-1},{"failures":[],"tindex":"5cb40166-dc07-11e4-bc95-99c88afb438f","variableMapping":{"instruction":"obj"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"5cb40167-dc07-11e4-bc95-b9f9ec0cdabc","variableMapping":{"lat":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[12,13,14,95,29,31],"tindex":"5cb40168-dc07-11e4-bc95-45183e228c56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[96],"tindex":"5cb40169-dc07-11e4-bc95-010e2faba2b8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[9,89,11,12,13,14,15,97,18,27,28,95,29,31],"tindex":"5cb4016a-dc07-11e4-bc95-ffcc0024aa5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"5cb4016b-dc07-11e4-bc95-73bef20fcba3","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"5cb4016c-dc07-11e4-bc95-c960deb26e8f","variableMapping":{"weightLong":"value","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":0},{"failures":[34,37,98,99,100],"tindex":"5cb4016d-dc07-11e4-bc95-2381596e75fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"5cb4287e-dc07-11e4-bc95-433741989600","variableMapping":{"nodeId":"nodeBitMask","nodeIdOffset":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"5cb4287f-dc07-11e4-bc95-a915947fe41a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[101,102,8,32,35,103,37,9,104,10,105,106,107,108,109,89,11,110,111,90,12,13,14,15,16,17,97,18,19,112,20,21,113,22,23,24,25,26,27,114,28,95,29,30,31,115,116,117,59,60,61,118,62,63,64,65,119,66,67,68,69,70,71,72,73,74,91,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"5cb44f90-dc07-11e4-bc95-9b4a9eb601b2","variableMapping":{"size":"a","i":"a"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:228","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-1},{"failures":[9,11,13,14,31],"tindex":"5cb44f91-dc07-11e4-bc95-e9c85161caf5","variableMapping":{"retBucket":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[161,162,163,164,165,166,167,168,169],"tindex":"5cb44f92-dc07-11e4-bc95-a59b28119188","variableMapping":{"factor":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[77,98,38,39,40,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,81,0,194,195,196,197,198,199,99,200,201,202,100,203,204,205,1,206,207,79,208,2,3,80,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,82,4,226,227,228,229,83,230,231,232,233,234,235,236,237,238,239,240,241,242,84,5,243,244,245,246,247,248,249,85,250,251,252,253,254,255,256,257,258,259,260,261,262,86,6,263,264,265],"tindex":"5cb44f93-dc07-11e4-bc95-2f2d2a2216e0","variableMapping":{"index":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[76],"tindex":"5cb44f94-dc07-11e4-bc95-35f564519c1a","variableMapping":{"lat":"prevConnectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[],"tindex":"5cb44f95-dc07-11e4-bc95-6ff2206cc61c","variableMapping":{"lazyUpdates":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[76],"tindex":"5cb44f96-dc07-11e4-bc95-0f45ab897991","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[266,267,96,155,268,269,270,271],"tindex":"5cb44f97-dc07-11e4-bc95-798b3f4a9df9","variableMapping":{"shiftSum":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[],"tindex":"5cb44f98-dc07-11e4-bc95-47747227600a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:625","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"5cb476a9-dc07-11e4-bc95-639a5303067d","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":0},{"failures":[161,162,272,163,165,166,273,274,167,168,169,43,275,49,50,58,61,119,67,68],"tindex":"5cb476aa-dc07-11e4-bc95-13f21b86fb58","variableMapping":{"hash":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[184,186,188,190,191,81,0,195,196],"tindex":"5cb476ab-dc07-11e4-bc95-594be970dbf3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"5cb476ac-dc07-11e4-bc95-09ce95e582a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"5cb476ad-dc07-11e4-bc95-37a883951e4d","variableMapping":{"freeIndex":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"5cb476ae-dc07-11e4-bc95-6924a5261e75","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"5cb476af-dc07-11e4-bc95-9f7d244dc43e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"5cb476b0-dc07-11e4-bc95-41257c5a3f01","variableMapping":{"distInMeter":"minEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"5cb476b1-dc07-11e4-bc95-2799cf8789ed","variableMapping":{"edgeId":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-2},{"failures":[98,172,178,180,182,276,185,186,189,81,196,218,222,82,227,83,231,233,238,84,245,85,251,253,258,86,265],"tindex":"5cb476b2-dc07-11e4-bc95-8fad772f32d0","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[277,278],"tindex":"5cb476b3-dc07-11e4-bc95-8beeb07e2758","variableMapping":{"dist":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"5cb476b4-dc07-11e4-bc95-651b2c4c79ca","variableMapping":{"newUniqueOsmId":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[247],"tindex":"5cb476b5-dc07-11e4-bc95-d7276a7bd495","variableMapping":{"orientation":"fullDist2D","java.lang.Math.PI":"incDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[247,21],"tindex":"5cb476b6-dc07-11e4-bc95-8fdc5f4de621","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-1},{"failures":[14,31],"tindex":"5cb476b7-dc07-11e4-bc95-87ab1c1d12ef","variableMapping":{"err":"from","dLat":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"5cb476b8-dc07-11e4-bc95-03c29f108e78","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1537","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.flush()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[100],"tindex":"5cb476b9-dc07-11e4-bc95-53c84e613002","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-1},{"failures":[279,280,98,178,281,282,75,76,283,9,10,105,89,11,110,12,13,14,97,112,113,23,24,31,284,117,41,285,286,287,288,289,290,291,292,293,124,126,127,128,135,294,148,152,155,159,295,296,297,298,299,300,301,302,303,268,304,305,306,307,308,309,310,311,312,269,313],"tindex":"5cb476ba-dc07-11e4-bc95-91126638efa8","variableMapping":{"min":"len","tmpSize":"len"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-1},{"failures":[],"tindex":"5cb476bb-dc07-11e4-bc95-0d90bb32663d","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"segmentsToCreate","nextEdge":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"5cb49dcc-dc07-11e4-bc95-0b9ee1e4bbc0","variableMapping":{"resultOrientation":"minEle","orientation":"minEle","java.lang.Math.PI":"minEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[289,294,301,310,314],"tindex":"5cb49dcd-dc07-11e4-bc95-27a695d8d4f9","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[],"tindex":"5cb49dce-dc07-11e4-bc95-4580d6613d6c","variableMapping":{"instruction":"obj"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"5cb49dcf-dc07-11e4-bc95-0790607e5b30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[189,196,222,227,83,238,245,85,258,265],"tindex":"5cb49dd0-dc07-11e4-bc95-6dc9a0832934","variableMapping":{"maxSpeed":"prio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[10,14,15,21,22,24,25,26,27,28,29,31],"tindex":"5cb49dd1-dc07-11e4-bc95-5f7b377bff76","variableMapping":{"mGarbage":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-1},{"failures":[],"tindex":"5cb49dd2-dc07-11e4-bc95-6178fc79d3e9","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"weight","java.lang.Double.POSITIVE_INFINITY":"weight","weight":"weight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[101,102,8,32,33,34,35,103,36,37,315,98,38,39,40,170,171,172,173,174,175,176,178,316,317,318,20,23,24,27,319,320,321,41,42,44,46,47,48,50,51,52,53,54,55,56,322,323,324,325,59,62,64,65,66,68,69,70,71,72,73,74],"tindex":"5cb49dd3-dc07-11e4-bc95-7d1f515df6b8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[326,180,218,83,233,85,253],"tindex":"5cb49dd4-dc07-11e4-bc95-0d70947e095d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-1},{"failures":[8,24,27,59],"tindex":"5cb49dd5-dc07-11e4-bc95-b99afb847f43","variableMapping":{"length":"nodeA","factor":"nodeA"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"5cb49dd6-dc07-11e4-bc95-999f23176afe","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"5cb49dd7-dc07-11e4-bc95-5540495a1d43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"5cb49dd8-dc07-11e4-bc95-2b913f3d0e29","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"5cb49dd9-dc07-11e4-bc95-fd73eeb2e1fe","variableMapping":{"line":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-2},{"failures":[],"tindex":"5cb49dda-dc07-11e4-bc95-5d237b145fd0","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"i","entityType":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[161,162,272,163,164,165,166,167,168,169],"tindex":"5cb49ddb-dc07-11e4-bc95-8bed4c72cd86","variableMapping":{"edgePointer":"initialBits","edgeEntryBytes":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"5cb49ddc-dc07-11e4-bc95-cb89378103cf","variableMapping":{"distance":"maxSpeed","maxSpeed":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:336","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"5cb49ddd-dc07-11e4-bc95-43b66e4d4199","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[],"tindex":"5cb4c4ee-dc07-11e4-bc95-1be414b6c878","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"5cb4c4ef-dc07-11e4-bc95-9fb52dcfa426","variableMapping":{"edgeId":"x2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"5cb4c4f0-dc07-11e4-bc95-9f7c81565965","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"5cb4c4f1-dc07-11e4-bc95-41c2abed8b7d","variableMapping":{"high":"backwardBit","highKey":"forwardBit","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[75,283],"tindex":"5cb4c4f2-dc07-11e4-bc95-93205458cff1","variableMapping":{"carEncoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:80","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.CarFlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-1},{"failures":[326,180,218,83,233,85,253],"tindex":"5cb4c4f3-dc07-11e4-bc95-61e48fda04c7","variableMapping":{"edgeId":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[77,79],"tindex":"5cb4c4f4-dc07-11e4-bc95-f7aaf24e7236","variableMapping":{"orientation":"shortTripsSpeed","resultOrientation":"durationInHours","baseOrientation":"durationInHours","java.lang.Math.PI":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[270,271],"tindex":"5cb4c4f5-dc07-11e4-bc95-d9bed1c7c4ba","variableMapping":{"nextTowerId":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"5cb4ec06-dc07-11e4-bc95-61533ea0f808","variableMapping":{"red":"nextTurnBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":0},{"failures":[],"tindex":"5cb4ec07-dc07-11e4-bc95-d73d66f1fd5b","variableMapping":{"edgeTo":"code","edgeFrom":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":114,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":286,"com.graphhopper.reader.OSMReaderTest.testFerry":77,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":284,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":232,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":219,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":63,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":163,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":102,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":221,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":44,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":161,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":265,"com.graphhopper.reader.OSMReaderTest.testWithBounds":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":263,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":316,"com.graphhopper.coll.CompressedArrayTest.testCompress":169,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":203,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":106,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":180,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":127,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":310,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":262,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":110,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":208,"com.graphhopper.GraphHopperTest.testPrepare":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":27,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":14,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":88,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":235,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":82,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":321,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":125,"com.graphhopper.GraphHopperAPITest.testDisconnected179":42,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":61,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":76,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":164,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":218,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":45,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":280,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":171,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":293,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":33,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":273,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":126,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":324,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":12,"com.graphhopper.GraphHopperTest.testLoadOSM":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":228,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":311,"com.graphhopper.reader.OSMReaderTest.testSort":39,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":22,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":175,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":11,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":305,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":155,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":209,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":165,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":188,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":84,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":30,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":245,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":189,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":31,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":152,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":241,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":297,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":196,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":198,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":0,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":66,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":67,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":140,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":24,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":60,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":65,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":256,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":253,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":288,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":17,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":128,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":167,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":220,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":118,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":325,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":141,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":124,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":252,"com.graphhopper.coll.CompressedArrayTest.testCompress2":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":247,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":36,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":184,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":301,"com.graphhopper.GraphHopperAPITest.testLoad":41,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":29,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":197,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":75,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":308,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":78,"com.graphhopper.storage.LevelGraphStorageTest.testClone":130,"com.graphhopper.reader.OSMReaderTest.testBarriers":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":298,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":96,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":59,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":276,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":19,"com.graphhopper.util.GHUtilityTest.testCopy":116,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":154,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":74,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":192,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":92,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":120,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":226,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":239,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":299,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":320,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":289,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":117,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":202,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":20,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":156,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":212,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":205,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":4,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":204,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":108,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":123,"com.graphhopper.reader.PrinctonReaderTest.testRead":279,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":261,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":64,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":135,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":162,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":285,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":129,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":257,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":190,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":314,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":264,"com.graphhopper.reader.OSMReaderTest.testFoot":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":290,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":49,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":158,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":166,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":215,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":313,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":50,"com.graphhopper.reader.OSMReaderTest.testOneWay":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":231,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":83,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":246,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":134,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":270,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":234,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":223,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":255,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":18,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":307,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":107,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":95,"com.graphhopper.coll.OSMIDMapTest.testGet":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":300,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":90,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":93,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":105,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":237,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":70,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":275,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":216,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":25,"com.graphhopper.reader.OSMReaderTest.testMain":38,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":277,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":238,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":274,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":243,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":1,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":13,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":294,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":53,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":81,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":139,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":266,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":195,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":159,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":172,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":136,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":281,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":249,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":142,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":177,"com.graphhopper.util.SimpleIntDequeTest.testPush":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":89,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":260,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":271,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":47,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":312,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":80,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":133,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":210,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":2,"com.graphhopper.GraphHopperTest.testFootAndCar":34,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":91,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":137,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":194,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":186,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":191,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":157,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":179,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":213,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":113,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":147,"com.graphhopper.reader.OSMReaderTest.testRelation":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":28,"com.graphhopper.GraphHopperTest.testPrepareOnly":101,"com.graphhopper.GraphHopperTest.testVia":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":287,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":278,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":6,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":122,"com.graphhopper.GraphHopperTest.testFootOnly":37,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":200,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":173,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":217,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":79,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":323,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":119,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":182,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":214,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":16,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":57,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":104,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":248,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":296}}]
