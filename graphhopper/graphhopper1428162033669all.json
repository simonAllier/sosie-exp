[{"failures":[],"tindex":"ef13d011-dae0-11e4-8df6-89d8e405a9ff","variableMapping":{"tmp":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[],"tindex":"ef146c52-dae0-11e4-8df6-3be0d9a3d178","variableMapping":{"value":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"ef149363-dae0-11e4-8df6-7986291e4ad3","variableMapping":{"daType":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:121","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[0],"tindex":"ef149364-dae0-11e4-8df6-e3ae71961af3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[],"tindex":"ef149365-dae0-11e4-8df6-dd258e46b002","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"ef149366-dae0-11e4-8df6-c1aac30bbc3c","variableMapping":{"tmp":"i","initializedCounter":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[0,1,2],"tindex":"ef149367-dae0-11e4-8df6-af91495955a3","variableMapping":{"edgeId":"index","nextEdge":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"ef149368-dae0-11e4-8df6-ad9de772c14d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"ef149369-dae0-11e4-8df6-11fba922aeea","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"removed","id":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:229","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"ef14936a-dae0-11e4-8df6-9b7fe0304e17","variableMapping":{"size":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:136","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-1},{"failures":[97,96],"tindex":"ef14936b-dae0-11e4-8df6-014907e86395","variableMapping":{"size":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[19,20,22,98,99,100,101,102,97,103,87,90,92],"tindex":"ef14936c-dae0-11e4-8df6-af93e1c9f3cc","variableMapping":{"i":"frontIndex","to":"frontIndex","lonSize":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"ef14936d-dae0-11e4-8df6-836829e75689","variableMapping":{"size":"b","from":"b","end":"b"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":0},{"failures":[],"tindex":"ef14ba7e-dae0-11e4-8df6-7fd18c5be086","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"size","nextEdge":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"ef14ba7f-dae0-11e4-8df6-d91292bb43da","variableMapping":{"shift":"shift","preferWayEncoder":"wayTypeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"ef14ba80-dae0-11e4-8df6-63d0ed54be65","variableMapping":{"finishedTo":"storing","finishedFrom":"storing"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"ef14ba81-dae0-11e4-8df6-1b79644a984c","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[15,16,17,104,105,106,107,108,109,110,111,112,23,24,25,113,114,115,116,117,118,119,120,75,76,77,81],"tindex":"ef14ba82-dae0-11e4-8df6-898ce4162368","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"ef14ba83-dae0-11e4-8df6-b761bc717c3b","variableMapping":{"flags":"turnRestrictionBit","mask":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"ef14ba84-dae0-11e4-8df6-9d9a2c3d9693","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[7,121,27,122,28,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,36,139,140,141,142,143,38,144],"tindex":"ef14ba85-dae0-11e4-8df6-ef6794f5667e","variableMapping":{"intVal":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-1},{"failures":[23,116,117,119,145],"tindex":"ef14ba86-dae0-11e4-8df6-4374205b3525","variableMapping":{"need":"nodeA","i":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[146],"tindex":"ef14ba87-dae0-11e4-8df6-9b173e3b7743","variableMapping":{"osmFile":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[1],"tindex":"ef14ba88-dae0-11e4-8df6-df17489bc186","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-1},{"failures":[77,83,84],"tindex":"ef14ba89-dae0-11e4-8df6-9bf8f49831cc","variableMapping":{"bytePos":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"ef14ba8a-dae0-11e4-8df6-3bdea29ffeab","variableMapping":{"this":"this","speed":"speed","encoded":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:90","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":0},{"failures":[0,1],"tindex":"ef14ba8b-dae0-11e4-8df6-99cc16af6c23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[1],"tindex":"ef14e19c-dae0-11e4-8df6-0df0ae2c75db","variableMapping":{"size":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"ef14e19d-dae0-11e4-8df6-d7e5644a4b82","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[],"tindex":"ef14e19e-dae0-11e4-8df6-01b202057a21","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:172","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"ef14e19f-dae0-11e4-8df6-11fa07e4256a","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"ef14e1a0-dae0-11e4-8df6-a90e83e95ffb","variableMapping":{"flags":"mask","mask":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"ef14e1a1-dae0-11e4-8df6-e5e6b751c3be","variableMapping":{"enableIfAssert":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1371","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":0},{"failures":[147],"tindex":"ef14e1a2-dae0-11e4-8df6-8bb7274e1319","variableMapping":{"bytePos":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"ef14e1a3-dae0-11e4-8df6-3fa43ab8ae0b","variableMapping":{"res":"shift","value":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"ef14e1a4-dae0-11e4-8df6-dd635f45cf49","variableMapping":{"numTiles":"delta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[148,149,150,151,152,153,154,155,147,156,157,158,159,160,161,162,163,164,165,166,167,168,169,83,84,85,86,88,89,90,91,94,95,96],"tindex":"ef14e1a5-dae0-11e4-8df6-653bf094a23d","variableMapping":{"versionHint":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"ef14e1a6-dae0-11e4-8df6-33650196d699","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[170,7,8,171,172,9,173,174,175,176,177,178,179,180,181,182,121,183,184,185,186,187,188,189,190,191,10,192,193,194,195,196,11,197,198,199,200,12,201,13,14,202,203,204,205,15,16,17,104,206,105,207,208,106,107,108,109,209,110,111,210,211,212,213,214,215,216,217,18,19,20,21,218,22,219,220,221,222,223,224,225,226,112,227,228,229,23,24,25,113,230,114,231,232,115,116,117,118,233,119,120,234,27,122,235,28,29,236,237,30,238,239,240,241,242,243,244,245,246,247,123,248,249,250,251,252,253,254,255,256,31,257,258,259,260,261,32,262,263,264,265,33,266,34,35,267,268,124,125,269,270,126,271,127,128,129,130,272,131,132,133,273,134,135,274,136,137,275,276,277,278,138,279,36,139,140,141,280,281,142,282,283,284,143,285,286,287,288,289,290,37,291,292,38,39,293,294,40,295,296,297,298,299,300,301,302,303,304,144,305,306,307,308,309,310,311,312,313,41,314,315,316,317,318,42,319,320,321,322,43,323,44,45,324,325,326,327,328,329,330,331,332,48,333,334,335,49,50,51,52,100,101,336,337,0,102,97,103,1,2,338,53,54,339,340,55,56,57,57,58,58,341,341,59,59,60,60,61,61,62,62,63,63,64,64,342,342,65,65,66,66,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,145,374,375,67,376,377,378,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,379,380,381],"tindex":"ef1508b7-dae0-11e4-8df6-b5509e7e0539","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[382,90],"tindex":"ef1508b8-dae0-11e4-8df6-8fc893c420d6","variableMapping":{"currentEntry":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[0,1],"tindex":"ef1508b9-dae0-11e4-8df6-b5b69da6df86","variableMapping":{"this":"g","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1330","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.getAllEdges()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-1},{"failures":[],"tindex":"ef1508ba-dae0-11e4-8df6-855c2979629e","variableMapping":{"line":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"ef1508bb-dae0-11e4-8df6-57ed440dad94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[383,149,151,152,147,384,157,159,160,385,162,164,167,168],"tindex":"ef152fcc-dae0-11e4-8df6-8d52cf956815","variableMapping":{"location":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[386,387,388,389,390,391,392],"tindex":"ef152fcd-dae0-11e4-8df6-cf0b152a75fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[393,78],"tindex":"ef152fce-dae0-11e4-8df6-df483459472f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:293","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.close()"},"status":-1},{"failures":[382,90],"tindex":"ef152fcf-dae0-11e4-8df6-a15fd8612901","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-1},{"failures":[],"tindex":"ef152fd0-dae0-11e4-8df6-47c99952e1d5","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"noOfStates","id":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[],"tindex":"ef152fd1-dae0-11e4-8df6-23bad99f2cfc","variableMapping":{"eleDelta":"resultOrientation","decEleSum":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"ef152fd2-dae0-11e4-8df6-074936574005","variableMapping":{"silent":"storing"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"ef152fd3-dae0-11e4-8df6-0b022b2aa7d9","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[174,184,190,11,197,239,249,255,32,262,269,133,137,139,140,296,306,312,42,319,0,103],"tindex":"ef152fd4-dae0-11e4-8df6-57d59468b277","variableMapping":{"index":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"ef152fd5-dae0-11e4-8df6-1bdce98fa532","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:538","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        double double = com.graphhopper.routing.util.EncodedValue.getValue(long);\n        if (double == 0)\n            return ((double)(com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())) / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n        return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.getDouble(long, int);\n}"},"status":-2},{"failures":[],"tindex":"ef152fd6-dae0-11e4-8df6-c93f2fe543d1","variableMapping":{"maxMCSpeed":"r","speed":"absY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-2},{"failures":[],"tindex":"ef152fd7-dae0-11e4-8df6-9deec6148907","variableMapping":{"intVal":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:229","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[394,386,77,81,84],"tindex":"ef152fd8-dae0-11e4-8df6-8b23845d8bf3","variableMapping":{"scDirMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[97],"tindex":"ef152fd9-dae0-11e4-8df6-d9c219364979","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"ef152fda-dae0-11e4-8df6-cf05206ac296","variableMapping":{"str":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"ef152fdb-dae0-11e4-8df6-17b9be63461f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[52,146,395,396,397,388,398,399,74,75,76,77,78,80,83,84,85,87,90,91,92,93,94,95,96],"tindex":"ef152fdc-dae0-11e4-8df6-bd8126096fa4","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"ef1556ed-dae0-11e4-8df6-0b6ac247da04","variableMapping":{"str":"key","this":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:180","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (((\", minEntry=(\" + com.graphhopper.coll.GHSortedCollection.(peekKey())) + \"=>\") + com.graphhopper.coll.GHSortedCollection.(peekValue())) + \")\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-2},{"failures":[],"tindex":"ef1556ee-dae0-11e4-8df6-85fb1a80cb53","variableMapping":{"graphHopperFolder":"com.graphhopper.routing.util.EncodingManager.BIKE2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"ef1556ef-dae0-11e4-8df6-f314ba8c4f22","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"ef1556f0-dae0-11e4-8df6-514077e6cc4a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[7,9,173,174,181,121,194,198,12,202,27,28,30,238,239,246,123,259,263,33,267,124,125,269,130,131,138,141,142,143,38,40,295,296,303,144,316,320,43,324,326,328,329,52,0,1,2,395,388,400,401,147,402,60,63,343,345,346,351,352,353,356,357,358,362,365,368,370,371,378,74,75,76,77,78,80,81,83,84,85,87,90,91,92,93,94,96,380,381],"tindex":"ef1556f1-dae0-11e4-8df6-1b49da091f13","variableMapping":{"initialBits":"directionBitMask","allBits":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[],"tindex":"ef1556f2-dae0-11e4-8df6-6968ade328c1","variableMapping":{"need":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"ef1556f3-dae0-11e4-8df6-a137d230f2f1","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1024","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks().size()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[147],"tindex":"ef1556f4-dae0-11e4-8df6-49ec6918fa49","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[389,390,391,392,83],"tindex":"ef1556f5-dae0-11e4-8df6-915241aec8eb","variableMapping":{"len":"ferryBit","start":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[],"tindex":"ef1556f6-dae0-11e4-8df6-b3aa810c676a","variableMapping":{"bytePos":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[0],"tindex":"ef1556f7-dae0-11e4-8df6-1d6d4b4355c9","variableMapping":{"index":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[],"tindex":"ef1556f8-dae0-11e4-8df6-b91461548943","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[403,404,405,406,407,408,409,410,411,412],"tindex":"ef1556f9-dae0-11e4-8df6-f101476bf892","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"ef1556fa-dae0-11e4-8df6-5de54092a0c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[356,357,358,67,376,378],"tindex":"ef1556fb-dae0-11e4-8df6-edfe36f28650","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"ef1556fc-dae0-11e4-8df6-eb1d561255e5","variableMapping":{"ab_rb":"lon","ab_ar":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[7,9,173,174,181,121,194,198,12,202,27,28,30,238,239,246,123,259,263,33,267,124,125,269,130,131,138,141,142,143,38,40,295,296,303,144,316,320,43,324,326,328,329,52,0,1,2,395,388,400,401,402,60,63,343,345,346,351,352,353,356,357,358,362,365,368,370,371,378,74,75,76,77,78,80,81,83,84,85,87,90,91,92,93,94,96,380,381],"tindex":"ef157e0d-dae0-11e4-8df6-ffef059385b7","variableMapping":{"edgePointer":"directionBitMask","edgeEntryBytes":"shift","nextEdge":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:797","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[413,83],"tindex":"ef157e0e-dae0-11e4-8df6-93f5c261f5ab","variableMapping":{"index":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"ef157e0f-dae0-11e4-8df6-117b568cc112","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"ef157e10-dae0-11e4-8df6-250550be653b","variableMapping":{"bitsForEdgeFlags":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"ef157e11-dae0-11e4-8df6-1f510021a39e","variableMapping":{"a":"finishedFrom","approx":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":0},{"failures":[],"tindex":"ef157e12-dae0-11e4-8df6-13c3166cc3bf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:99","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"Africa\" , \"Australia\" , \"Eurasia\" , \"Islands\" , \"North_America\" , \"South_America\" }"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"ef157e13-dae0-11e4-8df6-7db6ecaba9b9","variableMapping":{"bb":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:279","type":"CtIfImpl","sourcecode":"if (java.nio.ByteBuffer instanceof java.nio.MappedByteBuffer) {\n    try {\n        ((java.nio.MappedByteBuffer)(java.nio.ByteBuffer)).isLoaded();\n        return true;\n    } catch (java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException) {\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"ef157e14-dae0-11e4-8df6-3bcd20053f24","variableMapping":{"maxMCSpeed":"x","speed":"absY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[],"tindex":"ef157e15-dae0-11e4-8df6-77a335716c3a","variableMapping":{"bytePos":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"ef157e16-dae0-11e4-8df6-b9ab9f899420","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:101","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[0,2],"tindex":"ef157e17-dae0-11e4-8df6-3fa1e023dc0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[148,152,156,160,164,168],"tindex":"ef157e18-dae0-11e4-8df6-076dbb040c25","variableMapping":{"key":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[356,357,358,67,376,378],"tindex":"ef157e19-dae0-11e4-8df6-6f43b55539dd","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"ef157e1a-dae0-11e4-8df6-438012730178","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"ef157e1b-dae0-11e4-8df6-4b9d7f6f6806","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:312","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString())"},"status":0},{"failures":[],"tindex":"ef157e1c-dae0-11e4-8df6-5bda05367805","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[204,205,15,16,17,104,206,105,207,208,106,107,108,109,209,110,111,226,112,228,229,23,24,25,113,230,114,231,232,115,116,117,118,233,119,120,326,327,366,370,371,145,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"ef157e1d-dae0-11e4-8df6-2dfaf410912f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"ef157e1e-dae0-11e4-8df6-13059cadd63c","variableMapping":{"res":"flags","maxBits":"encoderCount","value":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:254","type":"CtForImpl","sourcecode":"for ( ; int > 0 ; long >>= 1) {\n    long <<= 1;\n    long |= long & 1;\n    int--;\n    if (long == 0) {\n        long <<= int;\n        break;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"ef157e1f-dae0-11e4-8df6-8347486abc2f","variableMapping":{"mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[0,1],"tindex":"ef15a530-dae0-11e4-8df6-25bd1acf37d7","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"connectedId","nextEdge":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"ef15a531-dae0-11e4-8df6-df2123e3d8d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"ef15a532-dae0-11e4-8df6-9b7ff3cbfbbd","variableMapping":{"size":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"ef15a533-dae0-11e4-8df6-6bc7db72bb34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":318,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":374,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":37,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":399,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":125,"com.graphhopper.reader.OSMReaderTest.testFerry":83,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":329,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":158,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":24,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":73,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":247,"com.graphhopper.coll.CompressedArrayTest.testCompress":404,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":14,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":276,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":353,"com.graphhopper.GraphHopperTest.testPrepare":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":282,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":343,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":367,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":217,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":168,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":101,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":228,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":167,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":384,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":359,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":365,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":16,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":27,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":356,"com.graphhopper.GraphHopperTest.testLoadOSM":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":17,"com.graphhopper.reader.OSMReaderTest.testSort":86,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":29,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":199,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":7,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":283,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":63,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":265,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":317,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":179,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":122,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":30,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":304,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":165,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":114,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":186,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":371,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":113,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":362,"com.graphhopper.coll.OSMIDMapTest.testGetLong":70,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":361,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":256,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":310,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":38,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":312,"com.graphhopper.coll.CompressedArrayTest.testCompress2":403,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":191,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":385,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":123,"com.graphhopper.GraphHopperAPITest.testLoad":326,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":183,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":174,"com.graphhopper.storage.LevelGraphStorageTest.testClone":298,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":413,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":2,"com.graphhopper.reader.OSMReaderTest.testBarriers":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":238,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":226,"com.graphhopper.util.GHUtilityTest.testCopy":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":364,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":120,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":214,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":392,"com.graphhopper.routing.PathTest.testFindInstruction":56,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":239,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":328,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":323,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":211,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":200,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":263,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":251,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":349,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":127,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":172,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":393,"com.graphhopper.util.InstructionListTest.testWayList2":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":107,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":202,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":243,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":157,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":156,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":53,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":302,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":248,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":18,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":363,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":67,"com.graphhopper.coll.OSMIDMapTest.testGet":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":246,"com.graphhopper.routing.PathBidirRefTest.testExtract":336,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":386,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":41,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":139,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":166,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":111,"com.graphhopper.util.GHUtilityTest.testSort2":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":372,"com.graphhopper.reader.OSMReaderTest.testMain":85,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":39,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":255,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":117,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":390,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":146,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":281,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":144,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":98,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":308,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":324,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":60,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":383,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":311,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":95,"com.graphhopper.storage.StorablePropertiesTest.testStore":26,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":46,"com.graphhopper.storage.GraphHopperStorageTest.testClone":176,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":280,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":388,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":185,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":396,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":286,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":128,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":289,"com.graphhopper.routing.PathTest.testTime":340,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":44,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":299,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":275,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":315,"com.graphhopper.util.GHUtilityTest.testSortDirected":334,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":59,"com.graphhopper.GraphHopperTest.testFootOnly":81,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":230,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":135,"com.graphhopper.search.NameIndexTest.testCreate":6,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":57,"com.graphhopper.routing.QueryGraphTest.testOneWay":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":209,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":408,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":15,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":405,"com.graphhopper.reader.OSMReaderTest.testWithBounds":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":389,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":61,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":277,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":154,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":295,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":293,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":169,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":258,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":252,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":9,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":358,"com.graphhopper.util.InstructionListTest.testWayList":50,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":201,"com.graphhopper.GraphHopperAPITest.testDisconnected179":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":129,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":409,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":270,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":381,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":143,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":76,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":178,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":354,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":194,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":369,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":352,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":43,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":237,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":161,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":170,"com.graphhopper.routing.PathTest.testWayList":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":132,"com.graphhopper.coll.OSMIDMapTest.testGet2":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":378,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":257,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":188,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":244,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":231,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":309,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":232,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":401,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":162,"com.graphhopper.util.GHUtilityTest.testSort":333,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":279,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":412,"com.graphhopper.search.NameIndexTest.testPut":4,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":267,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":229,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":22,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":150,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":54,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":219,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":376,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":0,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":36,"com.graphhopper.routing.PathTest.testFound":339,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":82,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":147,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":322,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":288,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":249,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":5,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":131,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":181,"com.graphhopper.util.InstructionListTest.testEmptyList":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":370,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":400,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":373,"com.graphhopper.reader.PrinctonReaderTest.testRead":380,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":12,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":25,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":245,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":272,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":124,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":254,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":148,"com.graphhopper.reader.OSMReaderTest.testFoot":84,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":138,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":207,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":411,"com.graphhopper.reader.OSMReaderTest.testOneWay":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":208,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":184,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":197,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":264,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":136,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":355,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":397,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":346,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":273,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":341,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":171,"com.graphhopper.routing.PathBidirRefTest.testExtract2":337,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":108,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":164,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":216,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":3,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":196,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":223,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":285,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":394,"com.graphhopper.util.SimpleIntDequeTest.testPush":99,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":351,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":104,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":198,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":301,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":10,"com.graphhopper.GraphHopperTest.testFootAndCar":77,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":306,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":163,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":241,"com.graphhopper.GraphHopperTest.testPrepareOnly":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":375,"com.graphhopper.GraphHopperTest.testVia":74,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":269,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":92,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":290,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":52,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":195,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":274,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":398,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":321,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":319,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":28}}]
