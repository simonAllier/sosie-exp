[{"failures":[],"tindex":"d92c7921-dbed-11e4-bf27-8b9dcaf4e781","variableMapping":{"tmpDegreeCounter":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":0},{"failures":[0,1,2,3],"tindex":"d92f3842-dbed-11e4-bf27-2fac34426c5b","variableMapping":{"dataAccess":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:163","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[4,5],"tindex":"d92f3843-dbed-11e4-bf27-7bc65632d5a9","variableMapping":{"speedVal":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,0,107,108,109,110,111,112,113,114,1,115,116,117,118,119,120,121,122,123,124,125,126,2,3,127],"tindex":"d92f3844-dbed-11e4-bf27-51a59a325cf3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:623","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[128],"tindex":"d92f3845-dbed-11e4-bf27-f1ac69e464d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"d92f3846-dbed-11e4-bf27-a3f5aee509a9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"d92f3847-dbed-11e4-bf27-0fd9a4485796","variableMapping":{"relationCodeEncoder":"wayTypeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[129,130,131,132,133,134,135,136,137,138,112,139,140,141,142,143,144,145,146,147,113,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"tindex":"d92f5f58-dbed-11e4-bf27-c9ca37b2e594","variableMapping":{"size":"index","index":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"d92f5f59-dbed-11e4-bf27-b97a788f78ad","variableMapping":{"high":"high","guess":"guess","low":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":0},{"failures":[29,62,75,109,121,173],"tindex":"d92f5f5a-dbed-11e4-bf27-590823bdb884","variableMapping":{"retBucket":"maxTurnCosts","storedKey":"turnRestrictionBit","bucketSize":"shift","key":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:107","type":"CtIfImpl","sourcecode":"if (long == long) {\n    return int * (int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[],"tindex":"d92f5f5b-dbed-11e4-bf27-c7a0916d75b0","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":-2},{"failures":[174,175],"tindex":"d92f5f5c-dbed-11e4-bf27-236ed45976f0","variableMapping":{"size":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[9,17,26,28,38,46,47,55,72,74,84],"tindex":"d92f5f5d-dbed-11e4-bf27-612b30d75e98","variableMapping":{"res":"unpavedBit","value":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,192,193,43,194,195,128,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,196,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,197,198,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,0,107,108,109,110,111,199,200,201,202,129,130,203,131,204,132,205,206,207,133,134,135,136,137,138,112,139,140,141,142,143,144,145,146,147,113,148,149,150,151,152,153,154,155,156,157,158,159,160,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,114,223,224,225,1,115,116,117,118,119,120,121,122,123,124,125,126,2,3,226,227,161,162,163,164,228,229,165,230,166,231,167,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,168,274,169,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,170,127,171,421,422,172,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466],"tindex":"d92f866e-dbed-11e4-bf27-d139b3c0f6ad","variableMapping":{"name":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[23,45,65,69],"tindex":"d92f866f-dbed-11e4-bf27-39da74585180","variableMapping":{"fromNode":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[],"tindex":"d92f8670-dbed-11e4-bf27-69e16898d562","variableMapping":{"size":"endNode","index":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[11,31,48,77,89,98,118,124],"tindex":"d92f8671-dbed-11e4-bf27-693fb31a4a89","variableMapping":{"initialized":"locked"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"d92f8672-dbed-11e4-bf27-addee2c79a57","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:946","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Make sure you graph accepts 3D data\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":0},{"failures":[],"tindex":"d92f8673-dbed-11e4-bf27-79f2c209e983","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","entryVal":"com.graphhopper.routing.util.EncodingManager.BIKE2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"d92f8674-dbed-11e4-bf27-d990b1a6f020","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"d92f8675-dbed-11e4-bf27-130280138f0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"d92f8676-dbed-11e4-bf27-277098d3da11","variableMapping":{"edgePointer":"flags","maxEdges":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[7,9,17,26,28,38,46,47,55,64,72,74,84],"tindex":"d92fd497-dbed-11e4-bf27-1b3829217c5c","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"d92fd498-dbed-11e4-bf27-c15b09ca6674","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"d92fd499-dbed-11e4-bf27-bfbedad72a0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"d92fd49a-dbed-11e4-bf27-a57f88ef2010","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:66","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[45],"tindex":"d92fd49b-dbed-11e4-bf27-cdf8080d06b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[178,185,186,187,188,66,67,157,208,209,211,212,213,214,215,216,218,219,223,224,1,115,116,117,118,119,120,121,122,124,125,126,2,3,161,162,163,164,228,229,165,166,231,167,232,467,468,469,470,471,472,473,474,244,245,246,247,249,259,260,261,277,278,279,475,292,295,296,300,321,327,332,334,335,339,340,344,365,371,376,378,379,408,476,422,424,425,429,450,456,461,463,464,477],"tindex":"d92ffbac-dbed-11e4-bf27-bde3a952573d","variableMapping":{"size":"segmentSizePower","delta":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,43,194,195,128,66,67,91,200,201,129,130,131,204,132,205,206,207,133,134,135,136,137,138,112,139,140,141,142,143,144,145,146,147,113,148,149,150,151,152,153,154,155,156,157,158,159,160,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,222,114,223,224,1,115,116,117,118,119,120,121,122,123,124,125,126,2,478,3,226,227,173,479,480,481,161,162,163,164,228,229,165,166,231,167,232,234,235,467,468,469,470,471,472,482,473,474,237,238,239,240,242,243,483,244,245,246,247,249,250,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,168,274,169,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,484,475,292,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,485,393,408,486,476,487,488,489,490,491,492,493,420,170,127,171,421,422,172,423,424,425,426,427,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,494,477,495,496,497,498,499,500,501],"tindex":"d92ffbad-dbed-11e4-bf27-9707a25046cb","variableMapping":{"id":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[9,13,17,20,502,503,24,26,28,29,33,38,42,46,47,50,55,59,61,62,64,70,72,74,75,79,84,88,109,121],"tindex":"d92ffbae-dbed-11e4-bf27-2f8dfa6cf7d8","variableMapping":{"bits":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,192,193,43,194,195,128,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,196,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,197,198,89,90,91,92,93,94,95,96,97,504,98,99,100,101,102,103,104,105,106,0,107,108,109,110,111,199,200,201,202,129,130,203,131,204,132,205,206,207,133,134,135,136,137,138,112,139,140,141,142,143,144,145,146,147,113,148,149,150,151,152,153,154,155,156,157,158,159,160,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,114,223,224,225,1,115,116,117,118,119,120,121,122,123,124,125,126,2,3,226,227,161,162,163,164,228,229,165,230,166,231,167,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,168,274,169,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,170,127,171,421,422,172,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466],"tindex":"d93022bf-dbed-11e4-bf27-9bddf491cb8d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[129,131,133,134,138,112,139,140,141,142,143,144,145,146,147,113,149,150,151,152,153,154,156,157,158,159,160,163,164,228,229,165,231,167,234],"tindex":"d93022c0-dbed-11e4-bf27-bb1ead02b7ef","variableMapping":{"fullyLoaded":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1079","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[100],"tindex":"d93049d1-dbed-11e4-bf27-f94a8a44a7ea","variableMapping":{"sacScale":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[505,1],"tindex":"d93070e2-dbed-11e4-bf27-09f337dfffd4","variableMapping":{"str":"str","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:80","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[],"tindex":"d93070e3-dbed-11e4-bf27-7d1bc61dc54d","variableMapping":{"r":"bwSlower","x":"decDist2DSum","absY":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[0],"tindex":"d93070e4-dbed-11e4-bf27-51a5e655f815","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[277,287],"tindex":"d93070e5-dbed-11e4-bf27-55ad435781dd","variableMapping":{"need":"nodeB","i":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"d93070e6-dbed-11e4-bf27-c39df2b8536b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[4,5],"tindex":"d93070e7-dbed-11e4-bf27-a3d51320d409","variableMapping":{"size":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"d93070e8-dbed-11e4-bf27-e5d12155053e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"d930bf09-dbed-11e4-bf27-f1ecab81133c","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"maxTurnCosts","flags":"turnRestrictionBit","roundaboutBit":"turnRestrictionBit","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"maxTurnCosts","value":"restricted","forwardBit":"turnRestrictionBit","key":"maxTurnCosts","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"maxTurnCosts","backwardBit":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-2},{"failures":[194],"tindex":"d930bf0a-dbed-11e4-bf27-4b3c3a7ab51a","variableMapping":{"segmentSizeInBytes":"biggestStart","length":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"d930e61b-dbed-11e4-bf27-a72629faced6","variableMapping":{"flags":"forwardBit","mask":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[192,195,128],"tindex":"d930e61c-dbed-11e4-bf27-e9aa8a43e194","variableMapping":{"turnCostIndex":"start","nextTurnCostIndex":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[9,17,26,28,38,46,47,55,72,74,84],"tindex":"d930e61d-dbed-11e4-bf27-0fce49fffc3b","variableMapping":{"shift":"encoded","flags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[121],"tindex":"d930e61e-dbed-11e4-bf27-5544efdd85f5","variableMapping":{"bits":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"d930e61f-dbed-11e4-bf27-c32125202ce6","variableMapping":{"width":"removed","lonSimilar":"locs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"d930e620-dbed-11e4-bf27-415795d3e41c","variableMapping":{"i":"subNetworks"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"d930e621-dbed-11e4-bf27-4f58eb4b9181","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[161,165,166,231,232,475,506,292,295,339,422,424],"tindex":"d930e622-dbed-11e4-bf27-411c97d3fb17","variableMapping":{"res":"key","point":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:168","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"; \" + (com.graphhopper.util.shapes.GHPoint.toString())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-1},{"failures":[507,508,509,257,263,265,266,275,281,283,284,510,511,512,513,514,515,516,517,518],"tindex":"d930e623-dbed-11e4-bf27-031f6e9bf90b","variableMapping":{"tmpDegreeCounter":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"d930e624-dbed-11e4-bf27-ed2dd19345f5","variableMapping":{"java.lang.Double.MAX_VALUE":"java.lang.Double.POSITIVE_INFINITY","java.lang.Integer.MAX_VALUE":"maxTurnCosts","storedInt":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:371","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"d930e625-dbed-11e4-bf27-3504c34fab0a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[0],"tindex":"d930e626-dbed-11e4-bf27-dd80e58e974a","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[138,112,139,157,158,160],"tindex":"d930e627-dbed-11e4-bf27-bf6deef243ef","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"d930e628-dbed-11e4-bf27-256e3e34c5ad","variableMapping":{"unpavedBit":"encoded","shift":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"d9318269-dbed-11e4-bf27-8f5e6214b4ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[507,508,509,257,263,265,266,275,281,283,284,510,511,512,513,514,515,516,517,518],"tindex":"d931826a-dbed-11e4-bf27-776e83e17903","variableMapping":{"latSize":"allBits","size":"i","lonSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"d93245bb-dbed-11e4-bf27-7bdf454446f7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"d93245bc-dbed-11e4-bf27-cf5f3a9cf164","variableMapping":{"need":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[43],"tindex":"d93245bd-dbed-11e4-bf27-730cca924630","variableMapping":{"maxLeafEntries":"minNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"d93245be-dbed-11e4-bf27-ad1a892526bc","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.trimToSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-2},{"failures":[],"tindex":"d93245bf-dbed-11e4-bf27-b5c5e372901f","variableMapping":{"currentBucket":"y2","retBucket":"y2","currentIndex":"y1","bucketSize":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"d93245c0-dbed-11e4-bf27-d3345e058936","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"d93245c1-dbed-11e4-bf27-a778f47b9cba","variableMapping":{"size":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"d93245c2-dbed-11e4-bf27-23f70e190520","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"d93245c3-dbed-11e4-bf27-6163629e55f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[8,9,10,12,14,17,18,20,23,25,32,34,35,38,39,41,42,45,47,49,51,52,55,56,58,59,69,71,78,80,81,84,85,87,88],"tindex":"d93245c4-dbed-11e4-bf27-e1560e9dfe35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:434","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[121],"tindex":"d93245c5-dbed-11e4-bf27-33f4422f7141","variableMapping":{"res":"forwardBit","maxBit":"forwardBit","value":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,43,194,195,128,66,67,91,200,201,129,130,131,204,132,205,206,207,133,134,135,136,137,138,112,139,140,141,142,143,144,145,146,147,113,148,149,150,151,152,153,154,155,156,157,158,159,160,208,209,210,211,212,213,214,215,216,217,219,223,224,1,115,116,117,118,119,120,121,122,124,125,126,2,3,226,227,173,161,163,164,228,229,165,166,231,167,232,234,235,237,238,239,240,242,243,244,245,246,247,249,250,251,252,253,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,272,273,168,274,169,275,276,277,278,279,280,282,283,284,285,286,287,288,290,291],"tindex":"d93245c6-dbed-11e4-bf27-35b6c371c8e8","variableMapping":{"noNumberValue":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:332","type":"CtReturnImpl","sourcecode":"return int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-2},{"failures":[],"tindex":"d93245c7-dbed-11e4-bf27-93a894a66338","variableMapping":{"high":"tmpValue","highKey":"tmpValue","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"d93245c8-dbed-11e4-bf27-0fd119e06dca","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:774","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":0},{"failures":[],"tindex":"d9326cd9-dbed-11e4-bf27-5be5c2ed0d05","variableMapping":{"size":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"d9326cda-dbed-11e4-bf27-f3d1370ca12f","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"shift","entityType":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[8,12,17,20,32,34,38,42,49,51,55,59,78,80,84,88],"tindex":"d9326cdb-dbed-11e4-bf27-f90dd2a70fc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:449","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[9,13,17,20,502,503,24,26,28,29,33,38,42,46,47,50,55,59,61,62,64,70,72,74,75,79,84,88,109,121,123],"tindex":"d9326cdc-dbed-11e4-bf27-bb922039109d","variableMapping":{"bytePos":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[131,133,135,140,113,149,152,156,157,158,160,127,421],"tindex":"d9326cdd-dbed-11e4-bf27-4b1896c3f3a6","variableMapping":{"dist":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","com.graphhopper.util.DistanceCalcEarth.R":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-1},{"failures":[],"tindex":"d9326cde-dbed-11e4-bf27-b548b6b1ddcd","variableMapping":{"bits":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[507,508,509,257,263,265,266,275,281,283,284,510,511,513,514,515,516,517,518],"tindex":"d9326cdf-dbed-11e4-bf27-e911992a274b","variableMapping":{"gradient":"minLonTmp","yend":"minLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-1},{"failures":[],"tindex":"d9326ce0-dbed-11e4-bf27-1f0f6197f83f","variableMapping":{"bytePos":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[96],"tindex":"d9326ce1-dbed-11e4-bf27-f90ab8475d62","variableMapping":{"directionBitMask":"ferryBit","flags":"acceptBit","dir":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"d9326ce2-dbed-11e4-bf27-931564ef2fc9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"d9326ce3-dbed-11e4-bf27-07199785296d","variableMapping":{"size":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"d9326ce4-dbed-11e4-bf27-dbb9c0abf504","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[519,520,106],"tindex":"d9326ce5-dbed-11e4-bf27-39b81bf6b082","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,192,193,43,194,195,128,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,196,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,197,198,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,0,107,108,109,110,111,199,200,201,202,129,130,203,131,204,132,205,206,207,133,134,135,136,137,138,112,139,140,141,142,143,144,145,146,147,113,148,149,150,151,152,153,154,155,156,157,158,159,160,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,114,223,224,225,1,115,116,117,118,119,120,121,122,124,125,126,2,3,226,227,161,162,163,164,228,229,165,230,166,231,167,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,168,274,169,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,170,127,171,421,422,172,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466],"tindex":"d93293f6-dbed-11e4-bf27-03e9801ce0b1","variableMapping":{"param":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:65","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(\"-\", \"_\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"d93293f7-dbed-11e4-bf27-9f5b89c9c9fe","variableMapping":{"nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"d93293f8-dbed-11e4-bf27-a3b21b691a52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 1))"},"status":-2},{"failures":[],"tindex":"d93293f9-dbed-11e4-bf27-c1f8b884c070","variableMapping":{"byteCount":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[188,520],"tindex":"d93293fa-dbed-11e4-bf27-ebb5e7786f98","variableMapping":{"cp":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[161,165,166,231,232,521,522,292,295,304,326,339,348,370,523,524,386,408,487,490,422,424,433,525,526,495,498],"tindex":"d93293fb-dbed-11e4-bf27-21a593289f8d","variableMapping":{"compressionLevel":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[4,5],"tindex":"d933a56c-dbed-11e4-bf27-398e2a154914","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"d933a56d-dbed-11e4-bf27-41ed5e97710d","variableMapping":{"distance":"com.graphhopper.util.AngleCalc.PI_4","dist":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"d933a56e-dbed-11e4-bf27-eba7ea478e77","variableMapping":{"str":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:274","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"d933a56f-dbed-11e4-bf27-e1e3781e8d22","variableMapping":{"this":"nodes","da":"nodes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"d933a570-dbed-11e4-bf27-5389418f72d9","variableMapping":{"is3D":"edgeBased"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:65","type":"CtIfImpl","sourcecode":"if (boolean)\n    return 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"d933a571-dbed-11e4-bf27-b574251bde4a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[43,194],"tindex":"d933a572-dbed-11e4-bf27-7f53e2adb09a","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"maxCount","tmpNode":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":455,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":155,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":209,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":422,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":519,"com.graphhopper.GraphHopperAPITest.testNoLoad":236,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":383,"com.graphhopper.reader.OSMReaderTest.testFerry":1,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":190,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":191,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":10,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":278,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":162,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":84,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":310,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":486,"com.graphhopper.coll.CompressedArrayTest.testCompress":508,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":16,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":379,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":132,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":403,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":355,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":169,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":497,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":135,"com.graphhopper.GraphHopperTest.testPrepare":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":415,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":129,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":362,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":175,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":113,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":185,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":483,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":17,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":183,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":275,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":195,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":146,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":260,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":335,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":28,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":292,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":516,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":429,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":174,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":138,"com.graphhopper.GraphHopperTest.testLoadOSM":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":267,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":261,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":196,"com.graphhopper.reader.OSMReaderTest.testSort":117,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":43,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":296,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":488,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":374,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":339,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":514,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":416,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":215,"com.graphhopper.storage.RAMDataAccessTest.testHeader":498,"com.graphhopper.routing.DijkstraTest.initializationError":199,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":173,"com.graphhopper.storage.MMapDataAccessTest.testHeader":522,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":331,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":484,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":454,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":526,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":351,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":293,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":305,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":300,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":439,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":282,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":151,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":274,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":280,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":142,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":431,"com.graphhopper.coll.OSMIDMapTest.testGetLong":473,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":320,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":446,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":424,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":448,"com.graphhopper.coll.CompressedArrayTest.testCompress2":507,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":364,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":45,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":311,"com.graphhopper.GraphHopperAPITest.testLoad":234,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":428,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":89,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":356,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":346,"com.graphhopper.storage.LevelGraphStorageTest.testClone":433,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":505,"com.graphhopper.reader.OSMReaderTest.testBarriers":118,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":145,"com.graphhopper.util.GHUtilityTest.testCopy":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":387,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":53,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":291,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":254,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":500,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":13,"com.graphhopper.routing.PathTest.testFindInstruction":224,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":302,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":95,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":189,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":71,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":251,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":375,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":360,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":329,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":315,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":423,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":82,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":63,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":202,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":435,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":388,"com.graphhopper.util.InstructionListTest.testWayList2":187,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":411,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":268,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":380,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":512,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":306,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":26,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":506,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":24,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":334,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":66,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":340,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":437,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":476,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":312,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":144,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":345,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":119,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":487,"com.graphhopper.routing.AStarTest.initializationError":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":157,"com.graphhopper.coll.OSMIDMapTest.testGet":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":309,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":525,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":96,"com.graphhopper.routing.PathBidirRefTest.testExtract":200,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":32,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":450,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":482,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":286,"com.graphhopper.storage.RAMDataAccessTest.testCopy":495,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":489,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":337,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":31,"com.graphhopper.storage.RAMDataAccessTest.testSegments":499,"com.graphhopper.util.GHUtilityTest.testSort2":177,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":152,"com.graphhopper.reader.OSMReaderTest.testMain":116,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":319,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":517,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":40,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":287,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":100,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":413,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":440,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":444,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":465,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":503,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":212,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":69,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":523,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":447,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":2,"com.graphhopper.storage.StorablePropertiesTest.testStore":475,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":477,"com.graphhopper.storage.GraphHopperStorageTest.testClone":348,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":412,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":0,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":105,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":358,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":420,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":57,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":389,"com.graphhopper.routing.PathTest.testTime":114,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":52,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":463,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":434,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":111,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":248,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":270,"com.graphhopper.reader.OSMReaderTest.testRelation":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":402,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":452,"com.graphhopper.util.GHUtilityTest.testSortDirected":181,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":85,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":492,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":211,"com.graphhopper.GraphHopperTest.testFootOnly":167,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":103,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":245,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":485,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":281,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":398,"com.graphhopper.search.NameIndexTest.testCreate":470,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":208,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":524,"com.graphhopper.routing.QueryGraphTest.testOneWay":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":271,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":513,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":259,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":510,"com.graphhopper.reader.OSMReaderTest.testWithBounds":126,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":501,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":193,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":395,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":404,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":61,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":430,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":426,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":83,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":20,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":323,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":104,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":316,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":344,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":139,"com.graphhopper.util.InstructionListTest.testWayList":186,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":30,"com.graphhopper.GraphHopperAPITest.testDisconnected179":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":390,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":325,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":80,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":227,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":418,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":228,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":350,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":246,"com.graphhopper.routing.util.EncodedValueTest.testSwap":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":327,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":136,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":22,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":368,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":149,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":134,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":107,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":461,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":298,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":159,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":289,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":42,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":338,"com.graphhopper.routing.PathTest.testWayList":223,"com.graphhopper.storage.MMapDataAccessTest.testCopy":521,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":417,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":394,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":520,"com.graphhopper.coll.OSMIDMapTest.testGet2":472,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":160,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":490,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":458,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":479,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":322,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":36,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":361,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":307,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":349,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":283,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":284,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":496,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":493,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":77,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":4,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":46,"com.graphhopper.util.GHUtilityTest.testSort":179,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":407,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":518,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":35,"com.graphhopper.search.NameIndexTest.testPut":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":336,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":347,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":253,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":276,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":249,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":73,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":214,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":67,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":237,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":48,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":198,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":480,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":317,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":192,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":443,"com.graphhopper.routing.PathTest.testFound":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":408,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":65,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":232,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":460,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":504,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":34,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":313,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":469,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":393,"com.graphhopper.util.InstructionListTest.testEmptyList":184,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":353,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":494,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":288,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":150,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":99,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":18,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":98,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":153,"com.graphhopper.reader.PrinctonReaderTest.testRead":226,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":279,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":392,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":474,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":511,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":382,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":432,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":318,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":70,"com.graphhopper.reader.OSMReaderTest.testFoot":115,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":406,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":481,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":265,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":464,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":515,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":6,"com.graphhopper.reader.OSMReaderTest.testOneWay":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":266,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":357,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":372,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":330,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":14,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":491,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":76,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":400,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":205,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":509,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":204,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":240,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":396,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":210,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":341,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":478,"com.graphhopper.routing.PathBidirRefTest.testExtract2":201,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":112,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":55,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":269,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":467,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":370,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":241,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":58,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":121,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":419,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":262,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":373,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":180,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":436,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":108,"com.graphhopper.GraphHopperTest.testFootAndCar":229,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":365,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":442,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":47,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":290,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":156,"com.graphhopper.GraphHopperTest.testPrepareOnly":161,"com.graphhopper.GraphHopperTest.testVia":163,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":255,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":384,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":124,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":421,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":188,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":369,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":93,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":122,"com.graphhopper.routing.AStarBidirectionTest.initializationError":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":399,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":21,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":459,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":457,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":295}}]
