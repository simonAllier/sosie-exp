[{"failures":[0],"tindex":"56da91a1-dbac-11e4-8008-afc32409206b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"56dba312-dbac-11e4-8008-59c1e13cb3c0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"56dba313-dbac-11e4-8008-e705aa5856de","variableMapping":{"err":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[48],"tindex":"56dba314-dbac-11e4-8008-d52265d458d1","variableMapping":{"acceptBit":"acceptBit","ferryBit":"ferryBit","footTag":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[49],"tindex":"56dba315-dbac-11e4-8008-b12adecb6ac8","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"56dba316-dbac-11e4-8008-fd7f60327a3d","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.KM_MILE":"minLon","distInMeter":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:76","type":"CtLocalVariableImpl","sourcecode":"double double = (double / 1000) / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,20,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,21,22,24,25,26,27,28,29,30,93,31,32,33,34,94,35,95,36,37,38,39,40,41,42,43,44,45,46,47,96,97,98,99,100,101,102,103,104,105,106,107,108,0,109,110,111,112,113,114],"tindex":"56dba317-dbac-11e4-8008-6f73560b9de4","variableMapping":{"from":"segmentSizePower","lonSize":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:300","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[28,29,30,93,31,33,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"56dba318-dbac-11e4-8008-a97fa5c7d12f","variableMapping":{"y":"maxSpeed","angle":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[],"tindex":"56dba319-dbac-11e4-8008-29e42894b05d","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[127,128,129,130,28,29,30,93,31,33,35,46,106,131,116,118,119,132,121,133,122,134,135,136,137,138,139,140,124,141,126,142,143,144,145,113],"tindex":"56dba31a-dbac-11e4-8008-356cb650ef0d","variableMapping":{"min":"speed","time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:49","type":"CtIfImpl","sourcecode":"if (long < (double))\n    double = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-1},{"failures":[],"tindex":"56dbca2b-dbac-11e4-8008-3bb2b61fba86","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"56dbca2c-dbac-11e4-8008-0754b41e098b","variableMapping":{"err":"locs","tmpErr":"locs","y1":"removed","dLon":"removed","sLat":"locs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"56dbca2d-dbac-11e4-8008-cb1778d8878c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[146,147],"tindex":"56dbca2e-dbac-11e4-8008-653a87778b74","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[56,57,20,65,148,84,26,31,32,33,94],"tindex":"56dbca2f-dbac-11e4-8008-27f2922eb807","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"56dbca30-dbac-11e4-8008-a3bd72d76633","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-2},{"failures":[149,150,151,152],"tindex":"56dbca31-dbac-11e4-8008-dfc940a1046a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"56dbca32-dbac-11e4-8008-b5c3efbf3d1b","variableMapping":{"directionBitMask":"flags","blockByDefault":"backward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"56dbca33-dbac-11e4-8008-c98246eeca81","variableMapping":{"size":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[153,154,115,116,117,155,156,157,158,159,120,160,161,162,123,163,164,165,166,167,125,168,169],"tindex":"56dbca34-dbac-11e4-8008-d927f98d9da9","variableMapping":{"scDirMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"56dbca35-dbac-11e4-8008-4b463f15243c","variableMapping":{"high":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","highKey":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","key":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"56dbca36-dbac-11e4-8008-3144a3326326","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"56dbca37-dbac-11e4-8008-9363b2e01e05","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-2},{"failures":[170,171,172,173,174,175,176,177],"tindex":"56dbca38-dbac-11e4-8008-57948bcc3787","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:448","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[178,179,28,29,30,93,31,33,34,142,143,180,181,182,183,184,185,186,187,188,144,145,189,190,191,192,193,194,109,195,196,197,198,199,200,201,202],"tindex":"56dbf149-dbac-11e4-8008-79caf53d26d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-1},{"failures":[],"tindex":"56dbf14a-dbac-11e4-8008-13230446533d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:95","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl = new com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[203],"tindex":"56dbf14b-dbac-11e4-8008-8f592b89f8d8","variableMapping":{"str":"minStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:204","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"56dbf14c-dbac-11e4-8008-7d32bb66d4cc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"56dbf14d-dbac-11e4-8008-c90ad9f6d340","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:76","type":"CtReturnImpl","sourcecode":"return java.lang.String.trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":0},{"failures":[],"tindex":"56dbf14e-dbac-11e4-8008-fb785589bf6f","variableMapping":{"y":"speed","angle":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:769","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[149,150,151,152],"tindex":"56dbf14f-dbac-11e4-8008-0991cfe32b4d","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"56dbf150-dbac-11e4-8008-41c82863f208","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-2},{"failures":[57,59,204,127,205,206,62,20,207,65,67,208,128,209,70,84,86,210,129,211,89,212,130,213,214,30,36,37,38,40,45,99,106,107,194,109,195,114],"tindex":"56dbf151-dbac-11e4-8008-4ba72ee2a1ca","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-1},{"failures":[],"tindex":"56dbf152-dbac-11e4-8008-359b198bfb87","variableMapping":{"value":"speed","numberOfBits":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-2},{"failures":[],"tindex":"56dbf153-dbac-11e4-8008-998a54d6f7f5","variableMapping":{"nodeThis":"err","nextEdgeOther":"err","nodeOther":"x1","nextEdge":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[178,179,50,51,52,53,215,216,217,218,219,220,221,56,222,223,57,58,224,225,226,59,227,204,228,229,230,231,232,233,234,235,127,236,205,237,238,239,240,241,242,243,60,244,245,246,247,206,61,248,249,250,251,62,252,63,64,253,254,255,256,20,207,257,65,66,258,259,260,67,261,208,262,263,264,265,266,267,268,269,128,270,209,271,272,273,274,275,276,277,68,278,279,280,281,282,69,283,284,285,286,70,287,71,72,288,289,290,291,292,293,294,295,296,297,298,73,74,75,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,76,77,78,316,317,318,319,320,321,322,323,324,325,326,327,328,79,329,80,81,330,82,331,332,333,334,335,336,337,83,338,148,339,84,85,340,341,342,86,343,210,344,345,346,347,348,349,350,351,129,352,211,353,354,355,356,357,358,359,87,360,361,362,363,364,88,365,366,367,368,89,369,90,91,370,371,212,372,373,374,375,376,377,378,379,380,381,130,382,213,383,384,385,386,387,388,389,390,391,392,393,394,92,395,396,397,398,399,400,401,402,214,403,404,21,22,23,24,25,26,27,28,29,30,93,31,405,32,33,34,94,406,407,408,409,410,411,412,413,414,35,95,36,37,38,39,40,41,42,415,43,44,45,46,416,47,96,96,97,97,417,417,98,98,99,99,100,100,101,101,102,102,103,103,418,418,104,104,105,105,419,420,421,422,106,107,423,424,425,426,427,428,108,0,429,142,143,180,181,182,183,184,185,186,187,188,430,144,145,189,190,191,192,193,194,109,195,196,197,198,431,199,432,433,434,435,436,200,201,437,438,439,202,440,441,442,443,110,111,112,113,444,445,446,447,114,448,449],"tindex":"56dc1864-dbac-11e4-8008-cdbd037e2f52","variableMapping":{"daType":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:121","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-1},{"failures":[117,155,158,120,160,162,163,166,125,168],"tindex":"56dc1865-dbac-11e4-8008-e73f536dfb4c","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:197","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[],"tindex":"56dc1866-dbac-11e4-8008-adcfaf47a169","variableMapping":{"size":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"56dc1867-dbac-11e4-8008-bbce795763df","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:141","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":0},{"failures":[51,52,53,54,55,56,57,59,60,61,62,63,64,20,65,67,68,69,70,71,72,73,74,75,76,77,78,83,84,86,87,88,89,90,91,92,21,22,23,24,25,26,28,29,30,93,31,32,33,34,94,36,37,38,39,40,96,97,98,99,100,102,103,105,106,107,108,0,109,110,111,112,113,114],"tindex":"56dc1868-dbac-11e4-8008-458338f1f544","variableMapping":{"i":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"56dc1869-dbac-11e4-8008-2d369dd76c26","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"56dc186a-dbac-11e4-8008-ab1293acff72","variableMapping":{"str":"location","this":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:152","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg())\n    java.lang.String += \"_INT\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-2},{"failures":[],"tindex":"56dc186b-dbac-11e4-8008-db4fe8b8975e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:95","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl = new com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[423,427,428],"tindex":"56dc186c-dbac-11e4-8008-4972e8b55759","variableMapping":{"size":"connectedId","from":"connectedId","end":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[426],"tindex":"56dc3f7d-dbac-11e4-8008-53f7dcffb059","variableMapping":{"foundIndex":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[],"tindex":"56dc3f7e-dbac-11e4-8008-3ba44f60783e","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"56dc3f7f-dbac-11e4-8008-f99761c155ef","variableMapping":{"maxLat":"maxEle","bounds":"com.graphhopper.util.shapes.BBox.INVERSE","lat":"maxEle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:182","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[35,95,36,37,39,40,41,42,45,46,47,153,154,115,116,170,117,450,171,451,155,118,156,132,157,452,158,120,172,173,453,160,121,454,161,140,162,123,174,175,455,163,124,456,164,141,165,457,166,125,176,177,458,168,126,459,169],"tindex":"56dc3f80-dbac-11e4-8008-d704fdc5e16a","variableMapping":{"speedVal":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[0],"tindex":"56dc3f81-dbac-11e4-8008-61116543c319","variableMapping":{"allIter":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:385","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIterator.fetchWayGeometry(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-1},{"failures":[],"tindex":"56dc3f82-dbac-11e4-8008-45b3cb2f2cde","variableMapping":{"flags":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[1,54,2,4,6,7,10,55,11,13,15,16,79,329,80,81,82],"tindex":"56dc3f83-dbac-11e4-8008-117e914ee9ac","variableMapping":{"from":"segmentSizeInBytes","lonSize":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:299","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[460,187,435,200,439],"tindex":"56dc3f84-dbac-11e4-8008-cb2b6ba25549","variableMapping":{"intVal":"lastElem","degree":"lastElem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[116,170,117,450,171,451,155,118,156],"tindex":"56dc3f85-dbac-11e4-8008-9f313865a040","variableMapping":{"versionHint":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"56dc3f86-dbac-11e4-8008-795216cc56e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:329","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"56dc3f87-dbac-11e4-8008-d368058daea2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[93,34,95,461,49],"tindex":"56dc3f88-dbac-11e4-8008-4dce7f9d0973","variableMapping":{"scDirMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[117,155,158,160,162,123,163,166,168],"tindex":"56dc3f89-dbac-11e4-8008-35db58973478","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:40","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation.setEmpty()"},"status":-1},{"failures":[28,29,30,93,31,33,94,95,36,37,38,40,41,42,43,44,45,46,416,47,48],"tindex":"56dc3f8a-dbac-11e4-8008-856a69433ecd","variableMapping":{"highwayValue":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[115,132,140,141],"tindex":"56dc3f8b-dbac-11e4-8008-2372bac6d902","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[],"tindex":"56dc669c-dbac-11e4-8008-c570f2f0076e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[],"tindex":"56dc669d-dbac-11e4-8008-eb4942438f71","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[135],"tindex":"56dc669e-dbac-11e4-8008-29e80c09bcc9","variableMapping":{"deltaX":"backSpeed","maxX":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"56dc669f-dbac-11e4-8008-7bb91ca1d987","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[462,115,159,120,463,464,465,466,167,125,467],"tindex":"56dc66a0-dbac-11e4-8008-b7fef1081d0b","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"56dc66a1-dbac-11e4-8008-3f803d80286b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":0},{"failures":[],"tindex":"56dc66a2-dbac-11e4-8008-21d8cf62bfa0","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[47,425,426],"tindex":"56dc66a3-dbac-11e4-8008-074f9e1295f5","variableMapping":{"segmentSizeInBytes":"maxCount","index":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[468,140,162,123,469,174,470,175,455,471,472,163,124,151,456,164],"tindex":"56dc66a4-dbac-11e4-8008-230fe3b5c9b2","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"56dc66a5-dbac-11e4-8008-07e8315f5777","variableMapping":{"allBits":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":0},{"failures":[117,155,158,120,160,162,123,163,166,125,168],"tindex":"56dc66a6-dbac-11e4-8008-9fdbe5c8f712","variableMapping":{"message":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"56dc66a7-dbac-11e4-8008-99221c8fe031","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"ele","java.lang.Double.POSITIVE_INFINITY":"ele","weight":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[0,133],"tindex":"56dc66a8-dbac-11e4-8008-dfc0ec288ecc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"56dc66a9-dbac-11e4-8008-5d500cc6eff5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"56dc66aa-dbac-11e4-8008-e51be593ab03","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"mpInteger","prevOrNextEdgeId":"mpInteger","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:74","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    return double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[135],"tindex":"56dc66ab-dbac-11e4-8008-9bb173afc28d","variableMapping":{"eleDelta":"backSpeed","decEleSum":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"56dc66ac-dbac-11e4-8008-7f1337d962ef","variableMapping":{"weight":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-2},{"failures":[],"tindex":"56dc66ad-dbac-11e4-8008-6562d481971a","variableMapping":{"c":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:228","type":"CtReturnImpl","sourcecode":"return int > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"56dc8dbe-dbac-11e4-8008-7dad749327a7","variableMapping":{"latlon":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-2},{"failures":[35,134],"tindex":"56dc8dbf-dbac-11e4-8008-e19dc65c01dc","variableMapping":{"distInMeter":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[297,300,302,303,473,314,317,319,320,474,475,476,477,478,479,480,481,482,483,484,187],"tindex":"56dc8dc0-dbac-11e4-8008-cb57f41de871","variableMapping":{"osmId":"hash","com.graphhopper.reader.OSMReader.TOWER_NODE":"i","tmpNode":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:665","type":"CtIfImpl","sourcecode":"if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n    throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[178,179,217,218,219,220,221,56,222,223,57,58,224,225,59,227,204,228,229,230,231,232,233,234,235,127,236,205,237,238,239,240,241,242,243,60,244,245,246,247,206,61,248,249,250,251,62,252,63,64,253,254,20,207,257,65,66,258,259,67,261,208,262,263,264,265,266,267,268,269,128,270,209,271,272,273,274,275,276,277,68,278,279,280,281,282,69,283,284,285,286,70,287,71,72,288,289,290,291,292,293,294,295,296,297,298,73,74,75,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,76,77,78,316,317,318,319,320,321,322,323,324,325,326,327,328,79,329,80,81,330,82,331,332,333,334,335,336,337,148,339,84,85,340,341,86,343,210,344,345,346,347,348,349,350,351,129,352,211,353,354,355,356,357,358,359,87,360,361,362,363,364,88,365,366,367,368,89,369,90,91,370,371,212,372,373,374,375,376,377,378,379,380,381,130,382,213,383,384,385,386,387,388,389,390,391,392,393,394,92,395,396,397,398,399,400,401,402,214,403,404,26,27,28,29,30,93,31,32,33,34,94,407,413,414,35,95,36,37,38,39,40,41,42,43,44,45,46,47,96,96,97,97,417,417,98,98,99,99,100,100,101,101,102,102,103,103,418,418,104,104,105,105,419,420,421,422,106,107,423,424,425,426,427,428,108,0,429,142,143,180,181,182,183,184,185,186,187,188,430,144,145,189,190,191,192,193,194,109,195,196,197,198,431,199,432,433,434,435,436,200,201,437,438,439,202,440,441,442,443,110,111,112,113,444,445,446,447,114,448,449],"tindex":"56dc8dc1-dbac-11e4-8008-3388f162a063","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[485],"tindex":"56dc8dc2-dbac-11e4-8008-f9dc794a0464","variableMapping":{"bytePos":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[35,46,47,203],"tindex":"56dc8dc3-dbac-11e4-8008-cf5284199a05","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"56dc8dc4-dbac-11e4-8008-ed54aca40f9e","variableMapping":{"splitIndex":"x2","entrySize":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[486,118,487,121,472,124,488,126],"tindex":"56dc8dc5-dbac-11e4-8008-a95bb4e5ccfc","variableMapping":{"angle":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"56dc8dc6-dbac-11e4-8008-9dec4c00ba3b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"56dc8dc7-dbac-11e4-8008-01dcd4223e8c","variableMapping":{"currEdge":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":0},{"failures":[],"tindex":"56dc8dc8-dbac-11e4-8008-e507077f3e60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.isBool(long, int);\n}"},"status":-2},{"failures":[],"tindex":"56dc8dc9-dbac-11e4-8008-9df0dfd82e9d","variableMapping":{"acceptBit":"encoded","ferryBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[300,303,317,320,475,477,478,479,480,481,483,484],"tindex":"56dc8dca-dbac-11e4-8008-c7fcc807e680","variableMapping":{"orientation":"minLatTmp","java.lang.Math.PI":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"56dcb4db-dbac-11e4-8008-d3e6edf2423a","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[41,462,463,466,467],"tindex":"56dcb4dc-dbac-11e4-8008-256e630c94f1","variableMapping":{"high":"turnRestrictionBit","len":"turnRestrictionBit","start":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[46,119,133,122,135,136,113],"tindex":"56dcb4dd-dbac-11e4-8008-4161deaefbe5","variableMapping":{"tmp":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"56dcb4de-dbac-11e4-8008-7795a645a72e","variableMapping":{"radiusInMeter":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","com.graphhopper.util.DistanceCalcEarth.C":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:112","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[474,475,476,477,489,478,479,482,483,484],"tindex":"56dcb4df-dbac-11e4-8008-25ee2a21eb90","variableMapping":{"r":"lon","x":"lon","absY":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,490,62,64,20,70,72,75,78,329,80,82,89,91,21,22,24,25,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,109,111,112],"tindex":"56dcb4e0-dbac-11e4-8008-cbe335e251fc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-1},{"failures":[49],"tindex":"56dcb4e1-dbac-11e4-8008-01276460c361","variableMapping":{"flags":"ferryBit","scDirMask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"56dcb4e2-dbac-11e4-8008-2d3d803f82a3","variableMapping":{"unpavedBit":"nodeBitMask","shift":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[423,427],"tindex":"56dcb4e3-dbac-11e4-8008-d3cf956e3a73","variableMapping":{"err":"connectedId","tmpErr":"connectedId","y1":"connectedId","dLon":"connectedId","sLat":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"56dcb4e4-dbac-11e4-8008-07f6ba168a6d","variableMapping":{"bytePos":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":206,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":193,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":56,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":133,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":372,"com.graphhopper.reader.OSMReaderTest.testFerry":35,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":444,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":445,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":167,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":450,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":77,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":27,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":254,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":269,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":409,"com.graphhopper.coll.CompressedArrayTest.testCompress":484,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":486,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":91,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":433,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":390,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":129,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":313,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":10,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":437,"com.graphhopper.GraphHopperTest.testPrepare":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":401,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":198,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":357,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":457,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":188,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":328,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":155,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":441,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":314,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":427,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":117,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":141,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":186,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":351,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":74,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":72,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":125,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":20,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":480,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":59,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":460,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":202,"com.graphhopper.GraphHopperTest.testLoadOSM":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":75,"com.graphhopper.reader.OSMReaderTest.testSort":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":126,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":44,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":425,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":66,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":367,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":84,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":478,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":402,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":102,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":407,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":286,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":247,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":348,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":207,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":67,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":235,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":164,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":124,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":318,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":189,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":316,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":183,"com.graphhopper.coll.OSMIDMapTest.testGetLong":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":182,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":204,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":277,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":240,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":57,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":242,"com.graphhopper.coll.CompressedArrayTest.testCompress2":483,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":359,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":140,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":128,"com.graphhopper.GraphHopperAPITest.testLoad":178,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":226,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":352,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":210,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":203,"com.graphhopper.storage.LevelGraphStorageTest.testClone":229,"com.graphhopper.reader.OSMReaderTest.testBarriers":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":261,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":428,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":311,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":463,"com.graphhopper.util.GHUtilityTest.testCopy":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":327,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":471,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":149,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":294,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":8,"com.graphhopper.routing.PathTest.testFindInstruction":107,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":208,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":442,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":252,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":452,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":368,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":284,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":446,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":435,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":231,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":377,"com.graphhopper.util.InstructionListTest.testWayList2":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":454,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":305,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":370,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":166,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":71,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":131,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":165,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":108,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":233,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":467,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":270,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":184,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":343,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":39,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":109,"com.graphhopper.coll.OSMIDMapTest.testGet":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":268,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":49,"com.graphhopper.routing.PathBidirRefTest.testExtract":419,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":23,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":176,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":322,"com.graphhopper.storage.RAMDataAccessTest.testCopy":2,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":289,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":395,"com.graphhopper.storage.RAMDataAccessTest.testSegments":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":310,"com.graphhopper.util.GHUtilityTest.testSort2":447,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":190,"com.graphhopper.reader.OSMReaderTest.testMain":36,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":58,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":485,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":276,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":481,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":152,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":323,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":122,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":399,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":127,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":238,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":253,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":465,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":99,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":132,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":241,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":46,"com.graphhopper.storage.StorablePropertiesTest.testStore":83,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":54,"com.graphhopper.storage.GraphHopperStorageTest.testClone":345,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":398,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":48,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":215,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":135,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":353,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":151,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":378,"com.graphhopper.routing.PathTest.testTime":422,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":455,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":63,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":137,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":330,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":307,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":389,"com.graphhopper.reader.OSMReaderTest.testRelation":415,"com.graphhopper.util.GHUtilityTest.testSortDirected":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":121,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":255,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":17,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":98,"com.graphhopper.GraphHopperTest.testFootOnly":34,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":170,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":134,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":329,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":216,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":317,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":431,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":385,"com.graphhopper.search.NameIndexTest.testCreate":53,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":6,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":96,"com.graphhopper.routing.QueryGraphTest.testOneWay":418,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":308,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":477,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":171,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":408,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":73,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":474,"com.graphhopper.reader.OSMReaderTest.testWithBounds":45,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":9,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":150,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":287,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":391,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":153,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":227,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":224,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":468,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":487,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":156,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":279,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":273,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":86,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":143,"com.graphhopper.util.InstructionListTest.testWayList":111,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":369,"com.graphhopper.GraphHopperAPITest.testDisconnected179":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":379,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":489,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":374,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":173,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":414,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":403,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":488,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":30,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":347,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":80,"com.graphhopper.routing.util.EncodedValueTest.testSwap":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":438,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":362,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":201,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":168,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":196,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":325,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":169,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":339,"com.graphhopper.routing.PathTest.testWayList":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":214,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":470,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":382,"com.graphhopper.coll.OSMIDMapTest.testGet2":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":197,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":249,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":410,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":278,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":356,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":266,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":346,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":239,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":319,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":320,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":3,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":18,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":162,"com.graphhopper.util.GHUtilityTest.testSort":448,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":394,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":482,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":458,"com.graphhopper.search.NameIndexTest.testPut":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":288,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":344,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":293,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":315,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":82,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":159,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":331,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":257,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":469,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":411,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":274,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":423,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":92,"com.graphhopper.routing.PathTest.testFound":421,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":94,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":115,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":251,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":219,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":177,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":209,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":52,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":130,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":350,"com.graphhopper.util.InstructionListTest.testEmptyList":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":187,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":472,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":145,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":118,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":358,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":191,"com.graphhopper.reader.PrinctonReaderTest.testRead":413,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":78,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":267,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":381,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":212,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":275,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":490,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":462,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":175,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":157,"com.graphhopper.reader.OSMReaderTest.testFoot":95,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":393,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":412,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":302,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":479,"com.graphhopper.reader.OSMReaderTest.testOneWay":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":303,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":211,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":365,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":285,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":451,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":16,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":360,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":387,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":434,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":473,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":439,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":15,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":334,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":432,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":383,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":417,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":340,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":416,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":256,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":147,"com.graphhopper.routing.PathBidirRefTest.testExtract2":420,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":163,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":296,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":306,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":50,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":364,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":335,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":456,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":404,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":461,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":336,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":453,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":299,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":366,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":232,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":87,"com.graphhopper.GraphHopperTest.testFootAndCar":93,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":205,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":123,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":326,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":375,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":466,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":436,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":263,"com.graphhopper.storage.StorablePropertiesTest.testLoad":338,"com.graphhopper.GraphHopperTest.testPrepareOnly":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":194,"com.graphhopper.GraphHopperTest.testVia":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":459,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":373,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":43,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":221,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":113,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":363,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":139,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":386,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":119,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":250,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":248,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":65}}]
