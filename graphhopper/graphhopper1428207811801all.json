[{"failures":[0,1],"tindex":"85095984-db4b-11e4-99ce-9175cfe6c0f0","variableMapping":{"val":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"850b5555-db4b-11e4-99ce-3324a5f3e21f","variableMapping":{"shift":"lastTime","tmpValue":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[2,3],"tindex":"850b5556-db4b-11e4-99ce-a1b98d6cd56f","variableMapping":{"index":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13],"tindex":"850b5557-db4b-11e4-99ce-8f423aaf1627","variableMapping":{"shift":"shift","backwardBit":"unpavedBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[14],"tindex":"850b5558-db4b-11e4-99ce-5fec9a5aff38","variableMapping":{"factor":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"850b7c69-db4b-11e4-99ce-9f17bb5c73c2","variableMapping":{"WIDTH":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:250","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[(2 * (int)) * (int)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-1},{"failures":[],"tindex":"850b7c6a-db4b-11e4-99ce-45af2050263f","variableMapping":{"pointer":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[],"tindex":"850b7c6b-db4b-11e4-99ce-5563ae391557","variableMapping":{"index":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-2},{"failures":[],"tindex":"850b7c6c-db4b-11e4-99ce-f9ce349232c0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"850b7c6d-db4b-11e4-99ce-dd994e591941","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[6,8,109,9,10,13],"tindex":"850b7c6e-db4b-11e4-99ce-35eb4a1f81d4","variableMapping":{"closed":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[110,104],"tindex":"850b7c6f-db4b-11e4-99ce-b942478330a9","variableMapping":{"lastTime":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[2,111,3],"tindex":"850b7c70-db4b-11e4-99ce-f5f0b3eea1d0","variableMapping":{"size":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[],"tindex":"850b7c71-db4b-11e4-99ce-0b3525124b07","variableMapping":{"defaultUTurnCost":"angle","weight":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"850b7c72-db4b-11e4-99ce-f3f2929d577e","variableMapping":{"y1":"allBits","y2":"i","x1":"i","x2":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[132,133,134,135,136,137,138,139,4,140,5,141,142,143,144,145,146,147,148,149,6,150,151,152,153,154,155,7,156,157,158,159,160,161,162,163,8,164,165,166,167,168,169,170,109,171,9,172,173,174,175,176,177,178,10,179,180,181,182,183,184,110,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,65,66,205,206,207,208,11,209,12,210,211,212,213,214,215,216,217,218,13,219,220,221,222,223,224,225,226,14,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"850b7c73-db4b-11e4-99ce-eddffa637884","variableMapping":{"arrayLength":"nextWayBit","maxGeoRef":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"850ba384-db4b-11e4-99ce-bfef939970f2","variableMapping":{"intVal":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"850ba385-db4b-11e4-99ce-4755397df12a","variableMapping":{"a":"finishedTo","approx":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[],"tindex":"850ba386-db4b-11e4-99ce-35ae62f36edc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:66","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop()"},"status":-2},{"failures":[],"tindex":"850ba387-db4b-11e4-99ce-6b0b21195984","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:145","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"850ba388-db4b-11e4-99ce-636ec30cfd78","variableMapping":{"dist":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-2},{"failures":[199,202,14,85,89,92],"tindex":"850ba389-db4b-11e4-99ce-6b18b7891ef3","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"850c3fca-db4b-11e4-99ce-87a8016ded4b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"850c3fcb-db4b-11e4-99ce-014908f56fd5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"850c3fcc-db4b-11e4-99ce-b9799009f3a7","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:245","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:769","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"850c3fcd-db4b-11e4-99ce-4bbac7c41a52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"850c3fce-db4b-11e4-99ce-1b163c5549dc","variableMapping":{"bits":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"850c3fcf-db4b-11e4-99ce-694afcc32713","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[],"tindex":"850c3fd0-db4b-11e4-99ce-c7f43d51143f","variableMapping":{"time":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[169,104],"tindex":"850c66e1-db4b-11e4-99ce-abb3907b55a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[],"tindex":"850c66e2-db4b-11e4-99ce-f3799763aee3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[227,228,229,230,231,232,233,234,235,236,237,69,238,239],"tindex":"850c66e3-db4b-11e4-99ce-2bd2b6fb2a50","variableMapping":{"store":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"850c66e4-db4b-11e4-99ce-f5d3b072dd38","variableMapping":{"updatedA":"tmpPrevEdge","nodeA":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1305","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":0},{"failures":[60,224,226,14,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"850c66e5-db4b-11e4-99ce-73450af788cc","variableMapping":{"high":"relationFlags","low":"relationFlags","guess":"relationFlags","guessedKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":-1},{"failures":[240,241,189],"tindex":"850c66e6-db4b-11e4-99ce-fb70695af5c2","variableMapping":{"bytesForFlags":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[242,243,244,245,246,247,112,248,249],"tindex":"850c66e7-db4b-11e4-99ce-4d9b9c3d8979","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"850c66e8-db4b-11e4-99ce-151ff83c2030","variableMapping":{"high":"flags","highKey":"dir","key":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[141,193,210,225],"tindex":"850c66e9-db4b-11e4-99ce-a946bef624e7","variableMapping":{"enableIfAssert":"restricted"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1371","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[],"tindex":"850c66ea-db4b-11e4-99ce-53210ef48295","variableMapping":{"line":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-2},{"failures":[],"tindex":"850c66eb-db4b-11e4-99ce-e9ef164b5c3f","variableMapping":{"x1":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:158","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"850c66ec-db4b-11e4-99ce-1bf2eda4ee40","variableMapping":{"factor":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":0},{"failures":[],"tindex":"850c66ed-db4b-11e4-99ce-15ce79a55b29","variableMapping":{"speedEncoder":"preferWayEncoder","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"850c66ee-db4b-11e4-99ce-87039d318e04","variableMapping":{"high":"directionBitMask","len":"dir","start":"dir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":0},{"failures":[250,91],"tindex":"850c8dff-db4b-11e4-99ce-5b9c9cd91630","variableMapping":{"high":"minutes","guess":"minutes","low":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[2,111,3],"tindex":"850c8e00-db4b-11e4-99ce-9b2cbdcae961","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:117","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList)"},"status":-1},{"failures":[132,133,134,135,60,251,252,240,253,254,137,140,5,150,155,156,164,168,109,9,179,184,186,188,189,195,197,199,200,202,204,66,206,209,12,219,14,255,67,231,232,256,257,258,239,91,103],"tindex":"850c8e01-db4b-11e4-99ce-e9fc9c092f37","variableMapping":{"maxSpeed":"factor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-1},{"failures":[],"tindex":"850c8e02-db4b-11e4-99ce-0b6b8332166b","variableMapping":{"storedKey":"bits","key":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"850c8e03-db4b-11e4-99ce-4fb233073714","variableMapping":{"nanoTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"850c8e04-db4b-11e4-99ce-e3ea1979e5b8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"850c8e05-db4b-11e4-99ce-fd5520bf8a5c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[240,150,164,179,188,189,219],"tindex":"850c8e06-db4b-11e4-99ce-5376887cfc40","variableMapping":{"maxSpeed":"speed","fwdSpeed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"850c8e07-db4b-11e4-99ce-d5977707686c","variableMapping":{"values":"mValues","index":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:327","type":"CtReturnImpl","sourcecode":"return int[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"850c8e08-db4b-11e4-99ce-2b4941f134a0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"850c8e09-db4b-11e4-99ce-250f0f039b6d","variableMapping":{"dMinLon":"y","this":"this","dMinLat":"y"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:667","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.min(double, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[],"tindex":"850c8e0a-db4b-11e4-99ce-4fa5612a18e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[],"tindex":"850c8e0b-db4b-11e4-99ce-c305c7041402","variableMapping":{"finishedTo":"synched","finishedFrom":"synched"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[259,260,261],"tindex":"850c8e0c-db4b-11e4-99ce-8dc44c3c1c3f","variableMapping":{"shiftSum":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"850c8e0d-db4b-11e4-99ce-b92632ea2e9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":0},{"failures":[262,263,264,265,266,267,268,269,20,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,40,287,288,289,290,291,292,293,294,51,295,2,169,296,104],"tindex":"850cb51e-db4b-11e4-99ce-599189262046","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[66],"tindex":"850cb51f-db4b-11e4-99ce-9b266826593a","variableMapping":{"resultOrientation":"fullDist2D","orientation":"incDist2DSum","java.lang.Math.PI":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"850cb520-db4b-11e4-99ce-376168f740de","variableMapping":{"line":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[297,262,56,227,298,299,300,301,302,303,228,229,304,305,230,231,232,233,306,307,235,308,309,256,310,257,258,311,312,313,236,237,69,238,239,82,83,86],"tindex":"850cb521-db4b-11e4-99ce-bfd0537beb3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"850cb522-db4b-11e4-99ce-83945201bb17","variableMapping":{"size":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"850cb523-db4b-11e4-99ce-cd1a30fc6c0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"850cb524-db4b-11e4-99ce-e1f34e438fb4","variableMapping":{"deltaX":"minLon","tmp":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"850cb525-db4b-11e4-99ce-8343038889a4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"850cb526-db4b-11e4-99ce-c5db61420f8e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"850cb527-db4b-11e4-99ce-89f0d0331323","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":0},{"failures":[],"tindex":"850cb528-db4b-11e4-99ce-27f8e3233785","variableMapping":{"str":"trackType","kmInteger":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[],"tindex":"850cb529-db4b-11e4-99ce-1196f83a89ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"850cb52a-db4b-11e4-99ce-27711108c454","variableMapping":{"elevation":"locked","withElevation":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphBuilder:79","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"850cb52b-db4b-11e4-99ce-9384413429f6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[],"tindex":"850cb52c-db4b-11e4-99ce-e1d5ecde8b3c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"850cdc3d-db4b-11e4-99ce-cfbb9bc7f3bc","variableMapping":{"val":"speedVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"850cdc3e-db4b-11e4-99ce-c1b399d3e0b3","variableMapping":{"defaultUTurnCost":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","turnCosts":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","edgeId":"val","prevOrNextEdgeId":"val","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"850cdc3f-db4b-11e4-99ce-957c606447aa","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"850cdc40-db4b-11e4-99ce-f19c0e79a079","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"850cdc41-db4b-11e4-99ce-41e20498812c","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":0},{"failures":[],"tindex":"850cdc42-db4b-11e4-99ce-790b2422dd92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"850cdc43-db4b-11e4-99ce-971e8d33f37c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"850cdc44-db4b-11e4-99ce-870e76257028","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"850cdc45-db4b-11e4-99ce-85fb74e16744","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[314,315,16,316,263,317,132,318,319,320,321,322,323,21,324,325,271,326,133,327,328,329,35,330,331,332,333,36,334,280,335,134,336,337,338,339,340,341,41,342,46,47,343,288,344,135,345,346,347,348,349,350,52,351,56,57,58,59,352,2,353,296,111,110,187,190,194,198,200,66,255,67,227,298,299,300,301,302,303,228,229,304,305,230,231,233,306,235,256,257,312,236,237,69,238,239,73,76,82,83,84,88,92,93,98,104,354],"tindex":"850cdc46-db4b-11e4-99ce-154fbe56840d","variableMapping":{"res":"backwardBit","maxBits":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:261","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[201,225],"tindex":"850cdc47-db4b-11e4-99ce-fbb136c9f6eb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"850cdc48-db4b-11e4-99ce-a317d31bb9a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[190],"tindex":"850cdc49-db4b-11e4-99ce-5bad2017beef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"850d035a-db4b-11e4-99ce-d100b1d66183","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[4,5,6,7,156,8,9,10,11,12,13],"tindex":"850d035b-db4b-11e4-99ce-670657b0bc5e","variableMapping":{"shiftSum":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[],"tindex":"850d035c-db4b-11e4-99ce-f98c25027678","variableMapping":{"longSegmentSize":"mask","bufferStart":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[],"tindex":"850d035d-db4b-11e4-99ce-211918c23c13","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"850d035e-db4b-11e4-99ce-bfe7954a0f38","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[132,355,356,357,358,133,134,135,60,251,240,253,254,137,140,5,150,155,7,156,8,164,168,109,9,179,184,186,188,189,195,197,199,200,202,204,66,206,209,12,219,14,255,67,231,232,256,257,239,85,91,92,103],"tindex":"850d035f-db4b-11e4-99ce-713195193ca3","variableMapping":{"oldValueIndex":"tmpValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[250,91],"tindex":"850d0360-db4b-11e4-99ce-372d91869954","variableMapping":{"from":"index","hash":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[9],"tindex":"850d0361-db4b-11e4-99ce-09e42f884cea","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[2,111,3],"tindex":"850d0362-db4b-11e4-99ce-1172ff435a71","variableMapping":{"values":"nodeIndex","i":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:323","type":"CtAssignmentImpl","sourcecode":"int[][int] = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[260],"tindex":"850d0363-db4b-11e4-99ce-7da9091de52f","variableMapping":{"orientation":"lastPrio","java.lang.Math.PI":"lastPrio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:97","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[104],"tindex":"850d0364-db4b-11e4-99ce-d339507421e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:165","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"850d0365-db4b-11e4-99ce-4b79a4cf4197","variableMapping":{"high":"oldRelationFlags","len":"oldRelationFlags","start":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[25,26,28,359,360,361,362,353,169,296,95,98,100,104],"tindex":"850d0366-db4b-11e4-99ce-1b96a3d39613","variableMapping":{"i":"endIndexPlusOne","child":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[314,297,363,364,315,15,262,365,16,17,366,367,18,316,263,368,369,317,370,371,372,373,264,132,265,266,374,267,318,375,319,268,269,19,376,377,320,378,321,20,270,322,379,323,21,380,22,23,324,381,382,24,25,26,27,28,383,384,385,113,386,29,30,31,387,114,388,115,116,389,390,391,392,393,355,117,394,32,33,34,395,118,396,119,120,397,398,399,400,401,356,402,403,404,405,406,357,407,408,409,410,411,358,412,413,414,415,416,417,418,419,420,421,422,133,35,423,36,37,424,425,38,334,280,426,427,335,428,429,430,431,281,134,282,283,432,284,336,433,337,285,286,39,434,435,338,436,339,40,287,340,437,341,41,438,42,43,342,439,46,440,47,48,441,442,49,343,288,443,444,344,445,446,447,448,289,135,290,291,449,292,345,450,346,293,294,50,451,452,347,453,348,51,295,349,454,350,52,455,53,54,351,456,457,458,56,459,460,461,57,58,59,60,352,359,360,462,463,2,353,169,296,111,3,198,65,66,464,255,67,68,227,298,299,300,301,302,303,465,228,229,304,466,305,230,231,232,233,306,307,234,235,308,309,467,256,310,257,258,311,312,313,236,468,237,69,238,469,239,470,471,70,70,71,71,472,472,72,72,73,73,74,74,75,75,76,76,77,77,473,473,78,78,79,79,80,81,82,83,84,85,86,87,88,89,90,474,91,92,93,94,95,96,97,98,99,100,101,102,103,104,475,476,354,477],"tindex":"850d2a77-db4b-11e4-99ce-913f0b168f2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":321,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":468,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":15,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":240,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":325,"com.graphhopper.reader.OSMReaderTest.testFerry":91,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":462,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":463,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":140,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":172,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":242,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":30,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":81,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":381,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":289,"com.graphhopper.coll.CompressedArrayTest.testCompress":122,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":178,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":43,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":301,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":134,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":385,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":304,"com.graphhopper.GraphHopperTest.testPrepare":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":227,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":337,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":261,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":139,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":256,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":382,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":360,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":367,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":111,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":137,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":413,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":233,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":33,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":54,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":46,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":129,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":18,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":230,"com.graphhopper.GraphHopperTest.testLoadOSM":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":397,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":416,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":34,"com.graphhopper.reader.OSMReaderTest.testSort":94,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":150,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":48,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":437,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":36,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":127,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":76,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":474,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":350,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":243,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":378,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":429,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":297,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":344,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":254,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":49,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":264,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":167,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":164,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":388,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":311,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":384,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":234,"com.graphhopper.coll.OSMIDMapTest.testGetLong":63,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":307,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":443,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":375,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":16,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":268,"com.graphhopper.coll.CompressedArrayTest.testCompress2":121,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":286,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":155,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":135,"com.graphhopper.GraphHopperAPITest.testLoad":354,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":415,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":196,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":282,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":280,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":250,"com.graphhopper.storage.LevelGraphStorageTest.testClone":369,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":3,"com.graphhopper.reader.OSMReaderTest.testBarriers":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":383,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":210,"com.graphhopper.util.GHUtilityTest.testCopy":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":326,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":162,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":355,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":180,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":244,"com.graphhopper.routing.PathTest.testFindInstruction":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":175,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":376,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":288,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":202,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":352,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":208,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":408,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":341,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":349,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":303,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":365,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":217,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":370,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":425,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":422,"com.graphhopper.util.InstructionListTest.testWayList2":59,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":330,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":398,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":342,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":445,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":138,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":251,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":65,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":248,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":372,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":44,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":290,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":235,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":334,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":69,"com.graphhopper.coll.OSMIDMapTest.testGet":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":448,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":203,"com.graphhopper.routing.PathBidirRefTest.testExtract":470,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":144,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":390,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":456,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":278,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":356,"com.graphhopper.util.GHUtilityTest.testSort2":458,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":312,"com.graphhopper.reader.OSMReaderTest.testMain":93,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":110,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":293,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":130,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":151,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":391,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":184,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":441,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":132,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":267,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":361,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":324,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":73,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":347,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":206,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":414,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":319,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":103,"com.graphhopper.storage.StorablePropertiesTest.testStore":45,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":55,"com.graphhopper.storage.GraphHopperStorageTest.testClone":427,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":439,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":188,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":432,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":314,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":165,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":364,"com.graphhopper.routing.PathTest.testTime":255,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":161,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":22,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":317,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":277,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":377,"com.graphhopper.util.GHUtilityTest.testSortDirected":460,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":219,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":72,"com.graphhopper.GraphHopperTest.testFootOnly":89,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":249,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":171,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":25,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":186,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":114,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":306,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":298,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":327,"com.graphhopper.search.NameIndexTest.testCreate":108,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":70,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":418,"com.graphhopper.routing.QueryGraphTest.testOneWay":473,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":126,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":32,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":123,"com.graphhopper.reader.OSMReaderTest.testWithBounds":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":220,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":274,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":455,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":204,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":224,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":316,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":366,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":218,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":181,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":452,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":187,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":345,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":38,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":232,"com.graphhopper.util.InstructionListTest.testWayList":58,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":438,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":142,"com.graphhopper.GraphHopperAPITest.testDisconnected179":477,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":453,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":117,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":215,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":476,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":276,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":412,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":333,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":84,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":428,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":466,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":136,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":338,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":435,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":229,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":21,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":191,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":158,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":6,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":442,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":469,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":153,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":423,"com.graphhopper.routing.PathTest.testWayList":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":159,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":273,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":241,"com.graphhopper.coll.OSMIDMapTest.testGet2":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":239,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":322,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":451,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":148,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":433,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":197,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":446,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":115,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":318,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":116,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":7,"com.graphhopper.util.GHUtilityTest.testSort":459,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":396,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":253,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":131,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":147,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":173,"com.graphhopper.search.NameIndexTest.testPut":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":351,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":426,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":386,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":410,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":28,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":404,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":420,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":209,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":75,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":66,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":402,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":440,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":157,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":252,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":450,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":2,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":421,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":35,"com.graphhopper.routing.PathTest.testFound":464,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":14,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":90,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":323,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":146,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":291,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":107,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":133,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":431,"com.graphhopper.util.InstructionListTest.testEmptyList":461,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":467,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":163,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":392,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":258,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":183,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":179,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":182,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":313,"com.graphhopper.reader.PrinctonReaderTest.testRead":475,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":41,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":31,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":447,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":64,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":50,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":368,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":346,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":225,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":207,"com.graphhopper.reader.OSMReaderTest.testFoot":92,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":329,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":119,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":128,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":170,"com.graphhopper.reader.OSMReaderTest.testOneWay":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":120,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":283,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":287,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":454,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":176,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":328,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":430,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":302,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":112,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":299,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":305,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":300,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":405,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":198,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":29,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":472,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":424,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":419,"com.graphhopper.routing.PathBidirRefTest.testExtract2":471,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":358,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":399,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":105,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":339,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":166,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":98,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":247,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":199,"com.graphhopper.util.SimpleIntDequeTest.testPush":362,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":395,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":340,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":371,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":192,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":39,"com.graphhopper.GraphHopperTest.testFootAndCar":85,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":266,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":156,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":393,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":223,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":465,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":444,"com.graphhopper.GraphHopperTest.testPrepareOnly":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":237,"com.graphhopper.GraphHopperTest.testVia":82,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":271,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":100,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":315,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":60,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":436,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":200,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":99,"com.graphhopper.util.AngleCalcTest.testCombined":0,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":168,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":379,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":270,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":47}}]
