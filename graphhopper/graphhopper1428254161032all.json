[{"failures":[],"tindex":"6f7fc529-dbb7-11e4-84b5-51dcb0faf038","variableMapping":{"distInMeter":"x"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":0},{"failures":[0],"tindex":"6f814bca-dbb7-11e4-84b5-8713f0915a66","variableMapping":{"turnRestrictionBit":"encoded","shift":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"6f814bcb-dbb7-11e4-84b5-9b5aa0a287f6","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"6f8172dc-dbb7-11e4-84b5-dbae528d6c03","variableMapping":{"type":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":0},{"failures":[],"tindex":"6f8172dd-dbb7-11e4-84b5-5b90e9ac1e46","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,0,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375],"tindex":"6f8172de-dbb7-11e4-84b5-3738bffed571","variableMapping":{"size":"nextWayBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"6f8172df-dbb7-11e4-84b5-77a8370dc52b","variableMapping":{"tmpNode":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"6f8172e0-dbb7-11e4-84b5-afd7a96ad7a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"6f8199f1-dbb7-11e4-84b5-7597e90c4847","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-2},{"failures":[],"tindex":"6f8199f2-dbb7-11e4-84b5-cfad142f9263","variableMapping":{"map":"map"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":0},{"failures":[],"tindex":"6f8199f3-dbb7-11e4-84b5-a137ae1c1d1d","variableMapping":{"angle":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[],"tindex":"6f8199f4-dbb7-11e4-84b5-3beacd3f8cfc","variableMapping":{"equalNormedDelta":"lon","currNormedDist":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:883","type":"CtIfImpl","sourcecode":"if ((double) <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[376,59,66,71,72,76,377,95,378,107,379,121],"tindex":"6f8199f5-dbb7-11e4-84b5-e31f50a7a8d6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:149","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[3,4,5,6,7,9,11,14,15,16,17,18,20,21,22,23,24,25,26,27,28,72,76],"tindex":"6f8199f6-dbb7-11e4-84b5-bda31cb55d77","variableMapping":{"highwayValue":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"6f8199f7-dbb7-11e4-84b5-d54cac984d02","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"6f8199f8-dbb7-11e4-84b5-334ab0bd9ebf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":0},{"failures":[57,93,105,119],"tindex":"6f8199f9-dbb7-11e4-84b5-e9100d92831a","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[47,49,54,60,89,90,96,98,100,101,108,112,114,115,122],"tindex":"6f8199fa-dbb7-11e4-84b5-df9b5fee5f32","variableMapping":{"i":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[1,2,3,4,5,6,7,380,8,9,10,11,381,12,13,14,15,16,17,18,19,20,21,22,382,23,24,25,26,28,383,30,31,384,32,33,34,35,36,37,38,39,40,385,386,387,388,41,42,43,389,44,45,46,390,50,51,52,53,54,55,391,56,392,393,376,394,57,58,59,395,60,61,62,63,64,65,396,0,66,67,68,397,69,70,71,72,73,74,75,76,398,77,399,78,79,80,81,82,83,84,85,86,87,88,400,89,401,90,402,91,403,92,404,377,405,93,94,95,96,406,97,98,407,99,100,101,408,102,103,409,104,410,411,378,412,105,106,107,413,108,109,110,414,111,112,415,113,114,115,416,116,117,417,118,418,419,379,420,119,120,121,421,122,124,125,422,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,423,164,165,166,167,168,169,170,171,424,172,173,174,175,176,177,425,178,179,180,181,426,182,183,184,185,186,187,427,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,428,204,205,206,207,208,209,429,210,211,212,430,213,214,215,216,217,218,219,220,221,222,223,224,225,226,431,227,228,229,230,231,232,233,234,235,236,237,238,432,239,240,241,242,243,244,245,246,247,248,433,434,249,250,435,251,252,253,254,255,256,257,436,258,259,260,261,262,437,263,264,265,438,439,266,267,440,441,268,442,269,270,271,272,273,274,275,276,277,278,443,279,280,281,282,283,284,285,286,287,288,444,445,289,290,446,291,292,293,294,295,296,297,447,298,299,300,301,302,303,304,305,448,449,306,450,307,308,309,310,311,312,313,314,315,316,451,317,318,319,320,321,322,323,324,325,326,452,453,327,328,454,329,330,331,332,333,334,335,455,336,337,338,339,340,341,456,457,342,458,343,344,345,346,347,348,349,350,351,352,459,353,354,355,356,357,358,359,360,361,362,460,461,363,364,462,365,366,367,368,369,370,371,463,372,373,374,375],"tindex":"6f81c10b-dbb7-11e4-84b5-75cd0faef388","variableMapping":{"graphHopperFolder":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:670","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[138,139,148,150,161],"tindex":"6f82845c-dbb7-11e4-84b5-5b4af54ca86a","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[46],"tindex":"6f82845d-dbb7-11e4-84b5-b33b49ffc024","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[464],"tindex":"6f82845e-dbb7-11e4-84b5-0791a81034e9","variableMapping":{"preferWayEncoder":"this","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.getValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"6f82845f-dbb7-11e4-84b5-5bcbe8a072bb","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":0},{"failures":[],"tindex":"6f828460-dbb7-11e4-84b5-a526a1df3c63","variableMapping":{"oldValueIndex":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[124,132,133,140,143,144,155,157,159],"tindex":"6f828461-dbb7-11e4-84b5-3304ac10560c","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"6f828462-dbb7-11e4-84b5-31554f1b87d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[382,47,49,54,90,98,101,112,115],"tindex":"6f828463-dbb7-11e4-84b5-e7d355a79da8","variableMapping":{"i":"code","to":"code","lonSize":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"6f828464-dbb7-11e4-84b5-018c19d72d3d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"6f828465-dbb7-11e4-84b5-f9587fa8d63c","variableMapping":{"finishedTo":"defaultB","finishedFrom":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"6f828466-dbb7-11e4-84b5-8987729177c2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"6f828467-dbb7-11e4-84b5-ab007e363d3d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"6f828468-dbb7-11e4-84b5-6b8f8cc0aa8e","variableMapping":{"size":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"6f828469-dbb7-11e4-84b5-d959f3de3a71","variableMapping":{"gradient":"minLat","yend":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"6f82ab7a-dbb7-11e4-84b5-4fcfe16af81b","variableMapping":{"factor":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":0},{"failures":[],"tindex":"6f82ab7b-dbb7-11e4-84b5-310f2b9c73df","variableMapping":{"compressionLevel":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":0},{"failures":[1,7,8,267],"tindex":"6f82ab7c-dbb7-11e4-84b5-01dcf136b4c4","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1083","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.setNodesHeader()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"6f82ab7d-dbb7-11e4-84b5-f93d17113566","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[465,466,467,468,469,470,471,472],"tindex":"6f82ab7e-dbb7-11e4-84b5-03fb4b0b53f2","variableMapping":{"distInMeter":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[3,4,7,124,125,126,127,128,129,130,132,133,134,136,137,138,139,140,141,142,144,145,146,148,149,150,151,152,153,154,155,157,158,159,161,170,437,439],"tindex":"6f82ab7f-dbb7-11e4-84b5-493bb76667f8","variableMapping":{"currentEntry":"I_LEVEL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"6f82ab80-dbb7-11e4-84b5-ade36517b467","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[69],"tindex":"6f82ab81-dbb7-11e4-84b5-7b72f9c0ec6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"6f82ab82-dbb7-11e4-84b5-e7fda1c76af8","variableMapping":{"orientation":"resultOrientation","java.lang.Math.PI":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"6f82ab83-dbb7-11e4-84b5-c5c0847e7484","variableMapping":{"nodes":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","adj":"key","base":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"6f82ab84-dbb7-11e4-84b5-db7171189ff2","variableMapping":{"noNumberValue":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:332","type":"CtReturnImpl","sourcecode":"return int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"6f82ab85-dbb7-11e4-84b5-ed86e93d6147","variableMapping":{"bytePos":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[],"tindex":"6f82ab86-dbb7-11e4-84b5-c570259264ca","variableMapping":{"entry":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-2},{"failures":[110],"tindex":"6f82ab87-dbb7-11e4-84b5-d91bfd21a951","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[1,11],"tindex":"6f82ab88-dbb7-11e4-84b5-bf987a811252","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[],"tindex":"6f82ab89-dbb7-11e4-84b5-05b79872b56e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:308","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\",\")"},"status":0},{"failures":[465,466,473,467,469,470,474,475,476,471,472,190,196,198,199,477,213,219,221,222],"tindex":"6f82ab8a-dbb7-11e4-84b5-3560cf1b06c2","variableMapping":{"nodeId":"hash","nodeIdOffset":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"6f82d29b-dbb7-11e4-84b5-977ebc7e4a4a","variableMapping":{"currentBucket":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[264,445],"tindex":"6f82d29c-dbb7-11e4-84b5-410e21ce60b3","variableMapping":{"tmpNo":"I_SKIP_EDGE2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"6f82d29d-dbb7-11e4-84b5-0ffb3a402c17","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"6f82d29e-dbb7-11e4-84b5-391ff939faf4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[56,60,92,96,98,104,108,112,118,122],"tindex":"6f82d29f-dbb7-11e4-84b5-4f0ed16ba03e","variableMapping":{"lat":"prio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:65","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"6f82d2a0-dbb7-11e4-84b5-5b5630f629d9","variableMapping":{"nodeThis":"y1","nextEdgeOther":"tmpErr","nodeOther":"y1","nextEdge":"sLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":0},{"failures":[465,466,467,468,469,470,476,471,472],"tindex":"6f82d2a1-dbb7-11e4-84b5-83574f0c1145","variableMapping":{"flags":"bits","nodeFlags":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[88],"tindex":"6f82d2a2-dbb7-11e4-84b5-99c9f0f2fe7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,30,31,31,384,384,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,388,41,42,43,44,45,63,83,84,85,86,87,88,109,110,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,423,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,426,182,183,184,185,186,187,427,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,428,204,205,478,206,207,208,209,429,210,211,212,430,213,214,215,216,217,218,219,220,221,222,223,224,225,226,431,227,228,229,230,231,232,233,234,235,236,237,238,432,239,240,241,242,243,244,245,246,247,248,433,434,249,250,435,251,252,253,254,255,256,257,436,258,259,260,261,262,437,263,264,265,438,439,266,267,440,441,268,269,270,271,272,273,274,275,276,277,278,443,279,280,281,282,283,284,285,286,287,288,444,445,289,290,446,291,292,293,294,295,296,297,447,298,299,300,301,302,303,304,305,448,449,306,307,308,309,310,311,312,313,314,315,316,451,317,318,319,320,321,322,323,324,325,326,452,453,327,328,454,329,330,331,332,333,334,335,455,336,337,338,339,340,341,456,457,342,343,344,345,346,347,348,349,350,351,352,459,353,354,355,356,357,358,359,360,361,362,460,461,363,364,462,365,366,367,368,369,370,371,463,372,373,374,375,479],"tindex":"6f82d2a3-dbb7-11e4-84b5-db62e3dbac74","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"6f82d2a4-dbb7-11e4-84b5-cdfccbe656d5","variableMapping":{"err":"unvisitedDeadEnds","dLat":"del","tmpErr":"unvisitedDeadEnds","x1":"del","sLon":"unvisitedDeadEnds"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[],"tindex":"6f82d2a5-dbb7-11e4-84b5-f30ea933ec87","variableMapping":{"index":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:767","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[480],"tindex":"6f82f9b6-dbb7-11e4-84b5-756f79deda6d","variableMapping":{"initLeafSize":"index","maxLeafEntries":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[],"tindex":"6f82f9b7-dbb7-11e4-84b5-a59831f0f082","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"6f82f9b8-dbb7-11e4-84b5-69139f07e234","variableMapping":{"width":"from","i":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:147","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"6f82f9b9-dbb7-11e4-84b5-f73c4ae1f327","variableMapping":{"nodeId":"index","mainNodes":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-2},{"failures":[42,167,481,482,483,484],"tindex":"6f82f9ba-dbb7-11e4-84b5-ef9b742a7224","variableMapping":{"maxMCSpeed":"com.graphhopper.util.AngleCalc.PI_4","speed":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-1},{"failures":[124,133,138,139,161],"tindex":"6f82f9bb-dbb7-11e4-84b5-39d1cdb364d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"6f82f9bc-dbb7-11e4-84b5-25cfda7db4d0","variableMapping":{"resultOrientation":"orientation","orientation":"orientation","java.lang.Math.PI":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"6f82f9bd-dbb7-11e4-84b5-8924c9f64d0d","variableMapping":{"entry":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"6f82f9be-dbb7-11e4-84b5-3bfe1f730c41","variableMapping":{"nextTowerId":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"6f82f9bf-dbb7-11e4-84b5-b3a3b991f5fd","variableMapping":{"hash":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[485],"tindex":"6f82f9c0-dbb7-11e4-84b5-dfee8d6038b8","variableMapping":{"str":"str","kmInteger":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[1,2,3,4,5,6,7,380,8,9,10,11,381,12,13,14,15,16,17,18,19,20,21,22,382,23,24,25,26,27,28,486,487,488,489,490,29,491,492,493,494,30,30,31,31,384,384,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,388,41,42,43,44,45,63,83,84,85,86,87,88,109,110,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,423,164,165,166,167,168,169,170,171,172,173,174,175,176,177,495,496,497,498,499,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,478,206,207,208,209,429,210,211,212,430,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,500,501,502,503,229,230,231,232,233,234,235,236,237,238,432,239,240,241,242,243,244,245,246,247,248,433,434,249,250,435,251,252,253,254,255,256,257,436,258,259,260,261,504,505,506,507,262,437,263,264,265,438,439,266,267,440,441,268,442,269,270,271,272,273,274,275,276,277,278,443,279,280,281,282,283,284,285,286,287,288,444,445,289,290,446,291,292,293,294,295,296,297,447,298,299,300,301,302,303,304,305,448,449,306,450,307,308,309,310,311,312,313,314,315,316,451,317,318,319,320,321,322,323,324,325,326,452,453,327,328,454,329,330,331,332,333,334,335,455,336,337,338,339,340,341,456,457,342,458,343,344,345,346,347,348,349,350,351,352,459,353,354,355,356,357,358,359,360,361,362,460,461,363,364,462,365,366,367,368,369,370,371,463,372,373,374,375,508,509,479],"tindex":"6f82f9c1-dbb7-11e4-84b5-3556d244d891","variableMapping":{"str":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:274","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[],"tindex":"6f8320d2-dbb7-11e4-84b5-bbac2b0ff5cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"6f8320d3-dbb7-11e4-84b5-11afa1a3747b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[87],"tindex":"6f8320d4-dbb7-11e4-84b5-a18aa4514b2e","variableMapping":{"initLeafSize":"prevConnectedId","maxLeafEntries":"prevConnectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[],"tindex":"6f8320d5-dbb7-11e4-84b5-237567a25c89","variableMapping":{"pointer":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[382,56,90,92,98,101,104,112,115,118],"tindex":"6f8320d6-dbb7-11e4-84b5-69ba7347a36a","variableMapping":{"nodeB":"value","edgeId":"value","nodeA":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"6f8320d7-dbb7-11e4-84b5-3bec2122604e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[],"tindex":"6f8320d8-dbb7-11e4-84b5-a1036d3652dd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"6f8320d9-dbb7-11e4-84b5-f3fee2a9ee39","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"6f8320da-dbb7-11e4-84b5-f356bf0fb2a9","variableMapping":{"value":"usedBits","numberOfBits":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-2},{"failures":[57,93,105,119],"tindex":"6f8320db-dbb7-11e4-84b5-3f972d372c4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"6f8320dc-dbb7-11e4-84b5-bb185a3c6648","variableMapping":{"flags":"oldRelationFlags","tmpValue":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6f8320dd-dbb7-11e4-84b5-f142e93dc217","variableMapping":{"maxLeafEntries":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"6f8320de-dbb7-11e4-84b5-f38421146dd5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[],"tindex":"6f8320df-dbb7-11e4-84b5-6972d1e13ec7","variableMapping":{"flags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"6f8320e0-dbb7-11e4-84b5-53efea9d15ab","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"6f8320e1-dbb7-11e4-84b5-6116c31c86c1","variableMapping":{"retBucket":"speed","bucketSize":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"6f8320e2-dbb7-11e4-84b5-05c7820732e8","variableMapping":{"radiusInMeter":"fwdIncline","com.graphhopper.util.DistanceCalcEarth.C":"fwdIncline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:112","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[],"tindex":"6f8320e3-dbb7-11e4-84b5-23cc435604ad","variableMapping":{"algo":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"6f8320e4-dbb7-11e4-84b5-2b8acca38463","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"java.lang.Double.POSITIVE_INFINITY","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"6f8320e5-dbb7-11e4-84b5-e9a0c121b934","variableMapping":{"defaultUTurnCost":"angle","weight":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"6f8347f6-dbb7-11e4-84b5-6dc9a10ef7fe","variableMapping":{"tmpDegreeCounter":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"6f8347f7-dbb7-11e4-84b5-b9b11851850e","variableMapping":{"initLeafSize":"start","maxLeafEntries":"prevConnectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"6f8347f8-dbb7-11e4-84b5-457650f36d5a","variableMapping":{"id":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"6f8347f9-dbb7-11e4-84b5-d56b697a6b8a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[1,6,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,28,383,30,385,386,387,389,46,510,48,50,61,62,63,64,65,396,0,66,67,68,397,69,70,71,72,73,74,75,76,398,77,399,78,79,80,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,183,189,205,228,229,230,231,232,233,234,235,236,237,238,432,239,240,241,242,243,244,245,246,247,248,433,434,249,250,435,251,252,253,254,255,256,257,436,258,259,260,261,262,437,263,264,265,438,439,266,267,440,441,268,442,269,270,271,272,273,274,275,276,277,278,443,279,280,281,282,283,284,285,286,287,288,444,445,289,290,446,291,292,293,294,295,296,297,447,298,299,300,301,302,303,304,305,448,449,306,450,307,308,309,310,311,312,313,314,315,316,451,317,318,319,320,321,322,323,324,325,326,452,453,327,328,454,329,330,331,332,333,334,335,455,336,337,338,339,340,341,456,457,342,458,343,344,345,346,347,348,349,350,351,352,459,353,354,355,356,357,358,359,360,361,362,460,461,363,364,462,365,366,367,368,369,370,371,463,372,373,374,375],"tindex":"6f8347fa-dbb7-11e4-84b5-fdfe76b3420a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"6f8347fb-dbb7-11e4-84b5-39fa39f4affd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[239,279,317,353],"tindex":"6f8347fc-dbb7-11e4-84b5-9746b1096b2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":291,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":156,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":123,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":438,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":180,"com.graphhopper.GraphHopperAPITest.testNoLoad":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":230,"com.graphhopper.reader.OSMReaderTest.testFerry":14,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":173,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":100,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":402,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":216,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":2,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":484,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":301,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":451,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":487,"com.graphhopper.coll.CompressedArrayTest.testCompress":472,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":405,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":373,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":128,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":433,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":353,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":430,"com.graphhopper.util.AngleCalcTest.testOrientation":481,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":134,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":436,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":124,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":360,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":148,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":164,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":478,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":93,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":163,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":268,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":213,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":87,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":146,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":459,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":193,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":337,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":101,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":302,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":474,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":137,"com.graphhopper.GraphHopperTest.testLoadOSM":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":194,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":390,"com.graphhopper.reader.OSMReaderTest.testSort":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":106,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":448,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":369,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":341,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":469,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":258,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":36,"com.graphhopper.routing.DijkstraTest.initializationError":385,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":334,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":446,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":350,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":437,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":303,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":307,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":443,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":58,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":220,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":152,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":218,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":142,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":271,"com.graphhopper.coll.OSMIDMapTest.testGetLong":498,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":326,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":285,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":267,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":287,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":483,"com.graphhopper.coll.CompressedArrayTest.testCompress2":471,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":362,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":52,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":317,"com.graphhopper.GraphHopperAPITest.testLoad":176,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":442,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":61,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":354,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":345,"com.graphhopper.storage.LevelGraphStorageTest.testClone":273,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":480,"com.graphhopper.reader.OSMReaderTest.testBarriers":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":308,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":416,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":145,"com.graphhopper.util.GHUtilityTest.testCopy":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":228,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":95,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":426,"com.graphhopper.routing.PathTest.testFindInstruction":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":92,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":309,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":0,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":175,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":447,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":415,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":370,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":358,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":332,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":130,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":379,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":48,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":389,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":235,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":342,"com.graphhopper.util.InstructionListTest.testWayList2":166,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":201,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":374,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":99,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":479,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":336,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":109,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":456,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":277,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":243,"com.graphhopper.storage.RAMDirectoryTest.testSynched":504,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":318,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":144,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":344,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":19,"com.graphhopper.routing.AStarTest.initializationError":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":158,"com.graphhopper.coll.OSMIDMapTest.testGet":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":316,"com.graphhopper.routing.PathBidirRefTest.testExtract":44,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":409,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":444,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":497,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":252,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":103,"com.graphhopper.util.GHUtilityTest.testSort2":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":153,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":440,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":70,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":325,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":475,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":107,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":69,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":449,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":279,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":283,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":300,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":464,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":33,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":328,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":111,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":286,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":26,"com.graphhopper.storage.StorablePropertiesTest.testStore":508,"com.graphhopper.storage.GraphHopperStorageTest.testClone":347,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":255,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":76,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":505,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":74,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":356,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":262,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":236,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":264,"com.graphhopper.routing.PathTest.testTime":41,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":393,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":298,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":274,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":79,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":429,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":248,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":289,"com.graphhopper.reader.OSMReaderTest.testRelation":382,"com.graphhopper.util.GHUtilityTest.testSortDirected":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":120,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":501,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":32,"com.graphhopper.GraphHopperTest.testFootOnly":10,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":401,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":72,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":207,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":507,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":219,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":125,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":244,"com.graphhopper.search.NameIndexTest.testCreate":494,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":30,"com.graphhopper.routing.QueryGraphTest.testOneWay":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":428,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":467,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":403,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":486,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":192,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":465,"com.graphhopper.reader.OSMReaderTest.testWithBounds":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":121,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":455,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":434,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":47,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":270,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":441,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":420,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":327,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":73,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":322,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":343,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":139,"com.graphhopper.util.InstructionListTest.testWayList":165,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":463,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":102,"com.graphhopper.GraphHopperAPITest.testDisconnected179":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":237,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":468,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":454,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":232,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":502,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":418,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":260,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":412,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":349,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":330,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":135,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":364,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":406,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":150,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":383,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":133,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":297,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":398,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":391,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":105,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":160,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":458,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":431,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":108,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":340,"com.graphhopper.routing.PathTest.testWayList":42,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":259,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":240,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":485,"com.graphhopper.coll.OSMIDMapTest.testGet2":496,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":161,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":294,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":488,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":453,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":378,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":359,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":314,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":348,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":221,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":222,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":223,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":117,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":53,"com.graphhopper.util.GHUtilityTest.testSort":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":435,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":476,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":91,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":411,"com.graphhopper.search.NameIndexTest.testPut":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":338,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":450,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":181,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":214,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":210,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":114,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":110,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":184,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":304,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":55,"com.graphhopper.storage.MMapDirectoryTest.testSynched":500,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":82,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":489,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":323,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":83,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":251,"com.graphhopper.routing.PathTest.testFound":388,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":11,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":50,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":296,"com.graphhopper.util.AngleCalcTest.testAtan2":482,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":263,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":410,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":319,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":493,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":239,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":352,"com.graphhopper.util.InstructionListTest.testEmptyList":423,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":394,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":226,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":151,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":397,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":94,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":154,"com.graphhopper.reader.PrinctonReaderTest.testRead":12,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":371,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":217,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":432,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":466,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":229,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":324,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":377,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":417,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":510,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":506,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":112,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":250,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":490,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":198,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":299,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":470,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":400,"com.graphhopper.reader.OSMReaderTest.testOneWay":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":199,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":355,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":367,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":333,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":404,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":461,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":246,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":351,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":129,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":477,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":127,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":187,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":63,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":242,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":384,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":27,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":457,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":503,"com.graphhopper.routing.PathBidirRefTest.testExtract2":45,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":138,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":57,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":183,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":202,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":491,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":365,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":427,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":395,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":21,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":261,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":195,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":368,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":424,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":276,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":77,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":460,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":281,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":227,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":233,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":399,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":311,"com.graphhopper.storage.StorablePropertiesTest.testLoad":509,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":157,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":231,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":265,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":167,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":462,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":65,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":245,"com.graphhopper.routing.AStarBidirectionTest.initializationError":387,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":80,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":295,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":293,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":305}}]
