[{"failures":[0],"tindex":"69197f68-db51-11e4-bf52-6fa19eb1048c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"6919a679-db51-11e4-bf52-b1e515167887","variableMapping":{"weightLong":"includeWay","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[30],"tindex":"6919a67a-db51-11e4-bf52-0fd2412fcf51","variableMapping":{"str":"str","name":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"6919a67b-db51-11e4-bf52-9f36732df14c","variableMapping":{"da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":0},{"failures":[],"tindex":"6919a67c-db51-11e4-bf52-81c8fe5a10d2","variableMapping":{"high":"flags","highKey":"flags","key":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"6919a67d-db51-11e4-bf52-37c195398ff7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[31,12],"tindex":"6919a67e-db51-11e4-bf52-570097596a04","variableMapping":{"segmentSizeInBytes":"encoderCount","index":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"6919a67f-db51-11e4-bf52-29a5ffa24eb8","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"i","entityType":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":0},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"6919a680-db51-11e4-bf52-8558ee3ac3df","variableMapping":{"bytePos":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,2,3,4,66,67,68,69,70,71],"tindex":"6919a681-db51-11e4-bf52-152543ceeff4","variableMapping":{"high":"allowed","highKey":"allowed","key":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[72,31,73,74,12],"tindex":"6919a682-db51-11e4-bf52-579b5004ffa1","variableMapping":{"factor":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[],"tindex":"6919a683-db51-11e4-bf52-5d0e0b15bb3a","variableMapping":{"mask":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-2},{"failures":[0,5],"tindex":"6919a684-db51-11e4-bf52-b303718e448e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[],"tindex":"6919cd95-db51-11e4-bf52-f53be73fedfb","variableMapping":{"start":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"6919cd96-db51-11e4-bf52-413db2fa5d3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[],"tindex":"6919cd97-db51-11e4-bf52-1139690eda18","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:303","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[75,76,77,78,1,79,80,81,82,83,84,85,7,10,11,19,21,25,26,27,29,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"tindex":"6919cd98-db51-11e4-bf52-3fc0a83a6988","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"6919cd99-db51-11e4-bf52-d937e01e2012","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:61","type":"CtReturnImpl","sourcecode":"return \"PREPARE+\" + (com.graphhopper.routing.util.Weighting.toString())"},"status":0},{"failures":[],"tindex":"6919cd9a-db51-11e4-bf52-9505852060e3","variableMapping":{"size":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"6919cd9b-db51-11e4-bf52-a7127aeb0c2f","variableMapping":{"bit":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":0},{"failures":[],"tindex":"6919cd9c-db51-11e4-bf52-3302af097d21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"6919cd9d-db51-11e4-bf52-1ba61aafb6cd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"6919cd9e-db51-11e4-bf52-9314e4badcaa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[121,122,123,124,125,126,127,128,129,130,131,112,132,133,134,135,136,137,138,139,120,140,141,142],"tindex":"6919cd9f-db51-11e4-bf52-d7cf0d96e947","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[],"tindex":"6919cda0-db51-11e4-bf52-b1f87b497e2c","variableMapping":{"value":"segmentSizeInBytes","numberOfBits":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-2},{"failures":[],"tindex":"6919cda1-db51-11e4-bf52-2ffebaecbcaa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"6919f4b2-db51-11e4-bf52-1f58d5bc84bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:37","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalcEarth.calcDist(double, double, double, double)"},"status":-2},{"failures":[143,144,145,146],"tindex":"6919f4b3-db51-11e4-bf52-bb0ea54bf65e","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-1},{"failures":[147],"tindex":"6919f4b4-db51-11e4-bf52-2b0fd1a6243d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"6919f4b5-db51-11e4-bf52-9b7cb985c5f3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"6919f4b6-db51-11e4-bf52-9be05dc7fd95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"6919f4b7-db51-11e4-bf52-cb7464dfd8f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"6919f4b8-db51-11e4-bf52-c1bc6eec2018","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[148,149,75,150,151,152,153,154,76,77,78,1,155,156,157,158,159,160,161,162,163,164,147,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,79,202,203,204,205,205,80,80,206,206,207,207,208,208,209,209,210,210,81,81,82,82,211,211,212,212,83,83,213,214,84,85,5,6,7,8,9,10,11,12,13,14,15,16,17,18,215,216,217,19,20,21,22,23,24,25,26,27,28,29,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,35,238,94,239,95,240,36,241,37,38,242,243,244,245,246,247,248,249,250,251,39,252,96,253,97,254,40,255,41,42,256,257,258,259,260,261,262,99,263,100,264,265,266,101,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,102,287,288,289,290,291,103,292,293,294,295,104,296,105,297,298,299,300,106,301,302,303,107,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,108,324,325,326,327,328,109,329,330,331,332,110,333,111,334,335,336,337,127,338,339,340,341,342,129,130,343,344,345,346,347,348,349,350,351,113,352,353,114,354,355,356,115,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,116,377,378,379,380,381,117,382,383,384,385,118,386,119,387,388,389],"tindex":"6919f4b9-db51-11e4-bf52-9beade3f1d9b","variableMapping":{"length":"segmentSizeIntsPower","segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:86","type":"CtIfImpl","sourcecode":"if ((int[][].int) > 0) {\n    throw new java.lang.IllegalThreadStateException(\"already created\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-1},{"failures":[148,149,75,150,151,152,153,154,76,77,78,1,155,156,157,158,159,160,161,162,163,164,147,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,79,202,203,204,205,205,80,80,206,206,207,207,208,208,209,209,210,210,81,81,82,82,211,211,212,212,83,83,213,214,84,85,5,6,7,8,9,10,11,12,13,14,15,16,17,18,215,216,217,19,20,21,22,23,24,25,26,27,28,29,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,35,238,94,239,95,240,36,241,37,38,242,243,244,245,246,247,248,249,250,251,39,252,96,253,97,254,40,255,41,42,256,257,258,259,260,261,262,99,263,100,264,265,266,101,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,102,287,288,289,290,291,103,292,293,294,295,104,296,105,297,298,299,300,106,301,302,303,107,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,108,324,325,326,327,328,109,329,330,331,332,110,333,111,334,335,336,337,338,339,341,342,130,343,344,345,346,347,348,349,350,351,113,352,353,114,354,355,356,115,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,116,377,378,379,380,381,117,382,383,384,385,118,386,119,387,388,389],"tindex":"691a1bca-db51-11e4-bf52-13a35eb6ef8a","variableMapping":{"id":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[75,76,77,78,1,164,147,79,205,80,207,208,209,210,81,82,212,83,84,85,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,390,86,87,88,89,90,92,93,227,228,229,230,231,94,239,95,96,253,97,98,99,100,264,101,102,103,104,105,297,106,301,107,108,109,110,111,334,346,112,113,114,354,115,116,117,118,119,387,120],"tindex":"691a1bcb-db51-11e4-bf52-8175b812a8b0","variableMapping":{"segmentSizeInBytes":"length","index":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"691a1bcc-db51-11e4-bf52-f7f8a2a11b68","variableMapping":{"size":"x2","delta":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[75,154,76,77,78,1,155,156,157,391,392,52,393,53,394,395,396,397,398,399,400,54,401,143,55,402,403,404,56,405,57,58,59,72,406,407,408,409,410,411,412,413,60,414,144,415,61,158,159,160,161,162,163,416,417,62,63,418,419,420,421,422,423,424,64,425,145,426,65,427,2,31,428,3,429,4,164,147,430,431,66,432,67,68,69,73,433,434,435,436,437,438,439,440,70,441,146,442,71,443,444,445,446,165,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,74,465,466,166,167,168,169,467,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,79,202,203,204,208,81,213,214,84,85,5,6,7,8,9,10,11,12,13,468,14,15,16,17,469,18,215,216,217,19,20,21,22,23,24,25,26,27,28,29,218,219,225,237,248,250,262,99,126,263,100,264,265,266,470,101,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,102,287,288,289,290,291,103,292,293,294,295,104,296,105,297,298,299,300,106,301,302,303,471,107,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,108,324,325,326,327,328,109,329,330,331,332,110,333,111,334,335,336,472,473,474,475,476,477,478,479,480,481,482,345,483,484,485,486,487,488,489,490,491,492,493,494,495,496,346,497,498,499,500,501,502,503,504,505,506,507,347,348,349,350,351,113,352,353,114,354,355,356,508,115,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,116,377,378,379,380,381,117,382,383,384,385,118,386,119,387,388,389],"tindex":"691a42dd-db51-11e4-bf52-237c53e30cc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[160,161],"tindex":"691a42de-db51-11e4-bf52-e3dc6ded2b58","variableMapping":{"id":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":-1},{"failures":[],"tindex":"691a42df-db51-11e4-bf52-51421fc28255","variableMapping":{"acceptBit":"roundaboutBit","ferryBit":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"691a42e0-db51-11e4-bf52-772c77d1ab02","variableMapping":{"graphHopperFolder":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:670","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":0},{"failures":[52,393,53,394,396,398,54,401,55],"tindex":"691a42e1-db51-11e4-bf52-fbb0fad29faa","variableMapping":{"versionHint":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"691a42e2-db51-11e4-bf52-bbe61d7a94bd","variableMapping":{"flags":"acceptBit","tmpValue":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[],"tindex":"691a42e3-db51-11e4-bf52-01008c6f30eb","variableMapping":{"shift":"wayBitMask","tmpValue":"wayBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[405,59,432,69,468],"tindex":"691a42e4-db51-11e4-bf52-2326dc8c0368","variableMapping":{"high":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[168,177,182,183,204],"tindex":"691a42e5-db51-11e4-bf52-49b546594596","variableMapping":{"size":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[],"tindex":"691a69f6-db51-11e4-bf52-cb97e7b837ba","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[32,33,44,46,47,48,51],"tindex":"691a69f7-db51-11e4-bf52-1b36402a1d38","variableMapping":{"orientation":"midLon","resultOrientation":"lon","baseOrientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[155,52,404,417,147,431,443,446,165,448,459,168,177,182,183,194,195,81,84,85,225,237,248,262,101,274,277,104,107,311,314,110,472,480,345,502,347,351,115,364,367,118],"tindex":"691a69f8-db51-11e4-bf52-5b28b141ec0e","variableMapping":{"distance":"speed","speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[450],"tindex":"691a69f9-db51-11e4-bf52-a9c4cc2bbc74","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"691a69fa-db51-11e4-bf52-83f0ca6e8926","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[],"tindex":"691a69fb-db51-11e4-bf52-7111a17e6d42","variableMapping":{"originalEdgesCount":"capacity","edgeDifference":"capacity","contractedNeighbors":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[348],"tindex":"691a69fc-db51-11e4-bf52-fbaf80a1f0c5","variableMapping":{"red":"index","green":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"691a69fd-db51-11e4-bf52-4d11fa3e229b","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"691a69fe-db51-11e4-bf52-2758a0c30adc","variableMapping":{"bits":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-2},{"failures":[],"tindex":"691a69ff-db51-11e4-bf52-1b0928611b21","variableMapping":{"directionBitMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":0},{"failures":[131,509,510,133,134,139,511,512,141,142],"tindex":"691a6a00-db51-11e4-bf52-337c6f54c926","variableMapping":{"width":"segmentSizePower","i":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:147","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"691a6a01-db51-11e4-bf52-33f007bf9a97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":0},{"failures":[],"tindex":"691a6a02-db51-11e4-bf52-510c5f909b60","variableMapping":{"distance":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[30],"tindex":"691a6a03-db51-11e4-bf52-49b6274fb739","variableMapping":{"red":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[168,170,176,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,79,202,203,204,21,22,23,24,25,27,28,218,219],"tindex":"691a6a04-db51-11e4-bf52-1dd847b955e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.createAndInitPath()"},"status":-1},{"failures":[],"tindex":"691a6a05-db51-11e4-bf52-9d90e8710437","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:652","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[143,58,406,144,416,145,68,433,146,12],"tindex":"691a6a06-db51-11e4-bf52-155682cc5014","variableMapping":{"tt":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[191,195,196,199,7,8,9,24,28,218,219,32,33,34,35,94,95,240,36,241,37,38,242,243,244,245,247,248,249,250,39,96,97,254,40,255,41,42,256,257,258,259,261,262,43,44,45,46,47,48,49,50,51],"tindex":"691a9117-db51-11e4-bf52-bdeac9b7b5fb","variableMapping":{"bm":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[160],"tindex":"691a9118-db51-11e4-bf52-d16933e10c74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"691a9119-db51-11e4-bf52-c385e690879e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"691a911a-db51-11e4-bf52-5b26c292b37f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"691a911b-db51-11e4-bf52-6b2607f60b5b","variableMapping":{"currentBucket":"segmentSizePower","retBucket":"segmentSizePower","currentIndex":"segmentSizePower","bucketSize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"691a911c-db51-11e4-bf52-615409b430e1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[159,160,161,19,20,21,22,23,25,26,27,28],"tindex":"691a911d-db51-11e4-bf52-13a0c6f6b2b4","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-1},{"failures":[],"tindex":"691a911e-db51-11e4-bf52-e7ad891bc8a2","variableMapping":{"locs":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[32,33,35,36,38,39,40,42,43,44,46,47,48,50,51],"tindex":"691a911f-db51-11e4-bf52-adc7df49f86c","variableMapping":{"speed":"minLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[393,396,408,410,419,421,435,437],"tindex":"691a9120-db51-11e4-bf52-9b1de8f94955","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:448","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[462,5],"tindex":"691a9121-db51-11e4-bf52-dffea04b38de","variableMapping":{"_location":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,2,3,4,66,67,68,69,70,71],"tindex":"691a9122-db51-11e4-bf52-9da89f1bdaca","variableMapping":{"directionBitMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[513],"tindex":"691a9123-db51-11e4-bf52-3fe7df545820","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"691a9124-db51-11e4-bf52-4bb898dd0e1a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[429,21,22,23,24,25,27,28,218,219],"tindex":"691a9125-db51-11e4-bf52-6bdac77a23f2","variableMapping":{"sacScale":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-1},{"failures":[6,7,8,9,11,12,13,14,15,16,17,469,18,21,22,23,24,25,27,29],"tindex":"691a9126-db51-11e4-bf52-a11a9ab91636","variableMapping":{"highwayValue":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[462,5,17,18],"tindex":"691a9127-db51-11e4-bf52-81afa8092db8","variableMapping":{"s":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[160,161,18],"tindex":"691a9128-db51-11e4-bf52-bf0943996e2d","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[32,33,43,44,45,46,514,47,48,51],"tindex":"691a9129-db51-11e4-bf52-0dbec261ee10","variableMapping":{"distance":"midLon","dist":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"691ab83a-db51-11e4-bf52-0be19b02077b","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"code","tmpNode":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[168,170,173,174,176,177,181,182,183,184,185,186,187,188,189,190,192,194,195,196,197,198,199,201,79,202,203,204,21,22,25,349,114,376,383,119],"tindex":"691ab83b-db51-11e4-bf52-8f826d41eea7","variableMapping":{"edgeId":"edge","nodeId":"nodeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-1},{"failures":[],"tindex":"691ab83c-db51-11e4-bf52-87d6a0a6ea28","variableMapping":{"wayType":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.ROAD","com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.ROAD":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.CYCLEWAY","highway":"highway","roadValues":"roadValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[170,171,172,173,174,175,176,178,180,181,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,79,202,203,204,21,515,516,517,518,513,519],"tindex":"691ab83d-db51-11e4-bf52-f7d51c249e79","variableMapping":{"costs":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:612","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-1},{"failures":[75,76,77,78,155,158,162,147,165,448,459,465,170,171,172,173,174,176,180,184,185,188,192,194,197,199,201,79,202,204,84,218,99,100,271,277,282,284,291,293,295,298,106,308,314,319,321,328,330,332,335,477,345,487,489,346,499,501,506,347,351,114,361,367,372,374,381,383,385,388],"tindex":"691ab83e-db51-11e4-bf52-712deb692c0f","variableMapping":{"directionBitMask":"backwardBit","flags":"backwardBit","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"691ab83f-db51-11e4-bf52-9ddb5f1f79da","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[],"tindex":"691ab840-db51-11e4-bf52-957b6c773527","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"691ab841-db51-11e4-bf52-6584449e0de4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"691ab842-db51-11e4-bf52-016efe488c52","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"691ab843-db51-11e4-bf52-e93c83996fcb","variableMapping":{"i":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[394,415,426,442],"tindex":"691ab844-db51-11e4-bf52-03a56ca6fa85","variableMapping":{"initLeafSize":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[],"tindex":"691ab845-db51-11e4-bf52-b75c844900bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"691ab846-db51-11e4-bf52-adb8eaaf4d53","variableMapping":{"originalEdgesCount":"index","edgeDifference":"index","contractedNeighbors":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[148,75,155,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,79,202,203,204,19,20,21,22,25,26,28,249,250,251,39,252,96,253,97,254,40,255,41,42,256,257,258,259,260,261,262,347,348,349,350,351,113,352,353,114,354,356,115,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,116,377,378,379,380,381,117,382,383,384,385,118,386,119,387,388,389],"tindex":"691ab847-db51-11e4-bf52-2be4c251a534","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.loadNodesHeader()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"691adf58-db51-11e4-bf52-5b7eacbccb7a","variableMapping":{"minDistance":"midLat","rMin":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":0},{"failures":[170,176,181,183,184,185,186,187,188,189,190,192,195,196,197,198,199,201,79,202,203,204,22,23,24,25,27,218],"tindex":"691adf59-db51-11e4-bf52-77a676291675","variableMapping":{"mGarbage":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-1},{"failures":[520],"tindex":"691adf5a-db51-11e4-bf52-017184c8afa6","variableMapping":{"str":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[148,149,75,150,151,152,153,154,76,77,78,1,155,156,157,158,159,160,161,162,163,164,147,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,79,202,203,204,205,205,80,80,206,206,207,207,208,208,209,209,210,210,81,81,82,82,211,211,212,212,83,83,213,214,84,85,5,6,7,8,9,10,11,12,13,14,15,16,17,18,215,216,217,19,20,21,22,23,24,25,26,27,28,29,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,35,238,94,239,95,240,36,241,37,38,242,243,244,245,247,248,249,250,251,39,252,96,253,97,254,40,255,41,42,256,257,258,259,261,262,99,263,100,264,265,266,101,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,102,287,288,289,290,291,103,292,293,294,295,104,296,105,297,298,299,300,106,301,302,303,107,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,108,324,325,326,327,328,109,329,330,331,332,110,333,111,334,335,336,127,338,339,340,341,129,130,345,346,347,348,349,350,351,113,352,353,114,354,355,356,115,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,116,377,378,379,380,381,117,382,383,384,385,118,386,119,387,388,389],"tindex":"691adf5b-db51-11e4-bf52-81ac5567c571","variableMapping":{"retBucket":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":381,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":200,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":113,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":391,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":473,"com.graphhopper.reader.OSMReaderTest.testFerry":5,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":156,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":157,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":58,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":394,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":253,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":20,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":71,"com.graphhopper.storage.MMapDataAccessTest.testSegments":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":494,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":276,"com.graphhopper.coll.CompressedArrayTest.testCompress":33,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":400,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":334,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":172,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":492,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":251,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":178,"com.graphhopper.GraphHopperTest.testPrepare":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":503,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":168,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":321,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":519,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":405,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":192,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":226,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":54,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":153,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":356,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":162,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":404,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":190,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":239,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":297,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":99,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":49,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":115,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":518,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":181,"com.graphhopper.GraphHopperTest.testLoadOSM":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":242,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":340,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":95,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":429,"com.graphhopper.reader.OSMReaderTest.testSort":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":414,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":264,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":331,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":106,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":504,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":81,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":295,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":380,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":310,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":126,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":101,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":366,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":65,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":425,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":255,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":196,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":254,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":481,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":187,"com.graphhopper.coll.OSMIDMapTest.testGetLong":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":186,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":358,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":286,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":373,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":114,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":375,"com.graphhopper.coll.CompressedArrayTest.testCompress2":32,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":323,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":417,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":277,"com.graphhopper.GraphHopperAPITest.testLoad":218,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":508,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":339,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":445,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":315,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":305,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":0,"com.graphhopper.storage.LevelGraphStorageTest.testClone":360,"com.graphhopper.reader.OSMReaderTest.testBarriers":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":267,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":138,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":73,"com.graphhopper.util.GHUtilityTest.testCopy":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":477,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":262,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":423,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":143,"com.graphhopper.routing.PathTest.testFindInstruction":85,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":397,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":268,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":515,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":155,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":450,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":386,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":432,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":332,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":319,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":140,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":281,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":439,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":428,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":362,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":478,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":124,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":344,"com.graphhopper.util.InstructionListTest.testWayList2":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":499,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":243,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":335,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":272,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":105,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":164,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":301,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":364,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":112,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":72,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":510,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":278,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":188,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":304,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":10,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":509,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":79,"com.graphhopper.coll.OSMIDMapTest.testGet":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":275,"com.graphhopper.routing.PathBidirRefTest.testExtract":166,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":451,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":91,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":116,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":408,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":257,"com.graphhopper.storage.RAMDataAccessTest.testCopy":511,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":498,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":299,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":497,"com.graphhopper.storage.RAMDataAccessTest.testSegments":142,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":407,"com.graphhopper.util.GHUtilityTest.testSort2":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":197,"com.graphhopper.reader.OSMReaderTest.testMain":7,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":409,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":144,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":258,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":379,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":501,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":367,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":371,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":388,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":208,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":289,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":338,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":431,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":374,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":17,"com.graphhopper.storage.StorablePropertiesTest.testStore":98,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":120,"com.graphhopper.storage.GraphHopperStorageTest.testClone":307,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":500,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":462,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":317,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":460,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":347,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":145,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":479,"com.graphhopper.routing.PathTest.testTime":214,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":422,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":119,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":361,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":466,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":245,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":378,"com.graphhopper.reader.OSMReaderTest.testRelation":468,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":491,"com.graphhopper.util.GHUtilityTest.testSortDirected":151,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":513,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":441,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":207,"com.graphhopper.GraphHopperTest.testFootOnly":28,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":393,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":228,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":458,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":40,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":3,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":487,"com.graphhopper.search.NameIndexTest.testCreate":88,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":141,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":205,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":342,"com.graphhopper.routing.QueryGraphTest.testOneWay":211,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":246,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":46,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":396,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":94,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":43,"com.graphhopper.reader.OSMReaderTest.testWithBounds":16,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":136,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":146,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":159,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":484,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":493,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":2,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":357,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":355,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":416,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":440,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":55,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":288,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":459,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":282,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":107,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":183,"com.graphhopper.util.InstructionListTest.testWayList":77,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":406,"com.graphhopper.GraphHopperAPITest.testDisconnected179":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":480,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":514,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":290,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":475,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":437,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":216,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":161,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":490,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":506,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":23,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":309,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":179,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":403,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":177,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":118,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":463,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":419,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":266,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":203,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":471,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":260,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":128,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":341,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":61,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":300,"com.graphhopper.routing.PathTest.testWayList":84,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":505,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":457,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":483,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":30,"com.graphhopper.coll.OSMIDMapTest.testGet2":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":204,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":383,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":412,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":320,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":273,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":308,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":41,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":372,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":42,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":256,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":434,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":517,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":62,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":122,"com.graphhopper.util.GHUtilityTest.testSort":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":496,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":395,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":411,"com.graphhopper.search.NameIndexTest.testPut":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":298,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":470,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":235,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":252,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":231,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":222,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":68,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":220,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":263,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":418,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":444,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":283,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":158,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":343,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":370,"com.graphhopper.routing.PathTest.testFound":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":346,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":4,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":29,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":132,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":385,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":520,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":410,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":279,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":516,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":87,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":135,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":345,"com.graphhopper.util.InstructionListTest.testEmptyList":154,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":191,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":424,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":465,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":454,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":401,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":453,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":198,"com.graphhopper.reader.PrinctonReaderTest.testRead":215,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":110,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":97,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":274,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":44,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":472,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":284,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":399,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":435,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":31,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":421,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":66,"com.graphhopper.reader.OSMReaderTest.testFoot":6,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":495,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":37,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":48,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":387,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":392,"com.graphhopper.reader.OSMReaderTest.testOneWay":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":38,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":316,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":329,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":294,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":398,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":134,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":433,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":489,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":173,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":180,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":461,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":171,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":223,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":165,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":485,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":206,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":302,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":469,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":129,"com.graphhopper.routing.PathBidirRefTest.testExtract2":167,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":182,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":64,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":244,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":390,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":426,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":12,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":507,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":438,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":240,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":330,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":363,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":464,"com.graphhopper.GraphHopperTest.testFootAndCar":24,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":108,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":369,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":63,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":261,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":512,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":476,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":270,"com.graphhopper.GraphHopperTest.testPrepareOnly":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":201,"com.graphhopper.GraphHopperTest.testVia":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":236,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":474,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":14,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":351,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":1,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":327,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":448,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":488,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":402,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":384,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":382,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":100}}]
