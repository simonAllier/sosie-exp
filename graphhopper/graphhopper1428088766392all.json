[{"failures":[0],"tindex":"5827588c-da36-11e4-b001-3b529c6e6d68","variableMapping":{"val":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:139","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return \"\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[],"tindex":"582869fd-da36-11e4-b001-6f54fa4c334a","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":0},{"failures":[1,2,3],"tindex":"582869fe-da36-11e4-b001-6f4e38f41787","variableMapping":{"periodicUpdates":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"5828910f-da36-11e4-b001-2367b7a0d418","variableMapping":{"factor":"maxLon","delta_lon":"maxLon","a_lon":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"58289110-da36-11e4-b001-3d8f1d9ef977","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:502","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"58289111-da36-11e4-b001-55f62f78efc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"58289112-da36-11e4-b001-b9b8f084dfb6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[4],"tindex":"58289113-da36-11e4-b001-31c4143d1828","variableMapping":{"cp":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"58289114-da36-11e4-b001-fbe0a2e58c31","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-2},{"failures":[],"tindex":"58289115-da36-11e4-b001-f77e5141e084","variableMapping":{"tmp":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"status":-2},{"failures":[5,6,7,8,9,10],"tindex":"58289116-da36-11e4-b001-e91d08301cdf","variableMapping":{"alreadyRun":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"58289117-da36-11e4-b001-2b6a4e7391ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"58289118-da36-11e4-b001-65281e6dd085","variableMapping":{"compressionLevel":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":0},{"failures":[11],"tindex":"58289119-da36-11e4-b001-f7d67ec8535c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[12,13],"tindex":"5828911a-da36-11e4-b001-cd85dc7b5c36","variableMapping":{"factor":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:207","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[],"tindex":"5828911b-da36-11e4-b001-e701c603c6bc","variableMapping":{"str":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[14,15,16],"tindex":"5828911c-da36-11e4-b001-d7944941e8cf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[6,17],"tindex":"5828911d-da36-11e4-b001-e9bfd868115f","variableMapping":{"capacity":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"5828911e-da36-11e4-b001-b396ec99a1b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"5828df3f-da36-11e4-b001-1de66adcfc41","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[18],"tindex":"5828df40-da36-11e4-b001-739a4e9472f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"5828df41-da36-11e4-b001-57c89805d0d7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[6,7,19,20,8,21,22,9,23,24,10],"tindex":"5828df42-da36-11e4-b001-43a7dda4d8b2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"5828df43-da36-11e4-b001-fbc9930d5829","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"5828df44-da36-11e4-b001-2b2899d08e87","variableMapping":{"encoderList":"com.graphhopper.routing.util.EncodingManager.BIKE2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"5828df45-da36-11e4-b001-bd43a165e52d","variableMapping":{"segmentsToMap":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"5828df46-da36-11e4-b001-bde4d6ac21b4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[12,13],"tindex":"5828df47-da36-11e4-b001-43e4babd10f7","variableMapping":{"this":"this","unknownSpeed":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[25,26,27,28],"tindex":"58292c68-da36-11e4-b001-9925122d4229","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-1},{"failures":[29,30],"tindex":"58292c69-da36-11e4-b001-59b92d05820b","variableMapping":{"y1":"i","y2":"i","x1":"i","x2":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[],"tindex":"58292c6a-da36-11e4-b001-d7033f3682fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:71","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"58292c6b-da36-11e4-b001-3d064422fc03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"58292c6c-da36-11e4-b001-cb32b9e18bcc","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"582b012d-da36-11e4-b001-3340bc64f2d2","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[106,107],"tindex":"582b012e-da36-11e4-b001-dd62faeb8699","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"582b012f-da36-11e4-b001-6563dbca2c1a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-2},{"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,12,128,129,13,130,44,131,45,46,47,48,49,132,133,50,134,135,136,51,137,138,52,53,139,54,140,55,56,141],"tindex":"582b0130-da36-11e4-b001-0188b589fc99","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"582b0131-da36-11e4-b001-b7c7c9646672","variableMapping":{"nodeFlags":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-2},{"failures":[142,143,144,145,146,147,148,149,150,34,35,151,152,153,154,29,155,156,157,158,30,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,1,184,185,186,187,188,189,190,191,192,193,194,195,2,36,3,196,197,198,198,37,37,199,199,200,200,38,38,39,39,201,201,40,40,41,41,202,202,203,203,42,42,204,205,43,206,207,208,209,210,211,212,213,51,137,138,52,54,140,56,214,215,216,217,218,219,57,58,59,60,61,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,62,241,63,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,64,258,65,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,84,283,284,285,286,287,288],"tindex":"582b0132-da36-11e4-b001-a976247d44f4","variableMapping":{"k":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:80","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(\"graphhopper.\".length())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":-1},{"failures":[4],"tindex":"582b0133-da36-11e4-b001-59ab793fc38b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[],"tindex":"582b0134-da36-11e4-b001-37354beb203b","variableMapping":{"bits":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":-2},{"failures":[],"tindex":"582b2845-da36-11e4-b001-5f5bd9f7d67e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"582b2846-da36-11e4-b001-357a5c62d274","variableMapping":{"high":"encoded","len":"encoded","start":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-2},{"failures":[125],"tindex":"582b2847-da36-11e4-b001-cdb8f23b74f7","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[157,289,290,291,292,71,293,294,295,296,297,76,298,299,300,301,302,85,303,304,305,306,307,308,97,309],"tindex":"582b2848-da36-11e4-b001-255fb8c5b0cd","variableMapping":{"high":"value","guess":"value","low":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[29,158],"tindex":"582b2849-da36-11e4-b001-bd7a4f9116b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[],"tindex":"582b284a-da36-11e4-b001-cb0faafd9c22","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-2},{"failures":[29,157,289,292,310,71,293,294,297,311,76,298,299,302,312,85,303,305,308,313,97,309],"tindex":"582b284b-da36-11e4-b001-d5fddff27bd4","variableMapping":{"retBucket":"i","bucketSize":"com.graphhopper.coll.SparseIntIntArray.DELETED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-1},{"failures":[],"tindex":"582b284c-da36-11e4-b001-4322a14bae1d","variableMapping":{"high":"directionBitMask","guess":"directionBitMask","low":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[108,113,116,120,122,314,45,132],"tindex":"582b284d-da36-11e4-b001-d708d083bb7e","variableMapping":{"tt":"res"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[151,152,153,154,110,315,316,317,318,122,319,161,123,320,321,124,125,322,314,323,126,324,127,12,325,128,326,129,327,328,329,330,331,162,163,164,165,332,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,1,184,185,186,187,188,189,190,191,192,193,194,195,2,36,3,196,197,38,204,205,43,206,208,209,51,138,52,53,139,54,55,141,225,238,252,254,269,67,333,272,68,334,273,335,274,69,336,289,337,338,339,340,341,342,343,290,275,291,292,344,345,346,347,348,310,349,70,350,351,352,353,276,71,293,354,355,356,72,357,358,359,360,361,277,73,362,278,363,279,74,364,294,365,366,367,368,369,370,371,295,280,296,297,372,373,374,375,376,311,377,75,378,379,380,381,281,76,298,382,383,384,77,385,386,387,388,389,82,390,299,391,392,393,394,395,396,397,300,282,301,302,398,399,400,401,402,312,403,83,404,405,406,407,84,85,303,408,409,410,86,411,412,413,414,415,416,417,283,418,419,420,304,284,94,421,285,422,286,95,423,305,424,425,426,427,428,429,430,306,287,307,308,431,432,433,434,435,313,436,96,437,438,439,440,288,97,309,441,442,443,98,444,445,446,447,448],"tindex":"582b284e-da36-11e4-b001-db93f63fdcfd","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-1},{"failures":[186,194,138,56,253],"tindex":"582b4f5f-da36-11e4-b001-17899b750784","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[12,13],"tindex":"582b4f60-da36-11e4-b001-e7e62e2f7018","variableMapping":{"maxSpeed":"longTripsSpeed","fwdSpeed":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-1},{"failures":[],"tindex":"582b4f61-da36-11e4-b001-eff85273d854","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[5,6,111,20,22,11,118,24],"tindex":"582b4f62-da36-11e4-b001-1561701a835a","variableMapping":{"r":"speed","angle":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"582b4f63-da36-11e4-b001-b7cb04937c3d","variableMapping":{"high":"relBitMask","highKey":"relBitMask","key":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"582b4f64-da36-11e4-b001-a708b6528dd6","variableMapping":{"cap":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[449,450,451,329,48,210],"tindex":"582b4f65-da36-11e4-b001-25efd791453e","variableMapping":{"tmpNode":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[17,452,453,11,320,197,13,130,139],"tindex":"582b4f66-da36-11e4-b001-215d6a544a94","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"582b4f67-da36-11e4-b001-c54842ff3414","variableMapping":{"edgePointer":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[5,6,25,7,454,455,456,19,111,20,8,26,457,458,21,22,9,27,459,17,453,11,460,461,23,118,24,10,28,462,13,130,44,131,46,47,48,49,50,134,136],"tindex":"582b4f68-da36-11e4-b001-c10af9db96e1","variableMapping":{"graphHopperFolder":"s","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:655","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalStateException(\"graphHopperLocation is not specified. call init before\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"582b4f69-da36-11e4-b001-b33016be3dbe","variableMapping":{"originalEdgesCount":"i","edgeDifference":"valueIfKeyNotFound","contractedNeighbors":"valueIfKeyNotFound"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"582b4f6a-da36-11e4-b001-9532e395604c","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED","edge":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[6,7,19,20,8,21,22,9,23,24,10],"tindex":"582b4f6b-da36-11e4-b001-fd29964804a0","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[4],"tindex":"582b4f6c-da36-11e4-b001-47d860cee2b2","variableMapping":{"indexM":"kmInteger","tmp":"str","version":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:98","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"582b4f6d-da36-11e4-b001-490aea8d2109","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[463,464,465,466],"tindex":"582b4f6e-da36-11e4-b001-c18c729710f7","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[],"tindex":"582b767f-da36-11e4-b001-59a921b0ce4c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"582b7680-da36-11e4-b001-33d9568ef0c6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[467,5,468,6,25,110,115,458,21,22,315,316,11,122,319,161,123,320,321,124,125,322,314,323,126,324,127,12,325,128,326,129,327,328,329,330,331,178,179,180,181,182,183,1,184,185,186,187,188,189,190,191,192,193,194,195,2,36,3,196,197,139,225,238,252,269,67,333,272,68,334,273,335,274,69,336,289,337,338,339,340,341,342,343,290,275,291,292,344,345,346,347,348,310,349,70,350,351,352,353,276,71,293,354,355,356,72,357,358,359,360,361,277,73,362,278,363,279,74,364,294,365,366,367,368,369,370,371,295,280,296,297,372,373,374,375,376,311,377,75,378,379,380,381,281,76,298,382,383,384,77,385,386,387,388,389,82,390,299,391,392,393,394,395,396,397,300,282,301,302,398,399,400,401,402,312,403,83,404,405,406,407,84,85,303,408,409,410,86,411,412,413,414,415,416,417,283,418,419,420,304,284,94,421,285,422,286,95,423,305,424,425,426,427,428,429,430,306,287,307,308,431,432,433,434,435,313,436,96,437,438,439,440,288,97,309,441,442,443,98,444,445,446,447,448],"tindex":"582b7681-da36-11e4-b001-15275dd3b917","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[160],"tindex":"582b7682-da36-11e4-b001-29dee5c57c69","variableMapping":{"resultOrientation":"speedReverse","orientation":"restDist2D","java.lang.Math.PI":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[],"tindex":"582b7683-da36-11e4-b001-179f6d90de86","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"582b7684-da36-11e4-b001-bdad61d23386","variableMapping":{"high":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-2},{"failures":[],"tindex":"582b7685-da36-11e4-b001-334d92a518b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"582b7686-da36-11e4-b001-d7bf5e6cb7a3","variableMapping":{"size":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[452,11,320,189,197,13,130,136,139,275,280,282,287],"tindex":"582b7687-da36-11e4-b001-2fb89fe2dc74","variableMapping":{"workerThreads":"nextWayBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"582b7688-da36-11e4-b001-b56683fd9cae","variableMapping":{"high":"shift","len":"shift","start":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[449,450,451,329,48],"tindex":"582b9d99-da36-11e4-b001-b97edf12a313","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[],"tindex":"582b9d9a-da36-11e4-b001-d7b759ecc520","variableMapping":{"i":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"582b9d9b-da36-11e4-b001-112e1c1aae71","variableMapping":{"low":"importance","guess":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"582b9d9c-da36-11e4-b001-130af4e9a5f0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[456,17,453,461],"tindex":"582b9d9d-da36-11e4-b001-ade63356ce64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[142,143,144,145,146],"tindex":"582b9d9e-da36-11e4-b001-211c9da5fd6c","variableMapping":{"i":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[],"tindex":"582b9d9f-da36-11e4-b001-1b7211681d9e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[151,152,153,113,29,158,30,120,324,129,330,164,166,167,172,173,174,177,178,179,183,185,188,190,191,197,38,40,13,130,44,45,48,49,132,133,50,136,208,209,138,52,53,139,54,55,56,214,67,68,69,336,289,343,275,352,354,72,360,73,74,364,294,371,280,380,382,77,388,82,390,299,397,282,406,408,86,414,94,95,423,305,430,287,439,441,98,447],"tindex":"582b9da0-da36-11e4-b001-bbf28b19a5c8","variableMapping":{"edgePointer":"directionBitMask","edgeEntryBytes":"shift","nextEdge":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:797","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[],"tindex":"582b9da1-da36-11e4-b001-9de75041ecb5","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"582b9da2-da36-11e4-b001-c746688c136c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[144,150,34,35,153,154,29,155,156,157,158,162,163,166,167,168,169,170,172,174,176,177,178,180,181,182,183,1,184,185,186,187,191,192,193,194,2,36,3,196,197,38,208,209,214,215,225,238,252,269,67,68,336,289,338,339,343,346,348,352,276,354,356,360,73,364,294,366,367,371,374,376,380,281,382,384,388,390,299,392,393,397,400,402,406,84,408,410,414,94,423,305,425,426,430,433,435,439,288,441,443,447],"tindex":"582b9da3-da36-11e4-b001-b13575b41439","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[],"tindex":"582b9da4-da36-11e4-b001-49dc07de263c","variableMapping":{"initLeafSize":"nextRelBit","maxLeafEntries":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":0},{"failures":[44,51,141],"tindex":"582b9da5-da36-11e4-b001-ef490eda6cb4","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:197","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[142,143,144,145,146,147,148,150,34,35,151,152,153,154,29,155,156,157,158,30,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,1,184,185,186,187,188,189,190,191,192,193,194,195,2,36,3,196,197,198,37,199,200,38,39,201,40,41,202,203,42,43,206,13,130,44,131,45,46,47,48,49,132,133,50,134,136,208,209,210,51,138,52,53,139,54,140,55,56,141,214,215,220,221,222,223,224,225,227,228,229,230,232,233,234,235,236,237,238,239,240,62,241,63,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,64,258,65,259,260,261,262,263,264,265,266,267,268,269,67,272,68,335,69,336,289,337,338,339,340,341,342,343,290,275,291,292,344,345,346,347,348,310,349,70,350,351,352,276,71,293,354,355,356,72,357,358,359,360,361,277,73,363,74,364,294,365,366,367,368,369,370,371,295,280,296,297,372,373,374,375,376,311,377,75,378,379,380,281,76,298,382,383,384,77,385,386,387,388,389,469,78,470,471,79,80,81,282,84,416,417,283,418,419,304,284,94,422,95,423,305,424,425,426,427,428,429,430,306,287,307,308,431,432,433,434,435,313,436,96,437,438,439,288,97,309,441,442,443,98,444,445,446,447,448],"tindex":"582bc4b6-da36-11e4-b001-337faff9836c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"582bc4b7-da36-11e4-b001-3b495a71f9ed","variableMapping":{"silent":"uTurnSupport"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[166,168,172,174,176,177],"tindex":"582bc4b8-da36-11e4-b001-0527200b8693","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":-1},{"failures":[],"tindex":"582bc4b9-da36-11e4-b001-d7b42004cc48","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[29,158],"tindex":"582bc4ba-da36-11e4-b001-67008e045025","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"connectedId","nodeId":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"582bc4bb-da36-11e4-b001-cf3bf8fb8f0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"582bc4bc-da36-11e4-b001-2d4cd2d7dbea","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-2},{"failures":[109,114,117,121,125,12,129],"tindex":"582bc4bd-da36-11e4-b001-c355cd7b6efd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:173","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n        return true;\n    \n}"},"status":-1},{"failures":[207],"tindex":"582bc4be-da36-11e4-b001-75b0962cf445","variableMapping":{"nanoTime":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":288,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":195,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":420,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":390,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":153,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":154,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":111,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":25,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":258,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":137,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":448,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":290,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":387,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":168,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":83,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":280,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":174,"com.graphhopper.GraphHopperTest.testPrepare":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":411,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":164,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":376,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":107,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":187,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":226,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":148,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":422,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":256,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":158,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":455,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":185,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":241,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":67,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":95,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":177,"com.graphhopper.GraphHopperTest.testLoadOSM":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":247,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":470,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":63,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":316,"com.graphhopper.reader.OSMReaderTest.testSort":131,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":464,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":156,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":334,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":383,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":412,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":40,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":210,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":356,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":440,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":369,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":417,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":333,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":69,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":306,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":459,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":465,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":261,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":373,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":191,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":254,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":397,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":183,"com.graphhopper.coll.OSMIDMapTest.testGetLong":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":182,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":305,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":349,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":434,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":94,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":313,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":377,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":458,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":275,"com.graphhopper.GraphHopperAPITest.testLoad":214,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":286,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":78,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":122,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":296,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":294,"com.graphhopper.storage.LevelGraphStorageTest.testClone":425,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":30,"com.graphhopper.reader.OSMReaderTest.testBarriers":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":451,"com.graphhopper.util.GHUtilityTest.testCopy":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":393,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":269,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":109,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":104,"com.graphhopper.routing.PathTest.testFindInstruction":206,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":289,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":124,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":152,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":444,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":234,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":384,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":374,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":354,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":170,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":345,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":452,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":427,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":394,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":81,"com.graphhopper.util.InstructionListTest.testWayList2":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":408,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":248,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":340,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":19,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":271,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":456,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":159,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":362,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":429,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":449,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":291,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":1,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":364,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":46,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":36,"com.graphhopper.coll.OSMIDMapTest.testGet":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":343,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":125,"com.graphhopper.routing.PathBidirRefTest.testExtract":162,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":59,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":96,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":265,"com.graphhopper.storage.RAMDataAccessTest.testCopy":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":361,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":85,"com.graphhopper.storage.RAMDataAccessTest.testSegments":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":113,"com.graphhopper.util.GHUtilityTest.testSort2":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":192,"com.graphhopper.reader.OSMReaderTest.testMain":44,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":421,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":310,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":114,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":266,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":126,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":410,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":287,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":432,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":447,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":38,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":460,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":469,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":435,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":134,"com.graphhopper.storage.GraphHopperStorageTest.testClone":366,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":409,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":129,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":128,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":372,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":416,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":395,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":418,"com.graphhopper.routing.PathTest.testTime":205,"com.graphhopper.util.BitUtilLittleTest.testToFloat":32,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":445,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":426,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":331,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":250,"com.graphhopper.reader.OSMReaderTest.testRelation":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":403,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":438,"com.graphhopper.util.GHUtilityTest.testSortDirected":146,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":466,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":92,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":200,"com.graphhopper.GraphHopperTest.testFootOnly":56,"com.graphhopper.util.BitUtilLittleTest.testToInt":33,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":468,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":12,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":228,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":260,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":453,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":400,"com.graphhopper.search.NameIndexTest.testCreate":219,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":102,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":198,"com.graphhopper.routing.QueryGraphTest.testOneWay":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":62,"com.graphhopper.reader.OSMReaderTest.testWithBounds":50,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":105,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":121,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":357,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":404,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":17,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":423,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":285,"com.graphhopper.coll.GHTBitSetTest.testEnsureCapacity":16,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":115,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":454,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":351,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":346,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":74,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":179,"com.graphhopper.util.BitUtilLittleTest.testToBitString":31,"com.graphhopper.util.InstructionListTest.testWayList":34,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":112,"com.graphhopper.GraphHopperAPITest.testDisconnected179":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":396,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":391,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":209,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":414,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":53,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":368,"com.graphhopper.routing.util.EncodedValueTest.testSwap":18,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":175,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":380,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":173,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":335,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":436,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":196,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":279,"com.graphhopper.coll.GHTBitSetTest.testClear":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":457,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":277,"com.graphhopper.routing.PathTest.testWayList":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":413,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":301,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":4,"com.graphhopper.coll.OSMIDMapTest.testGet2":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":197,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":441,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":211,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":350,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":375,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":341,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":367,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":262,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":263,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":100,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":93,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":120,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":21,"com.graphhopper.util.GHUtilityTest.testSort":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":407,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":108,"com.graphhopper.search.NameIndexTest.testPut":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":360,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":365,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":236,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":257,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":232,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":222,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":118,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":160,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":220,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":272,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":116,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":212,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":318,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":347,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":29,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":80,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":431,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":84,"com.graphhopper.routing.PathTest.testFound":204,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":11,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":141,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":443,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":0,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":283,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":292,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":218,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":282,"com.graphhopper.util.InstructionListTest.testEmptyList":149,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":186,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":330,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":323,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":314,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":463,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":193,"com.graphhopper.reader.PrinctonReaderTest.testRead":208,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":77,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":65,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":342,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":82,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":348,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":450,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":461,"com.graphhopper.reader.OSMReaderTest.testFoot":130,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":42,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":406,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":245,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":446,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":467,"com.graphhopper.reader.OSMReaderTest.testOneWay":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":246,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":297,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":298,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":355,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":91,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":378,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":119,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":402,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":176,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":326,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":167,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":223,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":161,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":398,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":199,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":135,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":278,"com.graphhopper.routing.PathBidirRefTest.testExtract2":163,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":471,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":178,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":238,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":249,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":216,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":281,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":27,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":48,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":415,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":242,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":382,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":428,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":328,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":75,"com.graphhopper.GraphHopperTest.testFootAndCar":139,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":308,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":22,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":268,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":101,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":392,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":329,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":188,"com.graphhopper.storage.StorablePropertiesTest.testLoad":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":2,"com.graphhopper.GraphHopperTest.testPrepareOnly":51,"com.graphhopper.GraphHopperTest.testVia":138,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":299,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":132,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":419,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":151,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":381,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":320,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":401,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":110,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":442,"com.graphhopper.coll.GHTBitSetTest.testCopy":15,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":309,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":68}}]
