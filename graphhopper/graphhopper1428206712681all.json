[{"failures":[],"tindex":"f5926ddb-db48-11e4-b14f-01f315373d1d","variableMapping":{"segmentSizePower":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"f59294ec-db48-11e4-b14f-2d302e98a288","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"f59294ed-db48-11e4-b14f-2bde8a4f0e06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:83","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator"},"status":-2},{"failures":[],"tindex":"f59294ee-db48-11e4-b14f-c9ccc9bd5584","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-2},{"failures":[],"tindex":"f59294ef-db48-11e4-b14f-359e41d143b3","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"prevConnectedId","sign":"prevConnectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[],"tindex":"f59294f0-db48-11e4-b14f-1f1d987a0124","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"f59294f1-db48-11e4-b14f-f96ab02aaa82","variableMapping":{"len":"x2","i":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"f59294f2-db48-11e4-b14f-a52db6ef0086","variableMapping":{"edgeId":"i","nextEdge":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":0},{"failures":[],"tindex":"f59294f3-db48-11e4-b14f-ed0b760fde1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[],"tindex":"f59294f4-db48-11e4-b14f-c32abc1d7ef5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"f592bc05-db48-11e4-b14f-ef7d8613a729","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"f592bc06-db48-11e4-b14f-ad53da4d5d83","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"f592bc07-db48-11e4-b14f-4fcb0d909d43","variableMapping":{"currentBucket":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"f592bc08-db48-11e4-b14f-7b2fad32c317","variableMapping":{"originalEdgesCount":"index","edgeDifference":"index","contractedNeighbors":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-1},{"failures":[74,75,76,77,78,79,80,81,82],"tindex":"f592bc09-db48-11e4-b14f-9f3088e9aa43","variableMapping":{"turnCostsCount":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[83,84],"tindex":"f592bc0a-db48-11e4-b14f-fd0d39b1233c","variableMapping":{"workerThreads":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[],"tindex":"f592bc0b-db48-11e4-b14f-cba58a9422ba","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-2},{"failures":[85,86,0,1,2,87,3,88,4,5,89,6,90,7,8,9,10,11,12,13,14,15,16,17,18,91,92,93,94,95,96,97,98,32,99,100,101,102,103,104,105,106,107,108,33,34,35,109,36,110,111,112,113,37,114,115,116,117,118,119,120,121,122,123,124,125,126,127,38,128,129,130,131,45,46,132,133,134,52,135,136,137,59,138,67,139,140,141],"tindex":"f592bc0c-db48-11e4-b14f-bfac03de85c3","variableMapping":{"lastInBoundsPillarNode":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:660","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[142,143,144,145,146,147,80,148,149,150,82,151],"tindex":"f592bc0d-db48-11e4-b14f-e10893c9e3dd","variableMapping":{"lat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[3],"tindex":"f5930a2e-db48-11e4-b14f-35946353a449","variableMapping":{"mGarbage":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"f5930a2f-db48-11e4-b14f-b737eee19f95","variableMapping":{"high":"encoded","highKey":"encoded","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[86,0,1,3,88,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,91,172,173,174,92,93,175,176,94,177,178,24,179,180,181,182],"tindex":"f5930a30-db48-11e4-b14f-3b2d44783d30","variableMapping":{"size":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":-1},{"failures":[],"tindex":"f5930a31-db48-11e4-b14f-f791e3ab76f6","variableMapping":{"len":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir","start":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[183,184],"tindex":"f5930a32-db48-11e4-b14f-d5afee8c77c2","variableMapping":{"bytesForFlags":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"f5930a33-db48-11e4-b14f-1993752f60d8","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[142],"tindex":"f5930a34-db48-11e4-b14f-a732b7df9fa1","variableMapping":{"ghLocation":"trackType","osmFile":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[85,0,1,2,87,3,88,4,5,89],"tindex":"f5933145-db48-11e4-b14f-fd20ddb7f714","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:45","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(int)"},"status":-2},{"failures":[6,17,18,185],"tindex":"f5933146-db48-11e4-b14f-af190743daa2","variableMapping":{"systemProperty":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-1},{"failures":[74,75,76],"tindex":"f5935857-db48-11e4-b14f-3d80359303fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[],"tindex":"f5937f68-db48-11e4-b14f-d30ca2565702","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"f5937f69-db48-11e4-b14f-b71d57542699","variableMapping":{"allSegments":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[85,86,0,1,2,87,3,186,88,4,5,89,187,188,189,6,90,7,8,9,10,11,12,13,74,14,15,16,17,190,18,191,192,193,194,195,196,197,198,199,199,19,19,200,200,201,201,202,202,20,20,203,203,204,204,21,21,205,205,206,206,22,22,207,208,23,209,210,211,212,213,214,215,216,217,218,219,220,221,152,153,154,155,156,157,158,159,222,160,161,162,163,223,164,165,166,167,168,169,170,171,91,172,173,174,92,93,175,176,94,177,178,24,179,180,181,224,225,226,227,25,26,228,229,230,27,231,232,233,234,235,95,96,28,29,236,30,31,237,238,239,240,241,242,243,244,245,246,247,248,249,250,97,98,32,99,251,100,252,253,101,102,103,104,106,107,254,108,33,34,35,109,36,110,111,255,256,257,112,113,37,114,258,115,259,260,116,117,118,119,121,122,261,262,263,126,264,265,266,267,268,269,270,271,272,127,273,274,38,128,275,276,277,39,278,279,280,129,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,40,297,298,299,300,301,41,302,303,304,305,42,306,307,43,308,309,45,310,46,132,311,312,313,47,314,315,316,133,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,48,333,334,335,336,134,49,337,338,339,340,50,341,342,51,343,344,345,52,135,346,347,348,53,349,350,351,136,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,54,368,369,370,371,137,55,372,373,374,375,56,376,377,57,378,379,380,381,382],"tindex":"f5937f6a-db48-11e4-b14f-1f5f37ca20f6","variableMapping":{"this":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:230","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"f5937f6b-db48-11e4-b14f-25b38a1cda76","variableMapping":{"shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:141","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"f593a67c-db48-11e4-b14f-5de37d397c65","variableMapping":{"this":"g","iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1330","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.getAllEdges()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[213,217,218],"tindex":"f593a67d-db48-11e4-b14f-45587d70b066","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[],"tindex":"f593a67e-db48-11e4-b14f-17d914c4f7d3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[220],"tindex":"f593a67f-db48-11e4-b14f-776f0a5757b5","variableMapping":{"resultOrientation":"fwdSlower","orientation":"fwdSlower","java.lang.Math.PI":"fwdSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"f593a680-db48-11e4-b14f-df406b8f5cb6","variableMapping":{"str":"str","edgeEncoders":"edgeEncoders"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:291","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[],"tindex":"f593a681-db48-11e4-b14f-1f3a35f527df","variableMapping":{"newAdjIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","newBaseIndex":"paveType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-2},{"failures":[],"tindex":"f593a682-db48-11e4-b14f-bd973e362b97","variableMapping":{"edgePointer":"nodeBitMask","edgeEntryBytes":"shift","nextEdge":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:763","type":"CtAssignmentImpl","sourcecode":"this.long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[383,384,385,386,387,388,389,390,391,249,251,252,253,392,256,258,259,260],"tindex":"f593a683-db48-11e4-b14f-238396ec4cf2","variableMapping":{"dist":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"f593a684-db48-11e4-b14f-91f4aa9e613f","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"prio","speed":"prio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"f593a685-db48-11e4-b14f-431f83e9395c","variableMapping":{"maxMCSpeed":"fwdSpeed","speed":"fwdSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":0},{"failures":[0,1,2,87,3,4,5,188,189,202,207,208,23,209,210,211,393,394,395,396,142,143,77,397,398,399,400,401,402,403,144,404,405,406,407,408,409,212,410,411,412,413,414,415,416,417,83,418,419,420,421,84,422,185,423,424,425,426,427,428,429,430,431,432,433,78,434,435,436,437,438,439,440,145,441,442,443,444,146,79,445,147,446,80,447,448,449,450,451,452,453,454,455,148,456,457,458,459,219,220,460,149,81,461,150,462,82,463,464,465,466,467,468,469,470,471,151,472,473,474,475,221,152,476,153,154,155,156,157,158,159,222,160,161,162,163,223,164,165,166,167,168,169,170,171,91,172,173,174,92,93,175,176,94,177,178,24,179,180,181,233,234,235,95,96,242,248,107,111,122,477,478,479,480,125,481,482,483,484,485,486,263,487,488,489,490,491,492,493,494,495,496,497,498,499,500,126,501,502,503,504,505,506,507,508,509,510,511,268,269,270,271,272,127,273,274,38,128,275,276,277,39,278,279,280,129,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,40,297,298,299,300,301,41,302,303,304,305,42,306,307,43,308,309,45,512,310,46,132,311,312,313,47,314,315,316,133,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,48,333,334,335,336,134,49,337,338,339,340,50,341,342,51,343,344,345,52,135,346,347,348,53,349,350,351,136,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,54,368,369,370,371,137,55,372,373,374,375,56,376,377,57,378,379],"tindex":"f593cd96-db48-11e4-b14f-1da1f6f2c84d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:229","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n        return com.graphhopper.routing.util.AbstractFlagEncoder;\n    \n}"},"status":-1},{"failures":[],"tindex":"f593cd97-db48-11e4-b14f-c7832035543e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"f593cd98-db48-11e4-b14f-a1600634ae0f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[85,86,0,1,3,88,5,188,189,202,204,208,23,209,210,211,212,411,418,421,426,213,214,216,217,220,221,152,153,154,155,156,157,159,222,160,161,162,163,223,164,165,166,167,168,169,170,171,91,172,173,174,92,93,175,176,94,177,178,24,179,180,181,227,25,26,27,233,234,477,478,479,125,481,484,485,263,491,493,499,126,503,505,506,510,268,272,38,39,278,279,129,281,284,285,287,292,294,299,301,303,305,42,308,45,46,47,314,315,133,317,320,321,323,328,330,335,134,338,340,50,343,52,53,349,350,136,352,355,356,358,363,365,370,137,373,375,56,378],"tindex":"f593cd99-db48-11e4-b14f-c1cd0617a962","variableMapping":{"cap":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"f593cd9a-db48-11e4-b14f-b9d96dcff1a4","variableMapping":{"calcMean":"empty","eleCalcMean":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:75","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[213,218],"tindex":"f593cd9b-db48-11e4-b14f-576a6459aadb","variableMapping":{"segmentSizeInBytes":"removed","index":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"f593cd9c-db48-11e4-b14f-474d3c71578d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:479","type":"CtLocalVariableImpl","sourcecode":"java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null)"},"status":-2},{"failures":[],"tindex":"f593f4ad-db48-11e4-b14f-f7f5c01b1e2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[85,86,0,1,2,3,88,4,5,89,6,7,8,9,10,11,12,13,14,15,16,17,18,199,19,201,202,20,203,204,21,206,22,23,219,220,24,227,25,26,27,513,514,515,28,29,97,98,32,112,113,37,477,496,126,501,506,509,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,69,70,71,72,73,140,516,517,518],"tindex":"f593f4ae-db48-11e4-b14f-bf18382c99c2","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[414],"tindex":"f593f4af-db48-11e4-b14f-a389f01f61f3","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"f593f4b0-db48-11e4-b14f-a781c951721d","variableMapping":{"size":"wayBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"f593f4b1-db48-11e4-b14f-994179fb78b1","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"f593f4b2-db48-11e4-b14f-654832548e6a","variableMapping":{"initLeafSize":"frontIndex","maxLeafEntries":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[383,384,385,386,387,388,389,519,390,391,249,251,252,253,392,256,258,259,260],"tindex":"f593f4b3-db48-11e4-b14f-bf021ddf64ed","variableMapping":{"resultOrientation":"maxLonTmp","orientation":"maxLonTmp","java.lang.Math.PI":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"f593f4b4-db48-11e4-b14f-011f31cbf832","variableMapping":{"max":"nextWayBit","tmpSize":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"f593f4b5-db48-11e4-b14f-25453d40f8da","variableMapping":{"instruction":"obj"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[520],"tindex":"f593f4b6-db48-11e4-b14f-49d393e9a740","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-1},{"failures":[403,404,440,441,455,456,471,472],"tindex":"f593f4b7-db48-11e4-b14f-335cea09994d","variableMapping":{"maxSpeed":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"f593f4b8-db48-11e4-b14f-dd0e1e6e6c0f","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"f593f4b9-db48-11e4-b14f-25b63406d262","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"f593f4ba-db48-11e4-b14f-8f8199771717","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[112,118],"tindex":"f593f4bb-db48-11e4-b14f-f3fbfe96f9bd","variableMapping":{"need":"nodeB","i":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"f593f4bc-db48-11e4-b14f-9980697bc961","variableMapping":{"flags":"encoded","nodeFlags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[386,388,249,250,251,253,392,256,257,258,260],"tindex":"f593f4bd-db48-11e4-b14f-23dc926714de","variableMapping":{"weight":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"f5941bce-db48-11e4-b14f-29327aff36ba","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"f5941bcf-db48-11e4-b14f-b9253c376ba2","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":0},{"failures":[],"tindex":"f5941bd0-db48-11e4-b14f-b9053e1b8fc7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"f5941bd1-db48-11e4-b14f-f96d23a66647","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:66","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop()"},"status":-2},{"failures":[],"tindex":"f5941bd2-db48-11e4-b14f-27386894f84a","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[383,384,385,386,387,388,389,519,390,391,249,251,252,253,392,256,258,259,260],"tindex":"f5941bd3-db48-11e4-b14f-199f191c1219","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"f5941bd4-db48-11e4-b14f-015a7fccd122","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-2},{"failures":[],"tindex":"f5941bd5-db48-11e4-b14f-a1a3add96073","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"f5941bd6-db48-11e4-b14f-b11e8f075e59","variableMapping":{"newName":"key","name":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[0,1,2,87,3,4,5,7,8,92,93,94,95,96,249,98,32,100,252,253,101,102,103,104,106,521,522,523,524,392,525,110,256,113,114,115,259,260,116,117,118,119,121,122],"tindex":"f5941bd7-db48-11e4-b14f-5984434a32c8","variableMapping":{"locs":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"f5941bd8-db48-11e4-b14f-2179f5aa38dc","variableMapping":{"maxSpeed":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:336","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"f5941bd9-db48-11e4-b14f-6d247b1fbfaa","variableMapping":{"longTripsSpeed":"shortTripsSpeed","shortTripsSpeed":"shortTripsSpeed","this":"this","durationInHours":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"f5941bda-db48-11e4-b14f-fdddd8746212","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[12,194,526,425,447,463],"tindex":"f5941bdb-db48-11e4-b14f-6590052f0bc6","variableMapping":{"size":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[],"tindex":"f5941bdc-db48-11e4-b14f-eb4aaa844d2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[1,87,3,188,189,6,90,7,9,12,13,14,16,18,202,204,23,212,213,217,218,221,153,154,159,222,160,162,163,223,164,165,166,169,172,174,92,175,94,178,24,179,181,27,233,235,95,478,479,481,485,263,491,493,499,126,503,505,506,510,38,278,279,281,285,287,292,294,299,301,303,305,42,308,45,46,314,315,317,321,323,328,330,335,134,338,340,50,343,52,349,350,352,356,358,363,365,370,137,373,375,56,378],"tindex":"f5941bdd-db48-11e4-b14f-791977129af9","variableMapping":{"bits":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[143,77,144,78,145,147,80,148,150,82,151],"tindex":"f5941bde-db48-11e4-b14f-71113a218959","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[383,384,385,386,387,388,389,390,391,249,251,252,253,392,256,258,259,260],"tindex":"f59442ef-db48-11e4-b14f-dbca63158d4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[383,384,527,386,387,519],"tindex":"f59442f0-db48-11e4-b14f-69cd4d747cc8","variableMapping":{"shift":"bits","flags":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"f59442f1-db48-11e4-b14f-994ab039bdb1","variableMapping":{"lastIndex":"noOfStates","fromIndex":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":-1},{"failures":[],"tindex":"f59442f2-db48-11e4-b14f-35b4bd83135a","variableMapping":{"index":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"f59442f3-db48-11e4-b14f-bff3f900b086","variableMapping":{"fwdFaster":"minLat","incDist2DSum":"java.lang.Double.MAX_VALUE","fwdSlower":"minLat","fullDist2D":"java.lang.Double.MAX_VALUE","restDist2D":"java.lang.Double.MAX_VALUE","speed":"java.lang.Double.MAX_VALUE","decDist2DSum":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"f59442f4-db48-11e4-b14f-9bcba1b8ab67","variableMapping":{"size":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"f59442f5-db48-11e4-b14f-7be393e49c9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"f59442f6-db48-11e4-b14f-87ac7f725cf3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[410,414],"tindex":"f595f0a7-db48-11e4-b14f-675353c47f19","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"sidewalks","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"f595f0a8-db48-11e4-b14f-170efdb1492a","variableMapping":{"hash":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"f595f0a9-db48-11e4-b14f-fbc25796f296","variableMapping":{"oldValueIndex":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[],"tindex":"f595f0aa-db48-11e4-b14f-c95c302c42c6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"f595f0ab-db48-11e4-b14f-af39838dd8b0","variableMapping":{"byteCount":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[0,6,90,9,14,18,395,142,143,397,400,144,405,408,410,414,416,420,185,433,78,435,145,442,146,147,80,449,452,148,457,149,150,82,465,468,151,473],"tindex":"f595f0ac-db48-11e4-b14f-1f96981d9939","variableMapping":{"sacScale":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-1},{"failures":[],"tindex":"f595f0ad-db48-11e4-b14f-2933d2a2d3af","variableMapping":{"flags":"maxValue","tmpValue":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"f595f0ae-db48-11e4-b14f-2148c1edef80","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":301,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":177,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":127,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":478,"com.graphhopper.reader.OSMReaderTest.testFerry":6,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":233,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":446,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":434,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":113,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":86,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":151,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":498,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":322,"com.graphhopper.coll.CompressedArrayTest.testCompress":391,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":440,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":155,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":496,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":358,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":255,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":160,"com.graphhopper.GraphHopperTest.testPrepare":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":507,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":221,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":365,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":445,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":172,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":227,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":254,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":145,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":225,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":256,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":217,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":171,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":98,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":51,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":80,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":45,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":388,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":163,"com.graphhopper.GraphHopperTest.testLoadOSM":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":32,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":394,"com.graphhopper.reader.OSMReaderTest.testSort":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":456,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":215,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":132,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":374,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":52,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":508,"com.graphhopper.storage.RAMDataAccessTest.testHeader":139,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":204,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":194,"com.graphhopper.storage.MMapDataAccessTest.testHeader":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":340,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":300,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":521,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":124,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":354,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":512,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":47,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":286,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":407,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":115,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":362,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":93,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":111,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":114,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":485,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":168,"com.graphhopper.coll.OSMIDMapTest.testGetLong":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":167,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":279,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":332,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":293,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":38,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":295,"com.graphhopper.coll.CompressedArrayTest.testCompress2":390,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":367,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":142,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":323,"com.graphhopper.GraphHopperAPITest.testLoad":95,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":277,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":408,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":359,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":350,"com.graphhopper.storage.LevelGraphStorageTest.testClone":129,"com.graphhopper.reader.OSMReaderTest.testBarriers":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":463,"com.graphhopper.util.GHUtilityTest.testCopy":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":481,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":122,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":402,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":442,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":522,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":72,"com.graphhopper.routing.PathTest.testFindInstruction":209,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":437,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":315,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":235,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":413,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":306,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":238,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":461,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":375,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":363,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":338,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":157,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":327,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":470,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":282,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":482,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":518,"com.graphhopper.util.InstructionListTest.testWayList2":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":503,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":102,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":147,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":382,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":342,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":429,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":219,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":284,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":447,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":61,"com.graphhopper.storage.RAMDirectoryTest.testSynched":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":324,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":169,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":349,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":10,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":24,"com.graphhopper.coll.OSMIDMapTest.testGet":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":321,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":123,"com.graphhopper.routing.PathBidirRefTest.testExtract":210,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":414,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":40,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":236,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":450,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":117,"com.graphhopper.storage.RAMDataAccessTest.testCopy":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":344,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":501,"com.graphhopper.storage.RAMDataAccessTest.testSegments":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":107,"com.graphhopper.util.GHUtilityTest.testSort2":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":175,"com.graphhopper.reader.OSMReaderTest.testMain":7,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":128,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":331,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":451,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":389,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":457,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":83,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":505,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":287,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":291,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":308,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":202,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":335,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":149,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":294,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":17,"com.graphhopper.storage.StorablePropertiesTest.testStore":380,"com.graphhopper.storage.GraphHopperStorageTest.testClone":136,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":504,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":185,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":265,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":84,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":361,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":268,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":405,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":483,"com.graphhopper.routing.PathTest.testTime":208,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":401,"com.graphhopper.util.BitUtilLittleTest.testToFloat":514,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":307,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":281,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":427,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":104,"com.graphhopper.reader.OSMReaderTest.testRelation":74,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":495,"com.graphhopper.util.GHUtilityTest.testSortDirected":232,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":184,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":472,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":64,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":201,"com.graphhopper.GraphHopperTest.testFootOnly":5,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":525,"com.graphhopper.util.BitUtilLittleTest.testToInt":515,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":433,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":33,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":420,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":267,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":258,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":460,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":491,"com.graphhopper.search.NameIndexTest.testCreate":198,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":70,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":199,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":141,"com.graphhopper.routing.QueryGraphTest.testOneWay":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":105,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":385,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":436,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":97,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":383,"com.graphhopper.reader.OSMReaderTest.testWithBounds":16,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":73,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":473,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":488,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":497,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":75,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":278,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":275,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":471,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":443,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":334,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":248,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":506,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":328,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":53,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":164,"com.graphhopper.util.BitUtilLittleTest.testToBitString":513,"com.graphhopper.util.InstructionListTest.testWayList":25,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":376,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":448,"com.graphhopper.GraphHopperAPITest.testDisconnected179":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":484,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":527,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":336,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":480,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":262,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":468,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":189,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":494,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":510,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":2,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":353,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":161,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":444,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":174,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":222,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":42,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":423,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":398,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":148,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":180,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":348,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":120,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":459,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":345,"com.graphhopper.routing.PathTest.testWayList":23,"com.graphhopper.storage.MMapDataAccessTest.testCopy":130,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":509,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":487,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":520,"com.graphhopper.coll.OSMIDMapTest.testGet2":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":181,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":138,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":303,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":454,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":364,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":319,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":352,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":259,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":292,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":260,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":68,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":65,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":465,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":183,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":143,"com.graphhopper.util.GHUtilityTest.testSort":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":500,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":519,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":435,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":453,"com.graphhopper.search.NameIndexTest.testPut":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":343,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":351,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":240,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":257,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":36,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":245,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":516,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":462,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":220,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":243,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":310,"com.graphhopper.storage.MMapDirectoryTest.testSynched":261,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":397,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":192,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":430,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":329,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":213,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":517,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":126,"com.graphhopper.routing.PathTest.testFound":207,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":89,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":395,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":305,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":270,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":452,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":325,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":182,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":197,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":263,"com.graphhopper.util.InstructionListTest.testEmptyList":226,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":91,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":403,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":92,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":426,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":417,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":416,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":441,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":176,"com.graphhopper.reader.PrinctonReaderTest.testRead":188,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":37,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":320,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":31,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":477,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":330,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":439,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":466,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":44,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":526,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":266,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":400,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":81,"com.graphhopper.reader.OSMReaderTest.testFoot":90,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":22,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":499,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":252,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":387,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":431,"com.graphhopper.reader.OSMReaderTest.testOneWay":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":253,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":360,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":372,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":438,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":63,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":464,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":493,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":156,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":392,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":162,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":422,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":154,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":246,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":523,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":489,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":200,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":190,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":346,"com.graphhopper.routing.PathBidirRefTest.testExtract2":211,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":144,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":242,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":195,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":137,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":406,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":12,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":524,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":511,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":159,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":469,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":99,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":373,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":283,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":424,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":54,"com.graphhopper.GraphHopperTest.testFootAndCar":87,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":289,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":77,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":121,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":125,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":393,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":425,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":133,"com.graphhopper.storage.StorablePropertiesTest.testLoad":381,"com.graphhopper.GraphHopperTest.testPrepareOnly":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":178,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":458,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":479,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":14,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":272,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":228,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":371,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":411,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":492,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":428,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":304,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":302,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":46}}]
