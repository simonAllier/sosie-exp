[{"failures":[],"tindex":"1c66ddb1-da5b-11e4-a079-d3d1954d7833","variableMapping":{"entry":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[0],"tindex":"1c66ddb2-da5b-11e4-a079-6d4ed1265076","variableMapping":{"orientation":"decDist2DSum","resultOrientation":"incEleSum","baseOrientation":"decDist2DSum","java.lang.Math.PI":"decEleSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"1c66ddb3-da5b-11e4-a079-01abbeddff99","variableMapping":{"maxTurnCosts":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"1c66ddb4-da5b-11e4-a079-ab8d0aa37cac","variableMapping":{"systemProperty":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:60","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,0,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"1c6704c5-da5b-11e4-a079-d33643760946","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[],"tindex":"1c6704c6-da5b-11e4-a079-d1aa4cfc7b9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:310","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":0},{"failures":[23],"tindex":"1c6704c7-da5b-11e4-a079-4ba9b6318c57","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"maxTurnCosts","nodeType":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-1},{"failures":[3,4,5,10,17,18,23,30,48,49,58,63,71,76,79,83,142,146,156,157,166,171,179,184,187,191,200,201,210,215,223,228,231,235,246,247,256,261,269,274,277,281,283,291,297,299,306,309,312,316,0,401,405,406,407,408,411,414,415,418,419,420,421,422,424,425,426,428,429,430,432,433,434,438,439,440,442,443,449,452],"tindex":"1c672bd8-da5b-11e4-a079-2df238f64554","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"1c672bd9-da5b-11e4-a079-a5fb4af24b84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:86","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[6,12,17,20,22,23,26,459,460,45,46,99,100,101,104,297,298,299],"tindex":"1c672bda-da5b-11e4-a079-3f2e99ce0054","variableMapping":{"cap":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[20,26,287,303,322,342,361,383],"tindex":"1c672bdb-da5b-11e4-a079-11dc0f10e9d3","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"restrictedValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[],"tindex":"1c672bdc-da5b-11e4-a079-c524d3c6da41","variableMapping":{"high":"bits","len":"bits","start":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"1c672bdd-da5b-11e4-a079-9f4a99c64b46","variableMapping":{"edgeId":"index","lastEdgeIndex":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:169","type":"CtReturnImpl","sourcecode":"return (int) > (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[461,462,148,157,165,247,255],"tindex":"1c672bde-da5b-11e4-a079-0d5c45cb17cf","variableMapping":{"bytePos":"capacity","indexDivisor":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:311","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[],"tindex":"1c672bdf-da5b-11e4-a079-cf7a673b0183","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"1c672be0-da5b-11e4-a079-f78d9b90fe3a","variableMapping":{"err":"removed","dLat":"removed","tmpErr":"removed","x1":"locs","sLon":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"1c672be1-da5b-11e4-a079-879cf777a76d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"1c672be2-da5b-11e4-a079-d51b600ef5a5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"1c672be3-da5b-11e4-a079-735613840ffb","variableMapping":{"freeIndex":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-2},{"failures":[],"tindex":"1c672be4-da5b-11e4-a079-6d12609d3f0b","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"1c672be5-da5b-11e4-a079-f1b56eeaa40b","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:149","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":0},{"failures":[334],"tindex":"1c672be6-da5b-11e4-a079-d9f9de1046b1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"1c6752f7-da5b-11e4-a079-81b17ace886c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[0],"tindex":"1c6752f8-da5b-11e4-a079-0d45262b17a2","variableMapping":{"fwdFaster":"fwdSlower","incDist2DSum":"fwdSlower","fwdSlower":"fwdSlower","fullDist2D":"fwdSlower","restDist2D":"fwdSlower","speed":"fwdSlower","decDist2DSum":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"1c6752f9-da5b-11e4-a079-c970dc974257","variableMapping":{"pointIndex":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","index":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"1c6752fa-da5b-11e4-a079-89bd200f0639","variableMapping":{"flags":"nodeBitMask","nodeFlags":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"1c6752fb-da5b-11e4-a079-aba7525c68a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[16,463],"tindex":"1c6752fc-da5b-11e4-a079-637f8cd58409","variableMapping":{"bytePos":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"1c6752fd-da5b-11e4-a079-ad59256d10fc","variableMapping":{"obtained":"storing"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"1c6752fe-da5b-11e4-a079-a926432ae689","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"1c6752ff-da5b-11e4-a079-bb617c14b337","variableMapping":{"str":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:274","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.substring(0, ((java.lang.String.length()) - 2))) + \":\") + (java.lang.String.substring(((java.lang.String.length()) - 2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[287,303,322,342,361,383],"tindex":"1c675300-da5b-11e4-a079-71a96a066f91","variableMapping":{"highwayValue":"res"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[397],"tindex":"1c675301-da5b-11e4-a079-511a1f709fbe","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"1c675302-da5b-11e4-a079-357f9345c712","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:252","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-2},{"failures":[464],"tindex":"1c675303-da5b-11e4-a079-0308086f1ba9","variableMapping":{"value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[],"tindex":"1c675304-da5b-11e4-a079-f3034b1759d7","variableMapping":{"currentBucket":"start","currentIndex":"start","bucketSize":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[],"tindex":"1c675305-da5b-11e4-a079-b5c24cedb553","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1197","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getNodes()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"1c675306-da5b-11e4-a079-b7da8c960fd2","variableMapping":{"visitedCountFrom":"length","visitedCountTo":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"1c677a17-da5b-11e4-a079-6b82197290ce","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"1c677a18-da5b-11e4-a079-eda48754b7bf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":0},{"failures":[],"tindex":"1c677a19-da5b-11e4-a079-3d4142faf10b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[],"tindex":"1c677a1a-da5b-11e4-a079-db21673d1de3","variableMapping":{"factor":"minLat","delta_lon":"minLat","a_lon":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[16,463],"tindex":"1c677a1b-da5b-11e4-a079-a303455266d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[30,49,57,59,60,66,74,75,157,165,167,168,174,182,183,201,209,211,212,218,226,227,247,255,257,258,264,272,273,296,298,299],"tindex":"1c677a1c-da5b-11e4-a079-8791db695b50","variableMapping":{"size":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[1,3,4,7,9,11,31,34,36,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,433,434,435,436,437,438,439,440,441,442,443],"tindex":"1c677a1d-da5b-11e4-a079-b5e8cb9112e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.create(long)"},"status":-1},{"failures":[],"tindex":"1c677a1e-da5b-11e4-a079-bf48ff132bb2","variableMapping":{"mainEdgeState":"mainEdgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"1c677a1f-da5b-11e4-a079-43d7da601f4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[],"tindex":"1c677a20-da5b-11e4-a079-0d4b1494d784","variableMapping":{"intLow":"code","intHigh":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":0},{"failures":[3,122,419,422],"tindex":"1c677a21-da5b-11e4-a079-bbbe78cf3e0b","variableMapping":{"factor":"nodeA"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[1,3,4,5,6,7,9,10,11,12,17,18,19,20,21,22,23,24,26,27,28,30,298],"tindex":"1c677a22-da5b-11e4-a079-6f563473e0fe","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"1c67a133-da5b-11e4-a079-0bbdbcbbb3fc","variableMapping":{"tmp":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[320,321,329,340,348,356,368,378,390],"tindex":"1c67a134-da5b-11e4-a079-7d48f9ca684f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"1c67a135-da5b-11e4-a079-2be80934c4d7","variableMapping":{"flags":"acceptBit","tmpValue":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"1c67a136-da5b-11e4-a079-1549a616f276","variableMapping":{"size":"maxTurnCosts","from":"maxTurnCosts","end":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":0},{"failures":[],"tindex":"1c67a137-da5b-11e4-a079-5d07d178a32d","variableMapping":{"value":"start","numberOfBits":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-2},{"failures":[],"tindex":"1c67a138-da5b-11e4-a079-999d76ae32ba","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"1c67a139-da5b-11e4-a079-47dab9013d7e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[405,406,415,417,428],"tindex":"1c67a13a-da5b-11e4-a079-7511e5e0aa12","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[319,321,323,325,326,329,330,332,333,339,340,341,343,345,348,349,351,353,354,355,358,362,364,365,368,369,371,372,375,376,377,380,384,386,387,390,391,393,394,465],"tindex":"1c67a13b-da5b-11e4-a079-6d9e8abb3551","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[2,4,5,6,7,9,10,17,18,20,23,24,26,28,31,41,42,43,52,58,63,65,73,76,78,83,91,98,121,141,150,160,166,171,173,181,184,186,191,194,204,210,215,217,225,228,230,235,237,240,250,256,261,263,271,274,276,281,283,289,296,297,298,299,300,316,402,407,408,411,415,417,420,422,424,425,426,428,432,433,434,435,436,438,440,442],"tindex":"1c67a13c-da5b-11e4-a079-3d7f70ea782a","variableMapping":{"high":"directionBitMask","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"1c67a13d-da5b-11e4-a079-634d53c88ae7","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"index","edge":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[1,2,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,466,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,467,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,289,296,297,298,299,300,301,373,0,398,399,400,401,402,403,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,433,434,435,436,437,438,439,440,441,442,443,445,445,446,446,447,447,448,448,449,449,450,450,451,451,452,452,453,453,454,454,455,455,456,456],"tindex":"1c67c84e-da5b-11e4-a079-354164091aae","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[468,469,470,471,442],"tindex":"1c67c84f-da5b-11e4-a079-af08c5e5e995","variableMapping":{"numTiles":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[1,2,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,466,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,58,73,85,86,87,88,90,91,92,93,94,95,97,98,467,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,472,461,473,474,475,476,477,462,478,479,480,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,289,296,297,298,299,300,301,373,0,398,399,400,401,402,403,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,433,434,435,436,437,438,439,440,441,442,443,445,445,446,446,447,447,448,448,449,449,450,450,451,451,452,452,453,453,454,454,455,455,456,456],"tindex":"1c68b2b0-da5b-11e4-a079-0d8d7dc3749c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-1},{"failures":[],"tindex":"1c68b2b1-da5b-11e4-a079-4d4e3d48294e","variableMapping":{"lastName":"val","name":"val","lastIndex":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:75","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String)) {\n    return long;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":0},{"failures":[],"tindex":"1c68b2b2-da5b-11e4-a079-b95deea0758c","variableMapping":{"visitedCountFrom":"removed","visitedCountTo":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"1c68b2b3-da5b-11e4-a079-5bfc39e7c152","variableMapping":{"pointIndex":"com.graphhopper.util.EdgeIterator.NO_EDGE","index":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"1c68b2b4-da5b-11e4-a079-7d28267f44fa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"1c68b2b5-da5b-11e4-a079-c13b6baf462e","variableMapping":{"id":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[1,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,466,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,58,73,85,86,87,88,90,91,92,93,94,95,97,98,467,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,472,461,473,474,481,475,476,462,478,479,480,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,289,296,297,298,299,300,301,373,0,398,399,400,401,402,403,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,433,434,435,436,437,438,439,440,441,442,443,445,445,446,446,447,447,448,448,449,449,450,450,451,451,452,452,453,453,454,454,455,455,456,456],"tindex":"1c68b2b6-da5b-11e4-a079-b375f93aa665","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"1c68d9c7-da5b-11e4-a079-15eca447da6a","variableMapping":{"this":"graph","index":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1126","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getRemovedNodes().add(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[482,483,105,111,113,114,484,125,131,133,134,485,486,487,488,489,490],"tindex":"1c68d9c8-da5b-11e4-a079-e75dbae8b69e","variableMapping":{"distance":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[482,483,105,106,109,110,111,112,113,114,115,116,117,118,120,121,484,122,123,125,126,129,130,131,132,133,134,135,136,137,138,140,141,414,418,419,422,485,486,491,487,488,489,492,490,493],"tindex":"1c68d9c9-da5b-11e4-a079-e1fcffed9a34","variableMapping":{"radiusInMeter":"minLonTmp","lon":"lon","lat":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"1c68d9ca-da5b-11e4-a079-43cfdaf95667","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[],"tindex":"1c68d9cb-da5b-11e4-a079-b76d3bb0c4cf","variableMapping":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[1,3,4,5,6,7,9,10,11,12],"tindex":"1c68d9cc-da5b-11e4-a079-779a421f368c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:45","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(int)"},"status":-2},{"failures":[],"tindex":"1c68d9cd-da5b-11e4-a079-5d9f22ea6ab0","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[25,465,494],"tindex":"1c68d9ce-da5b-11e4-a079-436bee6468be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[340],"tindex":"1c68d9cf-da5b-11e4-a079-b3395b2b8ba5","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[315,359,381],"tindex":"1c68d9d0-da5b-11e4-a079-0fe74a7a8705","variableMapping":{"node":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-1},{"failures":[],"tindex":"1c68d9d1-da5b-11e4-a079-d70961a9377d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":-2},{"failures":[],"tindex":"1c68d9d2-da5b-11e4-a079-95ca129a7951","variableMapping":{"size":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[468,470,471],"tindex":"1c68d9d3-da5b-11e4-a079-3101e2606e86","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"1c68d9d4-da5b-11e4-a079-55db6e2e9015","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-2},{"failures":[],"tindex":"1c68d9d5-da5b-11e4-a079-573e14992de0","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.KM_MILE":"minLon","distInMeter":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:76","type":"CtLocalVariableImpl","sourcecode":"double double = (double / 1000) / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[405],"tindex":"1c68d9d6-da5b-11e4-a079-0dd08a15920e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeFlagEncoder.reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"1c6900e7-da5b-11e4-a079-d73b2ffdd182","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"1c6900e8-da5b-11e4-a079-0f78f1e862e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:154","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"1c6900e9-da5b-11e4-a079-e725f26ae921","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[0],"tindex":"1c6900ea-da5b-11e4-a079-a5e2025122b8","variableMapping":{"factor":"eleDelta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"1c6900eb-da5b-11e4-a079-ab3944378535","variableMapping":{"workerThreads":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"1c69761c-da5b-11e4-a079-5d53b4115a6f","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":0},{"failures":[470,495],"tindex":"1c69761d-da5b-11e4-a079-07ec195a833d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-1},{"failures":[],"tindex":"1c699d2e-da5b-11e4-a079-ab6baea8d098","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[],"tindex":"1c699d2f-da5b-11e4-a079-a13ec539c045","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:222","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"1c699d30-da5b-11e4-a079-ebfc660b9498","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[1,6,11,17,290,293,294],"tindex":"1c699d31-da5b-11e4-a079-a5f306a0c597","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"1c699d32-da5b-11e4-a079-43b339175b21","variableMapping":{"c":"value","this":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:168","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.shapes.BBox.contains(com.graphhopper.util.shapes.Circle.getBounds())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"1c699d33-da5b-11e4-a079-ed86fb255340","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":423,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":446,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":147,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":94,"com.graphhopper.GraphHopperAPITest.testNoLoad":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":48,"com.graphhopper.reader.OSMReaderTest.testFerry":16,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":32,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":357,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":341,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":128,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":2,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":192,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":390,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":255,"com.graphhopper.coll.CompressedArrayTest.testCompress":483,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":347,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":234,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":434,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":68,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":210,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":440,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":422,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":429,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":471,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":355,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":415,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":467,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":348,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":46,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":153,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":300,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":340,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":353,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":461,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":407,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":413,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":108,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":280,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":358,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":237,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":492,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":155,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":470,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":443,"com.graphhopper.GraphHopperTest.testLoadOSM":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":115,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":475,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":109,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":396,"com.graphhopper.reader.OSMReaderTest.testSort":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":369,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":241,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":229,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":194,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":488,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":81,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":452,"com.graphhopper.routing.DijkstraTest.initializationError":457,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":466,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":276,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":180,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":481,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":206,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":238,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":250,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":378,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":245,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":333,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":330,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":132,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":214,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":419,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":130,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":410,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":409,"com.graphhopper.coll.IntIntBinHeapTest.testSize":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":259,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":265,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":172,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":150,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":174,"com.graphhopper.coll.CompressedArrayTest.testCompress2":482,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":219,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":319,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":256,"com.graphhopper.GraphHopperAPITest.testLoad":283,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":154,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":474,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":287,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":211,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":201,"com.graphhopper.storage.LevelGraphStorageTest.testClone":159,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":463,"com.graphhopper.reader.OSMReaderTest.testBarriers":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":246,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":381,"com.graphhopper.util.GHUtilityTest.testCopy":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":412,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":141,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":327,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":96,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":350,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":344,"com.graphhopper.routing.PathTest.testFindInstruction":403,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":247,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":468,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":31,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":293,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":188,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":377,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":230,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":215,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":274,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":388,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":444,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":53,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":197,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":480,"com.graphhopper.util.InstructionListTest.testWayList2":43,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":116,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":235,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":491,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":251,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":279,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":335,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":354,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":195,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":373,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":257,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":99,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":411,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":21,"com.graphhopper.routing.AStarTest.initializationError":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":254,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":294,"com.graphhopper.routing.PathBidirRefTest.testExtract":398,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":362,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":74,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":338,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":361,"com.graphhopper.util.GHUtilityTest.testSort2":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":420,"com.graphhopper.reader.OSMReaderTest.testMain":18,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":151,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":264,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":363,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":490,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":137,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":370,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":179,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":242,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":166,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":170,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":459,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":191,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":167,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":375,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":473,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":173,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":29,"com.graphhopper.storage.GraphHopperStorageTest.testClone":203,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":312,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":213,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":310,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":54,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":145,"com.graphhopper.routing.PathTest.testTime":401,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":326,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":189,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":160,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":317,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":118,"com.graphhopper.reader.OSMReaderTest.testRelation":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":67,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":178,"com.graphhopper.util.GHUtilityTest.testSortDirected":39,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":391,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":448,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":339,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":308,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":131,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":494,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":408,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":430,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":63,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":445,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":477,"com.graphhopper.routing.QueryGraphTest.testOneWay":454,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":119,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":487,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":343,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":107,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":485,"com.graphhopper.reader.OSMReaderTest.testWithBounds":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":278,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":297,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":69,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":295,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":465,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":156,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":152,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":389,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":351,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":268,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":91,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":261,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":199,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":453,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":406,"com.graphhopper.util.InstructionListTest.testWayList":42,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":232,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":360,"com.graphhopper.GraphHopperAPITest.testDisconnected179":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":55,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":386,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":66,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":367,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":205,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":101,"com.graphhopper.routing.util.EncodedValueTest.testSwap":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":441,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":223,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":352,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":417,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":458,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":439,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":187,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":313,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":368,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":243,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":139,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":476,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":372,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":193,"com.graphhopper.routing.PathTest.testWayList":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":82,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":59,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":428,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":267,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":366,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":216,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":288,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":252,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":133,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":171,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":134,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":383,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":469,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":320,"com.graphhopper.util.GHUtilityTest.testSort":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":112,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":493,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":342,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":365,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":281,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":95,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":126,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":104,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":87,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":478,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":379,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":451,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":85,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":239,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":322,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":336,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":426,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":296,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":479,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":73,"com.graphhopper.routing.PathTest.testFound":400,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":397,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":186,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":334,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":144,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":364,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":258,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":58,"com.graphhopper.util.InstructionListTest.testEmptyList":40,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":414,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":328,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":418,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":304,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":303,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":349,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":421,"com.graphhopper.reader.PrinctonReaderTest.testRead":14,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":231,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":129,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":57,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":47,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":263,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":346,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":384,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":376,"com.graphhopper.reader.OSMReaderTest.testFoot":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":71,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":456,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":113,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":190,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":489,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":337,"com.graphhopper.reader.OSMReaderTest.testOneWay":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":114,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":212,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":227,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":275,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":345,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":65,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":435,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":484,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":311,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":432,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":442,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":433,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":289,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":61,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":447,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":196,"com.graphhopper.routing.PathBidirRefTest.testExtract2":399,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":462,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":405,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":117,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":329,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":225,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":89,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":332,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":84,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":290,"com.graphhopper.util.SimpleIntDequeTest.testPush":460,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":90,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":387,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":438,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":110,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":228,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":38,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":162,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":314,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":220,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":168,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":321,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":51,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":315,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":249,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":424,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":97,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":49,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":26,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":146,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":44,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":224,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":291,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":64,"com.graphhopper.routing.AStarBidirectionTest.initializationError":404,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":302,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":185,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":183,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":240}}]
