[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"3a4ec2d2-dbae-11e4-b9cb-031ec66e287f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[9,0,3,4],"tindex":"3a4fad33-dbae-11e4-b9cb-bf388f37b1ae","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-1},{"failures":[10],"tindex":"3a4fad34-dbae-11e4-b9cb-cd6f77e74036","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,10,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,6,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"3a4fd445-dbae-11e4-b9cb-3ba979b5c146","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"3a4fd446-dbae-11e4-b9cb-c572225c1f79","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[14,254,19,255],"tindex":"3a4fd447-dbae-11e4-b9cb-91a9b3e7b24f","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[256,257,11,12,13,14,15,258,259,260,261,262,263,264,265,266,16,267,268,269,254,270,271,272,273,274,275,276,277,278,279,280,281,282,283,17,18,19,20,284,285,286,287,288,289,290,291,292,293,294,295,296,23,297,298,299,300,255,301,302,303,304,305,306,307,308,309,310,311,312,313,314,24,27,30,31,33,34,35,10,36,37,39,40,41,315,0,1,316,317,318,319,2,320,321,322,323,324,325,3,326,4,327,328,5,329,330,331,332,6,333,334,335,7,8],"tindex":"3a4fd448-dbae-11e4-b9cb-8f9149b463ec","variableMapping":{"str":"name","this":"value","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:97","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[336,337,338,339,340,341,342,343,344,345],"tindex":"3a4fd449-dbae-11e4-b9cb-09b0e69c3e03","variableMapping":{"fwdFaster":"lon","incDist2DSum":"midLon","fwdSlower":"lon","fullDist2D":"lon","restDist2D":"lon","speed":"lon","decDist2DSum":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[14,263,254,271,279,19,20,290,255,302,310],"tindex":"3a4fd44a-dbae-11e4-b9cb-ab9c56006824","variableMapping":{"tmpNo":"paveType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[14,263,254,271,279,19,20,290,255,302,310],"tindex":"3a4fd44b-dbae-11e4-b9cb-afda07c8fcf1","variableMapping":{"str":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:100","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[14,263,254,271,279,19,20,290,255,302,310],"tindex":"3a4ffb5c-dbae-11e4-b9cb-3d6cad674730","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"3a4ffb5d-dbae-11e4-b9cb-a5a9f66f9264","variableMapping":{"str":"_location","name":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[346,347,348,349,350,351,352,353,256,354,355,356,357,358,359,360,361,26,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,377,378,379,380,381,382,383,384,385,386,387,388,389,390,0,1,316,317,318,319,2,320,321,323,324,325,3,4,391,392,393,5,329,330,331,332,6,333,334,335,7,8,394,395,396,397,398,399,400,71,401,402,403,404,405,406,407,408,409,410,72,411,412,413,414,415,416,417,418,419,420,421,422,423,424,73,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,74,75,78,81,83,84,85,87,88,90,92,93,94,95,96,98,101,102,103,104,107,109,110,111,112,113,115,118,119,120,122,125,127,128,129,131,132,134,136,137,138,139,140,142,145,146,147,148,151,153,154,155,156,157,159,162,163,164,441,442,443,444,176,191,203,205,206,211,214,216,217,218,220,221,223,225,226,227,228,229,231,234,235,236,237,240,242,243,244,245,246,248,251,252,253],"tindex":"3a4ffb5e-dbae-11e4-b9cb-0394ad009bfe","variableMapping":{"size":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[14,267,298],"tindex":"3a4ffb5f-dbae-11e4-b9cb-b5e4be730dde","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[266,268,283,294,295,296,299,314],"tindex":"3a4ffb60-dbae-11e4-b9cb-ed43b9d3201c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"3a4ffb61-dbae-11e4-b9cb-659f7e295947","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:159","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[53,66,68,445,446],"tindex":"3a4ffb62-dbae-11e4-b9cb-d758c960313f","variableMapping":{"allBits":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"3a4ffb63-dbae-11e4-b9cb-f1fb8f219741","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"valueIfKeyNotFound","id":"valueIfKeyNotFound"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"3a4ffb64-dbae-11e4-b9cb-ff29c53d34ed","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[5,333,334,335,8,447,75,78,122,208,211],"tindex":"3a4ffb65-dbae-11e4-b9cb-eb9b7a1a29d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[338,342],"tindex":"3a4ffb66-dbae-11e4-b9cb-4b7338181a2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"3a502277-dbae-11e4-b9cb-83066cca883e","variableMapping":{"intIndex":"shift","len":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:141","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[56,65,67,394],"tindex":"3a502278-dbae-11e4-b9cb-31cfbbddb23e","variableMapping":{"initializedCounter":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-1},{"failures":[357,360,85,95,96,98,102,103,110,111,129,139,140,142,146,147,154,155,167,177,178,180,184,185,192,193,218,228,229,231,235,236,243,244],"tindex":"3a502279-dbae-11e4-b9cb-e1bafb44efcb","variableMapping":{"index":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"3a50227a-dbae-11e4-b9cb-bd90921b3824","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"3a50227b-dbae-11e4-b9cb-4bcc8193f689","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"3a50227c-dbae-11e4-b9cb-91ea29b4e796","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"3a50227d-dbae-11e4-b9cb-9b530e19e177","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[448,449,450,44,320],"tindex":"3a50227e-dbae-11e4-b9cb-0d443ff50bc0","variableMapping":{"high":"turnRestrictionBit","len":"turnRestrictionBit","start":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[11,12,13,14,15,258,259,451,260,261,262,263,264,265,266],"tindex":"3a50227f-dbae-11e4-b9cb-2ba49069a792","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-1},{"failures":[452,346,347,348,453,349,350,454,455,351,352,353,256,354,355,356,11,12,13,14,15,258,259,451,260,261,262,263,264,265,266,16,456,267,268,269,254,270,271,448,272,273,274,457,275,276,277,278,279,280,281,282,283,357,358,359,360,361,458,17,18,19,20,284,285,459,286,287,288,289,290,291,292,293,294,21,22,23,297,460,461,298,299,300,255,301,302,450,303,304,305,462,306,307,308,309,310,311,312,313,314,463,464,24,25,26,27,28,29,30,31,32,33,34,35,10,36,37,38,39,40,41,42,43,44,45,46,465,362,363,466,364,365,467,366,367,368,369,370,371,372,373,374,468,375,376,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,377,378,379,380,381,382,383,384,385,386,387,388,469,470,471,472,389,390,473,0,1,316,317,318,319,2,320,321,322,323,324,325,3,4,391,392,5,329,330,331,332,6,333,474,334,335,7,8,475,394,395,476,396,397,398,399,477,400,71,401,402,403,404,478,405,406,407,408,409,479,410,72,411,412,413,414,415,416,480,417,418,419,420,421,422,423,481,424,73,425,426,482,427,428,429,430,431,432,483,433,434,435,436,437,438,439,484,440,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"3a504990-dbae-11e4-b9cb-9f025d2a9f7b","variableMapping":{"sacScale":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[],"tindex":"3a504991-dbae-11e4-b9cb-6571607da757","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"3a504992-dbae-11e4-b9cb-0bed748a3a90","variableMapping":{"size":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[31,1,316,317,319,2,321,325,4,5,6,7],"tindex":"3a504993-dbae-11e4-b9cb-9f61987162e6","variableMapping":{"len":"acceptBit","start":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[316,5,8],"tindex":"3a504994-dbae-11e4-b9cb-3fd41a0d3ea4","variableMapping":{"param":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:65","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(\"-\", \"_\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"3a504995-dbae-11e4-b9cb-3745e4cb1447","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[39],"tindex":"3a504996-dbae-11e4-b9cb-8f8ee8370702","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"3a504997-dbae-11e4-b9cb-df4c5993bb60","variableMapping":{"weightLong":"flags","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":0},{"failures":[],"tindex":"3a504998-dbae-11e4-b9cb-ef3a4c1ef3b2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[14,263,254,271,279,19,20,290,255,302,310],"tindex":"3a504999-dbae-11e4-b9cb-85c7b6b90494","variableMapping":{"ret":"paveType","retBucket":"paveType","i":"paveType","bucketSize":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"3a50499a-dbae-11e4-b9cb-fb2597f217ec","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.KM_MILE":"fwdIncline","distInMeter":"fwdIncline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:76","type":"CtLocalVariableImpl","sourcecode":"double double = (double / 1000) / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[357,359,360,4,85,96,98,102,103,110,111,129,140,142,146,147,154,155,167,178,180,184,185,192,193,218,229,231,235,236,243,244],"tindex":"3a50499b-dbae-11e4-b9cb-176ea4018f94","variableMapping":{"values":"mValues","index":"com.graphhopper.coll.SparseIntIntArray.DELETED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:327","type":"CtReturnImpl","sourcecode":"return int[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-1},{"failures":[],"tindex":"3a50499c-dbae-11e4-b9cb-7358f31fb09e","variableMapping":{"java.lang.Double.NaN":"speed","is3D":"force"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:210","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":0},{"failures":[],"tindex":"3a5070ad-dbae-11e4-b9cb-6f957d5878e9","variableMapping":{"str":"this","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:95","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Boolean.java.lang.Boolean.parseBoolean(java.lang.String);\n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"3a5070ae-dbae-11e4-b9cb-3d5ee871f70b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[24],"tindex":"3a5070af-dbae-11e4-b9cb-2f8555dded45","variableMapping":{"empty":"locked"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[452,346,347,348,453,349,350,454,455,351,352,353,256,354,355,356,257,11,12,13,14,15,258,259,451,260,261,262,263,264,265,266,16,456,267,268,269,254,270,271,448,272,273,274,457,275,276,277,278,279,280,281,282,283,357,358,359,360,361,458,17,18,19,20,284,285,459,286,287,288,289,290,291,292,293,294,21,295,449,485,296,22,23,297,460,461,298,299,300,255,301,302,450,303,304,305,462,306,307,308,309,310,311,312,313,314,463,464,24,25,26,27,28,29,30,31,32,33,34,35,10,36,37,38,39,40,41,42,43,44,45,46,465,362,363,466,364,365,467,366,367,368,369,370,371,372,373,374,468,375,376,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,377,378,379,380,381,382,383,384,385,386,387,388,469,470,471,472,389,390,473,0,1,316,317,318,319,2,320,321,322,323,324,325,3,326,4,391,392,393,5,329,330,331,332,6,333,474,334,335,7,8,475,394,395,476,396,397,398,399,477,400,71,401,402,403,404,478,405,406,407,408,409,479,410,72,411,412,413,414,415,416,480,417,418,419,420,421,422,423,481,424,73,425,426,482,427,428,429,430,431,432,483,433,434,435,436,437,438,439,484,440,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"3a5070b0-dbae-11e4-b9cb-4dbd71727e3a","variableMapping":{"segmentSizePower":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[452,346,347,348,349,350,454,455,351,352,353,256,354,355,356,357,358,359,360,361,458,297,460,26,362,363,364,365,366,367,368,369,370,371,372,373,374,468,375,376,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,377,377,378,378,379,379,380,380,381,381,382,382,383,383,384,384,385,385,386,386,387,387,388,388,471,472,389,390,0,1,316,317,318,319,2,320,321,323,324,325,3,4,391,392,393,5,329,330,331,332,6,333,334,335,7,8,394,395,396,397,398,399,477,400,71,486,401,402,403,404,478,405,406,407,408,409,479,410,72,411,412,413,414,415,416,480,417,418,419,420,421,422,423,481,424,73,425,426,482,427,428,429,430,431,432,483,433,434,435,436,437,438,439,484,440,74,447,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"3a5097c1-dbae-11e4-b9cb-f7c411473159","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"3a5097c2-dbae-11e4-b9cb-85d7590dbfca","variableMapping":{"tmpDegreeCounter":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[452,346,347,348,349,350,454,455,351,352,353,256,354,355,356,357,358,359,360,361,458,297,460,26,362,363,364,365,366,367,368,369,370,371,372,373,374,468,375,376,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,377,377,378,378,379,379,380,380,381,381,382,382,383,383,384,384,385,385,386,386,387,387,388,388,471,472,389,390,0,1,316,317,318,319,2,320,321,323,324,325,3,4,391,392,393,5,329,330,331,332,6,333,334,335,7,8,394,395,396,397,398,399,400,71,486,401,402,403,404,405,406,407,408,409,410,72,411,412,413,414,415,416,480,417,418,419,420,421,422,423,481,424,73,425,426,482,427,428,429,430,431,432,483,433,434,435,436,437,438,439,484,440,74,75,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,487,441,488,489,490,491,492,444,493,494,176,191,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"3a5097c3-dbae-11e4-b9cb-abdfd24ff8c4","variableMapping":{"segNumber":"segmentSizeIntsPower","segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"3a5097c4-dbae-11e4-b9cb-213e2c891a21","variableMapping":{"turnRestrictionBit":"flags","restricted":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:615","type":"CtReturnImpl","sourcecode":"return boolean ? long : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"3a5097c5-dbae-11e4-b9cb-1711bbfe5413","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:183","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"EncodingManager can only be null if you call loadExisting\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":0},{"failures":[],"tindex":"3a5097c6-dbae-11e4-b9cb-5fc595d25cb4","variableMapping":{"edgeCount":"nodes","lastEdgeIndex":"nodes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"3a5097c7-dbae-11e4-b9cb-5b893d953c87","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"3a5097c8-dbae-11e4-b9cb-a7bbf8222cc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[357,359,360,4,85,93,95,96,98,102,103,110,111,129,137,139,140,142,146,147,154,155,167,175,177,178,180,184,185,192,193,209,218,226,228,229,231,235,236,243,244],"tindex":"3a5097c9-dbae-11e4-b9cb-5d0d7a7efa4d","variableMapping":{"entries":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"3a50beda-dbae-11e4-b9cb-4718d662c53e","variableMapping":{"high":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[452,346,347,348,349,350,454,351,352,353,256,354,355,356,357,358,359,360,361,458,297,460,26,362,363,364,365,366,367,368,369,370,371,372,373,374,468,375,376,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,377,378,379,380,381,382,383,384,385,386,387,388,389,390,0,1,316,317,318,319,2,320,321,323,324,325,3,4,391,392,393,5,330,331,332,6,333,334,335,7,8,394,395,396,397,398,399,400,71,401,402,403,404,405,406,407,408,409,410,72,411,412,413,414,415,416,480,417,418,419,420,421,422,423,424,73,425,426,482,427,428,429,430,431,432,483,433,434,435,436,437,438,439,440,74,75,77,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,488,489,490,443,444,493,494,176,191],"tindex":"3a50bedb-dbae-11e4-b9cb-2fcb602f1075","variableMapping":{"index":"bytePos","entriesPerSegment":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:99","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[366,368,372,374,468,375,376,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,5,329,330,331,333,334,7],"tindex":"3a50bedc-dbae-11e4-b9cb-b727a9c90d97","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1},{"failures":[452,346,347,348,349,350,454,351,352,353,256,354,355,356,357,358,359,360,361,458,297,460,26,362,363,364,365,366,367,368,369,370,371,372,373,374,468,375,376,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,377,378,379,380,381,382,383,384,385,386,387,388,389,390,0,1,316,317,318,319,2,320,321,323,324,325,3,4,391,392,393,5,330,331,332,6,333,334,335,7,8,394,395,396,397,398,399,400,71,401,402,403,404,405,406,407,408,409,410,72,411,412,413,414,415,416,480,417,418,419,420,421,422,423,424,73,425,426,482,427,428,429,430,431,432,483,433,434,435,436,437,438,439,440,74,75,77,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,488,489,490,443,444,493,494,176,191,203,204,205,206,207,209,210,211,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"3a50bedd-dbae-11e4-b9cb-696a6f4defe8","variableMapping":{"value":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[268,299],"tindex":"3a50bede-dbae-11e4-b9cb-cf287ef7b1c8","variableMapping":{"line":"highway","key":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"3a50bedf-dbae-11e4-b9cb-0deb0811be16","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"3a50bee0-dbae-11e4-b9cb-055959cd647a","variableMapping":{"oldValueIndex":"value","lastKey":"value","key":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[],"tindex":"3a50bee1-dbae-11e4-b9cb-4b3b65d69c84","variableMapping":{"storedKey":"flags","key":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-2},{"failures":[14,268,271,295,299,302,322],"tindex":"3a50bee2-dbae-11e4-b9cb-556b620f44aa","variableMapping":{"allBits":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[14,267,268,254,271,20,295,296,298,299,255,302],"tindex":"3a50e5f3-dbae-11e4-b9cb-9b4b6a5c9824","variableMapping":{"turnCostsCount":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[5,8],"tindex":"3a50e5f4-dbae-11e4-b9cb-39a1817a4c8e","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:307","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[],"tindex":"3a50e5f5-dbae-11e4-b9cb-b3fedbdaf6ca","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"3a50e5f6-dbae-11e4-b9cb-a5bbcc166cf2","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"3a50e5f7-dbae-11e4-b9cb-090bb53a368e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"3a50e5f8-dbae-11e4-b9cb-971d284a62ba","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":0},{"failures":[],"tindex":"3a50e5f9-dbae-11e4-b9cb-3723ba28e277","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:222","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"3a50e5fa-dbae-11e4-b9cb-3ff18d0ebd43","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"3a50e5fb-dbae-11e4-b9cb-d9dce01dbc8c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"3a50e5fc-dbae-11e4-b9cb-7167289a6877","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"3a50e5fd-dbae-11e4-b9cb-89b94f9da984","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"3a50e5fe-dbae-11e4-b9cb-6fc956d1fa6e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[4],"tindex":"3a50e5ff-dbae-11e4-b9cb-af09aa8b1f72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:165","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"3a50e600-dbae-11e4-b9cb-cb5869a31023","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[336,337,495,411,480,418,419,427,483,434,435,338,339,341,343,344,496,497,345],"tindex":"3a50e601-dbae-11e4-b9cb-fdf663fb5683","variableMapping":{"min":"i","tmpSize":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[336,337,338,339,341,342,343,344,345],"tindex":"3a50e602-dbae-11e4-b9cb-454116c49b60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"3a50e603-dbae-11e4-b9cb-5be1d5c797ea","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-2},{"failures":[357,361,458],"tindex":"3a50e604-dbae-11e4-b9cb-d344e3cdf5d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[395,498,499,500,501,502,503,411,418,419,427,434,435],"tindex":"3a50e605-dbae-11e4-b9cb-1fc458dec104","variableMapping":{"y1":"y1","y2":"y1","x1":"y1","x2":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[357,361,458],"tindex":"3a50e606-dbae-11e4-b9cb-877259af548b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[],"tindex":"3a50e607-dbae-11e4-b9cb-59cdd2681c86","variableMapping":{"red":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":0},{"failures":[364,366,373,376,47,48,49,50,51,53,54,56,57,59,60,61,62,63,64,66,68,69,70,330],"tindex":"3a510d18-dbae-11e4-b9cb-35d8f13d95e3","variableMapping":{"resultOrientation":"distance","orientation":"distance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"3a510d19-dbae-11e4-b9cb-5b7f1c8b33e6","variableMapping":{"a":"elem","high":"size","low":"toSize","guess":"toSize","key":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:374","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":0},{"failures":[],"tindex":"3a510d1a-dbae-11e4-b9cb-5f734fa68991","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"3a510d1b-dbae-11e4-b9cb-53914be11183","variableMapping":{"tt":"footTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":0},{"failures":[],"tindex":"3a510d1c-dbae-11e4-b9cb-478d8949ca21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(4, 1)"},"status":-2},{"failures":[],"tindex":"3a510d1d-dbae-11e4-b9cb-ab7477cc28ef","variableMapping":{"shift":"bits","tmpValue":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[],"tindex":"3a510d1e-dbae-11e4-b9cb-a77694a2a0f2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[24],"tindex":"3a510d1f-dbae-11e4-b9cb-d7ac37d03027","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"locked","v":"locked"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"3a510d20-dbae-11e4-b9cb-0590ba3b4851","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[265,270,281,292,301,312,320],"tindex":"3a510d21-dbae-11e4-b9cb-21aae1db0c07","variableMapping":{"name":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[351,352,353,256,67,378,381,382,384,385,388,389,390,316,319,2,5,330,333,334,335,7,8,504,505,506,507,508,509,510,402,403,404,405,413,415,429,431,511,75,78,83,104,110,115,117,122,127,148,154,159,161,512,208,211,216,237,243,248,250,513],"tindex":"3a510d22-dbae-11e4-b9cb-8f524a44f45a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[],"tindex":"3a510d23-dbae-11e4-b9cb-557cb3950bd4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"3a510d24-dbae-11e4-b9cb-c3a2aca4e20a","variableMapping":{"high":"code","guess":"code","low":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":0},{"failures":[],"tindex":"3a510d25-dbae-11e4-b9cb-c99cd913ac24","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":65,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":378,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":208,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":257,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":408,"com.graphhopper.GraphHopperAPITest.testNoLoad":476,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":166,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":355,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":356,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":270,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":15,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":498,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":430,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":329,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":310,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":93,"com.graphhopper.coll.CompressedArrayTest.testCompress":337,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":262,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":162,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":186,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":138,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":482,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":374,"com.graphhopper.GraphHopperTest.testPrepare":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":198,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":364,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":57,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":351,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":486,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":263,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":454,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":214,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":427,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":361,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":267,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":441,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":55,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":414,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":271,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":75,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":496,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":376,"com.graphhopper.GraphHopperTest.testLoadOSM":333,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":420,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":490,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":415,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":22,"com.graphhopper.reader.OSMReaderTest.testSort":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":280,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":324,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":79,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":157,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":122,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":199,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":384,"com.graphhopper.routing.DijkstraTest.initializationError":465,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":114,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":241,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":499,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":134,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":76,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":255,"com.graphhopper.reader.OSMNodeTest.testSetTags":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":83,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":433,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":61,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":426,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":432,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":51,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":218,"com.graphhopper.coll.OSMIDMapTest.testGetLong":509,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":97,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":103,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":233,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":211,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":235,"com.graphhopper.coll.CompressedArrayTest.testCompress2":336,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":18,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":94,"com.graphhopper.GraphHopperAPITest.testLoad":394,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":215,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":489,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":24,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":139,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":129,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":9,"com.graphhopper.storage.LevelGraphStorageTest.testClone":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":84,"com.graphhopper.reader.OSMReaderTest.testBarriers":318,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":458,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":450,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":170,"com.graphhopper.util.GHUtilityTest.testCopy":347,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":74,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":288,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":265,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":479,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":500,"com.graphhopper.routing.PathTest.testFindInstruction":390,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":451,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":85,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":30,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":354,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":300,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":407,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":158,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":112,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":98,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":308,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":485,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":466,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":222,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":171,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":494,"com.graphhopper.util.InstructionListTest.testWayList2":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":421,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":163,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":254,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":117,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":268,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":463,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":123,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":297,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":502,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":224,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":512,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":448,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":95,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":401,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":53,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":128,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":319,"com.graphhopper.routing.AStarTest.initializationError":473,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":67,"com.graphhopper.coll.OSMIDMapTest.testGet":507,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":92,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":31,"com.graphhopper.routing.PathBidirRefTest.testExtract":362,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":274,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":437,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":480,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":120,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":192,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":273,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":73,"com.graphhopper.util.GHUtilityTest.testSort2":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":62,"com.graphhopper.reader.OSMReaderTest.testMain":316,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":212,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":457,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":497,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":281,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":438,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":35,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":196,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":227,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":231,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":252,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":228,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":381,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":462,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":298,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":488,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":234,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":3,"com.graphhopper.storage.StorablePropertiesTest.testStore":511,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":513,"com.graphhopper.storage.GraphHopperStorageTest.testClone":131,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":41,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":39,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":141,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":172,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":206,"com.graphhopper.routing.PathTest.testTime":472,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":287,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":250,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":221,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":46,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":478,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":185,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":239,"com.graphhopper.reader.OSMReaderTest.testRelation":322,"com.graphhopper.util.GHUtilityTest.testSortDirected":349,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":446,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":311,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":380,"com.graphhopper.GraphHopperTest.testFootOnly":7,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":503,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":13,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":37,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":402,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":483,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":50,"com.graphhopper.reader.OSMElementTest.testSetTags":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":365,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":461,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":181,"com.graphhopper.search.NameIndexTest.testCreate":506,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":377,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":492,"com.graphhopper.routing.QueryGraphTest.testOneWay":386,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":481,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":341,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":413,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":338,"com.graphhopper.reader.OSMReaderTest.testWithBounds":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":178,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":358,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":382,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":187,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":295,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":217,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":213,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":266,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":38,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":99,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":127,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":48,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":160,"com.graphhopper.util.InstructionListTest.testWayList":352,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":272,"com.graphhopper.GraphHopperAPITest.testDisconnected179":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":173,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":342,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":411,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":306,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":392,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":184,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":487,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":201,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":278,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":332,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":133,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":468,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":456,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":59,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":469,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":373,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":42,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":248,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":81,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":69,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":126,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":484,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":442,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":491,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":283,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":121,"com.graphhopper.routing.PathTest.testWayList":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":200,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":459,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":177,"com.graphhopper.coll.OSMIDMapTest.testGet2":508,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":70,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":277,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":144,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":90,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":132,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":232,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":434,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":435,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":304,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":445,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":19,"com.graphhopper.util.GHUtilityTest.testSort":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":417,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":345,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":258,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":276,"com.graphhopper.search.NameIndexTest.testPut":504,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":119,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":130,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":409,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":428,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":405,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":398,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":444,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":301,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":383,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":77,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":335,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":284,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":464,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":357,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":493,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":191,"com.graphhopper.routing.PathTest.testFound":471,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":8,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":23,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":247,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":275,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":96,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":505,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":176,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":136,"com.graphhopper.util.InstructionListTest.testEmptyList":455,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":56,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":289,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":439,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":60,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":34,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":33,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":264,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":63,"com.graphhopper.reader.PrinctonReaderTest.testRead":391,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":159,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":431,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":175,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":339,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":510,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":165,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":101,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":305,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":449,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":299,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":189,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":388,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":251,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":418,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":11,"com.graphhopper.reader.OSMReaderTest.testOneWay":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":419,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":140,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":155,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":113,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":260,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":303,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":369,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":495,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":366,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":375,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":367,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":399,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":179,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":379,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":124,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":326,"com.graphhopper.routing.PathBidirRefTest.testExtract2":363,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":443,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":47,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":72,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":290,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":422,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":153,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":477,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":293,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":320,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":501,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":202,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":400,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":372,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":416,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":156,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":453,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":223,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":43,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":148,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":229,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":20,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":440,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":169,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":87,"com.graphhopper.GraphHopperTest.testPrepareOnly":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":66,"com.graphhopper.GraphHopperTest.testVia":330,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":410,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":167,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":323,"com.graphhopper.reader.OSMElementTest.testHasTag":327,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":207,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":152,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":256,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":28,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":182,"com.graphhopper.routing.AStarBidirectionTest.initializationError":470,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":16,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":246,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":244,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":78}}]
