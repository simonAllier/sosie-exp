[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"2e7361af-dc08-11e4-b368-f55bee7f7a76","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[10],"tindex":"2e755d80-dc08-11e4-b368-570c275da17e","variableMapping":{"i":"maxCount","to":"maxCount","lonSize":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[],"tindex":"2e755d81-dc08-11e4-b368-6fb7f5d2c8cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:83","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator"},"status":-2},{"failures":[11,12],"tindex":"2e755d82-dc08-11e4-b368-a5e3ecc26a17","variableMapping":{"str":"motorcarTag","name":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:82","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"2e755d83-dc08-11e4-b368-b562b68f2db4","variableMapping":{"maxLatTmp":"fwdDecline","minLatTmp":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[13],"tindex":"2e755d84-dc08-11e4-b368-119191d7b411","variableMapping":{"flags":"flags","nodeFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"2e755d85-dc08-11e4-b368-af8c55c5f8db","variableMapping":{"store":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"2e755d86-dc08-11e4-b368-63e59fdec63f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,10],"tindex":"2e755d87-dc08-11e4-b368-45cb9335d884","variableMapping":{"capacity":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"2e755d88-dc08-11e4-b368-698463d91367","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:154","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"2e755d89-dc08-11e4-b368-f587cb69fd7d","variableMapping":{"name":"name","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:178","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess == null)\n    throw new java.lang.IllegalStateException((\"Couldn\\'t remove dataAccess object:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":0},{"failures":[67,55],"tindex":"2e755d8a-dc08-11e4-b368-4591967c0016","variableMapping":{"red":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"2e755d8b-dc08-11e4-b368-6144bc8b2dc1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-2},{"failures":[],"tindex":"2e755d8c-dc08-11e4-b368-83bf7fc68550","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"2e75849d-dc08-11e4-b368-f5a2a70e01b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:308","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\",\")"},"status":0},{"failures":[],"tindex":"2e75849e-dc08-11e4-b368-63cdacd94469","variableMapping":{"latlon":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"2e75849f-dc08-11e4-b368-57079fef5465","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"2e7584a0-dc08-11e4-b368-6f045386b34d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"2e7584a1-dc08-11e4-b368-8b2ad28c7df3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-2},{"failures":[],"tindex":"2e7584a2-dc08-11e4-b368-710812e0d0bb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-2},{"failures":[],"tindex":"2e7584a3-dc08-11e4-b368-c3775d3e0f3b","variableMapping":{"encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"EncodingManager can only be null if you call loadExisting\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":0},{"failures":[65,68],"tindex":"2e7584a4-dc08-11e4-b368-4f43ed5e3a85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[],"tindex":"2e7584a5-dc08-11e4-b368-4f127fb1cdb9","variableMapping":{"delNodes":"index","this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1144","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.inPlaceNodeRemove(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[65,68],"tindex":"2e7584a6-dc08-11e4-b368-c7ceb860fd10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[67,69,55,70,14,71,72,73,74,75,76,15,16,77,78,17,18,19,20,79,80,22,81,82,83,84,85,86,87,23,24,25,26,88,27,89,90],"tindex":"2e7584a7-dc08-11e4-b368-a9fab1c08ace","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[],"tindex":"2e7584a8-dc08-11e4-b368-3588430e5948","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:172","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[17,18,19,25,27],"tindex":"2e7584a9-dc08-11e4-b368-15ea43c2ff69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"2e7584aa-dc08-11e4-b368-cf72777ebff7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:774","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":0},{"failures":[91,92,93,94,95,96,97,98,99,100],"tindex":"2e7584ab-dc08-11e4-b368-155c405cb424","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[101],"tindex":"2e75abbc-dc08-11e4-b368-2187d1a1aa77","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"2e75abbd-dc08-11e4-b368-ed7e83152f13","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[68,102],"tindex":"2e75abbe-dc08-11e4-b368-916379c03b5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[],"tindex":"2e75abbf-dc08-11e4-b368-9dddbc05cbab","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[103,11,12],"tindex":"2e75abc0-dc08-11e4-b368-4bdca72556b9","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[91,92,93,94,95,96,97,104,98,99,100],"tindex":"2e75abc1-dc08-11e4-b368-6158b7f4c52d","variableMapping":{"com.graphhopper.util.Constants.VERSION":"pavementName","tmp":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[],"tindex":"2e75abc2-dc08-11e4-b368-af85d2d1db16","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[66,10,105],"tindex":"2e75abc3-dc08-11e4-b368-75a2138e603d","variableMapping":{"numTiles":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"2e75abc4-dc08-11e4-b368-abe7ee4d7b22","variableMapping":{"factor":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:229","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[106],"tindex":"2e75f9e5-dc08-11e4-b368-13a2e31cbf5f","variableMapping":{"str":"hourStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:434","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\\t\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"2e75f9e6-dc08-11e4-b368-cbd20b33f635","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[],"tindex":"2e75f9e7-dc08-11e4-b368-c3dfabec8ad4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"2e75f9e8-dc08-11e4-b368-8d26eae0734f","variableMapping":{"this":"osmValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:98","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NativeFSLockFactory.NativeLock.lockExists())\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-2},{"failures":[],"tindex":"2e75f9e9-dc08-11e4-b368-7d3e298f4322","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"2e75f9ea-dc08-11e4-b368-a923847d0dff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-2},{"failures":[],"tindex":"2e75f9eb-dc08-11e4-b368-3d0fa514e21d","variableMapping":{"newUniqueOsmId":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[],"tindex":"2e75f9ec-dc08-11e4-b368-c9cc3cc22724","variableMapping":{"size":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"2e75f9ed-dc08-11e4-b368-31f2af3a8c86","variableMapping":{"high":"index","guess":"index","low":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":0},{"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"2e75f9ee-dc08-11e4-b368-6380cfd86daa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-1},{"failures":[103,11,12],"tindex":"2e75f9ef-dc08-11e4-b368-fbd95044ef96","variableMapping":{"acceptBit":"ferryBit","intendedValues":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"2e762100-dc08-11e4-b368-6154392314f6","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"2e762101-dc08-11e4-b368-6d906da11cdd","variableMapping":{"str":"str","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:80","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":0},{"failures":[],"tindex":"2e762102-dc08-11e4-b368-13eed33d10b3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[2,5,7,8],"tindex":"2e762103-dc08-11e4-b368-53337d49366e","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"2e762104-dc08-11e4-b368-356c81465acb","variableMapping":{"bits":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"2e762105-dc08-11e4-b368-c1e05ddb496a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[131,132,133,35,134,135,136,137,138,139,140,141,142,143,44,144,145,146,147,53,148,149,120,150,151,152,153,154,63,155,156,157,158,124,125,159,160,161,162,163,129,130,164,165,166,167,168,169,170,171,172,173,174,175,176,177,25,178,179,180,181,182,183,90,184,185,186,187,12,188,189,190,191,192,9,193,194,195,196,197,105],"tindex":"2e762106-dc08-11e4-b368-f936a273a2c0","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"2e762107-dc08-11e4-b368-8d93fbcf3272","variableMapping":{"nodeFlags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[131,132,133,35,134,135,136,198,199,200,201,137,138,202,140,141,142,143,44,144,152,153,154,63,155,121,156,157,158,124,125,159,160,126,161,162,163,129,130,164,165,169,170,171,172,173,174,175,176,177,25,178,179,181,182,89,90,184,185,186,187,12,188,189,190,191,192,9,193,194,195,196,197,105],"tindex":"2e762108-dc08-11e4-b368-2bb13bc53f7c","variableMapping":{"factor":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-1},{"failures":[],"tindex":"2e762109-dc08-11e4-b368-7d563986a8ba","variableMapping":{"pointIndex":"length","index":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":0},{"failures":[],"tindex":"2e76210a-dc08-11e4-b368-a9d0bfe79034","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[203],"tindex":"2e76210b-dc08-11e4-b368-3122c6f5efcc","variableMapping":{"high":"hash","guess":"hash","low":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[93,96,98,100],"tindex":"2e76210c-dc08-11e4-b368-2710b6932ded","variableMapping":{"str":"wayTypeName","name":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"2e76210d-dc08-11e4-b368-c11eaa7f29fc","variableMapping":{"acceptBit":"encoded","ferryBit":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"2e76481e-dc08-11e4-b368-3b5ad9ca74b8","variableMapping":{"lastKey":"ferryBit","key":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":0},{"failures":[204],"tindex":"2e76481f-dc08-11e4-b368-a1c38693bfd8","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"2e764820-dc08-11e4-b368-5bcd3da85911","variableMapping":{"i":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-2},{"failures":[],"tindex":"2e764821-dc08-11e4-b368-5952420d3f56","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"2e764822-dc08-11e4-b368-d34ef1310fa5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-2},{"failures":[],"tindex":"2e764823-dc08-11e4-b368-a7c4a65add7e","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[103],"tindex":"2e764824-dc08-11e4-b368-f3a5bd9da7bf","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"2e764825-dc08-11e4-b368-4f0de77e4727","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"2e764826-dc08-11e4-b368-43f4210d4308","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[],"tindex":"2e764827-dc08-11e4-b368-95c1c6cef2be","variableMapping":{"acceptBit":"directionBitMask","ferryBit":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"2e764828-dc08-11e4-b368-d3f5d9957380","variableMapping":{"eleDelta":"resultOrientation","decEleSum":"java.lang.Math.PI","fullDist2D":"orientation","decDist2DSum":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"2e764829-dc08-11e4-b368-910e57a7e043","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[72,74,15,77,78,17,19,20,79,80,22,81,205,82,83,84,85,206,86,87,23,207,24,25,26,88,27,208,183,89,90,185,187],"tindex":"2e76482a-dc08-11e4-b368-9b290ee3d5c1","variableMapping":{"delta":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:287","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-1},{"failures":[],"tindex":"2e766f3b-dc08-11e4-b368-7d339301dd7f","variableMapping":{"indexWithMaxDist":"usedBits","lastIndex":"usedBits","fromIndex":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[209,210],"tindex":"2e766f3c-dc08-11e4-b368-4722ec7ccc96","variableMapping":{"segmentSizeInBytes":"shift","capacity":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[211,212,213,137,214,138,215,216,217,218,219,220,221,222,223,224,225,226,69,152,227,153,228,56,229,230,231,232,233,234,235,58,59,60,236,237,61,62,154,238,239,63,64,240,241,155,242,243,244,245,70,14,71,72,73,74,75,76,246,15,16,77,78,17,18,19,20,79,80,21,22,81,247,205,82,83,84,85,206,86,87,23,207,24,25,26,88,27,183,248,89,90,185,249,187],"tindex":"2e766f3d-dc08-11e4-b368-77f05060b2bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"2e766f3e-dc08-11e4-b368-4b73d6ff3173","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"2e766f3f-dc08-11e4-b368-bd30364f1d68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[250,251,252],"tindex":"2e766f40-dc08-11e4-b368-f5e57aeb11df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"2e766f41-dc08-11e4-b368-c77ccf06627a","variableMapping":{"arg":"str","index":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:109","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"2e766f42-dc08-11e4-b368-df1d9c820090","variableMapping":{"other":"encoder","directionBitMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"2e766f43-dc08-11e4-b368-ef0eb7696093","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[253,131,254,132,255,28,256,257,258,259,260,261,262,263,30,31,264,32,265,266,267,33,34,268,269,270,35,36,271,272,273,134,274,275,276,277,278,279,135,280,136,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,198,199,200,201,299,300,301,302,303,304,211,212,213,305,137,214,138,215,306,216,217,218,219,220,221,222,223,224,140,112,307,141,308,142,309,37,310,311,312,313,314,315,316,317,39,40,318,41,319,320,321,42,43,322,323,324,44,45,325,326,327,144,328,329,330,331,145,332,46,333,334,335,336,337,338,339,340,48,49,341,50,342,343,344,51,52,345,346,147,53,54,347,348,349,148,350,351,352,353,225,226,69,354,355,152,227,153,228,56,229,230,231,232,233,234,235,356,58,59,357,60,236,358,237,61,62,359,238,239,63,64,240,360,241,155,242,361,243,244,362,363,245,364,365,366,367,70,368,369,370,169,170,371,372,373,374,375,65,376,66,10,68,102,377,378,379,380,381,382,204,383,384,385,386,101,103,387,388,389,11,390,391,392,393,394,395,250,396,91,0,92,1,397,398,93,399,2,400,401,402,403,209,404,210,405,251,406,94,3,95,4,407,408,96,409,5,410,6,252,97,104,411,412,98,413,7,414,415,416,99,417,418,100,419,8,420,421,171,422,423,172,424,173,174,425,175,176,426,427,177,14,71,72,73,74,75,76,246,15,16,77,428,78,17,18,19,20,79,80,21,22,81,247,205,82,83,84,85,206,86,87,23,207,24,25,26,88,27,183,248,89,90,184,429,185,249,186,187,430,12,431,188,189,190,191,192,9,193,194,195,196,197,432,105,433,434,435],"tindex":"2e769554-dc08-11e4-b368-adf3ed96c32d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"2e769555-dc08-11e4-b368-e3a716f2abcc","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"2e769556-dc08-11e4-b368-d9033114c87c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":0},{"failures":[],"tindex":"2e769557-dc08-11e4-b368-27b9a9827e2c","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"size","nodeType":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[],"tindex":"2e769558-dc08-11e4-b368-899dccc9e6bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"2e769559-dc08-11e4-b368-2f49ae703fc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"2e76955a-dc08-11e4-b368-19b0f1d0c885","variableMapping":{"factor":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[396,91,92,398,93,400,209,210,406,94,95,408,96,410,97,104,412,98,414,99,418,100,420,188,189,191,9,193,196],"tindex":"2e76955b-dc08-11e4-b368-79a1c18f3bfc","variableMapping":{"wayTypeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"2e76955c-dc08-11e4-b368-814fdf6ba7cf","variableMapping":{"time":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"2e76955d-dc08-11e4-b368-573baf23810f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"2e76955e-dc08-11e4-b368-1f08dbee469b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"2e76955f-dc08-11e4-b368-1f6fd6a80c8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[380,382,405,183,429,187,431],"tindex":"2e769560-dc08-11e4-b368-7d46c8c3f559","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[278,135,280,136,281,283,285,286,287,288,289,290,291,298,198,199,201,211,212,213,137,214,138,215,216,218,219,220,221,222,223,224,362,363,436,437,372,373,376,66,10,205,85,206,23,183,248,89,90,184,429,185,249,186,187,430,431,188,189,190,191,192,9,193,194,195,196,105],"tindex":"2e76bc71-dc08-11e4-b368-f9a8ee387077","variableMapping":{"E_ADDITIONAL":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1455","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":239,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":207,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":415,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":332,"com.graphhopper.reader.OSMReaderTest.testFerry":12,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":364,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":365,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":3,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":214,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":248,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":400,"com.graphhopper.storage.MMapDataAccessTest.testSegments":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":38,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":275,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":146,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":263,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":77,"com.graphhopper.GraphHopperTest.testPrepare":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":14,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":82,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":370,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":100,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":373,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":227,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":213,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":251,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":20,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":280,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":140,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":17,"com.graphhopper.GraphHopperTest.testLoadOSM":185,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":286,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":136,"com.graphhopper.reader.OSMReaderTest.testSort":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":409,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":66,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":195,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":162,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":272,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":131,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":350,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":175,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":433,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":327,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":260,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":112,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":91,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":414,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":413,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":216,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":206,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":215,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":21,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":80,"com.graphhopper.coll.OSMIDMapTest.testGetLong":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":318,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":310,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":358,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":208,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":152,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":61,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":34,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":252,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":317,"com.graphhopper.GraphHopperAPITest.testLoad":362,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":149,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":377,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":30,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":28,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":106,"com.graphhopper.storage.LevelGraphStorageTest.testClone":230,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":102,"com.graphhopper.reader.OSMReaderTest.testBarriers":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":309,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":116,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":211,"com.graphhopper.util.GHUtilityTest.testCopy":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":335,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":224,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":8,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":159,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":418,"com.graphhopper.routing.PathTest.testFindInstruction":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":37,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":245,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":382,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":293,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":273,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":265,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":325,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":76,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":355,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":404,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":232,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":336,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":110,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":151,"com.graphhopper.util.InstructionListTest.testWayList2":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":287,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":328,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":394,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":234,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":127,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":22,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":255,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":191,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":25,"com.graphhopper.coll.OSMIDMapTest.testGet":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":316,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":204,"com.graphhopper.routing.PathBidirRefTest.testExtract":374,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":154,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":180,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":220,"com.graphhopper.storage.RAMDataAccessTest.testCopy":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":53,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":416,"com.graphhopper.storage.RAMDataAccessTest.testSegments":125,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":407,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":291,"com.graphhopper.util.GHUtilityTest.testSort2":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":86,"com.graphhopper.reader.OSMReaderTest.testMain":188,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":408,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":5,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":221,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":238,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":349,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":356,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":60,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":436,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":243,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":58,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":173,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":323,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":250,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":237,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":197,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":122,"com.graphhopper.storage.GraphHopperStorageTest.testClone":257,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":348,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":11,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":388,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":225,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":7,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":337,"com.graphhopper.routing.PathTest.testTime":421,"com.graphhopper.util.BitUtilLittleTest.testToFloat":167,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":242,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":231,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":392,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":52,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":359,"com.graphhopper.util.GHUtilityTest.testSortDirected":369,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":399,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":164,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":424,"com.graphhopper.GraphHopperTest.testFootOnly":187,"com.graphhopper.util.BitUtilLittleTest.testToInt":168,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":103,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":198,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":306,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":109,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":342,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":124,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":423,"com.graphhopper.routing.QueryGraphTest.testOneWay":426,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":135,"com.graphhopper.reader.OSMReaderTest.testWithBounds":196,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":160,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":2,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":49,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":174,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":376,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":383,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":209,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":228,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":420,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":322,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":304,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":319,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":132,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":19,"com.graphhopper.util.BitUtilLittleTest.testToBitString":166,"com.graphhopper.util.InstructionListTest.testWayList":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":4,"com.graphhopper.GraphHopperAPITest.testDisconnected179":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":338,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":249,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":333,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":435,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":352,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":184,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":259,"com.graphhopper.routing.util.EncodedValueTest.testSwap":13,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":428,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":269,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":16,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":155,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":96,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":88,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":410,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":253,"com.graphhopper.routing.PathTest.testWayList":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":351,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":48,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":101,"com.graphhopper.coll.OSMIDMapTest.testGet2":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":27,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":279,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":266,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":378,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":217,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":236,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":218,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":157,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":165,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":397,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":97,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":108,"com.graphhopper.util.GHUtilityTest.testSort":368,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":283,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":417,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":330,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":295,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":305,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":201,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":301,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":0,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":425,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":395,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":307,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":411,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":402,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":320,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":65,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":150,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":147,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":405,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":430,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":128,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":241,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":226,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":40,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":113,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":340,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":205,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":85,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":391,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":384,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":419,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":87,"com.graphhopper.reader.PrinctonReaderTest.testRead":434,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":134,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":138,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":47,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":145,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":321,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":396,"com.graphhopper.reader.OSMReaderTest.testFoot":431,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":284,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":361,"com.graphhopper.reader.OSMReaderTest.testOneWay":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":285,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":31,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":36,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":326,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":1,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":344,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":78,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":389,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":73,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":129,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":302,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":379,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":115,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":341,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":432,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":119,"com.graphhopper.routing.PathBidirRefTest.testExtract2":375,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":288,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":297,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":270,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":353,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":380,"com.graphhopper.util.SimpleIntDequeTest.testPush":437,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":281,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":271,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":233,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":390,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":133,"com.graphhopper.GraphHopperTest.testFootAndCar":429,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":104,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":223,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":334,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":403,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":24,"com.graphhopper.GraphHopperTest.testPrepareOnly":183,"com.graphhopper.GraphHopperTest.testVia":89,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":46,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":194,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":354,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":371,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":381,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":343,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":393,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":360,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":64,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":141}}]
