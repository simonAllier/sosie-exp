[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"b664009b-db6e-11e4-a05a-1b96b2985ed3","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[23,24,25,26,27],"tindex":"b666719c-db6e-11e4-a05a-49b1830b5bd6","variableMapping":{"resultOrientation":"lat","orientation":"lat","java.lang.Math.PI":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"b666719d-db6e-11e4-a05a-998516212ca2","variableMapping":{"width":"indexDivisor","i":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:147","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[28,29,0,1,2,3,30,31,32,4,5,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,6,7,8,53,9,10,11,54,12,13,14,15,55,16,56,57,58,59,60,61,62,63,64,65,66,67,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355],"tindex":"b66698ae-db6e-11e4-a05a-29def9f0a19c","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[356],"tindex":"b66698af-db6e-11e4-a05a-17b89f584db0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[59,64],"tindex":"b66698b0-db6e-11e4-a05a-d5bf009695ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"b66698b1-db6e-11e4-a05a-055d0a2be34c","variableMapping":{"indexWithMaxDist":"del","lastIndex":"unvisitedDeadEnds","fromIndex":"unvisitedDeadEnds"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[],"tindex":"b66698b2-db6e-11e4-a05a-fd341cd624fb","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[6,7,8,53,10,11,54,12,15,55,16,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"b66698b3-db6e-11e4-a05a-f76c756ef34b","variableMapping":{"allowWrites":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1085","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Writes are not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[357,360,364,371,374],"tindex":"b66698b4-db6e-11e4-a05a-09ce534918c1","variableMapping":{"id":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[358,360,361,365,366,367,377,369,372,374,375],"tindex":"b66698b5-db6e-11e4-a05a-77203b6f0433","variableMapping":{"str":"pavementName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:424","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[],"tindex":"b66698b6-db6e-11e4-a05a-93b3cf6c8cd2","variableMapping":{"node":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":0},{"failures":[],"tindex":"b66698b7-db6e-11e4-a05a-c17ad8c58365","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.DefaultEdgeFilter.this(com.graphhopper.routing.util.FlagEncoder, true, true)"},"status":-2},{"failures":[],"tindex":"b66698b8-db6e-11e4-a05a-173ef7240a6c","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":0},{"failures":[],"tindex":"b66698b9-db6e-11e4-a05a-adcb4c4070c1","variableMapping":{"high":"shift","len":"shift","start":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[378,379,380,381,382,383,356],"tindex":"b66698ba-db6e-11e4-a05a-77e4684f930d","variableMapping":{"orientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[],"tindex":"b66698bb-db6e-11e4-a05a-c999d3b6368b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[384,385,386,387,25,26,388],"tindex":"b66698bc-db6e-11e4-a05a-613026fbdc16","variableMapping":{"min":"lat","time":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:49","type":"CtIfImpl","sourcecode":"if (long < (double))\n    double = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"b66734fd-db6e-11e4-a05a-a58f68c6085c","variableMapping":{"max":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[3,4,7,54,389,390,357,358,359,360,391,392,361,362,363,393,364,394,395,396,365,366,397,367,368,398,377,399,369,370,371,372,373,374,400,401,375,376,402,403],"tindex":"b66734fe-db6e-11e4-a05a-13a88aeb6112","variableMapping":{"lastKey":"flags","key":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"b66909bf-db6e-11e4-a05a-ede8175e464d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[83,84,103,104,106,120],"tindex":"b66909c0-db6e-11e4-a05a-0325277dcac9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[357,371],"tindex":"b66930d1-db6e-11e4-a05a-310e409121e5","variableMapping":{"encoderList":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[0,4,92,100,164],"tindex":"b66930d2-db6e-11e4-a05a-a95d1b657a0c","variableMapping":{"high":"nodeA","len":"nodeA","start":"nodeB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[0,1,2,3,30,32,4,33,34,8,53,9,92,96,97,100,404,405,164,165,167,169,170,171,172,174,175,176,177,178,179,180,182,183,205,207,208,209,210,212,213,214,215,216,217,218,220,221],"tindex":"b66930d3-db6e-11e4-a05a-89d27e332e61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b66930d4-db6e-11e4-a05a-954d10a0cb19","variableMapping":{"high":"wayBitMask","guess":"wayBitMask","low":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"b66930d5-db6e-11e4-a05a-c3611b1dd6d4","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"b66930d6-db6e-11e4-a05a-1173a91c1f27","variableMapping":{"nextTowerId":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"b66930d7-db6e-11e4-a05a-71840a65d472","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[0,1,2,3,30,32,4,33,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,115,116,120],"tindex":"b66930d8-db6e-11e4-a05a-35b5756bffab","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:142","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-1},{"failures":[],"tindex":"b66930d9-db6e-11e4-a05a-cda228e6ca6d","variableMapping":{"baseNode":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","id":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:360","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"b66930da-db6e-11e4-a05a-73b50affdb78","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[30],"tindex":"b66930db-db6e-11e4-a05a-3d1762c0c062","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"b66930dc-db6e-11e4-a05a-2b184c790492","variableMapping":{"java.lang.Integer.MAX_VALUE":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[],"tindex":"b66930dd-db6e-11e4-a05a-dbb7077983f9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[28,30,31,32,5,122,260,263,305,311,314],"tindex":"b66930de-db6e-11e4-a05a-6d20dd0e9481","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"b66930df-db6e-11e4-a05a-157402c93499","variableMapping":{"this":"this","unknownSpeed":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[57],"tindex":"b66930e0-db6e-11e4-a05a-45ef0b2e6cb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"b66930e1-db6e-11e4-a05a-27a0bff72394","variableMapping":{"a":"finishedTo","approx":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[363,377],"tindex":"b66930e2-db6e-11e4-a05a-511667641302","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[137,233,278,406,329],"tindex":"b66957f3-db6e-11e4-a05a-3102d5306ff3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[],"tindex":"b66957f4-db6e-11e4-a05a-3dc2e3a8b035","variableMapping":{"i":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":0},{"failures":[28,0,1,2,3,30,31,32,4,5,35,36,44,46,47,48,49],"tindex":"b66957f5-db6e-11e4-a05a-695c284cf400","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:45","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(int)"},"status":-2},{"failures":[364],"tindex":"b66957f6-db6e-11e4-a05a-1f6c08e2621d","variableMapping":{"directionBitMask":"relBitMask","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[407],"tindex":"b66957f7-db6e-11e4-a05a-3571c39c8828","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"b66957f8-db6e-11e4-a05a-c39d9dc8e28e","variableMapping":{"flags":"directionBitMask","mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[0,1,30,34,84,85,86,87,88,90,91,93,94,95,96,97,98,99,100,102,103,104,105,106,109,115,120],"tindex":"b66957f9-db6e-11e4-a05a-c358f22929ec","variableMapping":{"prepared":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"b66957fa-db6e-11e4-a05a-3584a276be02","variableMapping":{"cp":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:125","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[358,361,365,366,367,398,377,369,372,375],"tindex":"b66957fb-db6e-11e4-a05a-918ea43f35a6","variableMapping":{"initialBits":"unpavedBit","allBits":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[6,408,409,410,411],"tindex":"b66957fc-db6e-11e4-a05a-e5b45ae1cf92","variableMapping":{"len":"ferryBit","start":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[],"tindex":"b66957fd-db6e-11e4-a05a-3de1872ebe75","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"b66957fe-db6e-11e4-a05a-65d57776bb21","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[57],"tindex":"b66957ff-db6e-11e4-a05a-b3d1ee2cdcc2","variableMapping":{"distance":"fwdFaster","dist":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[412],"tindex":"b6695800-db6e-11e4-a05a-29c1be8f96c4","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"index","nodeId":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"b6695801-db6e-11e4-a05a-21f49faa9a1d","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"index","nodeType":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[],"tindex":"b6697f12-db6e-11e4-a05a-ab49db4d575a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,413,17,18,19,20,21,22],"tindex":"b6697f13-db6e-11e4-a05a-2f2f7d013b4b","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"b6697f14-db6e-11e4-a05a-1bbdf9cc9cde","variableMapping":{"fromNode":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":0},{"failures":[],"tindex":"b6697f15-db6e-11e4-a05a-2b925fb4104a","variableMapping":{"high":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","low":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","guess":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","guessedKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:477","type":"CtIfImpl","sourcecode":"if (long < long) {\n    int = int;\n} else {\n    int = int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[],"tindex":"b6697f16-db6e-11e4-a05a-3d784c950b8d","variableMapping":{"initLeafSize":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"b6697f17-db6e-11e4-a05a-d5ea7c5dec1a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[414,415,416,417,380,418,419,420,381,421,382,422,423,424,425,383],"tindex":"b6697f18-db6e-11e4-a05a-ad50063875f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"b6697f19-db6e-11e4-a05a-c556b8cfb017","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"b6697f1a-db6e-11e4-a05a-37d6cf70dd46","variableMapping":{"noNumberValue":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:75","type":"CtIfImpl","sourcecode":"if (long == (int)) {\n    throw new java.lang.IllegalArgumentException((\"Illegal key \" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":0},{"failures":[18,19,20,21,22],"tindex":"b6697f1b-db6e-11e4-a05a-bbe2e890d5d5","variableMapping":{"empty":"blockByDefault"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"b6697f1c-db6e-11e4-a05a-89e21a5976a2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[28,29,0,1,2,3,30,31,32,4,5,41,6,7,8,53,9,10,11,54,12,13,14,15,55,16,363,364,394],"tindex":"b6697f1d-db6e-11e4-a05a-4bf1a6b2d80a","variableMapping":{"time":"includeWay"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[358,360,361,372,374,375],"tindex":"b6697f1e-db6e-11e4-a05a-a5fa3592348c","variableMapping":{"res":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[],"tindex":"b6697f1f-db6e-11e4-a05a-179418eb155f","variableMapping":{"item":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:260","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[7,16,363,394],"tindex":"b6697f20-db6e-11e4-a05a-69d35f6020b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[357,371],"tindex":"b6697f21-db6e-11e4-a05a-7d144b830515","variableMapping":{"ghLocation":"highway","osmFile":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"b6697f22-db6e-11e4-a05a-f9fe5f03629a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[3,42,48,49,51,52,413,426,427,428,17,429,430,378,379,431,432,433,390,434,435,436,437,438,439,440,441,65,66,67,68,73,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,442,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,443,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,183,190,204,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,444,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,445,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355],"tindex":"b669a633-db6e-11e4-a05a-bd6a7dd598cc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:252","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-1},{"failures":[],"tindex":"b669a634-db6e-11e4-a05a-2d37bba2e697","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:454","type":"CtLocalVariableImpl","sourcecode":"java.lang.Exception java.lang.Exception"},"status":0},{"failures":[56,57,394,66,83,93,308],"tindex":"b669a635-db6e-11e4-a05a-bb937f926242","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:55","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Reverse Speed\" , int , int , double , com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\") , 30)"},"status":-1},{"failures":[],"tindex":"b669a636-db6e-11e4-a05a-3d7e8f11625c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[102,104,108,115,119,306],"tindex":"b669a637-db6e-11e4-a05a-3b6f820a731f","variableMapping":{"len":"scDirMask","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[0,3,7,16,428,431],"tindex":"b669a638-db6e-11e4-a05a-950840947321","variableMapping":{"bytePointer":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"b669a639-db6e-11e4-a05a-29d89e40eb90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:428","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[],"tindex":"b669a63a-db6e-11e4-a05a-bfa5f978e175","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[54,390,391,393,400],"tindex":"b669a63b-db6e-11e4-a05a-7d06c80dae87","variableMapping":{"factor":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[],"tindex":"b669a63c-db6e-11e4-a05a-8fe2a2c359ff","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[394],"tindex":"b669a63d-db6e-11e4-a05a-bdb51459b7b4","variableMapping":{"midLat":"speed","spatialKey":"backwardBit","midLon":"speed","bits":"encoded","lon":"speed","lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[358,360,361,365,366,367,377,369,372,374,375],"tindex":"b669a63e-db6e-11e4-a05a-fdb08ab38215","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[414,418,422],"tindex":"b669a63f-db6e-11e4-a05a-81ef9a1c4d9b","variableMapping":{"tmpNo":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"b669a640-db6e-11e4-a05a-1103326d779f","variableMapping":{"high":"directionBitMask","guess":"directionBitMask","low":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":0},{"failures":[9,13,413,18,19,20,21,22],"tindex":"b669a641-db6e-11e4-a05a-232ba145bc9a","variableMapping":{"sacScale":"res"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"b669a642-db6e-11e4-a05a-05ea22648619","variableMapping":{"flags":"directionBitMask","value":"blockByDefault","forwardBit":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":0},{"failures":[],"tindex":"b669a643-db6e-11e4-a05a-d77dda989ca0","variableMapping":{"bitset":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:228","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSetImpl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[],"tindex":"b669cd54-db6e-11e4-a05a-811d0326e0f6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:140","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"unsupported shape\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-2},{"failures":[0,4,89,92,93,100,102,104,106],"tindex":"b669cd55-db6e-11e4-a05a-f5589c6260ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"b669cd56-db6e-11e4-a05a-491b3c5dab3a","variableMapping":{"bytePos":"bytePos","segmentSizePower":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:310","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"b669cd57-db6e-11e4-a05a-25305c841e62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"b669cd58-db6e-11e4-a05a-eb0abd980421","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[121,176,214,262,446,313],"tindex":"b669cd59-db6e-11e4-a05a-bd8226eab7d9","variableMapping":{"edgeId":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[0,84,96,106,107,109,110,115,116,117,120,164,306,317,319,320,327,342,348,350,354],"tindex":"b669cd5a-db6e-11e4-a05a-5d4455853f94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:96","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setBaseNode(int)"},"status":-1},{"failures":[],"tindex":"b669cd5b-db6e-11e4-a05a-d3cd43c070c4","variableMapping":{"byteCount":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":0},{"failures":[],"tindex":"b669cd5c-db6e-11e4-a05a-139ec1be6c0a","variableMapping":{"shift":"shift","preferWayEncoder":"wayTypeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"b669cd5d-db6e-11e4-a05a-f597514a3ea1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[19],"tindex":"b669cd5e-db6e-11e4-a05a-67d913830d3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":344,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":101,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":311,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":356,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":223,"com.graphhopper.reader.OSMReaderTest.testFerry":6,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":48,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":373,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":170,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":29,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":277,"com.graphhopper.coll.CompressedArrayTest.testCompress":385,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":111,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":243,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":117,"com.graphhopper.GraphHopperTest.testPrepare":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":107,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":144,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":423,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":93,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":191,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":369,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":36,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":167,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":63,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":422,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":91,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":208,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":302,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":260,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":120,"com.graphhopper.GraphHopperTest.testLoadOSM":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":215,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":209,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":440,"com.graphhopper.reader.OSMReaderTest.testSort":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":383,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":264,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":156,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":122,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":256,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":76,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":298,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":343,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":133,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":261,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":272,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":267,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":368,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":174,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":97,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":165,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":87,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":320,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":287,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":335,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":314,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":337,"com.graphhopper.coll.CompressedArrayTest.testCompress2":384,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":146,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":418,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":278,"com.graphhopper.GraphHopperAPITest.testLoad":33,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":445,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":19,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":138,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":128,"com.graphhopper.storage.LevelGraphStorageTest.testClone":322,"com.graphhopper.reader.OSMReaderTest.testBarriers":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":268,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":164,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":391,"com.graphhopper.util.GHUtilityTest.testCopy":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":227,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":183,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":188,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":410,"com.graphhopper.routing.PathTest.testFindInstruction":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":399,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":269,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":42,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":396,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":351,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":185,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":415,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":157,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":142,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":296,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":282,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":313,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":324,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":228,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":406,"com.graphhopper.util.InstructionListTest.testWayList2":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":251,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":216,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":162,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":273,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":372,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":301,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":371,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":437,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":56,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":123,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":279,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":89,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":127,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":276,"com.graphhopper.routing.PathBidirRefTest.testExtract":81,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":407,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":339,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":249,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":398,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":22,"com.graphhopper.util.GHUtilityTest.testSort2":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":98,"com.graphhopper.reader.OSMReaderTest.testMain":8,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":315,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":286,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":401,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":411,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":342,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":265,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":329,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":333,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":354,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":403,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":73,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":330,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":414,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":336,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":55,"com.graphhopper.storage.GraphHopperStorageTest.testClone":130,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":252,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":431,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":140,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":378,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":306,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":229,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":309,"com.graphhopper.routing.PathTest.testTime":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":420,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":352,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":323,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":435,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":242,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":341,"com.graphhopper.reader.OSMReaderTest.testRelation":389,"com.graphhopper.util.GHUtilityTest.testSortDirected":47,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":380,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":72,"com.graphhopper.GraphHopperTest.testFootOnly":4,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":193,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":173,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":86,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":404,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":238,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":69,"com.graphhopper.routing.QueryGraphTest.testOneWay":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":219,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":387,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":207,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":23,"com.graphhopper.reader.OSMReaderTest.testWithBounds":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":408,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":60,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":244,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":363,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":319,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":370,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":290,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":204,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":430,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":283,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":126,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":84,"com.graphhopper.util.InstructionListTest.testWayList":39,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":159,"com.graphhopper.GraphHopperAPITest.testDisconnected179":34,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":230,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":416,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":258,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":2,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":132,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":194,"com.graphhopper.routing.util.EncodedValueTest.testSwap":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":118,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":150,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":116,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":350,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":432,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":266,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":105,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":181,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":376,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":121,"com.graphhopper.routing.PathTest.testWayList":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":257,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":397,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":106,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":289,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":143,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":274,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":175,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":334,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":176,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":365,"com.graphhopper.util.GHUtilityTest.testSort":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":247,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":425,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":444,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":168,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":187,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":197,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":200,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":446,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":359,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":75,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":57,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":198,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":262,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":20,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":438,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":284,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":59,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":332,"com.graphhopper.routing.PathTest.testFound":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":248,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":5,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":394,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":349,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":412,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":308,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":424,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":280,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":233,"com.graphhopper.util.InstructionListTest.testEmptyList":37,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":92,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":96,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":434,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":426,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":382,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":413,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":99,"com.graphhopper.reader.PrinctonReaderTest.testRead":51,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":158,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":171,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":232,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":222,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":285,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":393,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":419,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":357,"com.graphhopper.reader.OSMReaderTest.testFoot":7,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":213,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":353,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":388,"com.graphhopper.reader.OSMReaderTest.testOneWay":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":214,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":139,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":154,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":297,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":421,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":148,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":112,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":405,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":379,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":110,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":201,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":58,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":236,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":71,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":124,"com.graphhopper.routing.PathBidirRefTest.testExtract2":82,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":83,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":367,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":152,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":202,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":259,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":395,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":210,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":155,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":325,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":433,"com.graphhopper.GraphHopperTest.testFootAndCar":3,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":147,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":331,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":226,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":439,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":271,"com.graphhopper.GraphHopperTest.testPrepareOnly":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":102,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":224,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":13,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":310,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":41,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":151,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":441,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":239,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":436,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":348,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":346,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":263}}]
