[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"8eddac83-da6d-11e4-b22a-670eefd6cfa8","variableMapping":{"fwdFaster":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"8ede96e4-da6d-11e4-b22a-23305522c996","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19],"tindex":"8ede96e5-da6d-11e4-b22a-5384e670b044","variableMapping":{"size":"pavementType","capacity":"pavementType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"8ede96e6-da6d-11e4-b22a-8d8735e1e500","variableMapping":{"red":"y1","green":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-2},{"failures":[],"tindex":"8ede96e7-da6d-11e4-b22a-43e830d9f361","variableMapping":{"lastKey":"scDirMask","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:85","type":"CtLocalVariableImpl","sourcecode":"long long = long - (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[20,21],"tindex":"8ede96e8-da6d-11e4-b22a-4fd52c7132a2","variableMapping":{"systemProperty":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"8ede96e9-da6d-11e4-b22a-c9eedefd729a","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"maxTurnCosts","flags":"flags","roundaboutBit":"flags","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"maxTurnCosts","forwardBit":"turnRestrictionBit","key":"maxTurnCosts","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"maxTurnCosts","backwardBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[],"tindex":"8ede96ea-da6d-11e4-b22a-0f4570843bc8","variableMapping":{"lockFile":"osmValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:159","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-2},{"failures":[22],"tindex":"8ede96eb-da6d-11e4-b22a-0f304b19b747","variableMapping":{"flags":"flags","this":"this","speed":"otherValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"8ede96ec-da6d-11e4-b22a-13af7282ed64","variableMapping":{"minResolutionInMeter":"sLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"8edf5a3d-da6d-11e4-b22a-8fc66eaa5507","variableMapping":{"size":"i","hash":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[26,77,78,22,79,80,81,82,32,33,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"8edf814e-da6d-11e4-b22a-c5f265079d87","variableMapping":{"high":"flags","highKey":"flags","key":"dir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,116],"tindex":"8edf814f-da6d-11e4-b22a-43876c66169b","variableMapping":{"bytePos":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"8edf8150-da6d-11e4-b22a-770b03bbfdf2","variableMapping":{"lazyUpdates":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":0},{"failures":[],"tindex":"8edf8151-da6d-11e4-b22a-49a8eeb6bf15","variableMapping":{"neighborUpdates":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":0},{"failures":[],"tindex":"8edf8152-da6d-11e4-b22a-1ded80efec7e","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[117,118,119,86,120,121,122,123,124,125,102,126,127,128,129,130,131,132,133,110,134,135,136,137,138,139],"tindex":"8edf8153-da6d-11e4-b22a-13ce19f20918","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"8edf8154-da6d-11e4-b22a-c508feb19af4","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"8edf8155-da6d-11e4-b22a-1559ec8416f4","variableMapping":{"configLocation":"motorcarTag","fileStr":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:64","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":0},{"failures":[],"tindex":"8edf8156-da6d-11e4-b22a-1d36650ccc0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:66","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop()"},"status":-2},{"failures":[],"tindex":"8edfa867-da6d-11e4-b22a-0bf7eb41cc27","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"maxSpeed","speed":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":0},{"failures":[],"tindex":"8edfa868-da6d-11e4-b22a-751e31d2088c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[140],"tindex":"8edfa869-da6d-11e4-b22a-51da28bf4938","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[141],"tindex":"8edfa86a-da6d-11e4-b22a-8fd605819106","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[65,66,67,68,142,69,70,71,72,73,74,76],"tindex":"8edfa86b-da6d-11e4-b22a-ab48e2e6df7a","variableMapping":{"workerThreads":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[],"tindex":"8edfa86c-da6d-11e4-b22a-efd1c6095111","variableMapping":{"counts":"maxTurnCosts","counter":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[9,10,11,12,14,15,16,17,18,19],"tindex":"8edfa86d-da6d-11e4-b22a-7321bfc91394","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[],"tindex":"8edfa86e-da6d-11e4-b22a-e7019bad21fc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-2},{"failures":[],"tindex":"8edfa86f-da6d-11e4-b22a-53b3b6283d32","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[0,1,2,3,5,7,8,143,39,42,144,46,47,54,145,58,59],"tindex":"8edfa870-da6d-11e4-b22a-052968c68a62","variableMapping":{"distance":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"8ee043b1-da6d-11e4-b22a-29d58644465a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"8ee043b2-da6d-11e4-b22a-39d5e5b56b9d","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":0},{"failures":[],"tindex":"8ee043b3-da6d-11e4-b22a-138bb8888dbd","variableMapping":{"edgeId":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[],"tindex":"8ee043b4-da6d-11e4-b22a-4fedd6931ea6","variableMapping":{"importance":"start","hash":"prevConnectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[23,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],"tindex":"8ee043b5-da6d-11e4-b22a-6bd5bacb23ac","variableMapping":{"lat":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[162,163,164],"tindex":"8ee043b6-da6d-11e4-b22a-a7c6fa532f20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[165,166,23,24,25,26,27,167,28,168,169,162,77,30,31,170,171,172,173,174,175,176,177,147,117,178,179,180,181],"tindex":"8ee06ac7-da6d-11e4-b22a-0d19ac37c08d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[23,24,25,26,27,28,169,77,30,31,170,172,173,174,175,176,177,147,182,117,183,164],"tindex":"8ee06ac8-da6d-11e4-b22a-4f5feced0fb0","variableMapping":{"highwayValue":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"8ee06ac9-da6d-11e4-b22a-3901402d0762","variableMapping":{"str":"wayTypeName","key":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[173,184,185,186,187],"tindex":"8ee06aca-da6d-11e4-b22a-3d701a841896","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-1},{"failures":[],"tindex":"8ee06acb-da6d-11e4-b22a-777e4ff5b2a2","variableMapping":{"file":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:234","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || ((java.io.File.length()) == 0))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[188],"tindex":"8ee06acc-da6d-11e4-b22a-9dc215bb950f","variableMapping":{"key":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:76","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-1},{"failures":[],"tindex":"8ee06acd-da6d-11e4-b22a-5ba3252a99ce","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"8ee06ace-da6d-11e4-b22a-41a1d6c4452f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[189],"tindex":"8ee06acf-da6d-11e4-b22a-1be5df9e555b","variableMapping":{"cp":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"8ee06ad0-da6d-11e4-b22a-5555f8a8a555","variableMapping":{"delNodes":"i","this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1144","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.inPlaceNodeRemove(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-2},{"failures":[190,151,10,191,192,13,193,194,15,195,196,158,18,197],"tindex":"8ee06ad1-da6d-11e4-b22a-2f2b11bf00af","variableMapping":{"numTiles":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[173],"tindex":"8ee06ad2-da6d-11e4-b22a-6f0117c7406b","variableMapping":{"flags":"directionBitMask","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[117,118],"tindex":"8ee06ad3-da6d-11e4-b22a-1f28315fc490","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"maxCount","sign":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,116],"tindex":"8ee091e4-da6d-11e4-b22a-597090d7259a","variableMapping":{"resultOrientation":"midLon","orientation":"midLon","java.lang.Math.PI":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"8ee091e5-da6d-11e4-b22a-213adeb8178b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"8ee091e6-da6d-11e4-b22a-e5b378ab5056","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"8ee091e7-da6d-11e4-b22a-7b926a2b8794","variableMapping":{"shift":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:213","type":"CtLocalVariableImpl","sourcecode":"long long = (1L << int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"8ee091e8-da6d-11e4-b22a-27bad46914c9","variableMapping":{"nanoTime":"defaultL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[198,199,200,201,202,203,118,119],"tindex":"8ee091e9-da6d-11e4-b22a-cb03af168f3d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"8ee091ea-da6d-11e4-b22a-c1bc5c1a671c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"8ee1a35b-da6d-11e4-b22a-67db40069bf2","variableMapping":{"degree":"tmpPrevEdge","contractedNeighbors":"edgeEntryBytes","iter":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:550","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    int++;\n    if (com.graphhopper.util.EdgeSkipIterator.isShortcut())\n        int++;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-2},{"failures":[],"tindex":"8ee1a35c-da6d-11e4-b22a-f3ddeff5c613","variableMapping":{"pointIndex":"start","index":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":0},{"failures":[],"tindex":"8ee1a35d-da6d-11e4-b22a-110b1dfd8b45","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[29,204,202,205,206,77,117,207,208,209,210,211,22,79,80,81,82,32,33,83,212,70,213,74,214,75,215,84,216,85,86,87,88,89,90,217,91,218,92,93,94,95,96,97,219,98,99,100,220,101,102,103,104,105,106,221,107,108,222,109,110,111,112,113,114,223,115],"tindex":"8ee1a35e-da6d-11e4-b22a-d9a483d39712","variableMapping":{"high":"flags","guess":"flags","low":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"8ee1ca6f-da6d-11e4-b22a-9195d652e0b9","variableMapping":{"currentEntry":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[],"tindex":"8ee1ca70-da6d-11e4-b22a-f9ced6adeb1e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"8ee1ca71-da6d-11e4-b22a-5f258e86c49d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-2},{"failures":[],"tindex":"8ee1f182-da6d-11e4-b22a-ffc983f21aa3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[],"tindex":"8ee1f183-da6d-11e4-b22a-39cb5deabe3b","variableMapping":{"high":"flags","low":"flags","guess":"flags","guessedKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[224,225,226],"tindex":"8ee1f184-da6d-11e4-b22a-3bc2cad7b30c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"8ee1f185-da6d-11e4-b22a-4f454c1f8dc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[0,1,2,3,4,5,7,8,227,143,116,39,42,144,46,47,54,145,58,59],"tindex":"8ee1f186-da6d-11e4-b22a-a7a73498c7ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"8ee1f187-da6d-11e4-b22a-4ffafdb10ab6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[0,1,2,3,5,7,8,227,143,116,39,42,144,46,47,54,145,58,59],"tindex":"8ee1f188-da6d-11e4-b22a-0757875aca94","variableMapping":{"orientation":"lon","resultOrientation":"minLatTmp","baseOrientation":"minLonTmp","java.lang.Math.PI":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[173,184,185,186,187],"tindex":"8ee1f189-da6d-11e4-b22a-7fa15324bbec","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"maxTurnCosts","nodeType":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"8ee1f18a-da6d-11e4-b22a-3f2e08fe4c91","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"8ee1f18b-da6d-11e4-b22a-571a39e1ea3d","variableMapping":{"orientation":"baseOrientation","java.lang.Math.PI":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:97","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[26,20,9,10,11,228,229,230,231,232,21,17,18,19,233,234,53,235,236,237,238,239,240],"tindex":"8ee1f18c-da6d-11e4-b22a-0f0047c365fe","variableMapping":{"high":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[11,14,194,15,16,19],"tindex":"8ee1f18d-da6d-11e4-b22a-a3b0db07bd3d","variableMapping":{"fullyLoaded":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:658","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[190,229,192,196],"tindex":"8ee1f18e-da6d-11e4-b22a-dbc6d738ddb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[26,168,77],"tindex":"8ee2189f-da6d-11e4-b22a-99a58e50fb1f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"8ee218a0-da6d-11e4-b22a-999a12fcab77","variableMapping":{"entry":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[162,163,164],"tindex":"8ee218a1-da6d-11e4-b22a-03e3f4dcd24c","variableMapping":{"high":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[165,166,23,24,25,26,27,167,28,168,169,146,162,77,30,31,170,171,172,173,174,175,176,177,147,182,117,148,241,183,163,149,150,164,242,20,9,151,10,243,11,244,228,245,246,229,247,248,141,249,12,13,14,250,231,194,15,16,251,232,21,17,158,18,252,19,253,233,161],"tindex":"8ee218a2-da6d-11e4-b22a-3b9fc1f858af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"8ee218a3-da6d-11e4-b22a-0178cce085a1","variableMapping":{"size":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"8ee218a4-da6d-11e4-b22a-0fa74a164658","variableMapping":{"size":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"8ee218a5-da6d-11e4-b22a-f509cca6513d","variableMapping":{"high":"weightLong","low":"weightLong","guess":"weightLong","guessedKey":"weightLong","key":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"8ee23fb6-da6d-11e4-b22a-c39071ea62b1","variableMapping":{"red":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[254,255,22,256],"tindex":"8ee23fb7-da6d-11e4-b22a-850ab24f96e9","variableMapping":{"radiusInMeter":"speed","lon":"speed","lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-1},{"failures":[],"tindex":"8ee23fb8-da6d-11e4-b22a-3f4741f676f2","variableMapping":{"length":"length","factor":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[165,166,23,24,25,26,27,167,28,168,169,29,257,198,199,258,259,260,261,146,204,262,200,263,201,264,202,203,265,205,206,162,77,30,31,170,171,172,173,174,175,176,177,147,117,266,267,268,207,269,118,119,208,209,270,271,272,273,274,274,275,275,276,276,277,277,210,210,278,278,279,279,211,211,280,280,281,281,282,282,283,283,284,285,22,79,286,287,288,80,289,290,81,291,256,82,292,32,33,293,294,34,295,296,297,298,299,83,212,300,70,213,71,72,73,301,74,214,75,302,76,215,303,84,304,305,306,216,85,86,307,308,309,310,311,234,87,120,88,121,122,312,313,314,315,316,123,317,318,319,320,89,321,322,124,125,90,323,324,217,325,326,327,91,328,41,329,330,42,331,332,43,333,44,144,45,46,47,48,49,50,51,334,52,53,335,336,337,338,339,235,340,341,342,343,344,345,346,347,348,349,350,236,54,351,352,55,56,353,145,57,58,59,60,61,62,63,354,64,237,95,355,99,356,100,357,358,359,220,101,102,360,361,362,363,364,239,103,126,104,127,128,365,366,367,368,369,129,370,371,372,373,105,374,375,130,131,106,376,377,221,378,379,380,107,381,382,383,384,385,386,387,388,389,390,132,391,392,393,394,395,396,397,398,399,133,400,108,401,402,403,222,109,110,404,405,406,407,408,240,111,134,112,135,136,409,410,411,412,413,137,414,415,416,417,113,418,419,138,139,114,420,421,223,422,423,424,115,425],"tindex":"8ee23fb9-da6d-11e4-b22a-cf6c25c2cb27","variableMapping":{"i":"segmentSizeIntsPower","child":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[173,184,185,186,187],"tindex":"8ee23fba-da6d-11e4-b22a-ffe90f537a85","variableMapping":{"frontIndex":"maxTurnCosts","endIndexPlusOne":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"8ee23fbb-da6d-11e4-b22a-898f2bb9376a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"8ee23fbc-da6d-11e4-b22a-392907e873b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-2},{"failures":[165,26,168,77,173,426,184,20,9,151,10,185,427,11,228,245,186,246,229,247,248,12,13,428,14,231,194,15,429,16,232,21,17,158,18,187,430,19,233,431],"tindex":"8ee266cd-da6d-11e4-b22a-f321288a370e","variableMapping":{"nanoTime":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[],"tindex":"8ee266ce-da6d-11e4-b22a-272916cffc8f","variableMapping":{"i":"y2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[207,208,209],"tindex":"8ee266cf-da6d-11e4-b22a-7500bd3e54fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[165,166,23,24,25,27,167,28,168,269,118,119],"tindex":"8ee266d0-da6d-11e4-b22a-718e3b5ded75","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-1},{"failures":[68,69],"tindex":"8ee266d1-da6d-11e4-b22a-bfec40457fad","variableMapping":{"initLeafSize":"i","maxLeafEntries":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-2},{"failures":[],"tindex":"8ee266d2-da6d-11e4-b22a-b90ac45f46db","variableMapping":{"str":"highway","lat":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:194","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    java.lang.String += \"N\";\nelse\n    java.lang.String += \"S\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"8ee266d3-da6d-11e4-b22a-9f7c245dd5dc","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-2},{"failures":[],"tindex":"8ee266d4-da6d-11e4-b22a-5f295f7ea1b7","variableMapping":{"len":"shift","start":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"8ee266d5-da6d-11e4-b22a-d3de560d875a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:394","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[26,168,77,229,247,248],"tindex":"8ee266d6-da6d-11e4-b22a-e7c209f6b7ae","variableMapping":{"directionBitMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":419,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":295,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":161,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":399,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":92,"com.graphhopper.reader.OSMReaderTest.testFerry":162,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":202,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":158,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":35,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":195,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":43,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":166,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":126,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":156,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":327,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":71,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":133,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":88,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":330,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":75,"com.graphhopper.GraphHopperTest.testPrepare":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":212,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":316,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":256,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":259,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":340,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":199,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":403,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":208,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":196,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":81,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":55,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":380,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":99,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":227,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":222,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":215,"com.graphhopper.GraphHopperTest.testLoadOSM":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":60,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":388,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":56,"com.graphhopper.reader.OSMReaderTest.testSort":31,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":160,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":118,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":357,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":323,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":84,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":7,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":211,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":377,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":418,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":387,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":311,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":395,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":220,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":45,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":329,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":80,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":288,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":370,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":412,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":188,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":108,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":137,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":317,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":192,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":104,"com.graphhopper.GraphHopperAPITest.testLoad":29,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":386,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":121,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":86,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":140,"com.graphhopper.storage.LevelGraphStorageTest.testClone":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":101,"com.graphhopper.reader.OSMReaderTest.testBarriers":170,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":209,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":185,"com.graphhopper.util.GHUtilityTest.testCopy":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":290,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":53,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":36,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":251,"com.graphhopper.routing.PathTest.testFindInstruction":273,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":429,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":416,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":102,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":204,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":248,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":422,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":336,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":324,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":106,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":366,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":400,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":407,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":306,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":393,"com.graphhopper.util.InstructionListTest.testWayList2":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":61,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":91,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":379,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":266,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":304,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":240,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":127,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":341,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":289,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":103,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":141,"com.graphhopper.routing.PathBidirRefTest.testExtract":284,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":415,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":381,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":194,"com.graphhopper.util.GHUtilityTest.testSort2":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":293,"com.graphhopper.reader.OSMReaderTest.testMain":30,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":401,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":129,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":430,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":143,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":253,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":358,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":112,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":410,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":115,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":431,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":135,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":105,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":190,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":385,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":413,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":147,"com.graphhopper.storage.GraphHopperStorageTest.testClone":308,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":328,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":164,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":149,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":312,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":394,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":250,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":397,"com.graphhopper.routing.PathTest.testTime":271,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":423,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":406,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":63,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":417,"com.graphhopper.reader.OSMReaderTest.testRelation":426,"com.graphhopper.util.GHUtilityTest.testSortDirected":264,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":153,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":180,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":277,"com.graphhopper.GraphHopperTest.testFootOnly":168,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":163,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":144,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":287,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":64,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":274,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":390,"com.graphhopper.routing.QueryGraphTest.testOneWay":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":354,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":352,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":2,"com.graphhopper.reader.OSMReaderTest.testWithBounds":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":244,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":269,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":378,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":78,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":245,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":402,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":152,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":232,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":373,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":367,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":216,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":79,"com.graphhopper.util.InstructionListTest.testWayList":260,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":325,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":252,"com.graphhopper.GraphHopperAPITest.testDisconnected179":257,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":238,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":54,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":181,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":206,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":119,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":159,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":25,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":310,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":302,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":226,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":214,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":223,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":224,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":359,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":414,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":334,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":384,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":389,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":233,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":303,"com.graphhopper.routing.PathTest.testWayList":272,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":428,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":83,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":372,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":315,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":364,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":46,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":411,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":47,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":48,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":12,"com.graphhopper.util.GHUtilityTest.testSort":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":57,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":107,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":307,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":331,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":338,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":345,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":348,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":151,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":267,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":346,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":356,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":368,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":207,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":392,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":409,"com.graphhopper.routing.PathTest.testFound":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":355,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":169,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":229,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":421,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":189,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":396,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":128,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":66,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":95,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":87,"com.graphhopper.util.InstructionListTest.testEmptyList":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":291,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":154,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":157,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":294,"com.graphhopper.reader.PrinctonReaderTest.testRead":205,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":217,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":333,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":239,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":218,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":369,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":186,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":20,"com.graphhopper.reader.OSMReaderTest.testFoot":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":96,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":283,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":58,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":424,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":59,"com.graphhopper.reader.OSMReaderTest.testOneWay":117,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":122,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":125,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":376,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":243,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":72,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":150,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":213,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":349,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":268,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":332,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":276,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":182,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":305,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":132,"com.graphhopper.routing.PathBidirRefTest.testExtract2":285,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":22,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":62,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":235,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":193,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":173,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":247,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":350,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":353,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":90,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":408,"com.graphhopper.GraphHopperTest.testFootAndCar":26,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":318,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":136,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":13,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":52,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":361,"com.graphhopper.GraphHopperTest.testPrepareOnly":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":296,"com.graphhopper.GraphHopperTest.testVia":23,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":339,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":93,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":175,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":398,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":146,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":321,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":230,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":174,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":242,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":420,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":139,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":100}}]
