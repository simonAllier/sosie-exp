[{"failures":[],"tindex":"00b8da96-db92-11e4-9ce5-3d4cc51ebfeb","variableMapping":{"factor":"java.lang.Math.PI"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[0],"tindex":"00ba6137-db92-11e4-9ce5-c121cca3ecd3","variableMapping":{"arrayLength":"nextTurnBit","maxGeoRef":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[],"tindex":"00ba6138-db92-11e4-9ce5-d9a2f8b0dcfb","variableMapping":{"that":"graph","index":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:125","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"00ba6139-db92-11e4-9ce5-e5596509d5f6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[1],"tindex":"00ba884a-db92-11e4-9ce5-254daf953fb8","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"00ba884b-db92-11e4-9ce5-9f9bcde6c80c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"00ba884c-db92-11e4-9ce5-ff354a59536a","variableMapping":{"need":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"00ba884d-db92-11e4-9ce5-93bab4c919c5","variableMapping":{"bytesForFlags":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[],"tindex":"00ba884e-db92-11e4-9ce5-81fd304a0de5","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,1,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,9,251,252,253,254,255,256,257,10,11,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,12,274,275,276,277,278,279,280,13,14,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466],"tindex":"00baaf5f-db92-11e4-9ce5-150dfab6967a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[93],"tindex":"00baaf60-db92-11e4-9ce5-3740ada6fc29","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"00baaf61-db92-11e4-9ce5-77f5f8a70fc4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[115,119,120],"tindex":"00baaf62-db92-11e4-9ce5-6dbbd3556f22","variableMapping":{"y1":"start","y2":"node","x1":"start","x2":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-1},{"failures":[314],"tindex":"00baaf63-db92-11e4-9ce5-d142c7efebe1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[467,2,3,468,4,5,469,7,8],"tindex":"00baaf64-db92-11e4-9ce5-a38b41f3a0b9","variableMapping":{"flags":"bits","nodeFlags":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[157],"tindex":"00baaf65-db92-11e4-9ce5-eb67c17ec05d","variableMapping":{"resultOrientation":"fullDist2D","orientation":"fullDist2D","java.lang.Math.PI":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[467,2,3,4,5,470,6,469,7,8,9,256,10,11,471,12,279,13,14],"tindex":"00baaf66-db92-11e4-9ce5-95c5d5e80df6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[200,213,215,472,473],"tindex":"00baaf67-db92-11e4-9ce5-d5c7e7d39bc7","variableMapping":{"importance":"i","hash":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"00baaf68-db92-11e4-9ce5-9351214a7a95","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":0},{"failures":[],"tindex":"00baaf69-db92-11e4-9ce5-e50cd6f55dc8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[73,1,139,162],"tindex":"00baaf6a-db92-11e4-9ce5-91e64029aa3d","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[182,188,190,192,193,195,199,200,204,208,213,215,217,326,328],"tindex":"00bad57b-db92-11e4-9ce5-37c1d1ff4005","variableMapping":{"len":"scDirMask","start":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[],"tindex":"00bad57c-db92-11e4-9ce5-8fcf3c76a5cb","variableMapping":{"dijkstra":"this","finishedFrom":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:280","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.routing.DijkstraBidirectionRef.boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[9,11,474,475,476,477,12,14],"tindex":"00bad57d-db92-11e4-9ce5-23f3631afe9a","variableMapping":{"segmentSizeInBytes":"err","length":"err","index":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-1},{"failures":[],"tindex":"00bad57e-db92-11e4-9ce5-cb03e58a67f8","variableMapping":{"maxValue":"bitsForEdgeFlags","name":"this","bits":"bitsForEdgeFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:61","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((java.lang.String + \" -> maxValue \") + int) + \" is too large for \") + int) + \" bits\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[105],"tindex":"00bad57f-db92-11e4-9ce5-6369551efba0","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"00bad580-db92-11e4-9ce5-c11ac6545470","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"mSize","edge":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[],"tindex":"00bad581-db92-11e4-9ce5-050564b3238e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"00bad582-db92-11e4-9ce5-49f60d09ace3","variableMapping":{"bytePos":"nodeEntryBytes","inner":"nodes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getHeader(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[],"tindex":"00bad583-db92-11e4-9ce5-d7f11b48e182","variableMapping":{"logMessagesPercentage":"shortTripsSpeed","logMessages":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[84,133,153,176],"tindex":"00bad584-db92-11e4-9ce5-81e8a58198d3","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"00bad585-db92-11e4-9ce5-0f036ba006ff","variableMapping":{"usedBits":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","nodeBitMask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"00bad586-db92-11e4-9ce5-bb76a8d7a024","variableMapping":{"periodicUpdates":"locs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[18,19,20,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,478,44,479,480,481,482,483,484,485,486,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,61,62,63,64,66,67,89,115,116,117,118,119,120,156,157,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,487,488,489,490,491,237,238,239,240,242,243,244,245,246,247,249,250,9,251,252,253,254,255,256,257,10,11,258,259,260,261,263,264,492,265,266,267,268,269,270,271,272,273,12,274,275,276,277,278,279,280,13,14,281,282,283,284,286,287,299,314,326,327,328,329,330,332,333,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,379,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,426,427,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,493],"tindex":"00bafc97-db92-11e4-9ce5-154063375cbd","variableMapping":{"heights":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"00bafc98-db92-11e4-9ce5-7777d3a72474","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:127","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":0},{"failures":[],"tindex":"00bafc99-db92-11e4-9ce5-b14a03be0823","variableMapping":{"high":"defaultL","highKey":"defaultL","key":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[494,495,137,160],"tindex":"00bb23aa-db92-11e4-9ce5-fb5052405e3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[],"tindex":"00bb23ab-db92-11e4-9ce5-29735332b948","variableMapping":{"str":"str","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:82","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":0},{"failures":[],"tindex":"00bb23ac-db92-11e4-9ce5-ef7600401571","variableMapping":{"node":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":0},{"failures":[30,31,32,33,35,36,37,38,42,43,44,495,70,72,73,74,82,85,86,122,1,124,131,134,136,139,140,141,151,154,155,159,162,163,164,174,177,178],"tindex":"00bb23ad-db92-11e4-9ce5-b39714ac8b1f","variableMapping":{"segmentSizeInBytes":"speed","index":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[],"tindex":"00bb23ae-db92-11e4-9ce5-21357d468d4f","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"00bb23af-db92-11e4-9ce5-5d12b2441e42","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"00bb4ac0-db92-11e4-9ce5-cdd0a687d9cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[],"tindex":"00bb4ac1-db92-11e4-9ce5-898fe982ee80","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","java.lang.Double.POSITIVE_INFINITY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[73,74,82,1,131,139,141,151,162,164,174],"tindex":"00bb4ac2-db92-11e4-9ce5-21211bba822d","variableMapping":{"cp":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[37,0],"tindex":"00bb4ac3-db92-11e4-9ce5-d95d6766fb41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:420","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry)"},"status":-1},{"failures":[15,16,17,18,19,21,23,24,25,53,70,115,117,119,120,206,220,221,222,223,224,234,235],"tindex":"00bb4ac4-db92-11e4-9ce5-67a254323334","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-1},{"failures":[],"tindex":"00bb4ac5-db92-11e4-9ce5-c73f915f2782","variableMapping":{"index":"delta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-2},{"failures":[],"tindex":"00bb4ac6-db92-11e4-9ce5-fd5c2bcdc9e4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"00bb4ac7-db92-11e4-9ce5-6937c014637d","variableMapping":{"high":"flags","highKey":"forwardBit","key":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[115,118,290,301,307,315,316,341,352,358,366,367,387,398,404,412,413,431,442,448,456,457],"tindex":"00bb4ac8-db92-11e4-9ce5-d515f73a64ce","variableMapping":{"width":"i","lonSimilar":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[30,43,44,105],"tindex":"00bb4ac9-db92-11e4-9ce5-63c239c1fa67","variableMapping":{"high":"ferryBit","guess":"ferryBit","low":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"00bb4aca-db92-11e4-9ce5-8d47102c4298","variableMapping":{"mGarbage":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[179,189,194,195,217],"tindex":"00bb4acb-db92-11e4-9ce5-95d4769573ec","variableMapping":{"arrayLength":"to","maxGeoRef":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[17,20,31,44,99,105],"tindex":"00bb4acc-db92-11e4-9ce5-0707a3be4e2e","variableMapping":{"lastKey":"backwardBit","key":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"00bb4acd-db92-11e4-9ce5-15848cb900b6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"00bb71de-db92-11e4-9ce5-51ff78db6101","variableMapping":{"edgeId":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-2},{"failures":[],"tindex":"00bb71df-db92-11e4-9ce5-553ceb669189","variableMapping":{"offset":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":0},{"failures":[17,10,13,334,377,380,424],"tindex":"00bb71e0-db92-11e4-9ce5-832081cab976","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-1},{"failures":[],"tindex":"00bb71e1-db92-11e4-9ce5-77c041b10e18","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"maxTurnCosts","nodeType":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"00bb71e2-db92-11e4-9ce5-13e4980cecee","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"00bb71e3-db92-11e4-9ce5-8352f69d9d90","variableMapping":{"shift":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"00bb71e4-db92-11e4-9ce5-8fc09e837ffb","variableMapping":{"edgePointer":"nodeBitMask","edgeEntryBytes":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[72,73],"tindex":"00bb71e5-db92-11e4-9ce5-65bb20e5e34c","variableMapping":{"val":"trackType","existing":"trackType","key":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"00bb71e6-db92-11e4-9ce5-3bed4aa414de","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"i","speed":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":0},{"failures":[496,497],"tindex":"00bb71e7-db92-11e4-9ce5-c55c4de31c80","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-1},{"failures":[75,87,125,144,167],"tindex":"00bc3538-db92-11e4-9ce5-3bb60f909247","variableMapping":{"mGarbage":"blockByDefault"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"00bc3539-db92-11e4-9ce5-bfa65ef6ccd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"00bc5c4a-db92-11e4-9ce5-35b21059321f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:108","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.BikeFlagEncoder.flagsDefault(boolean, boolean)"},"status":-2},{"failures":[17,18,19,20,21,23,24,26,30,31,32,33,34,35,36,37,38,40,41,42,43,478,44,98,99,103,104,105,111,498,224],"tindex":"00bc5c4b-db92-11e4-9ce5-83db7fea5e90","variableMapping":{"initialized":"isRoundabout"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[15,16,17,18,19,20,21,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,482,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,61,62,63,64,66,67,89,115,116,117,118,119,120,156,157,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,9,251,252,253,254,255,256,257,10,11,258,259,260,261,262,263,264,492,265,266,267,268,269,270,271,272,273,12,274,275,276,277,278,279,280,13,14,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466],"tindex":"00bc5c4c-db92-11e4-9ce5-457d400c8083","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"00bc5c4d-db92-11e4-9ce5-d99c9fa5472f","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"lat1","java.lang.Double.POSITIVE_INFINITY":"lat2","weight":"lat2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-2},{"failures":[467,2,499,3,4,5,470,6,469,7,8,9,256,10,11,471,12,279,13,14],"tindex":"00bc5c4e-db92-11e4-9ce5-5be98de0b39a","variableMapping":{"oldValueIndex":"hash","lastKey":"hash","key":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[39,494,495],"tindex":"00bc5c4f-db92-11e4-9ce5-23df5e66c5a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[],"tindex":"00bc5c50-db92-11e4-9ce5-c96289441ecd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"00bc8361-db92-11e4-9ce5-29d8629e0632","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"y","speed":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":0},{"failures":[494,495,72,74,76,78,79,82,83,85,86,123,1,124,126,128,131,132,134,136,137,138,141,145,147,148,151,152,154,155,159,160,161,164,168,170,171,174,175,177,178],"tindex":"00bc8362-db92-11e4-9ce5-c5208d2cac6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:432","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int)"},"status":-1},{"failures":[],"tindex":"00bc8363-db92-11e4-9ce5-6b878311e2e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[115,119,120],"tindex":"00bc8364-db92-11e4-9ce5-6b3caa78d74e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[179,188,189,196,199,200,211,213,215],"tindex":"00bc8365-db92-11e4-9ce5-cfe11e0e68c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"00bc8366-db92-11e4-9ce5-e31dabf6d575","variableMapping":{"freeIndex":"nodes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"00bc8367-db92-11e4-9ce5-a3b96ffdae53","variableMapping":{"ref":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":0},{"failures":[90,94],"tindex":"00bc8368-db92-11e4-9ce5-5bb987bd5438","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[157],"tindex":"00bc8369-db92-11e4-9ce5-d1302a8991d8","variableMapping":{"orientation":"speed","java.lang.Math.PI":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[15,15,16,17,17,18,18,19,19,20,20,21,22,22,23,24,25,25,26,26,27,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,482,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,61,62,63,64,66,67,89,115,116,117,118,119,120,156,157,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,237,238,239,240,242,243,244,245,246,247,249,250,9,251,252,253,254,255,256,257,10,11,258,259,260,261,262,263,264,492,265,266,267,268,270,271,272,273,12,274,275,276,277,278,279,280,13,14,281,282,283,284,285,286,287,299,314,326,327,328,329,330,331,332,333,334,335,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466],"tindex":"00bc836a-db92-11e4-9ce5-9bcd3d5c94c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[494,1],"tindex":"00bc836b-db92-11e4-9ce5-19f9d8f04fe9","variableMapping":{"from":"nextRelBit","hash":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"00bcaa7c-db92-11e4-9ce5-03b1352ea3f7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"00bcaa7d-db92-11e4-9ce5-e5bb0f81b426","variableMapping":{"logMessagesPercentage":"angle","logMessages":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":0},{"failures":[],"tindex":"00bcaa7e-db92-11e4-9ce5-57a136c22b80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"00bcaa7f-db92-11e4-9ce5-ffa787b3ba30","variableMapping":{"distInMeter":"absY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":0},{"failures":[],"tindex":"00bcaa80-db92-11e4-9ce5-9fd7960da3e7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:940","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[17,20,31,44,50,53,91,99,102,105,117,182,188,190,193,195,207,208,217,234,243,250,264,287,289,290,304,312,317,324,340,341,355,363,368,375,386,387,401,409,414,421,430,431,445,453,458,465],"tindex":"00bcaa81-db92-11e4-9ce5-fd74e5e9b61a","variableMapping":{"flags2":"backwardBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"backwardBit","flags1":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"00bcaa82-db92-11e4-9ce5-61803bd932b3","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.PREFER","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"00bcd193-db92-11e4-9ce5-5f3440d923a6","variableMapping":{"latlon":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"00bcd194-db92-11e4-9ce5-0dc5074fbe22","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"00bcd195-db92-11e4-9ce5-211fda3d86a9","variableMapping":{"y":"resultOrientation","angle":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"00bcd196-db92-11e4-9ce5-5184afe85cd3","variableMapping":{"edgePointer":"wayBitMask","edgeEntryBytes":"shift","nextEdge":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:763","type":"CtAssignmentImpl","sourcecode":"this.long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"00bcd197-db92-11e4-9ce5-095b45bcfe92","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.PREFER","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"00bcd198-db92-11e4-9ce5-43de5413ef77","variableMapping":{"intIndex":"high","len":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-2},{"failures":[83,103,104,132,152,175,498],"tindex":"00bcd199-db92-11e4-9ce5-b393118465f9","variableMapping":{"distInMeter":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":365,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":212,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":331,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":498,"com.graphhopper.GraphHopperAPITest.testNoLoad":236,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":289,"com.graphhopper.reader.OSMReaderTest.testFerry":30,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":231,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":232,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":140,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":124,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":276,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":16,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":395,"com.graphhopper.coll.CompressedArrayTest.testCompress":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":130,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":464,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":184,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":309,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":440,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":190,"com.graphhopper.GraphHopperTest.testPrepare":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":321,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":179,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":204,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":221,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":492,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":131,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":219,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":337,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":119,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":202,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":439,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":253,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":420,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":141,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":377,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":470,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":339,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":497,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":193,"com.graphhopper.GraphHopperTest.testLoadOSM":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":254,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":69,"com.graphhopper.reader.OSMReaderTest.testSort":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":152,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":381,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":459,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":424,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":322,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":53,"com.graphhopper.routing.DijkstraTest.initializationError":58,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":416,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":364,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":436,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":327,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":378,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":390,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":162,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":385,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":86,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":83,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":280,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":444,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":208,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":278,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":198,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":341,"com.graphhopper.coll.OSMIDMapTest.testGetLong":490,"com.graphhopper.coll.IntIntBinHeapTest.testSize":496,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":405,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":356,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":334,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":358,"com.graphhopper.coll.CompressedArrayTest.testCompress2":7,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":449,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":72,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":396,"com.graphhopper.GraphHopperAPITest.testLoad":234,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":338,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":87,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":441,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":431,"com.graphhopper.storage.LevelGraphStorageTest.testClone":343,"com.graphhopper.reader.OSMReaderTest.testBarriers":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":386,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":201,"com.graphhopper.util.GHUtilityTest.testCopy":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":293,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":80,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":287,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":133,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":241,"com.graphhopper.routing.PathTest.testFindInstruction":64,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":127,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":93,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":233,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":372,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":161,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":238,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":460,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":445,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":414,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":186,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":400,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":172,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":65,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":294,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":427,"com.graphhopper.util.InstructionListTest.testWayList2":223,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":259,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":465,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":391,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":139,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":113,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":419,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":156,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":425,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":476,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":347,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":397,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":200,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":430,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":35,"com.graphhopper.routing.AStarTest.initializationError":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":214,"com.graphhopper.coll.OSMIDMapTest.testGet":487,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":394,"com.graphhopper.routing.PathBidirRefTest.testExtract":66,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":94,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":145,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":360,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":489,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":282,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":422,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":144,"com.graphhopper.util.GHUtilityTest.testSort2":226,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":209,"com.graphhopper.reader.OSMReaderTest.testMain":32,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":335,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":404,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":6,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":153,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":283,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":98,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":382,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":350,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":354,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":375,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":50,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":351,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":159,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":357,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":43,"com.graphhopper.storage.GraphHopperStorageTest.testClone":433,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":466,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":318,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":105,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":103,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":443,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":326,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":295,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":329,"com.graphhopper.routing.PathTest.testTime":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":79,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":373,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":344,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":110,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":261,"com.graphhopper.reader.OSMReaderTest.testRelation":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":308,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":362,"com.graphhopper.util.GHUtilityTest.testSortDirected":230,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":473,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":175,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":49,"com.graphhopper.GraphHopperTest.testFootOnly":25,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":477,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":101,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":266,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":279,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":495,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":180,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":304,"com.graphhopper.search.NameIndexTest.testCreate":486,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":46,"com.graphhopper.routing.QueryGraphTest.testOneWay":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":262,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":252,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":467,"com.graphhopper.reader.OSMReaderTest.testWithBounds":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":176,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":418,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":310,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":494,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":340,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":336,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":173,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":134,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":408,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":102,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":401,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":429,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":195,"com.graphhopper.util.InstructionListTest.testWayList":222,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":462,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":143,"com.graphhopper.GraphHopperAPITest.testDisconnected179":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":296,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":468,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":410,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":170,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":324,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":19,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":435,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":412,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":191,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":135,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":453,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":452,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":206,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":189,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":106,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":371,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":151,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":216,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":428,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":155,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":423,"com.graphhopper.routing.PathTest.testWayList":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":323,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":300,"com.graphhopper.coll.OSMIDMapTest.testGet2":488,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":217,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":368,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":479,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":407,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":149,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":446,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":392,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":434,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":13,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":355,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":14,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":167,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":472,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":73,"com.graphhopper.util.GHUtilityTest.testSort":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":313,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":469,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":125,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":148,"com.graphhopper.search.NameIndexTest.testPut":484,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":421,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":432,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":240,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":274,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":270,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":163,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":157,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":244,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":379,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":75,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":114,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":480,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":402,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":115,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":353,"com.graphhopper.routing.PathTest.testFound":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":314,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":26,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":70,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":370,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":112,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":328,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":147,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":398,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":485,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":299,"com.graphhopper.util.InstructionListTest.testEmptyList":220,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":438,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":81,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":284,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":207,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":97,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":96,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":132,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":448,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":210,"com.graphhopper.reader.PrinctonReaderTest.testRead":28,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":461,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":277,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":393,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":298,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":491,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":288,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":342,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":403,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":160,"com.graphhopper.reader.OSMReaderTest.testFoot":31,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":312,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":481,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":10,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":374,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":11,"com.graphhopper.reader.OSMReaderTest.testOneWay":44,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":442,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":457,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":415,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":128,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":451,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":306,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":437,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":185,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":471,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":183,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":247,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":474,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":302,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":48,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":426,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":478,"com.graphhopper.routing.PathBidirRefTest.testExtract2":67,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":194,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":82,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":243,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":260,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":483,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":455,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":248,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":85,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":37,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":475,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":325,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":255,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":458,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":229,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":346,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":107,"com.graphhopper.GraphHopperTest.testFootAndCar":20,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":450,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":352,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":74,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":286,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":292,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":389,"com.graphhopper.storage.StorablePropertiesTest.testLoad":493,"com.graphhopper.GraphHopperTest.testPrepareOnly":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":213,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":242,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":290,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":40,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":330,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":224,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":454,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":91,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":38,"com.graphhopper.routing.AStarBidirectionTest.initializationError":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":305,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":111,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":369,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":367,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":380}}]
