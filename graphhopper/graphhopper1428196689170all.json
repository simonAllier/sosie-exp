[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"a0573ee6-db31-11e4-aec7-65aa122c8b9c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[3,10],"tindex":"a05765f7-db31-11e4-aec7-b5c88ad0abda","variableMapping":{"precision":"speed","lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,38,39,40,41,44,45,47,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"a058ec98-db31-11e4-aec7-c3fb59c33053","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[137,138],"tindex":"a058ec99-db31-11e4-aec7-39604411078f","variableMapping":{"size":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"a058ec9a-db31-11e4-aec7-192afc01c8a5","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"a058ec9b-db31-11e4-aec7-abb97b627b8f","variableMapping":{"res":"bits","maxBit":"bits","value":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"a058ec9c-db31-11e4-aec7-5d551379404e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[49,139,140,141,142,143,50,144,145,146,147,148,149,150,151,0,152,153,154,155,156,157,158,1,159,2,160,161,162,163,164,3,165,166,4,5,167,168,169,170,171,172,173,174,6,175,176,177,178,179,180,181,182,7,183,184,185,8,186,187,188,189,190,191,192,193,9,194,195,196,137,197,198,138,199,200,201,202,203,204,205,206,207,10,208,209,11,12,210,211,212,213,214,215,216,217,13,218,219,220,221,14,222,223,15,224,225,16,17,226,227,228,18,229,19,20,230,21,231,22,232,233,234,235,236,237,238,51,52,239,53,54,55,56,57,58,59,60,61,240,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,241,242,243,244,245,246,23,24,25,26,27,28,29,30,31,247,32,33,34,35,36,37,248,249,250,38,39,40,41,42,43,44,45,46,47,48,251,252,253,254,255,89,103,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,104,384,105,106,385,386,387,388,107,389,390,108,391,109,110,111,112,113,114,115,116,117,118,392,393,119,120,394,121,122,395,123,124,125,126,396,397,127,398,128,129,130,131,399,132,133,400,134,401,135,136],"tindex":"a059d6fd-db31-11e4-aec7-5bf833b65a3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[],"tindex":"a059d6fe-db31-11e4-aec7-6db57aac2d35","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-2},{"failures":[155,1,171,6,190,9,214,13,17,19,20,22],"tindex":"a059d6ff-db31-11e4-aec7-d34c2e08e139","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-1},{"failures":[402],"tindex":"a059d700-db31-11e4-aec7-5fdca83f9e5c","variableMapping":{"cp":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"a059d701-db31-11e4-aec7-ef399b828c97","variableMapping":{"offset":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"a059d702-db31-11e4-aec7-15214020259c","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"a059d703-db31-11e4-aec7-519af799beb3","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","speed":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"a059d704-db31-11e4-aec7-9d95d0e597c3","variableMapping":{"empty":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[53,55,57,59,62,73,403],"tindex":"a059d705-db31-11e4-aec7-59da2d78e181","variableMapping":{"latSize":"size","size":"toSize","lonSize":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-1},{"failures":[49,140,141,142,143,201,202,84,404,405,406,241,407,408,242,409,410,411,245,246,23,24,25,26,27,28,29,30,31,32,33,34,35,37,412,413,414,38,40,41,42,44,45,46,47,415,416,417,418,419,420,421,422,423,424,425,426,91,92,93,427,256,259,303,107],"tindex":"a059d706-db31-11e4-aec7-f79ca89589eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[],"tindex":"a059d707-db31-11e4-aec7-bd5a6014911a","variableMapping":{"tmpDegreeCounter":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[0,5,8,12,14,19,23,24,25,27,28,29,31,32,33,34,37,40,41,42,43,47,48],"tindex":"a059d708-db31-11e4-aec7-9f4ca6250620","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"a059d709-db31-11e4-aec7-f347c0ecd408","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-2},{"failures":[],"tindex":"a059fd1a-db31-11e4-aec7-09348759aeb7","variableMapping":{"nanoTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-2},{"failures":[],"tindex":"a059fd1b-db31-11e4-aec7-4f1cd84428cb","variableMapping":{"weightApproximation":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"a059fd1c-db31-11e4-aec7-b7a56e43af64","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"a059fd1d-db31-11e4-aec7-55b8e3dea54a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"a059fd1e-db31-11e4-aec7-0bafe3b03e11","variableMapping":{"edgeId":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":0},{"failures":[428,429],"tindex":"a059fd1f-db31-11e4-aec7-c7897d7009b4","variableMapping":{"min":"i","tmpSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"a059fd20-db31-11e4-aec7-552e0013f14c","variableMapping":{"filter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:112","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl(com.graphhopper.routing.util.EdgeFilter)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[],"tindex":"a059fd21-db31-11e4-aec7-9fb266439329","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"a059fd22-db31-11e4-aec7-0fdc48356735","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:413","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId())"},"status":-2},{"failures":[],"tindex":"a059fd23-db31-11e4-aec7-8527f6591226","variableMapping":{"i":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":0},{"failures":[51,59,60,66,69,70,81,83,85],"tindex":"a059fd24-db31-11e4-aec7-271a720ad3f6","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"a059fd25-db31-11e4-aec7-95425fd5744e","variableMapping":{"id":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[147,148,149,150,151,0,152,153,154,155,156,157,158,1,159,2,160,161,162,163,164,3,165,166,4,5,167,168,169,170,171,172,173,174,6,175,176,179,7,183,184,185,8,186,187,188,189,190,191,192,193,9,194,195,196,137,197,198,138,200,201,202,203,204,205,206,207,10,208,209,11,12,210,211,212,213,214,215,216,217,13,218,219,14,222,223,15,224,225,16,17,226,227,228,18,229,19,20,230,21,231,22,232,233,234,235,236,64,74,244,23,24,25,26,27,28,29,30,31,247,32,33,34,35,37,105],"tindex":"a059fd26-db31-11e4-aec7-39886fd882d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:623","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[],"tindex":"a05a2437-db31-11e4-aec7-f99da468cfcb","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[38,44,45,46,48,430,431,256,259,268,290,303,312,334,432,433,350,372,434,435,386,107,113,436,437,438,439],"tindex":"a05a2438-db31-11e4-aec7-7f4e06b70d8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[51,53,60,63,64,65,66,67,68,70,71,73,74,76,77,78,79,80,81,83,85,86,87,40],"tindex":"a05a9969-db31-11e4-aec7-b5c90c631697","variableMapping":{"factor":"distance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"a05a996a-db31-11e4-aec7-71dfa82d1911","variableMapping":{"str":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:153","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_INT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[1,6,9,13,17,22],"tindex":"a05a996b-db31-11e4-aec7-232d8a18fa15","variableMapping":{"sacScale":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"a05a996c-db31-11e4-aec7-a5ec7904f0ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":0},{"failures":[49,140,141,142,50,177,178,180,181,202,223,224,229,230,22,235,51,52,53,54,55,56,57,59,60,61,62,63,64,66,67,70,74,76,79,81,83,84,85,87,241,242,244,245,24,25,30,37,40,41,42,46,251,256,259,265,266,269,275,280,282,288,290,293,295,296,300,303,309,310,313,319,324,326,332,334,337,339,340,344,347,348,351,357,362,364,370,372,375,377,378,382,104,385,107,110,111,114,393,122,123,127,128,131,132,133,135],"tindex":"a05a996d-db31-11e4-aec7-d54b8865eff4","variableMapping":{"lastKey":"backwardBit","key":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[49,52,53,54,55,56,57,59,61,62,63,70,74,83,85,87,88,440,384,106,387],"tindex":"a05ac07e-db31-11e4-aec7-c718412c68c8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-1},{"failures":[],"tindex":"a05ac07f-db31-11e4-aec7-59cf6d9601cb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-2},{"failures":[],"tindex":"a05ac080-db31-11e4-aec7-393a2dd92718","variableMapping":{"shift":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-2},{"failures":[],"tindex":"a05ac081-db31-11e4-aec7-e349ec07f8e8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[441,442,49,443,444,445,446,139,140,141,142,143,50,144,145,177,178,179,180,181,182,201,202,223,237,238,51,52,53,54,55,56,57,58,59,60,61,240,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,404,404,405,405,447,447,406,406,241,241,407,407,408,408,242,242,409,409,448,448,410,410,411,411,243,244,245,246,23,24,25,26,27,28,29,30,31,247,32,33,34,35,36,37,248,249,250,412,413,414,38,39,40,41,42,43,44,449,45,46,47,48,450,251,252,415,416,417,418,419,420,421,422,423,451,452,453,454,455,253,456,457,458,459,460,461,462,463,464,465,466,467,254,468,469,424,425,426,470,471,472,473,474,475,476,477,478,479,255,88,89,440,90,480,91,92,93,94,481,95,96,97,98,99,100,101,102,103,482,483,484,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,485,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,486,487,488,357,372,104,384,105,106,385,386,387,388,107,389,390,108,391,109,110,111,112,113,114,115,116,117,118,392,393,119,120,394,121,122,395,123,124,125,126,396,397,127,398,128,129,130,131,399,132,133,400,134,401,135,136],"tindex":"a05d3182-db31-11e4-aec7-d70767c48701","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[150,157,164,173,184,185,192,207,216],"tindex":"a05d3183-db31-11e4-aec7-ab8056b1b155","variableMapping":{"cp":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"a05d5894-db31-11e4-aec7-792517164374","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"a05d5895-db31-11e4-aec7-ff45573ff0c2","variableMapping":{"turnRelation":"turnRelation","this":"osmReader"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdFrom());\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdTo());\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[],"tindex":"a05d5896-db31-11e4-aec7-cf3d28d03f3e","variableMapping":{"precision":"fwdSlower","lat":"fwdSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[489],"tindex":"a05d5897-db31-11e4-aec7-97b8860491bb","variableMapping":{"cp":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"a05d5898-db31-11e4-aec7-8f2a1e6985d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"a05d5899-db31-11e4-aec7-6f903baf79df","variableMapping":{"weightApproximation":"java.lang.Math.PI"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"a05d589a-db31-11e4-aec7-17a5a275afbc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[179,24,25,26,27,28,29,30,31,32,33,34,37,38,40,41,42,43,44,45,46,47,48],"tindex":"a05d589b-db31-11e4-aec7-11ea24069772","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"a05d589c-db31-11e4-aec7-fb375ad43c82","variableMapping":{"neighborUpdates":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":0},{"failures":[],"tindex":"a05d589d-db31-11e4-aec7-1fd70c1b8d98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"a05d589e-db31-11e4-aec7-8fc7c601ff3c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"a05d589f-db31-11e4-aec7-b127cd2ded31","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[23,24,29,35,37,38,43,47,48],"tindex":"a05d58a0-db31-11e4-aec7-777fee394f45","variableMapping":{"turnCostsCount":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[],"tindex":"a05d58a1-db31-11e4-aec7-9d76605d0a6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[179,24,25,26,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"a05d58a2-db31-11e4-aec7-b50e0a3925e7","variableMapping":{"edgeId":"unvisitedDeadEnds","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"unvisitedDeadEnds","nodeA":"del"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":-1},{"failures":[441,442,49,443,444,445,446,139,140,141,142,143,50,144,145,177,178,179,180,181,182,201,202,223,237,238,51,52,53,54,55,56,57,58,59,60,61,240,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,404,404,405,405,447,447,406,406,241,241,407,407,408,408,242,242,409,409,448,448,410,410,411,411,243,244,245,246,23,24,25,26,27,28,29,30,31,32,33,34,35,37,248,249,250,38,39,40,41,42,43,44,45,46,47,48,251,252,451,452,453,454,490,455,253,456,457,458,459,460,461,462,463,464,465,466,491,467,254,468,469,424,425,426,470,471,472,473,474,475,476,477,478,492,479,255,88,89,440,90,480,91,92,93,94,481,95,96,97,98,99,100,101,493,102,103,484,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,104,384,105,106,385,386,387,388,107,389,390,108,109,110,111,112,113,114,115,116,117,118,392,393,119,120,394,121,122,395,123,124,125,126,396,397,127,398,128,129,130,131,399,132,133,400,134,401,135,136],"tindex":"a05d7fb3-db31-11e4-aec7-cdec491c9e68","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"a05d7fb4-db31-11e4-aec7-0ba2331d4c53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[275,319,357,494,393,495],"tindex":"a05d7fb5-db31-11e4-aec7-b5a36dc6b333","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[],"tindex":"a05d7fb6-db31-11e4-aec7-1d79f604966a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"a05d7fb7-db31-11e4-aec7-07cb0fa6e0fe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"a05d7fb8-db31-11e4-aec7-9701c701162b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[143,2,18,21,35],"tindex":"a05d7fb9-db31-11e4-aec7-038431cda9bb","variableMapping":{"fwdFaster":"speed","incDist2DSum":"speed","fwdSlower":"speed","fullDist2D":"speed","restDist2D":"speed","speed":"speed","decDist2DSum":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"a05d7fba-db31-11e4-aec7-f9d855d2c611","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"a05d7fbb-db31-11e4-aec7-e983599e1866","variableMapping":{"weight":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"a05d7fbc-db31-11e4-aec7-d174f25fe908","variableMapping":{"turnCostIndex":"sLon","nextTurnCostIndex":"x1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[441,442,49,443,444,445,446,139,140,141,142,143,50,144,145,177,178,179,180,181,182,201,202,223,237,238,51,52,53,54,55,56,57,58,59,60,61,240,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,404,404,405,405,447,447,406,406,241,241,407,407,408,408,242,242,409,409,448,448,410,410,411,411,243,244,245,246,23,24,25,26,27,28,29,30,31,32,33,34,35,37,248,249,250,38,39,40,41,42,43,44,45,46,47,48,251,252,451,452,453,454,455,253,456,457,458,459,460,462,463,464,465,466,467,254,468,469,424,425,426,470,471,472,473,474,475,476,477,478,479,255,88,89,440,90,480,91,92,93,94,481,95,96,97,98,99,100,101,102,103,256,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,496,497,432,498,499,500,501,502,503,504,357,372,104,384,105,106,385,386,387,388,107,389,390,108,109,110,111,112,113,114,115,116,117,118,392,393,119,120,394,121,122,395,123,124,125,126,396,397,127,398,128,129,130,131,399,132,133,400,134,401,135,136],"tindex":"a05da6cd-db31-11e4-aec7-2f5f01e2ce79","variableMapping":{"bytePos":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[441,442,49,443,444,445,446,140,141,142,143,144,145,177,178,179,180,181,182,237,238,52,53,54,55,56,57,58,59,61,240,62,63,64,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,404,405,406,241,407,408,242,409,448,410,411,248,249,250,251,252,451,452,453,454,455,253,457,458,459,460,462,463,464,465,466,467,254,468,469,424,425,426,470,471,472,473,474,475,476,477,478,479,255,88,89,90,480,91,92,93,94,481,95,96,97,98,99,100,101,102,103,256,257,258,259,262,264,265,266,267,268,269,271,273,276,277,278,279,280,281,282,283,284,287,288,290,291,292,293,295,298,299,300,301,302,303,306,308,309,310,311,312,313,315,317,320,321,322,323,324,325,326,327,328,331,332,334,335,336,337,339,342,343,344,345,346,347,348,349,350,351,353,355,358,359,360,361,362,363,364,365,366,369,370,372,373,374,375,377,380,381,382,383,104,106,388,107,108,109,110,111,112,113,114,116,118,119,120,394,121,122,395,123,124,125,397,127,128,129,130,131,132,134,401,135,136],"tindex":"a05da6ce-db31-11e4-aec7-73b8dbde08f2","variableMapping":{"alreadyRun":"forward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"a05da6cf-db31-11e4-aec7-bd03901c8955","variableMapping":{"origEdgeId":"indexDivisor","mainEdges":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-3},{"failures":[],"tindex":"a05da6d0-db31-11e4-aec7-2b297928dbbf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[441,442,49,443,444,445,446,140,141,142,143,50,144,145,146,148,150,0,153,157,158,1,159,2,161,162,164,3,165,4,5,168,173,174,6,176,177,178,179,180,181,182,7,183,184,185,8,187,192,193,9,195,196,137,198,138,200,201,202,204,205,207,10,208,11,12,211,216,217,13,219,220,221,14,222,223,15,224,16,17,226,227,18,229,19,20,230,21,231,22,233,235,236,237,238,51,52,53,54,55,56,57,58,59,60,61,240,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,404,405,406,241,407,408,242,409,448,410,411,244,245,246,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,248,249,250,38,39,40,41,42,43,44,45,46,47,48,251,252,451,452,453,454,455,253,457,458,459,460,462,463,464,465,466,467,254,468,469,424,425,426,470,471,472,473,474,475,476,477,478,479,255,88,89,90,480,91,92,93,94,481,95,96,97,98,99,100,101,102,103,256,257,258,259,262,264,265,266,267,268,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,287,288,290,291,292,293,294,295,296,298,299,300,301,302,303,306,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,331,332,334,335,336,337,338,339,340,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,369,370,372,373,374,375,376,377,378,380,381,382,383,104,105,106,385,388,107,108,109,110,111,112,113,114,115,116,117,118,393,119,120,394,121,122,395,123,124,125,397,127,128,129,130,131,399,132,133,134,401,135,136],"tindex":"a05da6d1-db31-11e4-aec7-c7bef9541b83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"a05da6d2-db31-11e4-aec7-4d595b99f18c","variableMapping":{"maxLatTmp":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","minLatTmp":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[],"tindex":"a05da6d3-db31-11e4-aec7-5f80052c9588","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"a05dcde4-db31-11e4-aec7-bf3bb826da8c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"a05dcde5-db31-11e4-aec7-b5cb2aa9b7d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[441,442,49,443,444,445,446,139,140,141,142,143,50,144,145,177,178,179,180,181,182,201,202,223,237,238,51,52,53,54,55,56,57,58,59,60,61,240,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,404,405,447,406,241,407,408,242,409,448,410,411,245,246,23,24,25,26,27,28,29,30,31,32,33,34,35,37,248,249,250,38,39,40,41,42,43,44,45,46,47,48,251,252,451,452,453,454,455,253,457,458,459,460,462,463,464,465,466,467,254,468,469,424,425,426,470,471,472,473,474,475,476,477,478,479,255,88,89,440,90,480,91,92,93,94,481,95,96,97,98,99,100,101,102,103,256,258,259,260,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,497,432,498,499,433,501,502,503,504,357,372,104,384,105,106,385,386,387,388,107,389,108,109,110,111,112,113,114,115,116,117,118,392,393,119,120,394,121,122,395,123,124,125,126,396,397,127,398,128,129,130,131,399,132,133,400,134,401,135,136],"tindex":"a05df4f6-db31-11e4-aec7-5d659279cd70","variableMapping":{"res":"todoBytes","maxBits":"segmentSizeInBytes","value":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:254","type":"CtForImpl","sourcecode":"for ( ; int > 0 ; long >>= 1) {\n    long <<= 1;\n    long |= long & 1;\n    int--;\n    if (long == 0) {\n        long <<= int;\n        break;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[202],"tindex":"a05df4f7-db31-11e4-aec7-7b69179eacf2","variableMapping":{"flags":"flags","nodeFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"a05df4f8-db31-11e4-aec7-6534b1218f5c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"a05df4f9-db31-11e4-aec7-0bbc8d530ae0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"a05df4fa-db31-11e4-aec7-a9a29a91464e","variableMapping":{"flags":"acceptBit","tmpValue":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"a05df4fb-db31-11e4-aec7-ab5ee2dd0483","variableMapping":{"segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":0},{"failures":[49,139,140,141,142,143,50,144,145,147,148,149,150,151,0,152,153,154,155,156,157,158,1,159,2,160,161,162,163,164,3,165,166,4,5,167,168,169,170,171,172,173,174,6,175,176,177,178,179,180,181,182,7,183,184,185,8,186,187,188,189,190,191,192,193,9,194,195,196,199,200,201,202,203,204,205,206,207,10,208,209,11,12,210,211,212,213,214,215,216,217,13,218,219,220,221,14,222,223,15,224,225,16,17,226,227,228,18,229,19,20,230,21,231,22,232,233,234,235,236,237,238,51,52,239,53,54,55,56,57,58,59,60,61,240,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,241,242,243,244,245,246,247,248,249,38,39,40,41,42,43,44,45,46,47,48,251,252,253,254,255,89,103,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,104,384,105,106,385,386,387,388,107,389,390,108,391,109,110,111,112,113,114,115,116,117,118,392,393,119,120,394,121,122,395,123,124,125,126,396,397,127,398,128,129,130,131,399,132,133,400,134,401,135,136],"tindex":"a05e1c0c-db31-11e4-aec7-5f9b7c049fc6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[49,140,141,142,143,201,202,84,404,405,406,241,407,408,242,409,410,411,245,246,23,24,25,26,27,28,29,30,31,32,33,34,35,37,412,413,414,38,39,40,41,42,43,44,45,46,47,48,415,416,417,418,419,420,421,422,423,457,458,459,460,462,424,425,426,91,92,93,427,482,256,259,260,264,268,285,290,291,296,298,299,303,304,308,312,329,334,335,340,342,343,488,372,505,506,507,434,508,509,510,435,511,512,513,494,386,107,389,109,113,126,129,133,134,401,514,515,516,438,517,518,519,439,520,521,522,495],"tindex":"a05e1c0d-db31-11e4-aec7-a7dc32d76b01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:114","type":"CtAssignmentImpl","sourcecode":"byte[][][int] = new byte[1 << (int)]"},"status":-1},{"failures":[],"tindex":"a05e1c0e-db31-11e4-aec7-c34cfa57464c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"a05e1c0f-db31-11e4-aec7-c9f011ddcf0e","variableMapping":{"defaultValue":"flags","flags":"flags","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[179,180,37,266,279,291,292,310,323,335,336,348,361,373,374,111,121,129,130],"tindex":"a05e1c10-db31-11e4-aec7-a31e5ea7199b","variableMapping":{"endIndexPlusOne":"key","frontIndex":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-1},{"failures":[523,524],"tindex":"a05e1c11-db31-11e4-aec7-cf4dd181ae22","variableMapping":{"keys":"keys","i":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"a05e1c12-db31-11e4-aec7-f782cae67b1c","variableMapping":{"origEdgeId":"dLat","mainEdges":"dLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"a05eb853-db31-11e4-aec7-4b5b3153f1f8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"a05eb854-db31-11e4-aec7-d3383c74b6f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[53,55,56,57,59,61,62],"tindex":"a05eb855-db31-11e4-aec7-a5a5de5a5483","variableMapping":{"type":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:198","type":"CtReturnImpl","sourcecode":"return (this.int) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-1},{"failures":[2,196,197,198,200,14,222,223,15,224,225,16,17,226,227,228,18,229,19,20,230,21,231,22,232,233,234,235,236,525,526,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,404,527,528,529,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,43,47,48,253,254,255,103,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,104,384,105,106,385,386,387,388,107,389,390,108,391,109,110,111,112,113,114,115,116,117,118,392,393,119,120,394,121,122,395,123,124,125,126,396,397,127,398,128,129,130,131,399,132,133,400,134,401,135,136],"tindex":"a05eb856-db31-11e4-aec7-7b68694a11ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"a05eb857-db31-11e4-aec7-fd27d671d181","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"a05eb858-db31-11e4-aec7-4b5c3d11d6ad","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":82,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":405,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":146,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":386,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":347,"com.graphhopper.reader.OSMReaderTest.testFerry":23,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":144,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":151,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":92,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":39,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":136,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":274,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":505,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":156,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":55,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":367,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":319,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":440,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":506,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":519,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":61,"com.graphhopper.GraphHopperTest.testPrepare":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":379,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":51,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":326,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":524,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":74,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":140,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":456,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":157,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":446,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":108,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":90,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":181,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":161,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":497,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":72,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":425,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":165,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":256,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":109,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":523,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":63,"com.graphhopper.GraphHopperTest.testLoadOSM":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":475,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":499,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":426,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":199,"com.graphhopper.reader.OSMReaderTest.testSort":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":174,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":260,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":508,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":338,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":380,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":242,"com.graphhopper.storage.RAMDataAccessTest.testHeader":439,"com.graphhopper.routing.DijkstraTest.initializationError":525,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":250,"com.graphhopper.storage.MMapDataAccessTest.testHeader":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":295,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":427,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":398,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":437,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":315,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":384,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":257,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":264,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":392,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":195,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":193,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":95,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":78,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":94,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":355,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":68,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":111,"com.graphhopper.coll.OSMIDMapTest.testGetLong":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":278,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":284,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":395,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":107,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":124,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":183,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":275,"com.graphhopper.GraphHopperAPITest.testLoad":251,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":391,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":498,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":14,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":320,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":310,"com.graphhopper.storage.LevelGraphStorageTest.testClone":113,"com.graphhopper.reader.OSMReaderTest.testBarriers":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":265,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":209,"com.graphhopper.util.GHUtilityTest.testCopy":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":351,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":190,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":491,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":522,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":153,"com.graphhopper.routing.PathTest.testFindInstruction":246,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":266,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":16,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":50,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":400,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":206,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":464,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":339,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":293,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":441,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":279,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":388,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":214,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":198,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":526,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":115,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":352,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":504,"com.graphhopper.util.InstructionListTest.testWayList2":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":476,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":270,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":164,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":484,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":162,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":298,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":201,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":304,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":117,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":507,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":166,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":509,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":361,"com.graphhopper.storage.RAMDirectoryTest.testSynched":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":276,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":457,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":70,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":309,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":28,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":434,"com.graphhopper.routing.AStarTest.initializationError":529,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":84,"com.graphhopper.coll.OSMIDMapTest.testGet":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":273,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":436,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":17,"com.graphhopper.routing.PathBidirRefTest.testExtract":237,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":126,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":167,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":421,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":99,"com.graphhopper.storage.RAMDataAccessTest.testCopy":438,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":510,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":471,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":301,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":373,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":5,"com.graphhopper.storage.RAMDataAccessTest.testSegments":521,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":255,"com.graphhopper.util.GHUtilityTest.testSort2":442,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":79,"com.graphhopper.reader.OSMReaderTest.testMain":25,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":389,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":229,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":283,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":6,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":18,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":377,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":393,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":121,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":135,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":119,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":241,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":204,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":432,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":123,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":35,"com.graphhopper.storage.StorablePropertiesTest.testStore":482,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":516,"com.graphhopper.storage.GraphHopperStorageTest.testClone":312,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":376,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":22,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":487,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":21,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":322,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":104,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":9,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":353,"com.graphhopper.routing.PathTest.testTime":244,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":189,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":134,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":114,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":236,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":461,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":478,"com.graphhopper.reader.OSMReaderTest.testRelation":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":366,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":397,"com.graphhopper.util.GHUtilityTest.testSortDirected":444,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":429,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":217,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":513,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":406,"com.graphhopper.GraphHopperTest.testFootOnly":47,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":149,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":20,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":458,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":488,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":481,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":479,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":362,"com.graphhopper.search.NameIndexTest.testCreate":418,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":520,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":404,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":433,"com.graphhopper.routing.QueryGraphTest.testOneWay":448,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":492,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":424,"com.graphhopper.reader.OSMReaderTest.testWithBounds":34,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":495,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":13,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":515,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":359,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":407,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":368,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":137,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":110,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":390,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":215,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":159,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":287,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":230,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":280,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":308,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":409,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":65,"com.graphhopper.util.InstructionListTest.testWayList":141,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":341,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":4,"com.graphhopper.GraphHopperAPITest.testDisconnected179":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":354,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":289,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":468,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":212,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":249,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":365,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":496,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":382,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":42,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":314,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":240,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":160,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":332,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":76,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":527,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":60,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":133,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":232,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":186,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":173,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":86,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":307,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":493,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":500,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":176,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":302,"com.graphhopper.routing.PathTest.testWayList":245,"com.graphhopper.storage.MMapDataAccessTest.testCopy":430,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":381,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":358,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":402,"com.graphhopper.coll.OSMIDMapTest.testGet2":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":87,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":435,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":131,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":412,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":286,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":171,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":325,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":271,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":313,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":96,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":122,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":97,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":517,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":494,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":12,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":428,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":184,"com.graphhopper.util.GHUtilityTest.testSort":443,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":371,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":472,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":170,"com.graphhopper.search.NameIndexTest.testPut":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":300,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":311,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":466,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":480,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":462,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":453,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":502,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":10,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":202,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":451,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":8,"com.graphhopper.storage.MMapDirectoryTest.testSynched":485,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":221,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":413,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":281,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":177,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":503,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":394,"com.graphhopper.routing.PathTest.testFound":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":372,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":48,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":200,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":132,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":489,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":169,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":277,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":403,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":417,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":357,"com.graphhopper.util.InstructionListTest.testEmptyList":139,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":317,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":514,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":191,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":235,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":228,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":158,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":227,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":80,"com.graphhopper.reader.PrinctonReaderTest.testRead":248,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":340,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":93,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":356,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":346,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":112,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":155,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":282,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":197,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":188,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":205,"com.graphhopper.reader.OSMReaderTest.testFoot":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":370,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":411,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":414,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":401,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":473,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":147,"com.graphhopper.reader.OSMReaderTest.testOneWay":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":474,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":321,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":336,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":294,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":154,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":512,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":330,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":11,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":364,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":54,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":454,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":511,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":223,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":360,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":447,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":36,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":305,"com.graphhopper.routing.PathBidirRefTest.testExtract2":238,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":501,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":460,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":64,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":192,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":477,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":415,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":334,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":490,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":194,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":30,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":383,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":455,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":59,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":213,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":470,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":337,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":116,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":233,"com.graphhopper.GraphHopperTest.testFootAndCar":43,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":329,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":120,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":185,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":102,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":518,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":350,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":268,"com.graphhopper.storage.StorablePropertiesTest.testLoad":483,"com.graphhopper.GraphHopperTest.testPrepareOnly":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":83,"com.graphhopper.GraphHopperTest.testVia":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":467,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":348,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":32,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":385,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":143,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":333,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":224,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":363,"com.graphhopper.routing.AStarBidirectionTest.initializationError":528,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":2,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":399,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":130,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":259}}]
