[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244],"tindex":"dcbe93b7-daaa-11e4-b772-6d899c415b35","variableMapping":{"encoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"dcbe93b8-daaa-11e4-b772-1b77c90ceb34","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-2},{"failures":[],"tindex":"dcbe93b9-daaa-11e4-b772-39f3d1342f7b","variableMapping":{"sacScale":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[245,219,246,220,230],"tindex":"dcbe93ba-daaa-11e4-b772-7b44c1048fce","variableMapping":{"speedEncoder":"reverseSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-1},{"failures":[247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262],"tindex":"dcbfa52b-daaa-11e4-b772-058d38850a2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"dcbfa52c-daaa-11e4-b772-d14685ad5872","variableMapping":{"initializedCounter":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":0},{"failures":[],"tindex":"dcbfa52d-daaa-11e4-b772-9347cb4cb6a0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"dcbfa52e-daaa-11e4-b772-bd255a02f35e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:79","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[6,15,23,25,26,28,32,33,40,41,57,65,67,68,70,74,75,82,83,101,109,111,112,114,118,119,126,127,147,155,157,158,160,164,165,172,173,263,264,265,266],"tindex":"dcbfa52f-daaa-11e4-b772-4351b21acc47","variableMapping":{"id":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"dcbfa530-daaa-11e4-b772-3b2d4d9a1a91","variableMapping":{"is3D":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[],"tindex":"dcbfa531-daaa-11e4-b772-39d32ade8022","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[267,268,269,185,186,270,191,271,272,273,274],"tindex":"dcbfcc42-daaa-11e4-b772-a3ea13b3c526","variableMapping":{"res":"relationFlags","value":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[254,255,256,257,258,275,259,260,276],"tindex":"dcbfcc43-daaa-11e4-b772-e545096a609f","variableMapping":{"lastKey":"initialBits","key":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:85","type":"CtLocalVariableImpl","sourcecode":"long long = long - (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-1},{"failures":[],"tindex":"dcbfcc44-daaa-11e4-b772-d7ebe02c4744","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[277,278,279,280,281,282],"tindex":"dcbfcc45-daaa-11e4-b772-f3ad37ac39d3","variableMapping":{"size":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[283,284],"tindex":"dcbfcc46-daaa-11e4-b772-f5347dd49d48","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-1},{"failures":[245],"tindex":"dcbfcc47-daaa-11e4-b772-3d3534cc57a4","variableMapping":{"distInMeter":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"dcbfcc48-daaa-11e4-b772-ada98f4f70e8","variableMapping":{"val":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"dcbfcc49-daaa-11e4-b772-e9bed041fa4a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[285,280,286,287,220,221,225,226,240,241,243],"tindex":"dcbfcc4a-daaa-11e4-b772-817ffddd9dfb","variableMapping":{"segmentSizeInBytes":"from","index":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[81,288],"tindex":"dcbfcc4b-daaa-11e4-b772-f976e4ebe98e","variableMapping":{"periodicUpdates":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[6,15,23,25,26,28,32,33,40,41,57,65,67,68,70,74,75,82,83,101,109,111,112,114,118,119,126,127,147,155,157,158,160,164,165,172,173,263,264,265,266],"tindex":"dcbfcc4c-daaa-11e4-b772-33c779622946","variableMapping":{"oldPriorities":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"dcbfcc4d-daaa-11e4-b772-65f0307eb6a0","variableMapping":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"dcbfcc4e-daaa-11e4-b772-21001ae7e98c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"status":-2},{"failures":[],"tindex":"dcbfcc4f-daaa-11e4-b772-358cb4cf72b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"dcbff360-daaa-11e4-b772-db17caf6683b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[],"tindex":"dcbff361-daaa-11e4-b772-cd27fcb016a3","variableMapping":{"factor":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[254,255,256,257,289,258,275,259,260,276],"tindex":"dcbff362-daaa-11e4-b772-f347163bec35","variableMapping":{"r":"lon","com.graphhopper.util.AngleCalc.PI_4":"midLat","x":"lon","angle":"lat","absY":"lon","com.graphhopper.util.AngleCalc.PI3_4":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"dcbff363-daaa-11e4-b772-edf1e55f42e1","variableMapping":{"time":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[285,278,280,286,287,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,290,291,292,244,293,294,295,296,297],"tindex":"dcbff364-daaa-11e4-b772-6bb65b1c407b","variableMapping":{"synched":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:74","type":"CtIfImpl","sourcecode":"if (!boolean)\n    throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[],"tindex":"dcbff365-daaa-11e4-b772-39b4f67dd705","variableMapping":{"flags":"wayBitMask","mask":"wayBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"dcbff366-daaa-11e4-b772-51de7e0ea27e","variableMapping":{"incEleSum":"fwdDecline","incDist2DSum":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[184],"tindex":"dcbff367-daaa-11e4-b772-b7682ab2ff6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"dcbff368-daaa-11e4-b772-8ddc9839c31d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:451","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[2],"tindex":"dcbff369-daaa-11e4-b772-e1803fca8b9d","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1432","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.loadEdgesHeader()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"dcbff36a-daaa-11e4-b772-d3f37b73c139","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:153","type":"CtIfImpl","sourcecode":"if ((java.util.Map<java.lang.Integer, java.lang.Integer>.size()) < 2)\n    return ;\n"},"status":0},{"failures":[],"tindex":"dcbff36b-daaa-11e4-b772-d5b04a878940","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:337","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[287,220,221,240,243],"tindex":"dcbff36c-daaa-11e4-b772-dd0599828314","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[298,299,300,301,302,303,304,305,51,233,234,237,291,293],"tindex":"dcbff36d-daaa-11e4-b772-b9e519e8f862","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"dcbff36e-daaa-11e4-b772-b1e07b54638d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"dcc01a7f-daaa-11e4-b772-63fb85825968","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[306,307,308,195,200,201,309,290,244,310],"tindex":"dcc01a80-daaa-11e4-b772-a9d7340b82d4","variableMapping":{"max":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-1},{"failures":[306,311],"tindex":"dcc01a81-daaa-11e4-b772-e72c92d7cb05","variableMapping":{"message":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[1,6],"tindex":"dcc01a82-daaa-11e4-b772-b9895d4bd922","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"dcc01a83-daaa-11e4-b772-1bbd5f700314","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[4,199],"tindex":"dcc01a84-daaa-11e4-b772-ef14b00a8cfe","variableMapping":{"flags":"forwardBit","scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"dcc01a85-daaa-11e4-b772-b57fdad91f8e","variableMapping":{"time":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[],"tindex":"dcc01a86-daaa-11e4-b772-1d0daa725fcb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[267,268,269,185,270,191,271,272,273,274],"tindex":"dcc01a87-daaa-11e4-b772-f585db189e1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[307,312,313,314,200,201,315],"tindex":"dcc01a88-daaa-11e4-b772-cd6ecb77b6cb","variableMapping":{"eleDelta":"speed","decEleSum":"speed","fullDist2D":"speed","decDist2DSum":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[8,13,14,15,22,24,37,42,45,49,55,56,57,64,66,79,84,87,91,94,99,100,101,108,110,123,128,131,135,137,140,145,146,147,154,156,169,174,177,181,306,316,317,318,319,263,320,321,322,193,196,197,202,206,208,323,217,285,278,324,280,286,281,287,220,221,225,228,231,233,234,243,325,326,290,291,292,244,293,294,295,327,328,329,330,331,332,333,334,335,266,336,337,296],"tindex":"dcc01a89-daaa-11e4-b772-259bb9263471","variableMapping":{"shift":"directionBitMask","flags":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[338,339],"tindex":"dcc01a8a-daaa-11e4-b772-6936a957c9b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"dcc01a8b-daaa-11e4-b772-ab1398647d22","variableMapping":{"flags":"encoded","tmpValue":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[278,279,340,341,342,280,281,282,287,221,222,223,226,227,229,230,232,233,235,236,237,238,239,240,241,242,243],"tindex":"dcc0419c-daaa-11e4-b772-cfc59a4e22cf","variableMapping":{"len":"size","start":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-1},{"failures":[],"tindex":"dcc0419d-daaa-11e4-b772-3f01f077386a","variableMapping":{"shift":"nodeBitMask","flags":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[0,11,14,15,22,37,43,45,49,343,285,278,324,280,286,281,287,221,233,243,290],"tindex":"dcc0419e-daaa-11e4-b772-4199de4c3131","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:96","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setBaseNode(int)"},"status":-1},{"failures":[],"tindex":"dcc0419f-daaa-11e4-b772-8f1cfe20eb3c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"dcc041a0-daaa-11e4-b772-b9bd1dc55928","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"dcc041a1-daaa-11e4-b772-b779e9828272","variableMapping":{"factor":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"dcc041a2-daaa-11e4-b772-8d95505ac571","variableMapping":{"freeIndex":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[344],"tindex":"dcc041a3-daaa-11e4-b772-0dfc6a5abaaa","variableMapping":{"version":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[263,321],"tindex":"dcc041a4-daaa-11e4-b772-f1a3974e489a","variableMapping":{"carEncoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:80","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.CarFlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-1},{"failures":[],"tindex":"dcc041a5-daaa-11e4-b772-5d8284951b34","variableMapping":{"foundIndex":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":0},{"failures":[],"tindex":"dcc041a6-daaa-11e4-b772-171cc9f6ac47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[263,321],"tindex":"dcc041a7-daaa-11e4-b772-e96e3edf64aa","variableMapping":{"turnCostsCount":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":-1},{"failures":[],"tindex":"dcc041a8-daaa-11e4-b772-35e81a078e73","variableMapping":{"tmp":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[345,277,338,284,346,278,279,340,341,280,281,282],"tindex":"dcc041a9-daaa-11e4-b772-0ff0625de6a8","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"element","entityType":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[0,1,2,3,4,6,7,8,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,347,348,349,350,351,343,352,353,248,354,298,355,356,299,357,300,249,250,301,302,303,304,305,51,251,358,359,360,361,362,363,364,252,253,365,366,367,368,369,52,370,371,372,373,374,53,375,376,377,378,379,54,380,381,382,383,384,385,386,66,81,93,94,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,387,388,389,390,391,392,393,394,395,306,316,396,397,317,398,263,399,264,265,320,321,210,400,245,401,402,285,403,278,324,279,340,341,342,280,286,281,404,282,287,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,405,406,407,408,409,410,325,411,412,326,413,414,415,416,417,418,290,291,292,244,293,419,294,295,420,421,327,328,329,422,330,423,424,331,332,333,334,335,310,266,336,337,296,297],"tindex":"dcc068ba-daaa-11e4-b772-4921cc004640","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"dcc068bb-daaa-11e4-b772-8fb0367f7648","variableMapping":{"size":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":0},{"failures":[215],"tindex":"dcc068bc-daaa-11e4-b772-856be6b385c3","variableMapping":{"time":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"dcc068bd-daaa-11e4-b772-c342b851b072","variableMapping":{"lastIndex":"shift","fromIndex":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[263,320,321],"tindex":"dcc068be-daaa-11e4-b772-0f2ac1c34bcf","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"start","edge":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"dcc068bf-daaa-11e4-b772-cb0d29d8690d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[245],"tindex":"dcc10500-daaa-11e4-b772-9f19ecff546c","variableMapping":{"a_lon_deg":"fullDist2D","factor":"incDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-1},{"failures":[196,202,290,244,328,266],"tindex":"dcc10501-daaa-11e4-b772-9da2aba16590","variableMapping":{"bytePos":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[217],"tindex":"dcc10502-daaa-11e4-b772-eb4f5132ce76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"dcc10503-daaa-11e4-b772-dbafe491fcb4","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"dcc10504-daaa-11e4-b772-1ff262b663f7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"dcc10505-daaa-11e4-b772-81dfe7b81ba9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[],"tindex":"dcc10506-daaa-11e4-b772-e76abe8da9b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[0,1,2,3,4,5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,347,348,349,350,425,351,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,426,427,428,429,430,137,138,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,431,432,433,434,387,388,389,390,391,392,393,394,395,306,316,396,397,317,398,263,399,264,265,320,321,210,435,246,401,402,285,403,278,324,279,340,341,342,280,286,281,404,282,287,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,405,406,417,418,290,291,292,244,293,436,419,294,295,420,437,421,327,328,329,422,330,423,424,331,332,333,334,335,310,438,266,439,440,336,337,296,297],"tindex":"dcc12c17-daaa-11e4-b772-45bfca2b7743","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":-1},{"failures":[],"tindex":"dcc12c18-daaa-11e4-b772-7b7a12c95a3a","variableMapping":{"arrayLength":"biggestStart","maxGeoRef":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[],"tindex":"dcc12c19-daaa-11e4-b772-69d5561c3962","variableMapping":{"logMessages":"com.graphhopper.util.AngleCalc.PI_4","logMessagesPercentage":"com.graphhopper.util.AngleCalc.PI3_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:158","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[],"tindex":"dcc12c1a-daaa-11e4-b772-f7b5b618e929","variableMapping":{"size":"length","from":"segmentsToCreate","end":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[219],"tindex":"dcc12c1b-daaa-11e4-b772-77e97643d46a","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"dcc12c1c-daaa-11e4-b772-073944538320","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"dcc12c1d-daaa-11e4-b772-0bc047f1d9eb","variableMapping":{"segmentsToMap":"nodes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":0},{"failures":[188,189,190,191,192,322,441,442,443,444,445,271,314,446,447],"tindex":"dcc12c1e-daaa-11e4-b772-09004eabe0ef","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-1},{"failures":[],"tindex":"dcc12c1f-daaa-11e4-b772-5dc140d20943","variableMapping":{"str":"location","this":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:152","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg())\n    java.lang.String += \"_INT\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-2},{"failures":[448,449,450,451,247,452,453],"tindex":"dcc12c20-daaa-11e4-b772-55bc1a1231aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"dcc12c21-daaa-11e4-b772-596653daeb6b","variableMapping":{"val":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:109","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"dcc12c22-daaa-11e4-b772-0b9c19af56e3","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"dcc12c23-daaa-11e4-b772-4bbd1e1075cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"dcc12c24-daaa-11e4-b772-e7dfa55727c4","variableMapping":{"byteCount":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[417,420],"tindex":"dcc12c25-daaa-11e4-b772-77a82b4096b0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[],"tindex":"dcc12c26-daaa-11e4-b772-2957e7a23ee5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:62","type":"CtReturnImpl","sourcecode":"return \"FASTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"status":-2},{"failures":[],"tindex":"dcc15237-daaa-11e4-b772-35aceba5f641","variableMapping":{"speed":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[39,348,349,425,81,125,171,417,418,290,291,292,244,293,436,419,294,295,420,437,327,328,329,422,330,423,424,331,332,333,334,335,310,266],"tindex":"dcc15238-daaa-11e4-b772-f9cc2fe5914f","variableMapping":{"size":"segmentSizeInBytes","from":"bytes","end":"bytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-1},{"failures":[],"tindex":"dcc15239-daaa-11e4-b772-7199764caba1","variableMapping":{"this":"g","toNodeId":"removed","newEdgeId":"locs","fromNodeId":"locs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:352","type":"CtIfImpl","sourcecode":"if (int != int)\n    com.graphhopper.storage.GraphHopperStorage.connectNewEdge(int, int);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"dcc1523a-daaa-11e4-b772-7b9bc5fad054","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":238,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":408,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":5,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":307,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":56,"com.graphhopper.reader.OSMReaderTest.testFerry":327,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":317,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":398,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":308,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":192,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":355,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":418,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":155,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":440,"com.graphhopper.coll.CompressedArrayTest.testCompress":255,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":445,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":134,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":76,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":110,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":353,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":281,"com.graphhopper.GraphHopperTest.testPrepare":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":237,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":285,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":230,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":393,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":271,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":397,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":11,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":248,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":320,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":222,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":360,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":180,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":268,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":137,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":261,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":13,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":287,"com.graphhopper.GraphHopperTest.testLoadOSM":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":365,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":382,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":361,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":218,"com.graphhopper.reader.OSMReaderTest.testSort":422,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":312,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":264,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":141,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":129,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":94,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":89,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":326,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":176,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":38,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":448,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":106,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":138,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":272,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":145,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":313,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":300,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":352,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":299,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":225,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":224,"com.graphhopper.coll.IntIntBinHeapTest.testSize":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":159,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":165,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":30,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":8,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":32,"com.graphhopper.coll.CompressedArrayTest.testCompress2":254,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":119,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":184,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":156,"com.graphhopper.GraphHopperAPITest.testLoad":296,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":12,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":381,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":208,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":111,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":101,"com.graphhopper.storage.LevelGraphStorageTest.testClone":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":146,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":321,"com.graphhopper.reader.OSMReaderTest.testBarriers":330,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":227,"com.graphhopper.util.GHUtilityTest.testCopy":389,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":446,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":449,"com.graphhopper.routing.PathTest.testFindInstruction":402,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":442,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":147,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":345,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":214,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":316,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":46,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":376,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":130,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":174,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":387,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":341,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":61,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":97,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":386,"com.graphhopper.util.InstructionListTest.testWayList2":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":366,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":135,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":179,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":95,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":400,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":452,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":70,"com.graphhopper.storage.RAMDirectoryTest.testSynched":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":157,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":347,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":226,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":423,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":240,"com.graphhopper.coll.OSMIDMapTest.testGet":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":154,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":215,"com.graphhopper.routing.PathBidirRefTest.testExtract":405,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":34,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":302,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":82,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":52,"com.graphhopper.util.GHUtilityTest.testSort2":388,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":235,"com.graphhopper.reader.OSMReaderTest.testMain":329,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":9,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":164,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":262,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":303,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":37,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":142,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":24,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":28,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":49,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":25,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":169,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":380,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":31,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":310,"com.graphhopper.storage.StorablePropertiesTest.testStore":426,"com.graphhopper.storage.GraphHopperStorageTest.testClone":103,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":85,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":202,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":428,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":200,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":0,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":62,"com.graphhopper.routing.PathTest.testTime":246,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":47,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":18,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":207,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":425,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":368,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":75,"com.graphhopper.util.GHUtilityTest.testSortDirected":391,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":315,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":432,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":410,"com.graphhopper.GraphHopperTest.testFootOnly":295,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":453,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":198,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":348,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":71,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":407,"com.graphhopper.routing.QueryGraphTest.testOneWay":414,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":258,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":441,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":439,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":359,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":256,"com.graphhopper.reader.OSMReaderTest.testWithBounds":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":178,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":399,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":411,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":77,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":216,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":14,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":10,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":183,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":447,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":168,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":161,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":99,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":413,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":221,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":132,"com.graphhopper.util.InstructionListTest.testWayList":394,"com.graphhopper.GraphHopperAPITest.testDisconnected179":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":63,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":275,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":58,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":433,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":337,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":91,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":292,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":105,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":404,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":123,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":286,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":45,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":269,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":143,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":242,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":93,"com.graphhopper.routing.PathTest.testWayList":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":67,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":197,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":243,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":167,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":116,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":209,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":152,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":29,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":249,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":301,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":323,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":338,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":185,"com.graphhopper.util.GHUtilityTest.testSort":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":364,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":276,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":322,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":181,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":354,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":378,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":351,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":372,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":384,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":309,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":245,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":139,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":319,"com.graphhopper.storage.MMapDirectoryTest.testSynched":431,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":241,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":263,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":385,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":81,"com.graphhopper.routing.PathTest.testFound":435,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":219,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":420,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":44,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":344,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":2,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":158,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":277,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":66,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":108,"com.graphhopper.util.InstructionListTest.testEmptyList":392,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":229,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":304,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":233,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":194,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":193,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":314,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":236,"com.graphhopper.reader.PrinctonReaderTest.testRead":336,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":131,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":356,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":55,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":163,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":444,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":429,"com.graphhopper.reader.OSMReaderTest.testFoot":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":79,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":416,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":252,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":260,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":253,"com.graphhopper.reader.OSMReaderTest.testOneWay":266,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":112,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":127,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":175,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":443,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":73,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":340,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":247,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":324,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":373,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":450,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":210,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":69,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":409,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":96,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":438,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":434,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":383,"com.graphhopper.routing.PathBidirRefTest.testExtract2":406,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":220,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":54,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":367,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":125,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":331,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":92,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":211,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":374,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":280,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":362,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":128,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":20,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":204,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":120,"com.graphhopper.GraphHopperTest.testFootAndCar":244,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":186,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":59,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":217,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":239,"com.graphhopper.GraphHopperTest.testPrepareOnly":417,"com.graphhopper.GraphHopperTest.testVia":290,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":57,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":333,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":4,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":124,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":306,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":212,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":72,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":187,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":43,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":41,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":140}}]
