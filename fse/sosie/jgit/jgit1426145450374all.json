[{"failures":[],"tindex":"b541cb1e-c889-11e4-98db-eb358f7bbebc","variableMapping":{"s":"java.lang.Integer.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportSftp:350","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:344","type":"CtTryImpl","sourcecode":"try {\n    boolean = org.eclipse.jgit.lib.ProgressMonitor == (org.eclipse.jgit.lib.NullProgressMonitor.org.eclipse.jgit.lib.NullProgressMonitor);\n    org.eclipse.jgit.transport.BasePackFetchConnection.markRefsAdvertised();\n    org.eclipse.jgit.transport.BasePackFetchConnection.markReachable(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.transport.BasePackFetchConnection.maxTimeWanted(java.util.Collection<org.eclipse.jgit.lib.Ref>));\n    if (boolean) {\n        org.eclipse.jgit.util.TemporaryBuffer.Heap = new org.eclipse.jgit.util.TemporaryBuffer.Heap(java.lang.Integer.int);\n        org.eclipse.jgit.transport.PacketLineOut = new org.eclipse.jgit.transport.PacketLineOut(org.eclipse.jgit.util.TemporaryBuffer.Heap);\n    } \n    if (org.eclipse.jgit.transport.BasePackFetchConnection.sendWants(java.util.Collection<org.eclipse.jgit.lib.Ref>)) {\n        org.eclipse.jgit.transport.BasePackFetchConnection.negotiate(org.eclipse.jgit.lib.ProgressMonitor);\n        org.eclipse.jgit.revwalk.RevWalk.dispose();\n        org.eclipse.jgit.revwalk.RevCommitList<org.eclipse.jgit.revwalk.RevCommit> = null;\n        org.eclipse.jgit.util.TemporaryBuffer.Heap = null;\n        org.eclipse.jgit.transport.PacketLineOut = null;\n        org.eclipse.jgit.transport.BasePackFetchConnection.receivePack(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream);\n    } \n} catch (org.eclipse.jgit.transport.BasePackFetchConnection.CancelledException org.eclipse.jgit.transport.BasePackFetchConnection.CancelledException) {\n    org.eclipse.jgit.transport.BasePackFetchConnection.close();\n    return ;\n} catch (java.io.IOException java.io.IOException) {\n    org.eclipse.jgit.transport.BasePackFetchConnection.close();\n    throw new org.eclipse.jgit.errors.TransportException(java.io.IOException.getMessage() , java.io.IOException);\n} catch (java.lang.RuntimeException java.lang.RuntimeException) {\n    org.eclipse.jgit.transport.BasePackFetchConnection.close();\n    throw new org.eclipse.jgit.errors.TransportException(java.lang.RuntimeException.getMessage() , java.lang.RuntimeException);\n}"},"status":-2},{"failures":[],"tindex":"b541cb1f-c889-11e4-98db-1150356690df","variableMapping":{"data":"s"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:746","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:614","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.lib.Constants.org.eclipse.jgit.lib.Constants.typeString(org.eclipse.jgit.revwalk.RevCommit.getType()))"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"b541cb20-c889-11e4-98db-47a59d765f91","variableMapping":{"abortingRebaseFailedNoOrigHead":"headName","this":"this","commitId":"headName"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1298","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1319","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ProgressMonitor.beginTask(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String), org.eclipse.jgit.lib.ProgressMonitor.int)"},"status":-1},{"failures":[],"tindex":"b541cb21-c889-11e4-98db-6fcb2dec9a78","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalkUtils:160","type":"CtLocalVariableImpl","sourcecode":"final int int = 24 * 3600"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:752","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.lib.FileMode.getObjectType()"},"status":-2},{"failures":[6,0,1,2,3,5,4],"tindex":"b541cb22-c889-11e4-98db-fdbf19381d3c","variableMapping":{"name":"name"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:209","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - (\".pack\".length())))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:614","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.lib.Ref.getName()"},"status":-1},{"failures":[],"tindex":"b541f233-c889-11e4-98db-312fb72b6e3d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:839","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"This is a combination of (.*) commits\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:277","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.lib.Ref.getTarget().getName()"},"status":-2},{"failures":[1,2,3,0,4,5,7,8,9,10,11,12,13],"tindex":"b541f234-c889-11e4-98db-bbb55bfaac11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CleanCommand:95","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.api.StatusCommand org.eclipse.jgit.api.StatusCommand = new org.eclipse.jgit.api.StatusCommand(org.eclipse.jgit.lib.Repository);\n    org.eclipse.jgit.api.Status org.eclipse.jgit.api.Status = org.eclipse.jgit.api.StatusCommand.call();\n    java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.TreeSet<java.lang.String>(org.eclipse.jgit.api.Status.getUntracked());\n    java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.TreeSet<java.lang.String>(org.eclipse.jgit.api.Status.getUntrackedFolders());\n    org.eclipse.jgit.util.FS org.eclipse.jgit.util.FS = org.eclipse.jgit.api.GitCommand<java.util.Set<java.lang.String>>.getRepository().getFS();\n    for (java.lang.String java.lang.String : org.eclipse.jgit.api.Status.getIgnoredNotInIndex()) {\n        java.io.File java.io.File = new java.io.File(org.eclipse.jgit.lib.Repository.getWorkTree() , java.lang.String);\n        if ((org.eclipse.jgit.util.FS.isFile(java.io.File)) || (org.eclipse.jgit.util.FS.isSymLink(java.io.File)))\n            java.util.Set<java.lang.String>.add(java.lang.String);\n        else if (org.eclipse.jgit.util.FS.isDirectory(java.io.File))\n            java.util.Set<java.lang.String>.add(java.lang.String);\n        \n    }\n    java.util.Set<java.lang.String> java.util.Set<java.lang.String> = org.eclipse.jgit.api.CleanCommand.filterFolders(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);\n    java.util.Set<java.lang.String> java.util.Set<java.lang.String> = org.eclipse.jgit.api.CleanCommand.filterIgnorePaths(java.util.Set<java.lang.String>, org.eclipse.jgit.api.Status.getIgnoredNotInIndex(), true);\n    java.util.Set<java.lang.String> java.util.Set<java.lang.String> = org.eclipse.jgit.api.CleanCommand.filterIgnorePaths(java.util.Set<java.lang.String>, org.eclipse.jgit.api.Status.getIgnoredNotInIndex(), false);\n    for (java.lang.String java.lang.String : java.util.Set<java.lang.String>)\n        if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n            if (!(boolean))\n                org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.delete(new java.io.File(org.eclipse.jgit.lib.Repository.getWorkTree() , java.lang.String));\n            \n            java.util.Set<java.lang.String>.add(java.lang.String);\n        } \n    if (boolean)\n        for (java.lang.String java.lang.String : java.util.Set<java.lang.String>)\n            if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n                if (!(boolean))\n                    org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.delete(new java.io.File(org.eclipse.jgit.lib.Repository.getWorkTree() , java.lang.String), org.eclipse.jgit.util.FileUtils.int);\n                \n                java.util.Set<java.lang.String>.add((java.lang.String + \"/\"));\n            } \n    \n} catch (java.io.IOException java.io.IOException) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n}"},"status":-1},{"failures":[0,1,2,3,5,4],"tindex":"b541f235-c889-11e4-98db-fb1f3b637f31","variableMapping":{"org.eclipse.jgit.transport.RemoteConfig.DEFAULT_RECEIVE_PACK":"srcSpec","optionReceivePack":"srcSpec"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.Transport:933","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = org.eclipse.jgit.transport.RemoteConfig.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.Transport:625","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.lib.Ref.getName()"},"status":-1},{"failures":[],"tindex":"b541f236-c889-11e4-98db-8fe9f26c5fa3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS:1082","type":"CtLocalVariableImpl","sourcecode":"long long = 0L"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexWriterV2:103","type":"CtLocalVariableImpl","sourcecode":"final long long = org.eclipse.jgit.transport.PackedObjectInfo.getOffset()"},"status":-2},{"failures":[],"tindex":"b541f237-c889-11e4-98db-25a82d311df1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:289","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:399","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":10,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":12,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":13,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":8,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":9,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":11,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":6,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.api.CleanCommandTest.testClean":7}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
