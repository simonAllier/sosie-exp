[{"failures":[0,1,2,3,4,5],"tindex":"cd824b29-c829-11e4-8d27-e1aeabbe7a00","variableMapping":{"c":"c"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:327","type":"CtIfImpl","sourcecode":"if (byte == 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:443","type":"CtIfImpl","sourcecode":"if (' ' == byte)\n    break;\n"},"status":-1},{"failures":[0,1,2,3,4,5],"tindex":"cd83f8da-c829-11e4-8d27-dbd1b69c4c8b","variableMapping":{"containsConflicts":"ignoreLastBracket"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.MergeResult:175","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:301","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[0,6,5,4,1,2,3],"tindex":"cd83f8db-c829-11e4-8d27-4543137c81b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RenameDetector:619","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.diff.DiffEntry>.add(org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.diff.DiffEntry.pair(org.eclipse.jgit.diff.DiffEntry.ChangeType, org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, 100))"},"status":-1},{"failures":[],"tindex":"cd83f8dc-c829-11e4-8d27-9b24b4f24de5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:356","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.io.BufferedReader.readLine()"},"status":-2},{"failures":[],"tindex":"cd83f8dd-c829-11e4-8d27-03c27a75169b","variableMapping":{"step":"step","org.eclipse.jgit.lib.RebaseTodoLine.Action.COMMENT":"org.eclipse.jgit.lib.RebaseTodoLine.Action.REWORD"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:434","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.RebaseTodoLine.Action.org.eclipse.jgit.lib.RebaseTodoLine.Action.equals(org.eclipse.jgit.lib.RebaseTodoLine.getAction()))\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:457","type":"CtSwitchImpl","sourcecode":"switch (org.eclipse.jgit.lib.RebaseTodoLine.getAction()) {\n    case PICK :\n        return null;\n    case REWORD :\n        java.lang.String java.lang.String = org.eclipse.jgit.revwalk.RevCommit.getFullMessage();\n        java.lang.String java.lang.String = org.eclipse.jgit.api.RebaseCommand.InteractiveHandler.modifyCommitMessage(java.lang.String);\n        org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.api.Git(org.eclipse.jgit.lib.Repository).commit().setMessage(java.lang.String).setAmend(true).setNoVerify(true).call();\n        return null;\n    case EDIT :\n        org.eclipse.jgit.api.RebaseCommand.RebaseState.createFile(org.eclipse.jgit.api.RebaseCommand.java.lang.String, org.eclipse.jgit.revwalk.RevCommit.name());\n        return org.eclipse.jgit.api.RebaseCommand.stop(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.api.RebaseResult.Status.org.eclipse.jgit.api.RebaseResult.Status);\n    case COMMENT :\n        break;\n    case SQUASH :\n        boolean = true;\n    case FIXUP :\n        org.eclipse.jgit.api.RebaseCommand.resetSoftToParent();\n        java.util.List<org.eclipse.jgit.lib.RebaseTodoLine> java.util.List<org.eclipse.jgit.lib.RebaseTodoLine> = org.eclipse.jgit.lib.Repository.readRebaseTodo(org.eclipse.jgit.api.RebaseCommand.RebaseState.getPath(org.eclipse.jgit.api.RebaseCommand.java.lang.String), false);\n        org.eclipse.jgit.lib.RebaseTodoLine org.eclipse.jgit.lib.RebaseTodoLine = (java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>.size()) > 0 ? java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>.get(0) : null;\n        java.io.File java.io.File = org.eclipse.jgit.api.RebaseCommand.RebaseState.getFile(org.eclipse.jgit.api.RebaseCommand.java.lang.String);\n        java.io.File java.io.File = org.eclipse.jgit.api.RebaseCommand.RebaseState.getFile(org.eclipse.jgit.api.RebaseCommand.java.lang.String);\n        if (boolean && (java.io.File.exists()))\n            java.io.File.delete();\n        \n        org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.api.RebaseCommand.doSquashFixup(boolean, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.RebaseTodoLine, java.io.File, java.io.File);\n}"},"status":-2},{"failures":[],"tindex":"cd83f8de-c829-11e4-8d27-c3da47df6a29","variableMapping":{"url":"u"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.http.JDKHttpConnectionFactory:56","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.transport.http.JDKHttpConnection(java.net.URL)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:467","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    final org.eclipse.jgit.transport.http.HttpConnection org.eclipse.jgit.transport.http.HttpConnection = org.eclipse.jgit.transport.TransportHttp.httpOpen(java.net.URL);\n    if (boolean) {\n        java.lang.String java.lang.String = (\"application/x-\" + java.lang.String) + \"-advertisement\";\n        org.eclipse.jgit.transport.http.HttpConnection.setRequestProperty(org.eclipse.jgit.util.HttpSupport.java.lang.String, (java.lang.String + \", */*\"));\n    } else {\n        org.eclipse.jgit.transport.http.HttpConnection.setRequestProperty(org.eclipse.jgit.util.HttpSupport.java.lang.String, \"*/*\");\n    }\n    final int int = org.eclipse.jgit.util.HttpSupport.org.eclipse.jgit.util.HttpSupport.response(org.eclipse.jgit.transport.http.HttpConnection);\n    switch (int) {\n        case org.eclipse.jgit.transport.http.HttpConnection.int :\n            if (((org.eclipse.jgit.transport.HttpAuthMethod.getType()) == (org.eclipse.jgit.transport.HttpAuthMethod.Type.org.eclipse.jgit.transport.HttpAuthMethod.Type)) && ((org.eclipse.jgit.transport.http.HttpConnection.getHeaderField(org.eclipse.jgit.util.HttpSupport.java.lang.String)) != null))\n                org.eclipse.jgit.transport.HttpAuthMethod = org.eclipse.jgit.transport.HttpAuthMethod.org.eclipse.jgit.transport.HttpAuthMethod.scanResponse(org.eclipse.jgit.transport.http.HttpConnection);\n            \n            return org.eclipse.jgit.transport.http.HttpConnection;\n        case org.eclipse.jgit.transport.http.HttpConnection.int :\n            throw new org.eclipse.jgit.errors.NoRemoteRepositoryException(org.eclipse.jgit.transport.URIish , java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.net.URL));\n        case org.eclipse.jgit.transport.http.HttpConnection.int :\n            org.eclipse.jgit.transport.HttpAuthMethod = org.eclipse.jgit.transport.HttpAuthMethod.org.eclipse.jgit.transport.HttpAuthMethod.scanResponse(org.eclipse.jgit.transport.http.HttpConnection);\n            if ((org.eclipse.jgit.transport.HttpAuthMethod.getType()) == (org.eclipse.jgit.transport.HttpAuthMethod.Type.org.eclipse.jgit.transport.HttpAuthMethod.Type))\n                throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.transport.URIish));\n            \n            org.eclipse.jgit.transport.CredentialsProvider org.eclipse.jgit.transport.CredentialsProvider = org.eclipse.jgit.transport.Transport.getCredentialsProvider();\n            if (org.eclipse.jgit.transport.CredentialsProvider == null)\n                throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n            \n            if (int > 1)\n                org.eclipse.jgit.transport.CredentialsProvider.reset(org.eclipse.jgit.transport.URIish);\n            \n            if ((3 < int) || (!(org.eclipse.jgit.transport.HttpAuthMethod.authorize(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider)))) {\n                throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n            } \n            int++;\n            continue;\n        case org.eclipse.jgit.transport.http.HttpConnection.int :\n            throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n        default :\n            java.lang.String java.lang.String = (int + \" \") + (org.eclipse.jgit.transport.http.HttpConnection.getResponseMessage());\n            throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , java.lang.String);\n    }\n}"},"status":-2},{"failures":[4,0,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,1,2,3],"tindex":"cd83f8df-c829-11e4-8d27-2d48d32b1422","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:185","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk = new org.eclipse.jgit.treewalk.TreeWalk(org.eclipse.jgit.lib.ObjectReader)"},"status":-1},{"failures":[],"tindex":"cd83f8e0-c829-11e4-8d27-d7d63ade746b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:142","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = org.eclipse.jgit.ignore.internal.IMatcher.matches(java.lang.String, boolean)"},"status":-2},{"failures":[1,2,3,28,5,0,4],"tindex":"cd83f8e1-c829-11e4-8d27-11303cdd57fb","variableMapping":{"sb":"r"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:223","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 1)\n    java.lang.StringBuilder.append(\" , \");\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeEntry:248","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0) {\n    java.lang.StringBuilder.append('/');\n} "},"status":-1},{"failures":[],"tindex":"cd83f8e2-c829-11e4-8d27-7fe377c402b3","variableMapping":{"generator":"generator"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:125","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.submodule.SubmoduleWalk.release()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleStatusCommand:102","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.submodule.SubmoduleWalk.next()) {\n    org.eclipse.jgit.submodule.SubmoduleStatus org.eclipse.jgit.submodule.SubmoduleStatus = org.eclipse.jgit.api.SubmoduleStatusCommand.getStatus(org.eclipse.jgit.submodule.SubmoduleWalk);\n    java.util.Map<java.lang.String, org.eclipse.jgit.submodule.SubmoduleStatus>.put(org.eclipse.jgit.submodule.SubmoduleStatus.getPath(), org.eclipse.jgit.submodule.SubmoduleStatus);\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":24,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":17,"org.eclipse.jgit.lib.T0002_TreeTest.test006_addDeepTree":28,"org.eclipse.jgit.api.BlameCommandTest.testRename":21,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_PathBreaksTie":6,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":14,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":10,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":25,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":26,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":11,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":15,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":22,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":23,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":27,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":7,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":8,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":9,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":19,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":20,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":16,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":12,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":13,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":18}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
