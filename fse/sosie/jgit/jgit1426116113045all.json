[{"failures":[0,1,2,3,4,5,6],"tindex":"67652dc3-c845-11e4-88fe-7f94cdaa6b4b","variableMapping":{"p":"rev"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RewriteGenerator:161","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit == null)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:473","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n    if (int > (org.eclipse.jgit.revwalk.RevCommit.getParentCount()))\n        org.eclipse.jgit.revwalk.RevObject = null;\n    else\n        org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent((int - 1));\n    \n} "},"status":-1},{"failures":[],"tindex":"67652dc4-c845-11e4-88fe-591cb685fdca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.TreeWalk:930","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.treewalk.AbstractTreeIterator[] org.eclipse.jgit.treewalk.AbstractTreeIterator[] = new org.eclipse.jgit.treewalk.AbstractTreeIterator[org.eclipse.jgit.treewalk.AbstractTreeIterator[].int]"},"status":-2},{"failures":[],"tindex":"67652dc5-c845-11e4-88fe-69039bbbd4ad","variableMapping":{"raw":"org.eclipse.jgit.util.QuotedString.GitPathStyle.quote","nextPtr":"c"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:315","type":"CtLocalVariableImpl","sourcecode":"final byte byte = byte[][int++]"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.QuotedString:266","type":"CtLocalVariableImpl","sourcecode":"final byte byte = org.eclipse.jgit.util.QuotedString.GitPathStyle.byte[][int]"},"status":-2},{"failures":[],"tindex":"67652dc6-c845-11e4-88fe-975be7e9e849","variableMapping":{"version":"org.eclipse.jgit.lib.Constants.HEAD"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:215","type":"CtReturnImpl","sourcecode":"return \"JGit/\" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:709","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(org.eclipse.jgit.lib.Constants.java.lang.String);\n    return org.eclipse.jgit.lib.Ref != null ? org.eclipse.jgit.lib.Ref.getLeaf().getName() : null;\n} finally {\n    org.eclipse.jgit.lib.Repository.close();\n}"},"status":-2},{"failures":[1,2,3,5,6,7,8,9,10,4],"tindex":"67652dc7-c845-11e4-88fe-a78cb456aa3f","variableMapping":{"org.eclipse.jgit.lib.FileMode.GITLINK":"mode","mode":"mode"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:770","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:365","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode))\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n"},"status":-1},{"failures":[],"tindex":"67652dc8-c845-11e4-88fe-97f640c8f947","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RefDatabase:196","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.BatchRefUpdate(this)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BatchRefUpdate:190","type":"CtReturnImpl","sourcecode":"return this"},"status":-2},{"failures":[1,2,3,5,6,4],"tindex":"67652dc9-c845-11e4-88fe-130bd0cd4234","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:88","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.org.eclipse.jgit.lib.ObjectReader.walkAdviceBeginCommits(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevWalk.java.util.ArrayList<org.eclipse.jgit.revwalk.RevCommit>)"},"status":-1},{"failures":[1,2,3,4,5,6],"tindex":"67652dca-c845-11e4-88fe-5f5fd768f801","variableMapping":{"r":"blockSize","last":"blockSize"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:359","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:344","type":"CtIfImpl","sourcecode":"if (boolean)\n    org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.creditSpace(int);\n"},"status":-1},{"failures":[11,1,2,3,5,6,4],"tindex":"67652dcb-c845-11e4-88fe-c90cc6fc7550","variableMapping":{"revWalk":"walk"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:666","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevWalk != null)\n    org.eclipse.jgit.revwalk.RevWalk.dispose();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BranchTrackingStatus:101","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.setRevFilter(org.eclipse.jgit.revwalk.filter.RevFilter.org.eclipse.jgit.revwalk.filter.RevFilter)"},"status":-1},{"failures":[5,1,2,3,4,6],"tindex":"67652dcc-c845-11e4-88fe-69858cca5ae1","variableMapping":{"index":"numSteps"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.BlockList:333","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    throw new java.lang.IllegalStateException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1034","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.RebaseTodoLine org.eclipse.jgit.lib.RebaseTodoLine : org.eclipse.jgit.lib.Repository.readRebaseTodo(org.eclipse.jgit.api.RebaseCommand.RebaseState.getPath(org.eclipse.jgit.api.RebaseCommand.java.lang.String), true)) {\n    if (((java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>.size()) >= int) || (org.eclipse.jgit.lib.RebaseTodoLine.Action.org.eclipse.jgit.lib.RebaseTodoLine.Action.equals(org.eclipse.jgit.lib.RebaseTodoLine.getAction())))\n        java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>.add(org.eclipse.jgit.lib.RebaseTodoLine);\n    else\n        java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>.add(org.eclipse.jgit.lib.RebaseTodoLine);\n    \n}"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":0,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":7,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":6,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":8,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":10}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
