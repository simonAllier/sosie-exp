[{"failures":[0,1,2,3,4,5],"tindex":"5752a2db-c836-11e4-b8c2-159a5875b25f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:505","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.lib.Tree.(isLoaded())) {\n    org.eclipse.jgit.lib.ObjectLoader org.eclipse.jgit.lib.ObjectLoader = org.eclipse.jgit.lib.Repository.open(org.eclipse.jgit.lib.TreeEntry.getId(), org.eclipse.jgit.lib.Constants.int);\n    org.eclipse.jgit.lib.Tree.readTree(org.eclipse.jgit.lib.ObjectLoader.getCachedBytes());\n} "},"status":-1},{"failures":[],"tindex":"5752a2dc-c836-11e4-b8c2-1d39a8735ee5","variableMapping":{"in_brackets":"org.eclipse.jgit.lib.Constants.OBJ_BLOB","pattern":"path"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.internal.Strings:350","type":"CtIfImpl","sourcecode":"if (int > 0)\n    throw new org.eclipse.jgit.errors.InvalidPatternException(\"Not closed bracket?\" , java.lang.String);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddCommand:169","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String))) {\n    if (!((boolean) && ((org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator)) == null))) {\n        org.eclipse.jgit.dircache.DirCacheIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator);\n        if (org.eclipse.jgit.treewalk.WorkingTreeIterator != null) {\n            long long = org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLength();\n            org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(java.lang.String);\n            if (((org.eclipse.jgit.dircache.DirCacheIterator == null) || ((org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry()) == null)) || (!(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry().isAssumeValid()))) {\n                org.eclipse.jgit.lib.FileMode org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.treewalk.WorkingTreeIterator.getIndexFileMode(org.eclipse.jgit.dircache.DirCacheIterator);\n                org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.lib.FileMode);\n                if ((org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode) != org.eclipse.jgit.lib.FileMode) {\n                    org.eclipse.jgit.dircache.DirCacheEntry.setLength(long);\n                    org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLastModified());\n                    long long = org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryContentLength();\n                    java.io.InputStream java.io.InputStream = org.eclipse.jgit.treewalk.WorkingTreeIterator.openEntryStream();\n                    try {\n                        org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.Constants.int, long, java.io.InputStream));\n                    } finally {\n                        java.io.InputStream.close();\n                    }\n                } else\n                    org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryObjectId());\n                \n                org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry);\n                java.lang.String = java.lang.String;\n            } else {\n                org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry());\n            }\n        } else if ((org.eclipse.jgit.dircache.DirCacheIterator != null) && ((!(boolean)) || ((org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode) == (org.eclipse.jgit.dircache.DirCacheIterator.getEntryFileMode()))))\n            org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry());\n        \n    } \n} "},"status":-2},{"failures":[],"tindex":"5752a2dd-c836-11e4-b8c2-b5c547174e0e","variableMapping":{"keyEnd":"size"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:538","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:348","type":"CtIfImpl","sourcecode":"if (int < (org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getBlockSize()))\n    int = ((org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getBlockSize()) / int) * int;\n"},"status":-2},{"failures":[],"tindex":"5752a2de-c836-11e4-b8c2-23be9fa43586","variableMapping":{"org.eclipse.jgit.lib.Constants.UNKNOWN_USER_DEFAULT":"org.eclipse.jgit.lib.Constants.TYPE_TREE","username":"org.eclipse.jgit.lib.Constants.TYPE_TREE"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.UserConfig:194","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:810","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevTree))\n    throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.lib.AnyObjectId.toObjectId() , org.eclipse.jgit.lib.Constants.java.lang.String);\nelse\n    org.eclipse.jgit.revwalk.RevTree = ((org.eclipse.jgit.revwalk.RevTree)(org.eclipse.jgit.revwalk.RevObject));\n"},"status":-2},{"failures":[6,1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,0,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,5,2,131,3,4,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168],"tindex":"5752a2df-c836-11e4-b8c2-e5f02e9e171f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:562","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:161","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.dircache.DirCacheEntry) != null"},"status":-1},{"failures":[],"tindex":"5752a2e0-c836-11e4-b8c2-cbc3f042e78e","variableMapping":{"a":"b","n":"b"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.NotTreeFilter:92","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.treewalk.filter.TreeFilter == (org.eclipse.jgit.treewalk.filter.TreeFilter) ? this : new org.eclipse.jgit.treewalk.filter.NotTreeFilter(org.eclipse.jgit.treewalk.filter.TreeFilter)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.AndTreeFilter:141","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.treewalk.filter.AndTreeFilter.Binary(org.eclipse.jgit.treewalk.filter.TreeFilter.clone() , org.eclipse.jgit.treewalk.filter.TreeFilter.clone())"},"status":-2},{"failures":[],"tindex":"5752a2e1-c836-11e4-b8c2-011b3b3bdb93","variableMapping":{"this":"this","treeWalkMustHaveExactlyTwoTrees":"invalidGitdirRef"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.DiffEntry:170","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:107","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File.getAbsolutePath()))"},"status":-2},{"failures":[],"tindex":"5752a2e2-c836-11e4-b8c2-49828db7dc5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.HMACSHA1NonceGenerator:96","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[]"},"status":-2},{"failures":[2,3,4,1,0,5],"tindex":"5752a2e3-c836-11e4-b8c2-5d0353b4e470","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffFormatter:1036","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.errors.LargeObjectException.ExceedsLimit org.eclipse.jgit.errors.LargeObjectException.ExceedsLimit"},"status":-1},{"failures":[],"tindex":"5752a2e4-c836-11e4-b8c2-a3d912869ca1","variableMapping":{"time":"name"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1593","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(((java.lang.String.indexOf(' ')) + 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.AmazonS3:130","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.eclipse.jgit.util.StringUtils.org.eclipse.jgit.util.StringUtils.toLowerCase(java.lang.String)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":54,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":155,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":32,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":87,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":167,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":61,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":118,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":93,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":62,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":119,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":168,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":106,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":141,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":68,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":24,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":59,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":64,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":33,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":121,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":42,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":150,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":109,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":17,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":161,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":166,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":88,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":148,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":46,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":18,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":29,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":11,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":120,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":71,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":89,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":163,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":145,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":152,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":26,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":45,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":146,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":40,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":73,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":90,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":149,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":65,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":115,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":70,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":144,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":19,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":143,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":48,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":15,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":23,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":38,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":164,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":75,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":142,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":9,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":12,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":56,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":50,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":112,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":31,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":111,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":41,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":85,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":21,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":55,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":137,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":140,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":117,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":162,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":136,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":91,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":139,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":10,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":14,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":123,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":77,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":125,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":57,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":95,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":108,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":157,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":165,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":160,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":27,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":67,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":159,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":72,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":76,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":78,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":44,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":122,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":127,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":124,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":128,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":82,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":53,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":129,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":130,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":47,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":79,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":132,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":69,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":113,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":34,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":25,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":28,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":60,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":133,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":49,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":7,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":8,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":43,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":81,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":51,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":58,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":126,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":135,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":20,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":92,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":66,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":105,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":154,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":104,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":134,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSame":6,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":107,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":114,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":63,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":131,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":158,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":151,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":37,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":84,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":80,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":52,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":99,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":101,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":86,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":102,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":22,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":30,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":94,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":138,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":74,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":147,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":98,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":35,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":97,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":103,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":110,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":116,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":156,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":13,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":153,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":36,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":83,"org.eclipse.jgit.api.RevertCommandTest.testRevert":96,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":16,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":100}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
