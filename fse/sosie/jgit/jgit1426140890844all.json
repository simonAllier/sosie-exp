[{"failures":[0,1,2,3,4,5,6,7],"tindex":"17edf4fb-c87f-11e4-b689-991238228881","variableMapping":{"carry":"value","branchMask":"value"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:154","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int == (int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:173","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = int < 0"},"status":-1},{"failures":[2,3,4,6,5,7,8,9],"tindex":"17ee431c-c87f-11e4-b689-39fe76601489","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:152","type":"CtWhileImpl","sourcecode":"while ((int & 128) != 0) {\n    int = (byte[][int++]) & 255;\n    long += ((long)((int & 127))) << int;\n    int += 7;\n}"},"status":-1},{"failures":[],"tindex":"17ee431d-c87f-11e4-b689-3b8b126a24f8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectLoader:251","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8192]"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:245","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = org.eclipse.jgit.internal.storage.pack.PackOutputStream.getCopyBuffer()"},"status":-2},{"failures":[],"tindex":"17ee431e-c87f-11e4-b689-a7950309838e","variableMapping":{"line":"advertisementCameBefore","shortDesc":"advertisementCameBefore"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:142","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 42)\n    java.lang.String = java.lang.String.substring(42);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackConnection:191","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    java.lang.String java.lang.String;\n    try {\n        java.lang.String = org.eclipse.jgit.transport.PacketLineIn.readString();\n    } catch (java.io.EOFException java.io.EOFException) {\n        if (java.util.LinkedHashMap<java.lang.String, org.eclipse.jgit.lib.Ref>.isEmpty())\n            throw org.eclipse.jgit.transport.BasePackConnection.noRepository();\n        \n        throw java.io.EOFException;\n    }\n    if (java.lang.String == (org.eclipse.jgit.transport.PacketLineIn.java.lang.String))\n        break;\n    \n    if (java.lang.String.startsWith(\"ERR \")) {\n        throw new org.eclipse.jgit.errors.RemoteRepositoryException(org.eclipse.jgit.transport.URIish , java.lang.String.substring(4));\n    } \n    if (java.util.LinkedHashMap<java.lang.String, org.eclipse.jgit.lib.Ref>.isEmpty()) {\n        final int int = java.lang.String.indexOf('\u0000');\n        if (int >= 0) {\n            for (java.lang.String java.lang.String : java.lang.String.substring((int + 1)).split(\" \"))\n                java.util.Set<java.lang.String>.add(java.lang.String);\n            java.lang.String = java.lang.String.substring(0, int);\n        } \n    } \n    java.lang.String java.lang.String = java.lang.String.substring(41, java.lang.String.length());\n    if ((java.util.LinkedHashMap<java.lang.String, org.eclipse.jgit.lib.Ref>.isEmpty()) && (java.lang.String.equals(\"capabilities^{}\"))) {\n        continue;\n    } \n    final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(0, 40));\n    if (java.lang.String.equals(\".have\")) {\n        java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId);\n    } else if (java.lang.String.endsWith(\"^{}\")) {\n        java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 3));\n        final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = java.util.LinkedHashMap<java.lang.String, org.eclipse.jgit.lib.Ref>.get(java.lang.String);\n        if (org.eclipse.jgit.lib.Ref == null)\n            throw new org.eclipse.jgit.errors.PackProtocolException(org.eclipse.jgit.transport.URIish , java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String, java.lang.String));\n        \n        if ((org.eclipse.jgit.lib.Ref.getPeeledObjectId()) != null)\n            throw org.eclipse.jgit.transport.BasePackConnection.duplicateAdvertisement((java.lang.String + \"^{}\"));\n        \n        java.util.LinkedHashMap<java.lang.String, org.eclipse.jgit.lib.Ref>.put(java.lang.String, new org.eclipse.jgit.lib.ObjectIdRef.PeeledTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , java.lang.String , org.eclipse.jgit.lib.Ref.getObjectId() , org.eclipse.jgit.lib.ObjectId));\n    } else {\n        final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = java.util.LinkedHashMap<java.lang.String, org.eclipse.jgit.lib.Ref>.put(java.lang.String, new org.eclipse.jgit.lib.ObjectIdRef.PeeledNonTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , java.lang.String , org.eclipse.jgit.lib.ObjectId));\n        if (org.eclipse.jgit.lib.Ref != null)\n            throw org.eclipse.jgit.transport.BasePackConnection.duplicateAdvertisement(java.lang.String);\n        \n    }\n}"},"status":-2},{"failures":[2,3,4,5,6,7],"tindex":"17ee431f-c87f-11e4-b689-17f56c815501","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:374","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.carryFlagsImpl(org.eclipse.jgit.revwalk.RevCommit)"},"status":-1},{"failures":[],"tindex":"17ee4320-c87f-11e4-b689-174abe49fa80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:688","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : org.eclipse.jgit.internal.storage.file.PackFile[]) {\n    if ((org.eclipse.jgit.internal.storage.file.PackFile.java.util.Comparator<org.eclipse.jgit.internal.storage.file.PackFile>.compare(org.eclipse.jgit.internal.storage.file.PackFile, org.eclipse.jgit.internal.storage.file.PackFile)) < 0)\n        break;\n    \n    if (java.lang.String.equals(org.eclipse.jgit.internal.storage.file.PackFile.getPackFile().getName()))\n        return ;\n    \n}"},"status":-2},{"failures":[],"tindex":"17ee4321-c87f-11e4-b689-b3606326dad5","variableMapping":{"this":"repo"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:271","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.mkdirs(org.eclipse.jgit.lib.Repository.getDirectory(), true)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:185","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    org.eclipse.jgit.lib.Repository.writeCherryPickHead(org.eclipse.jgit.revwalk.RevCommit.getId());\n"},"status":-2},{"failures":[],"tindex":"17ee4322-c87f-11e4-b689-197bf9e3b970","variableMapping":{"eol":"ptr","sp":"ptr"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:363","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.BinaryHunk:119","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.BinaryHunk.byte[])) >= 0) {\n    org.eclipse.jgit.patch.BinaryHunk.Type = org.eclipse.jgit.patch.BinaryHunk.Type.org.eclipse.jgit.patch.BinaryHunk.Type;\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.BinaryHunk.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.BinaryHunk.byte[])) >= 0) {\n    org.eclipse.jgit.patch.BinaryHunk.Type = org.eclipse.jgit.patch.BinaryHunk.Type.org.eclipse.jgit.patch.BinaryHunk.Type;\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.BinaryHunk.byte[].int)), null);\n} else {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"17ee4323-c87f-11e4-b689-17e681726827","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.AbstractPlotRenderer:101","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"17ee4324-c87f-11e4-b689-bb39637ecdeb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:559","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.transport.BasePackFetchConnection.CancelledException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:425","type":"CtThrowImpl","sourcecode":"throw new org.xml.sax.SAXException(org.eclipse.jgit.gitrepo.internal.RepoText.org.eclipse.jgit.gitrepo.internal.RepoText.get().java.lang.String)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.util.RawParseUtils_FormatTest.testFormatBase10":1,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":6,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":7,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_LargeObject":8,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3":0,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_SmallObject":9}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
