[{"failures":[],"tindex":"f0c35c7e-c83e-11e4-8f8c-ed8496326ff6","variableMapping":{"ret":"lastModified","y":"lastModified"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:366","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackDescription:156","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"f0c3838f-c83e-11e4-8f8c-13c5000e6f58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:599","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"upstream\")) {\n    if (java.lang.String == null)\n        java.lang.String = new java.lang.String(char[] , int , int);\n    \n    if (java.lang.String.equals(\"\"))\n        java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n    \n    if (!org.eclipse.jgit.lib.Repository.(org.eclipse.jgit.lib.Repository.isValidRefName((\"x/\" + java.lang.String))))\n        throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n    \n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String);\n    java.lang.String = null;\n    if (org.eclipse.jgit.lib.Ref == null)\n        return null;\n    \n    if (org.eclipse.jgit.lib.Ref.isSymbolic())\n        org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref.getLeaf();\n    \n    java.lang.String = org.eclipse.jgit.lib.Ref.getName();\n    org.eclipse.jgit.transport.RemoteConfig org.eclipse.jgit.transport.RemoteConfig;\n    try {\n        org.eclipse.jgit.transport.RemoteConfig = new org.eclipse.jgit.transport.RemoteConfig(org.eclipse.jgit.lib.Repository.getConfig() , \"origin\");\n    } catch (java.net.URISyntaxException java.net.URISyntaxException) {\n        throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n    }\n    java.lang.String java.lang.String = org.eclipse.jgit.lib.Repository.getConfig().getString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, org.eclipse.jgit.lib.Repository.org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getName()), org.eclipse.jgit.lib.ConfigConstants.java.lang.String);\n    java.util.List<org.eclipse.jgit.transport.RefSpec> java.util.List<org.eclipse.jgit.transport.RefSpec> = org.eclipse.jgit.transport.RemoteConfig.getFetchRefSpecs();\n    for (org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec : java.util.List<org.eclipse.jgit.transport.RefSpec>) {\n        if (org.eclipse.jgit.transport.RefSpec.matchSource(java.lang.String)) {\n            org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = org.eclipse.jgit.transport.RefSpec.expandFromSource(java.lang.String);\n            java.lang.String = org.eclipse.jgit.transport.RefSpec.getDestination();\n            break;\n        } \n    }\n    if (java.lang.String == null)\n        throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n    \n} else if (java.lang.String.matches(\"^-\\\\d+$\")) {\n    if (java.lang.String != null)\n        throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n    else {\n        java.lang.String java.lang.String = org.eclipse.jgit.lib.Repository.resolveReflogCheckout(-java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)));\n        if (org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.isId(java.lang.String))\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.parseSimple(org.eclipse.jgit.revwalk.RevWalk, java.lang.String);\n        else\n            java.lang.String = java.lang.String;\n        \n    }\n} else {\n    if (java.lang.String == null)\n        java.lang.String = new java.lang.String(char[] , int , int);\n    \n    if (java.lang.String.equals(\"\"))\n        java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n    \n    if (!org.eclipse.jgit.lib.Repository.(org.eclipse.jgit.lib.Repository.isValidRefName((\"x/\" + java.lang.String))))\n        throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n    \n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String);\n    java.lang.String = null;\n    if (org.eclipse.jgit.lib.Ref == null)\n        return null;\n    \n    if (org.eclipse.jgit.lib.Ref.isSymbolic())\n        org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref.getLeaf();\n    \n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.resolveReflog(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.Ref, java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"f0c38390-c83e-11e4-8f8c-2b5abd1cf2dc","variableMapping":{"n":"headName"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:272","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.startsWith(\"pack-\"))) || (!(java.lang.String.endsWith(\".pack\"))))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1374","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate.setRefLogMessage((((\"checkout: moving from \" + org.eclipse.jgit.lib.Repository.(org.eclipse.jgit.lib.Repository.shortenRefName(java.lang.String))) + \" to \") + (org.eclipse.jgit.revwalk.RevCommit.getName())), false)"},"status":-2},{"failures":[2,3,4,1,6,37,12],"tindex":"f0c38391-c83e-11e4-8f8c-55fb19cb2ec0","variableMapping":{"otp":"oe"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1539","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.setOffset(0)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexWriterV1:79","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PackedObjectInfo.copyRawTo(byte[], 4)"},"status":-1},{"failures":[12,1,6,2,3,4],"tindex":"f0c38392-c83e-11e4-8f8c-87a7d7013267","variableMapping":{"o1":"ref"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RefComparator:90","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Ref.getName()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:337","type":"CtInvocationImpl","sourcecode":"java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.revwalk.RevObject, org.eclipse.jgit.lib.Ref.getName())"},"status":-1},{"failures":[2,3,4,1,6,12],"tindex":"f0c38393-c83e-11e4-8f8c-032873f5f47e","variableMapping":{"err":"err"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.UnionInputStream:206","type":"CtIfImpl","sourcecode":"if (java.io.IOException != null)\n    throw java.io.IOException;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.UnionInputStream:197","type":"CtForImpl","sourcecode":"for (java.util.Iterator<java.io.InputStream> java.util.Iterator<java.io.InputStream> = java.util.LinkedList<java.io.InputStream>.iterator() ; java.util.Iterator<java.io.InputStream>.hasNext() ; ) {\n    try {\n        java.util.Iterator<java.io.InputStream>.next().close();\n    } catch (java.io.IOException java.io.IOException) {\n        java.io.IOException = java.io.IOException;\n    }\n    java.util.Iterator<java.io.InputStream>.remove();\n}"},"status":-1},{"failures":[12,6,1,2,3,4],"tindex":"f0c38394-c83e-11e4-8f8c-8545f610e74f","variableMapping":{"inserter":"inserter"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NoteMapMerger:139","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectInserter.release()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:135","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectInserter.flush()"},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,6,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,12,88,89,90,91,92,93,94,95,96,97,98,2,3,4,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,118,119,119,120,120,121,122,1,123,124,125,126,127,128,129,130,131,132],"tindex":"f0c38395-c83e-11e4-8f8c-4da49e3cbb54","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:274","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.TransportGitSsh.SshFetchConnection.close()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:416","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId : java.util.Set<org.eclipse.jgit.lib.ObjectId>)\n    org.eclipse.jgit.transport.BasePackFetchConnection.parseReachable(org.eclipse.jgit.lib.ObjectId);"},"status":-1},{"failures":[],"tindex":"f0c38396-c83e-11e4-8f8c-61f477a0b9ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:818","type":"CtInvocationImpl","sourcecode":"java.io.File.delete()"},"status":-2},{"failures":[],"tindex":"f0c38397-c83e-11e4-8f8c-938995922173","variableMapping":{"inflater":"is"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.PackParser:538","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PackParser.InflaterStream.release()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:364","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator.safeClose(java.io.InputStream)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":30,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":41,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":38,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":99,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":11,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":114,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":13,"org.eclipse.jgit.api.FetchCommandTest.testFetch":88,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":70,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":107,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":109,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":55,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":35,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":126,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":106,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":80,"org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits":19,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":15,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":130,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":48,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":123,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":73,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":103,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":104,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":46,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":84,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":97,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":105,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":21,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":54,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":122,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":0,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":111,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":69,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":121,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":23,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":131,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":129,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":32,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":25,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":127,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":125,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":76,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":75,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":14,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":81,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":91,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":31,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":102,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":36,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":43,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":90,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":83,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":58,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":33,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":49,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":72,"org.eclipse.jgit.api.GitConstructionTest.testWrap":120,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":40,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":61,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":115,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":116,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":112,"org.eclipse.jgit.api.GitConstructionTest.testOpen":119,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":108,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":85,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":20,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":87,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":50,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":17,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":78,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":117,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":26,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":60,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":12,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":57,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":29,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":5,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":89,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":92,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":124,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":22,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":132,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":56,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":44,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":45,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":42,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":110,"org.eclipse.jgit.api.GitConstructionTest.testClose":118,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":6,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":24,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":79,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":16,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":27,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":34,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":59,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":68,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":67,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":82,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":8,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":47,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":71,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":113,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":96,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":28,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":62,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":64,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":65,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":100,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":95,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":93,"org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch":10,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":37,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":52,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":53,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":39,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":101,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":128,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":66,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":74,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":98,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":94,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":7,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":51,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":77,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":86,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":63}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
