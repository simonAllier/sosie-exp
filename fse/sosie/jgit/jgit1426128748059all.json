[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"d1e47ce7-c862-11e4-87c5-53e5302848b9","variableMapping":{"dirOnly":"assumeDirectory"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:158","type":"CtReturnImpl","sourcecode":"return boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.PathMatcher:220","type":"CtIfImpl","sourcecode":"if ((boolean) && (!boolean))\n    return false;\n"},"status":-1},{"failures":[0,6,7,8,1,5],"tindex":"d1e47ce8-c862-11e4-87c5-2760ee24182e","variableMapping":{"pending":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:181","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.DateRevQueue.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:89","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.DateRevQueue.buildIndex()"},"status":-1},{"failures":[],"tindex":"d1e47ce9-c862-11e4-87c5-b51e3bf41994","variableMapping":{"in":"in","limit":"max","length":"length","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.IO:101","type":"CtTryImpl","sourcecode":"try {\n    byte[] byte[] = new byte[int];\n    int int = 0;\n    for ( ;  ; ) {\n        int int = java.io.FileInputStream.read(byte[], int, ((byte[].int) - int));\n        if (int <= 0)\n            break;\n        \n        int += int;\n    }\n    if (int == (byte[].int))\n        return byte[];\n    \n    byte[] byte[] = new byte[int];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], 0, int);\n    return byte[];\n} finally {\n    try {\n        java.io.FileInputStream.close();\n    } catch (java.io.IOException java.io.IOException) {\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:141","type":"CtTryImpl","sourcecode":"try {\n    long long = java.lang.Math.java.lang.Math.max(java.io.File.length(), 1);\n    if (long > int)\n        throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File));\n    \n    byte[] byte[] = new byte[((int)(long))];\n    int int = 0;\n    for ( ;  ; ) {\n        if ((byte[].int) == int) {\n            if ((byte[].int) == int) {\n                int int = java.io.FileInputStream.read();\n                if (int < 0)\n                    break;\n                \n                throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File));\n            } \n            byte[] byte[] = new byte[java.lang.Math.java.lang.Math.min(((byte[].int) * 2), int)];\n            java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], 0, int);\n            byte[] = byte[];\n        } \n        int int = java.io.FileInputStream.read(byte[], int, ((byte[].int) - int));\n        if (int < 0)\n            break;\n        \n        int += int;\n    }\n    if (int < (byte[].int)) {\n        byte[] byte[] = new byte[int];\n        java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], 0, int);\n        byte[] = byte[];\n    } \n    return byte[];\n} finally {\n    try {\n        java.io.FileInputStream.close();\n    } catch (java.io.IOException java.io.IOException) {\n    }\n}"},"status":-2},{"failures":[0,1,6,7,8,5],"tindex":"d1e47cea-c862-11e4-87c5-5bd64d6d8b91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaTask:159","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.internal.storage.pack.DeltaTask.java.util.LinkedList<org.eclipse.jgit.internal.storage.pack.DeltaTask.Slice>.isEmpty()))\n    java.util.List<org.eclipse.jgit.internal.storage.pack.DeltaTask>.add(org.eclipse.jgit.internal.storage.pack.DeltaTask);\n"},"status":-1},{"failures":[1,0,6,7,8,5,9,10],"tindex":"d1e47ceb-c862-11e4-87c5-5fb7cbe9f91a","variableMapping":{"org.eclipse.jgit.util.QuotedString.GitPathStyle.quote":"bs"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.QuotedString:246","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.QuotedString.GitPathStyle.byte[]['\\f'] = 'f'"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.AutoCRLFInputStream:134","type":"CtAssignmentImpl","sourcecode":"byte = byte[][(int - 1)]"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"d1e47cec-c862-11e4-87c5-73b5038f4b8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:377","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.LockFile.setNeedSnapshot(boolean)"},"status":-1},{"failures":[],"tindex":"d1e47ced-c862-11e4-87c5-dfafae956919","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.resolver.FileResolver:124","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.transport.resolver.ServiceNotEnabledException()"},"status":-2},{"failures":[1,0,6,7,8,5],"tindex":"d1e47cee-c862-11e4-87c5-5f37dd525a85","variableMapping":{"walk":"treeWalk"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:257","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.NameConflictTreeWalk.isSubtree())\n    org.eclipse.jgit.treewalk.NameConflictTreeWalk.enterSubtree();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:965","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk.getObjectId(org.eclipse.jgit.lib.MutableObjectId, 0)"},"status":-1},{"failures":[],"tindex":"d1e4a3ff-c862-11e4-87c5-6b098af004b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:309","type":"CtLocalVariableImpl","sourcecode":"final java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref> java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref> = new java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>()"},"status":-2},{"failures":[0,27,28,1,5,6,7,8],"tindex":"d1e4a400-c862-11e4-87c5-0fec8d03ac33","variableMapping":{"tailIndex":"ae","org.eclipse.jgit.revwalk.BlockObjQueue.Block.BLOCK_SIZE":"bs"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.BlockObjQueue:123","type":"CtReturnImpl","sourcecode":"return (int) == (org.eclipse.jgit.revwalk.BlockObjQueue.Block.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RawTextComparator:239","type":"CtReturnImpl","sourcecode":"return (int == int) && (int == int)"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified":15,"org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":8,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized":17,"org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest.testEqualsWithWhitespace":28,"org.eclipse.jgit.util.io.AutoCRLFInputStreamTest.test":10,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":25,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":6,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":20,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest.testEqualsWithoutWhitespace":27,"org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage":14,"org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit":13,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":23,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":26,"org.eclipse.jgit.attributes.AttributesMatcherTest.testParentDirectoryGitAttributes":2,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":22,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":19,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":21,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":7,"org.eclipse.jgit.util.io.AutoCRLFInputStreamTest.testBoundary":9,"org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit":12,"org.eclipse.jgit.attributes.AttributesMatcherTest.testFileNameWildcards":3,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":24,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTargetWithoutLeadingSlash":4,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized":16,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":18}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
