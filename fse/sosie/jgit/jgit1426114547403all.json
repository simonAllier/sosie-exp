[{"failures":[],"tindex":"c21b5cf2-c841-11e4-aebd-ed16c6d8e8b5","variableMapping":{"startCommit":"id"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:476","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit) != null)\n    return org.eclipse.jgit.revwalk.RevCommit.getId();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:138","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.transport.PackedObjectInfo>) != null) && (org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.transport.PackedObjectInfo>.contains(org.eclipse.jgit.lib.ObjectId)))\n    return org.eclipse.jgit.lib.ObjectId;\n"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"c21b5cf3-c841-11e4-aebd-091ec7f88f81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:231","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" \")"},"status":-1},{"failures":[0,50,1,8,9,10],"tindex":"c21b5cf4-c841-11e4-aebd-7b3ed0952baa","variableMapping":{"out":"out"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:979","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.TransportHttp.Service.HttpOutputStream.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:961","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.TransportHttp.Service.HttpOutputStream.close()"},"status":-1},{"failures":[0,8,9,10,50,1],"tindex":"c21b8405-c841-11e4-aebd-d955b34ad49f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.MyersDiff:247","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"c21b8406-c841-11e4-aebd-e327ff4bc219","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:729","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(java.nio.charset.Charset, byte[], int, int)"},"status":-2},{"failures":[],"tindex":"c21b8407-c841-11e4-aebd-35f79f8b5cb6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:393","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.min(int, ((byte[].int) - (int)))"},"status":-2},{"failures":[],"tindex":"c21b8408-c841-11e4-aebd-79b9b7032cf5","variableMapping":{"repo":"repo","org.eclipse.jgit.lib.Constants.HEAD":"message"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:236","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Repository.getRef(org.eclipse.jgit.lib.Constants.java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.TagCommand:132","type":"CtTryImpl","sourcecode":"try {\n    if ((org.eclipse.jgit.revwalk.RevObject) == null) {\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(((org.eclipse.jgit.lib.Constants.java.lang.String) + \"^{commit}\"));\n        if (org.eclipse.jgit.lib.ObjectId == null)\n            throw new org.eclipse.jgit.api.errors.NoHeadException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId);\n    } \n    if (!(boolean)) {\n        if (((java.lang.String) != null) || ((org.eclipse.jgit.lib.PersonIdent) != null))\n            throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        return org.eclipse.jgit.api.TagCommand.updateTagRef(org.eclipse.jgit.revwalk.RevObject, org.eclipse.jgit.revwalk.RevWalk, java.lang.String, ((((\"SimpleTag[\" + (java.lang.String)) + \" : \") + (org.eclipse.jgit.revwalk.RevObject)) + \"]\"));\n    } \n    org.eclipse.jgit.lib.TagBuilder org.eclipse.jgit.lib.TagBuilder = new org.eclipse.jgit.lib.TagBuilder();\n    org.eclipse.jgit.lib.TagBuilder.setTag(java.lang.String);\n    org.eclipse.jgit.lib.TagBuilder.setMessage(java.lang.String);\n    org.eclipse.jgit.lib.TagBuilder.setTagger(org.eclipse.jgit.lib.PersonIdent);\n    org.eclipse.jgit.lib.TagBuilder.setObjectId(org.eclipse.jgit.revwalk.RevObject);\n    org.eclipse.jgit.lib.ObjectInserter org.eclipse.jgit.lib.ObjectInserter = org.eclipse.jgit.lib.Repository.newObjectInserter();\n    try {\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.TagBuilder);\n        org.eclipse.jgit.lib.ObjectInserter.flush();\n        java.lang.String java.lang.String = org.eclipse.jgit.lib.TagBuilder.getTag();\n        return org.eclipse.jgit.api.TagCommand.updateTagRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.revwalk.RevWalk, java.lang.String, org.eclipse.jgit.lib.TagBuilder.toString());\n    } finally {\n        org.eclipse.jgit.lib.ObjectInserter.release();\n    }\n} catch (java.io.IOException java.io.IOException) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n} finally {\n    org.eclipse.jgit.revwalk.RevWalk.release();\n}"},"status":-2},{"failures":[],"tindex":"c21b8409-c841-11e4-aebd-d5916a29acb2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:634","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[128]"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:147","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"c21b840a-c841-11e4-aebd-23cd20c4cf0d","variableMapping":{"revPool":"rw"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:415","type":"CtWhileImpl","sourcecode":"while ((org.eclipse.jgit.revwalk.RevWalk.next()) != null) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:327","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId());\n} finally {\n    org.eclipse.jgit.revwalk.RevWalk.release();\n}"},"status":-2},{"failures":[],"tindex":"c21b840b-c841-11e4-aebd-4d629d51dd40","variableMapping":{"this":"conn"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:347","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.BasePackFetchConnection.markRefsAdvertised()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:260","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.FetchResult.addMessages(org.eclipse.jgit.transport.FetchConnection.getMessages())"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":36,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":10,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":46,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":41,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":40,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":48,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":8,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":13,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":11,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":49,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":23,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":32,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":21,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":14,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":42,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":47,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":15,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":30,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":44,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":16,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":27,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":35,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":31,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":25,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":39,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":45,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":3,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":4,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":7,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":6,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":19,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":29,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":18,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":9,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":22,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":43,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":17,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":20,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":5,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":37,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":34,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":12,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":38,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":2}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
